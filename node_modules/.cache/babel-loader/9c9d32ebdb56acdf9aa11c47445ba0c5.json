{"ast":null,"code":"import { vapi } from '../utils';\n\nfunction getConfig() {\n  // Instantiate a view config object.\n  const vc = new vapi.VitessceConfig('1.0.0', 'HBM485.TBWH.322', 'Large intestine snATAC-seq HuBMAP dataset with genomic data visualization powered by HiGlass'); // Add a dataset and its files.\n\n  const baseUrl = 'https://vitessce-data.s3.amazonaws.com/0.0.32/master_release/human_intestine_2020_hubmap';\n  const dataset = vc.addDataset('HBM485.TBWH.322', 'Human large intestine, snATAC-seq').addFile(`${baseUrl}/human_intestine_2020_hubmap.cells.json`, vapi.dt.CELLS, vapi.ft.CELLS_JSON).addFile(`${baseUrl}/human_intestine_2020_hubmap.cell-sets.json`, vapi.dt.CELL_SETS, vapi.ft.CELL_SETS_JSON).addFile(`${baseUrl}/human_intestine_2020_hubmap.genomic-profiles.zarr`, vapi.dt.GENOMIC_PROFILES, vapi.ft.GENOMIC_PROFILES_ZARR); // Add components.\n  // Use mapping: \"UMAP\" so that cells are mapped to the UMAP positions from the JSON file.\n\n  const umap = vc.addView(dataset, vapi.cm.SCATTERPLOT, {\n    mapping: 'UMAP'\n  });\n  const cellSetsManager = vc.addView(dataset, vapi.cm.CELL_SETS);\n  const genomicProfiles = vc.addView(dataset, vapi.cm.GENOMIC_PROFILES); // Try un-commenting the line below to link center points of the two scatterplots!\n  // vc.linkViews([umap, tsne], [ct.EMBEDDING_TARGET_X, ct.EMBEDDING_TARGET_Y], [0, 0]);\n\n  vc.layout(vapi.vconcat(genomicProfiles, vapi.hconcat(umap, cellSetsManager))); // Return the view config as JSON.\n\n  return vc.toJSON();\n}\n\nexport const hubmapIntestineSnAtacSeq = getConfig();","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/demo/view-configs/hubmap.js"],"names":["vapi","getConfig","vc","VitessceConfig","baseUrl","dataset","addDataset","addFile","dt","CELLS","ft","CELLS_JSON","CELL_SETS","CELL_SETS_JSON","GENOMIC_PROFILES","GENOMIC_PROFILES_ZARR","umap","addView","cm","SCATTERPLOT","mapping","cellSetsManager","genomicProfiles","layout","vconcat","hconcat","toJSON","hubmapIntestineSnAtacSeq"],"mappings":"AAAA,SAASA,IAAT,QAAqB,UAArB;;AAEA,SAASC,SAAT,GAAqB;AACnB;AACA,QAAMC,EAAE,GAAG,IAAIF,IAAI,CAACG,cAAT,CAAwB,OAAxB,EAAiC,iBAAjC,EAAoD,8FAApD,CAAX,CAFmB,CAGnB;;AACA,QAAMC,OAAO,GAAG,0FAAhB;AACA,QAAMC,OAAO,GAAGH,EAAE,CACfI,UADa,CACF,iBADE,EACiB,mCADjB,EAEbC,OAFa,CAEJ,GAAEH,OAAQ,yCAFN,EAEgDJ,IAAI,CAACQ,EAAL,CAAQC,KAFxD,EAE+DT,IAAI,CAACU,EAAL,CAAQC,UAFvE,EAGbJ,OAHa,CAGJ,GAAEH,OAAQ,6CAHN,EAGoDJ,IAAI,CAACQ,EAAL,CAAQI,SAH5D,EAGuEZ,IAAI,CAACU,EAAL,CAAQG,cAH/E,EAIbN,OAJa,CAIJ,GAAEH,OAAQ,oDAJN,EAI2DJ,IAAI,CAACQ,EAAL,CAAQM,gBAJnE,EAIqFd,IAAI,CAACU,EAAL,CAAQK,qBAJ7F,CAAhB,CALmB,CAUjB;AACA;;AACF,QAAMC,IAAI,GAAGd,EAAE,CAACe,OAAH,CAAWZ,OAAX,EAAoBL,IAAI,CAACkB,EAAL,CAAQC,WAA5B,EAAyC;AAAEC,IAAAA,OAAO,EAAE;AAAX,GAAzC,CAAb;AACA,QAAMC,eAAe,GAAGnB,EAAE,CAACe,OAAH,CAAWZ,OAAX,EAAoBL,IAAI,CAACkB,EAAL,CAAQN,SAA5B,CAAxB;AACA,QAAMU,eAAe,GAAGpB,EAAE,CAACe,OAAH,CAAWZ,OAAX,EAAoBL,IAAI,CAACkB,EAAL,CAAQJ,gBAA5B,CAAxB,CAdmB,CAgBnB;AACA;;AACAZ,EAAAA,EAAE,CAACqB,MAAH,CACEvB,IAAI,CAACwB,OAAL,CACEF,eADF,EAEEtB,IAAI,CAACyB,OAAL,CAAaT,IAAb,EAAmBK,eAAnB,CAFF,CADF,EAlBmB,CAyBnB;;AACA,SAAOnB,EAAE,CAACwB,MAAH,EAAP;AACD;;AAED,OAAO,MAAMC,wBAAwB,GAAG1B,SAAS,EAA1C","sourcesContent":["import { vapi } from '../utils';\n\nfunction getConfig() {\n  // Instantiate a view config object.\n  const vc = new vapi.VitessceConfig('1.0.0', 'HBM485.TBWH.322', 'Large intestine snATAC-seq HuBMAP dataset with genomic data visualization powered by HiGlass');\n  // Add a dataset and its files.\n  const baseUrl = 'https://vitessce-data.s3.amazonaws.com/0.0.32/master_release/human_intestine_2020_hubmap';\n  const dataset = vc\n    .addDataset('HBM485.TBWH.322', 'Human large intestine, snATAC-seq')\n    .addFile(`${baseUrl}/human_intestine_2020_hubmap.cells.json`, vapi.dt.CELLS, vapi.ft.CELLS_JSON)\n    .addFile(`${baseUrl}/human_intestine_2020_hubmap.cell-sets.json`, vapi.dt.CELL_SETS, vapi.ft.CELL_SETS_JSON)\n    .addFile(`${baseUrl}/human_intestine_2020_hubmap.genomic-profiles.zarr`, vapi.dt.GENOMIC_PROFILES, vapi.ft.GENOMIC_PROFILES_ZARR);\n    // Add components.\n    // Use mapping: \"UMAP\" so that cells are mapped to the UMAP positions from the JSON file.\n  const umap = vc.addView(dataset, vapi.cm.SCATTERPLOT, { mapping: 'UMAP' });\n  const cellSetsManager = vc.addView(dataset, vapi.cm.CELL_SETS);\n  const genomicProfiles = vc.addView(dataset, vapi.cm.GENOMIC_PROFILES);\n\n  // Try un-commenting the line below to link center points of the two scatterplots!\n  // vc.linkViews([umap, tsne], [ct.EMBEDDING_TARGET_X, ct.EMBEDDING_TARGET_Y], [0, 0]);\n  vc.layout(\n    vapi.vconcat(\n      genomicProfiles,\n      vapi.hconcat(umap, cellSetsManager),\n    ),\n  );\n\n  // Return the view config as JSON.\n  return vc.toJSON();\n}\n\nexport const hubmapIntestineSnAtacSeq = getConfig();\n"]},"metadata":{},"sourceType":"module"}