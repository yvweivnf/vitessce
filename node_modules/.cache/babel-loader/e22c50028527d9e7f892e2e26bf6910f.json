{"ast":null,"code":"import * as encode from './encode';\n\nfunction encodeEntry(model, fixedShape) {\n  const {\n    config\n  } = model;\n  return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n    align: 'ignore',\n    baseline: 'ignore',\n    color: 'include',\n    size: 'include',\n    orient: 'ignore',\n    theta: 'ignore'\n  })), encode.pointPosition('x', model, {\n    defaultPos: 'mid'\n  })), encode.pointPosition('y', model, {\n    defaultPos: 'mid'\n  })), encode.nonPosition('size', model)), encode.nonPosition('angle', model)), shapeMixins(model, config, fixedShape));\n}\n\nexport function shapeMixins(model, config, fixedShape) {\n  if (fixedShape) {\n    return {\n      shape: {\n        value: fixedShape\n      }\n    };\n  }\n\n  return encode.nonPosition('shape', model);\n}\nexport const point = {\n  vgMark: 'symbol',\n  encodeEntry: model => {\n    return encodeEntry(model);\n  }\n};\nexport const circle = {\n  vgMark: 'symbol',\n  encodeEntry: model => {\n    return encodeEntry(model, 'circle');\n  }\n};\nexport const square = {\n  vgMark: 'symbol',\n  encodeEntry: model => {\n    return encodeEntry(model, 'square');\n  }\n};","map":{"version":3,"sources":["../../../../src/compile/mark/point.ts"],"names":[],"mappings":"AAIA,OAAO,KAAK,MAAZ,MAAwB,UAAxB;;AAEA,SAAS,WAAT,CAAqB,KAArB,EAAuC,UAAvC,EAAuE;AACrE,QAAM;AAAC,IAAA;AAAD,MAAW,KAAjB;AAEA,SAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,MAAM,CAAC,eAAP,CAAuB,KAAvB,EAA8B;AAC/B,IAAA,KAAK,EAAE,QADwB;AAE/B,IAAA,QAAQ,EAAE,QAFqB;AAG/B,IAAA,KAAK,EAAE,SAHwB;AAI/B,IAAA,IAAI,EAAE,SAJyB;AAK/B,IAAA,MAAM,EAAE,QALuB;AAM/B,IAAA,KAAK,EAAE;AANwB,GAA9B,CADL,CAAA,EASK,MAAM,CAAC,aAAP,CAAqB,GAArB,EAA0B,KAA1B,EAAiC;AAAC,IAAA,UAAU,EAAE;AAAb,GAAjC,CATL,CAAA,EAUK,MAAM,CAAC,aAAP,CAAqB,GAArB,EAA0B,KAA1B,EAAiC;AAAC,IAAA,UAAU,EAAE;AAAb,GAAjC,CAVL,CAAA,EAWK,MAAM,CAAC,WAAP,CAAmB,MAAnB,EAA2B,KAA3B,CAXL,CAAA,EAYK,MAAM,CAAC,WAAP,CAAmB,OAAnB,EAA4B,KAA5B,CAZL,CAAA,EAaK,WAAW,CAAC,KAAD,EAAQ,MAAR,EAAgB,UAAhB,CAbhB,CAAA;AAeD;;AAED,OAAM,SAAU,WAAV,CAAsB,KAAtB,EAAwC,MAAxC,EAAwD,UAAxD,EAAwF;AAC5F,MAAI,UAAJ,EAAgB;AACd,WAAO;AAAC,MAAA,KAAK,EAAE;AAAC,QAAA,KAAK,EAAE;AAAR;AAAR,KAAP;AACD;;AACD,SAAO,MAAM,CAAC,WAAP,CAAmB,OAAnB,EAA4B,KAA5B,CAAP;AACD;AAED,OAAO,MAAM,KAAK,GAAiB;AACjC,EAAA,MAAM,EAAE,QADyB;AAEjC,EAAA,WAAW,EAAG,KAAD,IAAqB;AAChC,WAAO,WAAW,CAAC,KAAD,CAAlB;AACD;AAJgC,CAA5B;AAOP,OAAO,MAAM,MAAM,GAAiB;AAClC,EAAA,MAAM,EAAE,QAD0B;AAElC,EAAA,WAAW,EAAG,KAAD,IAAqB;AAChC,WAAO,WAAW,CAAC,KAAD,EAAQ,QAAR,CAAlB;AACD;AAJiC,CAA7B;AAOP,OAAO,MAAM,MAAM,GAAiB;AAClC,EAAA,MAAM,EAAE,QAD0B;AAElC,EAAA,WAAW,EAAG,KAAD,IAAqB;AAChC,WAAO,WAAW,CAAC,KAAD,EAAQ,QAAR,CAAlB;AACD;AAJiC,CAA7B","sourceRoot":"","sourcesContent":["import * as encode from './encode';\nfunction encodeEntry(model, fixedShape) {\n    const { config } = model;\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n        align: 'ignore',\n        baseline: 'ignore',\n        color: 'include',\n        size: 'include',\n        orient: 'ignore',\n        theta: 'ignore'\n    })), encode.pointPosition('x', model, { defaultPos: 'mid' })), encode.pointPosition('y', model, { defaultPos: 'mid' })), encode.nonPosition('size', model)), encode.nonPosition('angle', model)), shapeMixins(model, config, fixedShape));\n}\nexport function shapeMixins(model, config, fixedShape) {\n    if (fixedShape) {\n        return { shape: { value: fixedShape } };\n    }\n    return encode.nonPosition('shape', model);\n}\nexport const point = {\n    vgMark: 'symbol',\n    encodeEntry: (model) => {\n        return encodeEntry(model);\n    }\n};\nexport const circle = {\n    vgMark: 'symbol',\n    encodeEntry: (model) => {\n        return encodeEntry(model, 'circle');\n    }\n};\nexport const square = {\n    vgMark: 'symbol',\n    encodeEntry: (model) => {\n        return encodeEntry(model, 'square');\n    }\n};\n//# sourceMappingURL=point.js.map"]},"metadata":{},"sourceType":"module"}