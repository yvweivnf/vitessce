{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { isArray, isString } from 'vega-util';\nimport { pick } from './util';\nexport function extractTitleConfig(titleConfig) {\n  const {\n    // These are non-mark title config that need to be hardcoded\n    anchor,\n    frame,\n    offset,\n    orient,\n    angle,\n    limit,\n    // color needs to be redirect to fill\n    color,\n    // subtitle properties\n    subtitleColor,\n    subtitleFont,\n    subtitleFontSize,\n    subtitleFontStyle,\n    subtitleFontWeight,\n    subtitleLineHeight,\n    subtitlePadding\n  } = titleConfig,\n        // The rest are mark config.\n  rest = __rest(titleConfig, [\"anchor\", \"frame\", \"offset\", \"orient\", \"angle\", \"limit\", \"color\", \"subtitleColor\", \"subtitleFont\", \"subtitleFontSize\", \"subtitleFontStyle\", \"subtitleFontWeight\", \"subtitleLineHeight\", \"subtitlePadding\"]);\n\n  const titleMarkConfig = Object.assign(Object.assign({}, rest), color ? {\n    fill: color\n  } : {}); // These are non-mark title config that need to be hardcoded\n\n  const nonMarkTitleProperties = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, anchor ? {\n    anchor\n  } : {}), frame ? {\n    frame\n  } : {}), offset ? {\n    offset\n  } : {}), orient ? {\n    orient\n  } : {}), angle !== undefined ? {\n    angle\n  } : {}), limit !== undefined ? {\n    limit\n  } : {}); // subtitle part can stay in config.title since header titles do not use subtitle\n\n  const subtitle = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, subtitleColor ? {\n    subtitleColor\n  } : {}), subtitleFont ? {\n    subtitleFont\n  } : {}), subtitleFontSize ? {\n    subtitleFontSize\n  } : {}), subtitleFontStyle ? {\n    subtitleFontStyle\n  } : {}), subtitleFontWeight ? {\n    subtitleFontWeight\n  } : {}), subtitleLineHeight ? {\n    subtitleLineHeight\n  } : {}), subtitlePadding ? {\n    subtitlePadding\n  } : {});\n  const subtitleMarkConfig = pick(titleConfig, ['align', 'baseline', 'dx', 'dy', 'limit']);\n  return {\n    titleMarkConfig,\n    subtitleMarkConfig,\n    nonMarkTitleProperties: nonMarkTitleProperties,\n    subtitle\n  };\n}\nexport function isText(v) {\n  return isString(v) || isArray(v) && isString(v[0]);\n}","map":{"version":3,"sources":["../../src/title.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isArray, isString } from 'vega-util';\nimport { pick } from './util';\nexport function extractTitleConfig(titleConfig) {\n    const { \n    // These are non-mark title config that need to be hardcoded\n    anchor, frame, offset, orient, angle, limit, \n    // color needs to be redirect to fill\n    color, \n    // subtitle properties\n    subtitleColor, subtitleFont, subtitleFontSize, subtitleFontStyle, subtitleFontWeight, subtitleLineHeight, subtitlePadding } = titleConfig, \n    // The rest are mark config.\n    rest = __rest(titleConfig, [\"anchor\", \"frame\", \"offset\", \"orient\", \"angle\", \"limit\", \"color\", \"subtitleColor\", \"subtitleFont\", \"subtitleFontSize\", \"subtitleFontStyle\", \"subtitleFontWeight\", \"subtitleLineHeight\", \"subtitlePadding\"]);\n    const titleMarkConfig = Object.assign(Object.assign({}, rest), (color ? { fill: color } : {}));\n    // These are non-mark title config that need to be hardcoded\n    const nonMarkTitleProperties = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (anchor ? { anchor } : {})), (frame ? { frame } : {})), (offset ? { offset } : {})), (orient ? { orient } : {})), (angle !== undefined ? { angle } : {})), (limit !== undefined ? { limit } : {}));\n    // subtitle part can stay in config.title since header titles do not use subtitle\n    const subtitle = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (subtitleColor ? { subtitleColor } : {})), (subtitleFont ? { subtitleFont } : {})), (subtitleFontSize ? { subtitleFontSize } : {})), (subtitleFontStyle ? { subtitleFontStyle } : {})), (subtitleFontWeight ? { subtitleFontWeight } : {})), (subtitleLineHeight ? { subtitleLineHeight } : {})), (subtitlePadding ? { subtitlePadding } : {}));\n    const subtitleMarkConfig = pick(titleConfig, ['align', 'baseline', 'dx', 'dy', 'limit']);\n    return { titleMarkConfig, subtitleMarkConfig, nonMarkTitleProperties: nonMarkTitleProperties, subtitle };\n}\nexport function isText(v) {\n    return isString(v) || (isArray(v) && isString(v[0]));\n}\n//# sourceMappingURL=title.js.map"]},"metadata":{},"sourceType":"module"}