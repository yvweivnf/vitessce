{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { Log } from 'probe.gl';\nexport var probeLog = new Log({\n  id: 'loaders.gl'\n});\nexport var NullLog = /*#__PURE__*/function () {\n  function NullLog() {\n    _classCallCheck(this, NullLog);\n  }\n\n  _createClass(NullLog, [{\n    key: \"log\",\n    value: function log() {\n      return function () {};\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      return function () {};\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      return function () {};\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      return function () {};\n    }\n  }]);\n\n  return NullLog;\n}();\nexport var ConsoleLog = /*#__PURE__*/function () {\n  function ConsoleLog() {\n    _classCallCheck(this, ConsoleLog);\n\n    _defineProperty(this, \"console\", void 0);\n\n    this.console = console;\n  }\n\n  _createClass(ConsoleLog, [{\n    key: \"log\",\n    value: function log() {\n      var _this$console$log;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return (_this$console$log = this.console.log).bind.apply(_this$console$log, [this.console].concat(args));\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      var _this$console$info;\n\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return (_this$console$info = this.console.info).bind.apply(_this$console$info, [this.console].concat(args));\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      var _this$console$warn;\n\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return (_this$console$warn = this.console.warn).bind.apply(_this$console$warn, [this.console].concat(args));\n    }\n  }, {\n    key: \"error\",\n    value: function error() {\n      var _this$console$error;\n\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return (_this$console$error = this.console.error).bind.apply(_this$console$error, [this.console].concat(args));\n    }\n  }]);\n\n  return ConsoleLog;\n}();","map":{"version":3,"sources":["../../../../src/lib/loader-utils/loggers.ts"],"names":["probeLog","id","constructor"],"mappings":";;;AACA,SAAA,GAAA,QAAA,UAAA;AAEA,OAAO,IAAMA,QAAQ,GAAG,IAAA,GAAA,CAAQ;AAACC,EAAAA,EAAE,EAAE;AAAL,CAAR,CAAjB;AAGP,WAAO,OAAP;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,0BACQ;AACJ,aAAO,YAAM,CAAb,CAAA;AACD;AAHH;AAAA;AAAA,2BAIS;AACL,aAAO,YAAM,CAAb,CAAA;AACD;AANH;AAAA;AAAA,2BAOS;AACL,aAAO,YAAM,CAAb,CAAA;AACD;AATH;AAAA;AAAA,4BAUU;AACN,aAAO,YAAM,CAAb,CAAA;AACD;AAZH;;AAAA;AAAA;AAgBA,WAAO,UAAP;AAGEC,wBAAc;AAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;;AACZ,SAAA,OAAA,GAAA,OAAA;AACD;;AALH;AAAA;AAAA,0BAMe;AAAA;;AAAA,wCAAV,IAAU;AAAV,QAAA,IAAU;AAAA;;AACX,aAAO,0BAAA,OAAA,CAAA,GAAA,EAAA,IAAA,2BAAsB,KAAtB,OAAA,SAAP,IAAO,EAAP;AACD;AARH;AAAA;AAAA,2BASgB;AAAA;;AAAA,yCAAV,IAAU;AAAV,QAAA,IAAU;AAAA;;AACZ,aAAO,2BAAA,OAAA,CAAA,IAAA,EAAA,IAAA,4BAAuB,KAAvB,OAAA,SAAP,IAAO,EAAP;AACD;AAXH;AAAA;AAAA,2BAYgB;AAAA;;AAAA,yCAAV,IAAU;AAAV,QAAA,IAAU;AAAA;;AACZ,aAAO,2BAAA,OAAA,CAAA,IAAA,EAAA,IAAA,4BAAuB,KAAvB,OAAA,SAAP,IAAO,EAAP;AACD;AAdH;AAAA;AAAA,4BAeiB;AAAA;;AAAA,yCAAV,IAAU;AAAV,QAAA,IAAU;AAAA;;AACb,aAAO,4BAAA,OAAA,CAAA,KAAA,EAAA,IAAA,6BAAwB,KAAxB,OAAA,SAAP,IAAO,EAAP;AACD;AAjBH;;AAAA;AAAA","sourcesContent":["// probe.gl Log compatible loggers\nimport {Log} from 'probe.gl';\n\nexport const probeLog = new Log({id: 'loaders.gl'});\n\n// Logs nothing\nexport class NullLog {\n  log() {\n    return () => {};\n  }\n  info() {\n    return () => {};\n  }\n  warn() {\n    return () => {};\n  }\n  error() {\n    return () => {};\n  }\n}\n\n// Logs to console\nexport class ConsoleLog {\n  console;\n\n  constructor() {\n    this.console = console; // eslint-disable-line\n  }\n  log(...args) {\n    return this.console.log.bind(this.console, ...args);\n  }\n  info(...args) {\n    return this.console.info.bind(this.console, ...args);\n  }\n  warn(...args) {\n    return this.console.warn.bind(this.console, ...args);\n  }\n  error(...args) {\n    return this.console.error.bind(this.console, ...args);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}