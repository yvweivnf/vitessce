{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { AsyncSerialScheduler } from \"./_scheduler\";\nimport Observable from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\n\nfunction scan(accumulator, seed) {\n  return function (observable) {\n    return new Observable(function (observer) {\n      var accumulated;\n      var index = 0;\n      var scheduler = new AsyncSerialScheduler(observer);\n      var subscription = observable.subscribe({\n        complete: function complete() {\n          scheduler.complete();\n        },\n        error: function error(_error) {\n          scheduler.error(_error);\n        },\n        next: function next(value) {\n          var _this = this;\n\n          scheduler.schedule(function (next) {\n            return __awaiter(_this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              var prevAcc;\n              return _regeneratorRuntime.wrap(function _callee$(_context) {\n                while (1) {\n                  switch (_context.prev = _context.next) {\n                    case 0:\n                      prevAcc = index === 0 ? typeof seed === \"undefined\" ? value : seed : accumulated;\n                      _context.next = 3;\n                      return accumulator(prevAcc, value, index++);\n\n                    case 3:\n                      accumulated = _context.sent;\n                      next(accumulated);\n\n                    case 5:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }\n              }, _callee);\n            }));\n          });\n        }\n      });\n      return function () {\n        return unsubscribe(subscription);\n      };\n    });\n  };\n}\n\nexport default scan;","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/observable-fns/dist.esm/scan.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","AsyncSerialScheduler","Observable","unsubscribe","scan","accumulator","seed","observable","observer","accumulated","index","scheduler","subscription","subscribe","complete","error","schedule","prevAcc"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncSerialScheduler } from \"./_scheduler\";\nimport Observable from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\nfunction scan(accumulator, seed) {\n    return (observable) => {\n        return new Observable(observer => {\n            let accumulated;\n            let index = 0;\n            const scheduler = new AsyncSerialScheduler(observer);\n            const subscription = observable.subscribe({\n                complete() {\n                    scheduler.complete();\n                },\n                error(error) {\n                    scheduler.error(error);\n                },\n                next(value) {\n                    scheduler.schedule((next) => __awaiter(this, void 0, void 0, function* () {\n                        const prevAcc = index === 0\n                            ? (typeof seed === \"undefined\" ? value : seed)\n                            : accumulated;\n                        accumulated = yield accumulator(prevAcc, value, index++);\n                        next(accumulated);\n                    }));\n                }\n            });\n            return () => unsubscribe(subscription);\n        });\n    };\n}\nexport default scan;\n"]},"metadata":{},"sourceType":"module"}