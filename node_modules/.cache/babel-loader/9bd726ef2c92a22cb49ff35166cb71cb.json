{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar ShaderAttribute = /*#__PURE__*/function () {\n  function ShaderAttribute(dataColumn, opts) {\n    _classCallCheck(this, ShaderAttribute);\n\n    this.opts = opts;\n    this.source = dataColumn;\n  }\n\n  _createClass(ShaderAttribute, [{\n    key: \"getValue\",\n    value: function getValue() {\n      var buffer = this.source.getBuffer();\n      var accessor = this.getAccessor();\n\n      if (buffer) {\n        return [buffer, accessor];\n      }\n\n      var value = this.source.value;\n      var size = accessor.size;\n      var constantValue = value;\n\n      if (value && value.length !== size) {\n        constantValue = new Float32Array(size);\n        var index = accessor.elementOffset || 0;\n\n        for (var i = 0; i < size; ++i) {\n          constantValue[i] = value[index + i];\n        }\n      }\n\n      return constantValue;\n    }\n  }, {\n    key: \"getAccessor\",\n    value: function getAccessor() {\n      return _objectSpread({}, this.source.getAccessor(), {}, this.opts);\n    }\n  }, {\n    key: \"value\",\n    get: function get() {\n      return this.source.value;\n    }\n  }]);\n\n  return ShaderAttribute;\n}();\n\nexport { ShaderAttribute as default };","map":{"version":3,"sources":["../../../../src/lib/attribute/shader-attribute.js"],"names":["constructor","buffer","accessor","value","size","constantValue","index","i","opts"],"mappings":";;;;IAGe,e;AACbA,2BAAW,UAAXA,EAAW,IAAXA,EAA8B;AAAA;;AAE5B,SAAA,IAAA,GAAA,IAAA;AACA,SAAA,MAAA,GAAA,UAAA;AACD;;;;+BAMU;AACT,UAAMC,MAAM,GAAG,KAAA,MAAA,CAAf,SAAe,EAAf;AACA,UAAMC,QAAQ,GAAG,KAAjB,WAAiB,EAAjB;;AACA,UAAA,MAAA,EAAY;AACV,eAAO,CAAA,MAAA,EAAP,QAAO,CAAP;AACD;;AALQ,UAOFC,KAPE,GAOO,KAAhB,MAPS,CAOFA,KAPE;AAAA,UAQFC,IARE,GAQT,QARS,CAQFA,IARE;AAST,UAAIC,aAAa,GAAjB,KAAA;;AAEA,UAAIF,KAAK,IAAIA,KAAK,CAALA,MAAAA,KAAb,IAAA,EAAoC;AAClCE,QAAAA,aAAa,GAAG,IAAA,YAAA,CAAhBA,IAAgB,CAAhBA;AAEA,YAAMC,KAAK,GAAGJ,QAAQ,CAARA,aAAAA,IAAd,CAAA;;AACA,aAAK,IAAIK,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,IAAA,EAA0B,EAA1B,CAAA,EAA+B;AAC7BF,UAAAA,aAAa,CAAbA,CAAa,CAAbA,GAAmBF,KAAK,CAACG,KAAK,GAA9BD,CAAwB,CAAxBA;AACD;AACF;;AAED,aAAA,aAAA;AACD;;;kCAEa;AACZ,+BAEK,KAAA,MAAA,CAFE,WAEF,EAFL,MAIK,KAAKG,IAJV;AAMD;;;wBAlCW;AACV,aAAO,KAAA,MAAA,CAAP,KAAA;AACD;;;;;;SATY,e","sourcesContent":["/* eslint-disable complexity */\n\n/* This class creates a luma.gl-compatible \"view\" on top of a DataColumn instance */\nexport default class ShaderAttribute {\n  constructor(dataColumn, opts) {\n    // Options that cannot be changed later\n    this.opts = opts;\n    this.source = dataColumn;\n  }\n\n  get value() {\n    return this.source.value;\n  }\n\n  getValue() {\n    const buffer = this.source.getBuffer();\n    const accessor = this.getAccessor();\n    if (buffer) {\n      return [buffer, accessor];\n    }\n\n    const {value} = this.source;\n    const {size} = accessor;\n    let constantValue = value;\n\n    if (value && value.length !== size) {\n      constantValue = new Float32Array(size);\n      // initiate offset values\n      const index = accessor.elementOffset || 0; // element offset\n      for (let i = 0; i < size; ++i) {\n        constantValue[i] = value[index + i];\n      }\n    }\n\n    return constantValue;\n  }\n\n  getAccessor() {\n    return {\n      // source data accessor\n      ...this.source.getAccessor(),\n      // shader attribute overrides\n      ...this.opts\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}