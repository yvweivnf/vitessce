{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport TransitionInterpolator from './transition-interpolator';\nimport { lerp } from 'math.gl';\nvar DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nvar DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\n\nvar LinearInterpolator = /*#__PURE__*/function (_TransitionInterpolat) {\n  _inherits(LinearInterpolator, _TransitionInterpolat);\n\n  var _super = _createSuper(LinearInterpolator);\n\n  function LinearInterpolator() {\n    var _this;\n\n    _classCallCheck(this, LinearInterpolator);\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var transitionProps = Array.isArray(opts) ? opts : opts.transitionProps;\n    _this = _super.call(this, transitionProps || {\n      compare: DEFAULT_PROPS,\n      extract: DEFAULT_PROPS,\n      required: DEFAULT_REQUIRED_PROPS\n    });\n    _this.opts = opts;\n    return _this;\n  }\n\n  _createClass(LinearInterpolator, [{\n    key: \"initializeProps\",\n    value: function initializeProps(startProps, endProps) {\n      var result = _get(_getPrototypeOf(LinearInterpolator.prototype), \"initializeProps\", this).call(this, startProps, endProps);\n\n      var _this$opts = this.opts,\n          makeViewport = _this$opts.makeViewport,\n          around = _this$opts.around;\n\n      if (makeViewport && around) {\n        var startViewport = makeViewport(startProps);\n        var endViewport = makeViewport(endProps);\n        var aroundPosition = startViewport.unproject(around);\n        result.start.around = around;\n        Object.assign(result.end, {\n          around: endViewport.project(aroundPosition),\n          aroundPosition: aroundPosition,\n          width: endProps.width,\n          height: endProps.height\n        });\n      }\n\n      return result;\n    }\n  }, {\n    key: \"interpolateProps\",\n    value: function interpolateProps(startProps, endProps, t) {\n      var propsInTransition = {};\n\n      var _iterator = _createForOfIteratorHelper(this._propsToExtract),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var key = _step.value;\n          propsInTransition[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      if (endProps.aroundPosition) {\n        var viewport = this.opts.makeViewport(_objectSpread({}, endProps, {}, propsInTransition));\n        Object.assign(propsInTransition, viewport.panByPosition(endProps.aroundPosition, lerp(startProps.around, endProps.around, t)));\n      }\n\n      return propsInTransition;\n    }\n  }]);\n\n  return LinearInterpolator;\n}(TransitionInterpolator);\n\nexport { LinearInterpolator as default };","map":{"version":3,"sources":["../../../src/transitions/linear-interpolator.js"],"names":["DEFAULT_PROPS","DEFAULT_REQUIRED_PROPS","constructor","opts","transitionProps","Array","compare","extract","required","result","around","makeViewport","startViewport","endViewport","aroundPosition","Object","width","endProps","height","propsInTransition","lerp","startProps","viewport"],"mappings":";;;;;;;;AAAA,OAAA,sBAAA,MAAA,2BAAA;AACA,SAAA,IAAA,QAAA,SAAA;AAEA,IAAMA,aAAa,GAAG,CAAA,WAAA,EAAA,UAAA,EAAA,MAAA,EAAA,SAAA,EAAtB,OAAsB,CAAtB;AACA,IAAMC,sBAAsB,GAAG,CAAA,WAAA,EAAA,UAAA,EAA/B,MAA+B,CAA/B;;IAKe,kB;;;;;AAObC,gCAAuB;AAAA;;AAAA;;AAAA,QAAXC,IAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAErB,QAAMC,eAAe,GAAGC,KAAK,CAALA,OAAAA,CAAAA,IAAAA,IAAAA,IAAAA,GAA6BF,IAAI,CAAzD,eAAA;AACA,8BACEC,eAAe,IAAI;AACjBE,MAAAA,OAAO,EADU,aAAA;AAEjBC,MAAAA,OAAO,EAFU,aAAA;AAGjBC,MAAAA,QAAQ,EAAEP;AAHO,KADrB;AAOA,UAAA,IAAA,GAAA,IAAA;AAVqB;AAWtB;;;;oCAEc,U,EAAA,Q,EAAuB;AACpC,UAAMQ,MAAM,2FAAG,UAAH,EAAZ,QAAY,CAAZ;;AADoC,uBAGL,KAA/B,IAHoC;AAAA,UAG9B,YAH8B,cAG9B,YAH8B;AAAA,UAGfC,MAHe,cAGfA,MAHe;;AAIpC,UAAIC,YAAY,IAAhB,MAAA,EAA4B;AAC1B,YAAMC,aAAa,GAAGD,YAAY,CAAlC,UAAkC,CAAlC;AACA,YAAME,WAAW,GAAGF,YAAY,CAAhC,QAAgC,CAAhC;AACA,YAAMG,cAAc,GAAGF,aAAa,CAAbA,SAAAA,CAAvB,MAAuBA,CAAvB;AACAH,QAAAA,MAAM,CAANA,KAAAA,CAAAA,MAAAA,GAAAA,MAAAA;AACAM,QAAAA,MAAM,CAANA,MAAAA,CAAcN,MAAM,CAApBM,GAAAA,EAA0B;AACxBL,UAAAA,MAAM,EAAEG,WAAW,CAAXA,OAAAA,CADgB,cAChBA,CADgB;AAExBC,UAAAA,cAFwB,EAExBA,cAFwB;AAGxBE,UAAAA,KAAK,EAAEC,QAAQ,CAHS,KAAA;AAIxBC,UAAAA,MAAM,EAAED,QAAQ,CAACC;AAJO,SAA1BH;AAMD;;AAED,aAAA,MAAA;AACD;;;qCAEe,U,EAAA,Q,EAAA,C,EAA0B;AACxC,UAAMI,iBAAiB,GAAvB,EAAA;;AADwC,iDAEtB,KAAlB,eAFwC;AAAA;;AAAA;AAExC,4DAAwC;AAAA,cAAxC,GAAwC;AACtCA,UAAAA,iBAAiB,CAAjBA,GAAiB,CAAjBA,GAAyBC,IAAI,CAACC,UAAU,CAAVA,GAAU,CAAVA,IAAD,CAAA,EAAuBJ,QAAQ,CAARA,GAAQ,CAARA,IAAvB,CAAA,EAA7BE,CAA6B,CAA7BA;AACD;AAJuC;AAAA;AAAA;AAAA;AAAA;;AAMxC,UAAIF,QAAQ,CAAZ,cAAA,EAA6B;AAE3B,YAAMK,QAAQ,GAAG,KAAA,IAAA,CAAA,YAAA,mBAAuB,QAAvB,MAAwCH,iBAAxC,EAAjB;AACAJ,QAAAA,MAAM,CAANA,MAAAA,CAAAA,iBAAAA,EAEEO,QAAQ,CAARA,aAAAA,CACEL,QAAQ,CADVK,cAAAA,EAGEF,IAAI,CAACC,UAAU,CAAX,MAAA,EAAoBJ,QAAQ,CAA5B,MAAA,EALRF,CAKQ,CAHNO,CAFFP;AAQD;;AACD,aAAA,iBAAA;AACD;;;;EA3DY,sB;;SAAA,kB","sourcesContent":["import TransitionInterpolator from './transition-interpolator';\nimport {lerp} from 'math.gl';\n\nconst DEFAULT_PROPS = ['longitude', 'latitude', 'zoom', 'bearing', 'pitch'];\nconst DEFAULT_REQUIRED_PROPS = ['longitude', 'latitude', 'zoom'];\n\n/**\n * Performs linear interpolation of two view states.\n */\nexport default class LinearInterpolator extends TransitionInterpolator {\n  /**\n   * @param {Object} opts\n   * @param {Array} opts.transitionProps - list of props to apply linear transition to.\n   * @param {Array} opts.around - a screen point to zoom/rotate around.\n   * @param {Function} opts.makeViewport - construct a viewport instance with given props.\n   */\n  constructor(opts = {}) {\n    // Backward compatibility\n    const transitionProps = Array.isArray(opts) ? opts : opts.transitionProps;\n    super(\n      transitionProps || {\n        compare: DEFAULT_PROPS,\n        extract: DEFAULT_PROPS,\n        required: DEFAULT_REQUIRED_PROPS\n      }\n    );\n    this.opts = opts;\n  }\n\n  initializeProps(startProps, endProps) {\n    const result = super.initializeProps(startProps, endProps);\n\n    const {makeViewport, around} = this.opts;\n    if (makeViewport && around) {\n      const startViewport = makeViewport(startProps);\n      const endViewport = makeViewport(endProps);\n      const aroundPosition = startViewport.unproject(around);\n      result.start.around = around;\n      Object.assign(result.end, {\n        around: endViewport.project(aroundPosition),\n        aroundPosition,\n        width: endProps.width,\n        height: endProps.height\n      });\n    }\n\n    return result;\n  }\n\n  interpolateProps(startProps, endProps, t) {\n    const propsInTransition = {};\n    for (const key of this._propsToExtract) {\n      propsInTransition[key] = lerp(startProps[key] || 0, endProps[key] || 0, t);\n    }\n\n    if (endProps.aroundPosition) {\n      // Linear transition should be performed in common space\n      const viewport = this.opts.makeViewport({...endProps, ...propsInTransition});\n      Object.assign(\n        propsInTransition,\n        viewport.panByPosition(\n          endProps.aroundPosition,\n          // anchor point in current screen coordinates\n          lerp(startProps.around, endProps.around, t)\n        )\n      );\n    }\n    return propsInTransition;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}