{"ast":null,"code":"import { roundToFloat16Bits, convertToNumber } from \"./lib\";\n/**\n * returns the nearest half precision float representation of a number.\n * @param {number} num\n */\n\nexport default function hfround(num) {\n  num = Number(num); // for optimization\n\n  if (!Number.isFinite(num) || num === 0) {\n    return num;\n  }\n\n  const x16 = roundToFloat16Bits(num);\n  return convertToNumber(x16);\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/@petamoriken/float16/src/hfround.js"],"names":["roundToFloat16Bits","convertToNumber","hfround","num","Number","isFinite","x16"],"mappings":"AAAA,SAASA,kBAAT,EAA6BC,eAA7B,QAAoD,OAApD;AAEA;;;;;AAIA,eAAe,SAASC,OAAT,CAAiBC,GAAjB,EAAsB;AACjCA,EAAAA,GAAG,GAAGC,MAAM,CAACD,GAAD,CAAZ,CADiC,CAGjC;;AACA,MAAG,CAACC,MAAM,CAACC,QAAP,CAAgBF,GAAhB,CAAD,IAAyBA,GAAG,KAAK,CAApC,EAAuC;AACnC,WAAOA,GAAP;AACH;;AAED,QAAMG,GAAG,GAAGN,kBAAkB,CAACG,GAAD,CAA9B;AACA,SAAOF,eAAe,CAACK,GAAD,CAAtB;AACH","sourcesContent":["import { roundToFloat16Bits, convertToNumber } from \"./lib\";\n\n/**\n * returns the nearest half precision float representation of a number.\n * @param {number} num\n */\nexport default function hfround(num) {\n    num = Number(num);\n\n    // for optimization\n    if(!Number.isFinite(num) || num === 0) {\n        return num;\n    }\n\n    const x16 = roundToFloat16Bits(num);\n    return convertToNumber(x16);\n}\n"]},"metadata":{},"sourceType":"module"}