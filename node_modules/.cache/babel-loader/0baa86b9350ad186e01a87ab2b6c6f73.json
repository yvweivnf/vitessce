{"ast":null,"code":"import React,{useCallback}from'react';import debounce from'lodash/debounce';import Slider from'@material-ui/core/Slider';import TableCell from'@material-ui/core/TableCell';import TableRow from'@material-ui/core/TableRow';import{useStyles}from'../shared-plot-options/styles';import OptionsContainer from'../shared-plot-options/OptionsContainer';import OptionSelect from'../shared-plot-options/OptionSelect';import{GLSL_COLORMAPS}from'../../layers/constants';export default function HeatmapOptions(props){var geneExpressionColormap=props.geneExpressionColormap,setGeneExpressionColormap=props.setGeneExpressionColormap,geneExpressionColormapRange=props.geneExpressionColormapRange,setGeneExpressionColormapRange=props.setGeneExpressionColormapRange;var classes=useStyles();function handleGeneExpressionColormapChange(event){setGeneExpressionColormap(event.target.value);}function handleColormapRangeChange(event,value){setGeneExpressionColormapRange(value);}var handleColormapRangeChangeDebounced=useCallback(debounce(handleColormapRangeChange,5,{trailing:true}),[handleColormapRangeChange]);return/*#__PURE__*/React.createElement(OptionsContainer,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell,htmlFor:\"gene-expression-colormap-select\"},\"Gene Expression Colormap\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(OptionSelect,{className:classes.select,value:geneExpressionColormap,onChange:handleGeneExpressionColormapChange,inputProps:{id:'gene-expression-colormap-select'}},GLSL_COLORMAPS.map(function(cmap){return/*#__PURE__*/React.createElement(\"option\",{key:cmap,value:cmap},cmap);})))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},\"Gene Expression Colormap Range\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(Slider,{classes:{root:classes.slider,valueLabel:classes.sliderValueLabel},value:geneExpressionColormapRange,onChange:handleColormapRangeChangeDebounced,\"aria-labelledby\":\"gene-expression-colormap-range-slider\",valueLabelDisplay:\"auto\",step:0.005,min:0.0,max:1.0}))));}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/heatmap/HeatmapOptions.js"],"names":["React","useCallback","debounce","Slider","TableCell","TableRow","useStyles","OptionsContainer","OptionSelect","GLSL_COLORMAPS","HeatmapOptions","props","geneExpressionColormap","setGeneExpressionColormap","geneExpressionColormapRange","setGeneExpressionColormapRange","classes","handleGeneExpressionColormapChange","event","target","value","handleColormapRangeChange","handleColormapRangeChangeDebounced","trailing","labelCell","inputCell","select","id","map","cmap","root","slider","valueLabel","sliderValueLabel"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,KAAmC,OAAnC,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,yCAA7B,CACA,MAAOC,CAAAA,YAAP,KAAyB,qCAAzB,CACA,OAASC,cAAT,KAA+B,wBAA/B,CAEA,cAAe,SAASC,CAAAA,cAAT,CAAwBC,KAAxB,CAA+B,IAE1CC,CAAAA,sBAF0C,CAMxCD,KANwC,CAE1CC,sBAF0C,CAG1CC,yBAH0C,CAMxCF,KANwC,CAG1CE,yBAH0C,CAI1CC,2BAJ0C,CAMxCH,KANwC,CAI1CG,2BAJ0C,CAK1CC,8BAL0C,CAMxCJ,KANwC,CAK1CI,8BAL0C,CAQ5C,GAAMC,CAAAA,OAAO,CAAGV,SAAS,EAAzB,CAEA,QAASW,CAAAA,kCAAT,CAA4CC,KAA5C,CAAmD,CACjDL,yBAAyB,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAzB,CACD,CAED,QAASC,CAAAA,yBAAT,CAAmCH,KAAnC,CAA0CE,KAA1C,CAAiD,CAC/CL,8BAA8B,CAACK,KAAD,CAA9B,CACD,CACD,GAAME,CAAAA,kCAAkC,CAAGrB,WAAW,CACpDC,QAAQ,CAACmB,yBAAD,CAA4B,CAA5B,CAA+B,CAAEE,QAAQ,CAAE,IAAZ,CAA/B,CAD4C,CAEpD,CAACF,yBAAD,CAFoD,CAAtD,CAKA,mBACE,oBAAC,gBAAD,mBACE,oBAAC,QAAD,mBACE,oBAAC,SAAD,EAAW,SAAS,CAAEL,OAAO,CAACQ,SAA9B,CAAyC,OAAO,CAAC,iCAAjD,6BADF,cAIE,oBAAC,SAAD,EAAW,SAAS,CAAER,OAAO,CAACS,SAA9B,eACE,oBAAC,YAAD,EACE,SAAS,CAAET,OAAO,CAACU,MADrB,CAEE,KAAK,CAAEd,sBAFT,CAGE,QAAQ,CAAEK,kCAHZ,CAIE,UAAU,CAAE,CACVU,EAAE,CAAE,iCADM,CAJd,EAQGlB,cAAc,CAACmB,GAAf,CAAmB,SAAAC,IAAI,qBACtB,8BAAQ,GAAG,CAAEA,IAAb,CAAmB,KAAK,CAAEA,IAA1B,EAAiCA,IAAjC,CADsB,EAAvB,CARH,CADF,CAJF,CADF,cAoBE,oBAAC,QAAD,mBACE,oBAAC,SAAD,EAAW,SAAS,CAAEb,OAAO,CAACQ,SAA9B,mCADF,cAIE,oBAAC,SAAD,EAAW,SAAS,CAAER,OAAO,CAACS,SAA9B,eACE,oBAAC,MAAD,EACE,OAAO,CAAE,CAAEK,IAAI,CAAEd,OAAO,CAACe,MAAhB,CAAwBC,UAAU,CAAEhB,OAAO,CAACiB,gBAA5C,CADX,CAEE,KAAK,CAAEnB,2BAFT,CAGE,QAAQ,CAAEQ,kCAHZ,CAIE,kBAAgB,uCAJlB,CAKE,iBAAiB,CAAC,MALpB,CAME,IAAI,CAAE,KANR,CAOE,GAAG,CAAE,GAPP,CAQE,GAAG,CAAE,GARP,EADF,CAJF,CApBF,CADF,CAwCD","sourcesContent":["import React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport Slider from '@material-ui/core/Slider';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\n\nexport default function HeatmapOptions(props) {\n  const {\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange,\n  } = props;\n\n  const classes = useStyles();\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n  const handleColormapRangeChangeDebounced = useCallback(\n    debounce(handleColormapRangeChange, 5, { trailing: true }),\n    [handleColormapRangeChange],\n  );\n\n  return (\n    <OptionsContainer>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"gene-expression-colormap-select\">\n          Gene Expression Colormap\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={geneExpressionColormap}\n            onChange={handleGeneExpressionColormapChange}\n            inputProps={{\n              id: 'gene-expression-colormap-select',\n            }}\n          >\n            {GLSL_COLORMAPS.map(cmap => (\n              <option key={cmap} value={cmap}>{cmap}</option>\n            ))}\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          Gene Expression Colormap Range\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={geneExpressionColormapRange}\n            onChange={handleColormapRangeChangeDebounced}\n            aria-labelledby=\"gene-expression-colormap-range-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.005}\n            min={0.0}\n            max={1.0}\n          />\n        </TableCell>\n      </TableRow>\n    </OptionsContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}