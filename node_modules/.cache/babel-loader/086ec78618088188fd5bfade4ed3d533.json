{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React,{useRef,useState,useCallback,useMemo,useEffect,useReducer,forwardRef}from'react';import uuidv4 from'uuid/v4';import DeckGL from'deck.gl';// eslint-disable-next-line import/no-extraneous-dependencies\nimport GL from'@luma.gl/constants';import{Texture2D}from'@luma.gl/core';import{OrthographicView}from'@deck.gl/core';// eslint-disable-line import/no-extraneous-dependencies\nimport range from'lodash/range';import clamp from'lodash/clamp';import isEqual from'lodash/isEqual';import{getLongestString}from'../../utils';import HeatmapCompositeTextLayer from'../../layers/HeatmapCompositeTextLayer';import PixelatedBitmapLayer from'../../layers/PixelatedBitmapLayer';import PaddedExpressionHeatmapBitmapLayer from'../../layers/PaddedExpressionHeatmapBitmapLayer';import HeatmapBitmapLayer from'../../layers/HeatmapBitmapLayer';import{DEFAULT_GL_OPTIONS,createDefaultUpdateCellsHover,createDefaultUpdateGenesHover,createDefaultUpdateTracksHover,createDefaultUpdateViewInfo,copyUint8Array,getDefaultColor}from'../utils';import{layerFilter,getAxisSizes,mouseToHeatmapPosition,heatmapToMousePosition,mouseToCellColorPosition}from'./utils';import{TILE_SIZE,MAX_ROW_AGG,MIN_ROW_AGG,COLOR_BAR_SIZE,AXIS_MARGIN,DATA_TEXTURE_SIZE,PIXELATED_TEXTURE_PARAMETERS}from'../../layers/heatmap-constants';import HeatmapWorkerPool from'./HeatmapWorkerPool';// Only allocate the memory once for the container\nvar paddedExpressionContainer=new Uint8Array(DATA_TEXTURE_SIZE*DATA_TEXTURE_SIZE);/**\n * Should the \"padded\" implementation\n * be used? Only works if the number of heatmap values is\n * <=  4096^2 = ~16 million.\n * @param {number|null} dataLength The number of heatmap values.\n * @returns {boolean} Whether the more efficient implementation should be used.\n */function shouldUsePaddedImplementation(dataLength){return dataLength<=Math.pow(DATA_TEXTURE_SIZE,2);}/**\n * A heatmap component for cell x gene matrices.\n * @param {object} props\n * @param {string} props.uuid The uuid of this component,\n * used by tooltips to determine whether to render a tooltip or\n * a crosshair.\n * @param {string} props.theme The current theme name.\n * @param {object} props.viewState The viewState for\n * DeckGL.\n * @param {function} props.setViewState The viewState setter\n * for DeckGL.\n * @param {number} props.width The width of the canvas.\n * @param {number} props.height The height of the canvas.\n * @param {object} props.expressionMatrix An object { rows, cols, matrix },\n * where matrix is a flat Uint8Array, rows is a list of cell ID strings,\n * and cols is a list of gene ID strings.\n * @param {Map} props.cellColors Map of cell ID to color. Optional.\n * If defined, the key ordering is used to order the cell axis of the heatmap.\n * @param {array} props.cellColorLabels array of labels to place beside cell color\n * tracks. Only works for transpose=true.\n * @param {function} props.clearPleaseWait The clear please wait callback,\n * called when the expression matrix has loaded (is not null).\n * @param {function} props.setCellHighlight Callback function called on\n * hover with the cell ID. Optional.\n * @param {function} props.setGeneHighlight Callback function called on\n * hover with the gene ID. Optional.\n * @param {function} props.updateViewInfo Callback function that gets called with an\n * object { uuid, project() } where project is a function that maps (cellId, geneId)\n * to canvas (x,y) coordinates. Used to show tooltips. Optional.\n * @param {boolean} props.transpose By default, false.\n * @param {string} props.variablesTitle By default, 'Genes'.\n * @param {string} props.observationsTitle By default, 'Cells'.\n * @param {number} props.useDevicePixels By default, 1. Higher values\n * e.g. 2 increase text sharpness.\n * @param {boolean} props.hideObservationLabels By default false.\n * @param {boolean} props.hideVariableLabels By default false.\n * @param {string} props.colormap The name of the colormap function to use.\n * @param {array} props.colormapRange A tuple [lower, upper] to adjust the color scale.\n * @param {function} props.setColormapRange The setter function for colormapRange.\n */var Heatmap=forwardRef(function(props,deckRef){var _heatmapLayers$concat;var uuid=props.uuid,theme=props.theme,rawViewState=props.viewState,setViewState=props.setViewState,viewWidth=props.width,viewHeight=props.height,expression=props.expressionMatrix,cellColors=props.cellColors,_props$cellColorLabel=props.cellColorLabels,cellColorLabels=_props$cellColorLabel===void 0?['']:_props$cellColorLabel,colormap=props.colormap,colormapRange=props.colormapRange,clearPleaseWait=props.clearPleaseWait,setComponentHover=props.setComponentHover,_props$setCellHighlig=props.setCellHighlight,setCellHighlight=_props$setCellHighlig===void 0?createDefaultUpdateCellsHover('Heatmap'):_props$setCellHighlig,_props$setGeneHighlig=props.setGeneHighlight,setGeneHighlight=_props$setGeneHighlig===void 0?createDefaultUpdateGenesHover('Heatmap'):_props$setGeneHighlig,_props$setTrackHighli=props.setTrackHighlight,setTrackHighlight=_props$setTrackHighli===void 0?createDefaultUpdateTracksHover('Heatmap'):_props$setTrackHighli,_props$updateViewInfo=props.updateViewInfo,updateViewInfo=_props$updateViewInfo===void 0?createDefaultUpdateViewInfo('Heatmap'):_props$updateViewInfo,_props$setIsRendering=props.setIsRendering,setIsRendering=_props$setIsRendering===void 0?function(){}:_props$setIsRendering,_props$transpose=props.transpose,transpose=_props$transpose===void 0?false:_props$transpose,_props$variablesTitle=props.variablesTitle,variablesTitle=_props$variablesTitle===void 0?'Genes':_props$variablesTitle,_props$observationsTi=props.observationsTitle,observationsTitle=_props$observationsTi===void 0?'Cells':_props$observationsTi,_props$variablesDashe=props.variablesDashes,variablesDashes=_props$variablesDashe===void 0?true:_props$variablesDashe,_props$observationsDa=props.observationsDashes,observationsDashes=_props$observationsDa===void 0?true:_props$observationsDa,_props$useDevicePixel=props.useDevicePixels,useDevicePixels=_props$useDevicePixel===void 0?1:_props$useDevicePixel,_props$hideObservatio=props.hideObservationLabels,hideObservationLabels=_props$hideObservatio===void 0?false:_props$hideObservatio,_props$hideVariableLa=props.hideVariableLabels,hideVariableLabels=_props$hideVariableLa===void 0?false:_props$hideVariableLa;var viewState=_objectSpread({},rawViewState,{target:transpose?[rawViewState.target[1],rawViewState.target[0]]:rawViewState.target,minZoom:0});var axisLeftTitle=transpose?variablesTitle:observationsTitle;var axisTopTitle=transpose?observationsTitle:variablesTitle;var workerPool=useMemo(function(){return new HeatmapWorkerPool();},[]);useEffect(function(){if(clearPleaseWait&&expression){clearPleaseWait('expression-matrix');}},[clearPleaseWait,expression]);var tilesRef=useRef();var dataRef=useRef();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),axisLeftLabels=_useState2[0],setAxisLeftLabels=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),axisTopLabels=_useState4[0],setAxisTopLabels=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),numCellColorTracks=_useState6[0],setNumCellColorTracks=_useState6[1];// Since we are storing the tile data in a ref,\n// and updating it asynchronously when the worker finishes,\n// we need to tie it to a piece of state through this iteration value.\nvar _useReducer=useReducer(function(i){return i+1;},0),_useReducer2=_slicedToArray(_useReducer,2),tileIteration=_useReducer2[0],incTileIteration=_useReducer2[1];// We need to keep a backlog of the tasks for the worker thread,\n// since the array buffer can only be held by one thread at a time.\nvar _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),backlog=_useState8[0],setBacklog=_useState8[1];// Store a reference to the matrix Uint8Array in the dataRef,\n// since we need to access its array buffer to transfer\n// it back and forth from the worker thread.\nuseEffect(function(){// Store the expression matrix Uint8Array in the dataRef.\nif(expression&&expression.matrix&&!shouldUsePaddedImplementation(expression.matrix.length)){dataRef.current=copyUint8Array(expression.matrix);}},[dataRef,expression]);// Check if the ordering of axis labels needs to be changed,\n// for example if the cells \"selected\" (technically just colored)\n// have changed.\nuseEffect(function(){if(!expression){return;}var newCellOrdering=!cellColors||cellColors.size===0?expression.rows:Array.from(cellColors.keys());var oldCellOrdering=transpose?axisTopLabels:axisLeftLabels;if(!isEqual(oldCellOrdering,newCellOrdering)){if(transpose){setAxisTopLabels(newCellOrdering);}else{setAxisLeftLabels(newCellOrdering);}}},[expression,cellColors,axisTopLabels,axisLeftLabels,transpose]);// Set the genes ordering.\nuseEffect(function(){if(!expression){return;}if(transpose){setAxisLeftLabels(expression.cols);}else{setAxisTopLabels(expression.cols);}},[expression,transpose]);var _useMemo=useMemo(function(){if(!expression){return['',''];}return[getLongestString(expression.rows),getLongestString([].concat(_toConsumableArray(expression.cols),_toConsumableArray(cellColorLabels)))];},[expression,cellColorLabels]),_useMemo2=_slicedToArray(_useMemo,2),longestCellLabel=_useMemo2[0],longestGeneLabel=_useMemo2[1];// Creating a look up dictionary once is faster than calling indexOf many times\n// i.e when cell ordering changes.\nvar expressionRowLookUp=useMemo(function(){var lookUp=new Map();if(expression===null||expression===void 0?void 0:expression.rows){// eslint-disable-next-line no-return-assign\nexpression.rows.forEach(function(cell,j){return lookUp.set(cell,j);});}return lookUp;},[expression]);var width=axisTopLabels.length;var height=axisLeftLabels.length;var _getAxisSizes=getAxisSizes(transpose,longestGeneLabel,longestCellLabel,hideObservationLabels,hideVariableLabels),_getAxisSizes2=_slicedToArray(_getAxisSizes,2),axisOffsetLeft=_getAxisSizes2[0],axisOffsetTop=_getAxisSizes2[1];var _useState9=useState(null),_useState10=_slicedToArray(_useState9,2),gl=_useState10[0],setGlContext=_useState10[1];var offsetTop=axisOffsetTop+COLOR_BAR_SIZE*(transpose?numCellColorTracks:0);var offsetLeft=axisOffsetLeft+COLOR_BAR_SIZE*(transpose?0:numCellColorTracks);var matrixWidth=viewWidth-offsetLeft;var matrixHeight=viewHeight-offsetTop;var matrixLeft=-matrixWidth/2;var matrixRight=matrixWidth/2;var matrixTop=-matrixHeight/2;var matrixBottom=matrixHeight/2;var xTiles=Math.ceil(width/TILE_SIZE);var yTiles=Math.ceil(height/TILE_SIZE);var widthRatio=1-(TILE_SIZE-width%TILE_SIZE)/(xTiles*TILE_SIZE);var heightRatio=1-(TILE_SIZE-height%TILE_SIZE)/(yTiles*TILE_SIZE);var tileWidth=matrixWidth/widthRatio/xTiles;var tileHeight=matrixHeight/heightRatio/yTiles;var scaleFactor=Math.pow(2,viewState.zoom);var cellHeight=matrixHeight*scaleFactor/height;var cellWidth=matrixWidth*scaleFactor/width;// Get power of 2 between 1 and 16,\n// for number of cells to aggregate together in each direction.\nvar aggSizeX=clamp(Math.pow(2,Math.ceil(Math.log2(1/cellWidth))),MIN_ROW_AGG,MAX_ROW_AGG);var aggSizeY=clamp(Math.pow(2,Math.ceil(Math.log2(1/cellHeight))),MIN_ROW_AGG,MAX_ROW_AGG);var _viewState$target=_slicedToArray(viewState.target,2),targetX=_viewState$target[0],targetY=_viewState$target[1];// Emit the viewInfo object on viewState updates\n// (used by tooltips / crosshair elements).\nuseEffect(function(){updateViewInfo({uuid:uuid,project:function project(cellId,geneId){var colI=transpose?axisTopLabels.indexOf(cellId):axisTopLabels.indexOf(geneId);var rowI=transpose?axisLeftLabels.indexOf(geneId):axisLeftLabels.indexOf(cellId);return heatmapToMousePosition(colI,rowI,{offsetLeft:offsetLeft,offsetTop:offsetTop,targetX:viewState.target[0],targetY:viewState.target[1],scaleFactor:scaleFactor,matrixWidth:matrixWidth,matrixHeight:matrixHeight,numRows:height,numCols:width});}});},[uuid,updateViewInfo,transpose,axisTopLabels,axisLeftLabels,offsetLeft,offsetTop,viewState,scaleFactor,matrixWidth,matrixHeight,height,width]);// Listen for viewState changes.\n// Do not allow the user to zoom and pan outside of the initial window.\nvar onViewStateChange=useCallback(function(_ref){var nextViewState=_ref.viewState;var nextZoom=nextViewState.zoom;var nextScaleFactor=Math.pow(2,nextZoom);var minTargetX=nextZoom===0?0:-(matrixRight-matrixRight/nextScaleFactor);var maxTargetX=-1*minTargetX;var minTargetY=nextZoom===0?0:-(matrixBottom-matrixBottom/nextScaleFactor);var maxTargetY=-1*minTargetY;// Manipulate view state if necessary to keep the user in the window.\nvar nextTarget=[clamp(nextViewState.target[0],minTargetX,maxTargetX),clamp(nextViewState.target[1],minTargetY,maxTargetY)];setViewState({zoom:nextZoom,target:transpose?[nextTarget[1],nextTarget[0]]:nextTarget});},[matrixRight,matrixBottom,transpose,setViewState]);// If `expression` or `cellOrdering` have changed,\n// then new tiles need to be generated,\n// so add a new task to the backlog.\nuseEffect(function(){if(!expression||!expression.matrix||expression.matrix.length<Math.pow(DATA_TEXTURE_SIZE,2)){return;}// Use a uuid to give the task a unique ID,\n// to help identify where in the list it is located\n// after the worker thread asynchronously sends the data back\n// to this thread.\nif(axisTopLabels&&axisLeftLabels&&xTiles&&yTiles){setBacklog(function(prev){return[].concat(_toConsumableArray(prev),[uuidv4()]);});}},[dataRef,expression,axisTopLabels,axisLeftLabels,xTiles,yTiles]);// When the backlog has updated, a new worker job can be submitted if:\n// - the backlog has length >= 1 (at least one job is waiting), and\n// - buffer.byteLength is not zero, so the worker does not currently \"own\" the buffer.\nuseEffect(function(){if(backlog.length<1||shouldUsePaddedImplementation(dataRef.current.length)){return;}var curr=backlog[backlog.length-1];if(dataRef.current&&dataRef.current.buffer.byteLength&&expressionRowLookUp.size>0&&!shouldUsePaddedImplementation(dataRef.current.length)){var cols=expression.cols,matrix=expression.matrix;var promises=range(yTiles).map(function(i){return range(xTiles).map(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(j){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:return _context.abrupt(\"return\",workerPool.process({curr:curr,tileI:i,tileJ:j,tileSize:TILE_SIZE,cellOrdering:transpose?axisTopLabels:axisLeftLabels,cols:cols,transpose:transpose,data:matrix.buffer.slice(),expressionRowLookUp:expressionRowLookUp}));case 1:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}());});var process=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var tiles,currWork;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return Promise.all(promises.flat());case 2:tiles=_context2.sent;tilesRef.current=tiles.map(function(i){return i.tile;});incTileIteration();dataRef.current=new Uint8Array(tiles[0].buffer);currWork=tiles[0].curr;setBacklog(function(prev){var currIndex=prev.indexOf(currWork);return prev.slice(currIndex+1,prev.length);});case 8:case\"end\":return _context2.stop();}}},_callee2);}));return function process(){return _ref3.apply(this,arguments);};}();process();}},[axisLeftLabels,axisTopLabels,backlog,expression,transpose,xTiles,yTiles,workerPool,expressionRowLookUp]);useEffect(function(){setIsRendering(backlog.length>0);},[backlog,setIsRendering]);// Create the padded expression matrix for holding data which can then be bound to the GPU.\nvar paddedExpressions=useMemo(function(){var cellOrdering=transpose?axisTopLabels:axisLeftLabels;if((expression===null||expression===void 0?void 0:expression.matrix)&&cellOrdering.length&&gl&&shouldUsePaddedImplementation(expression.matrix.length)){var newIndex=0;for(var cellOrderingIndex=0;cellOrderingIndex<cellOrdering.length;cellOrderingIndex+=1){var cell=cellOrdering[cellOrderingIndex];newIndex=transpose?cellOrderingIndex:newIndex;var cellIndex=expressionRowLookUp.get(cell);for(var geneIndex=0;geneIndex<expression.cols.length;geneIndex+=1){var index=cellIndex*expression.cols.length+geneIndex;paddedExpressionContainer[newIndex%(DATA_TEXTURE_SIZE*DATA_TEXTURE_SIZE)]=expression.matrix[index];newIndex=transpose?newIndex+cellOrdering.length:newIndex+1;}}}return gl?new Texture2D(gl,{data:paddedExpressionContainer,mipmaps:false,parameters:PIXELATED_TEXTURE_PARAMETERS,// Each color contains a single luminance value.\n// When sampled, rgb are all set to this luminance, alpha is 1.0.\n// Reference: https://luma.gl/docs/api-reference/webgl/texture#texture-formats\nformat:GL.LUMINANCE,dataFormat:GL.LUMINANCE,type:GL.UNSIGNED_BYTE,width:DATA_TEXTURE_SIZE,height:DATA_TEXTURE_SIZE}):paddedExpressionContainer;},[transpose,axisTopLabels,axisLeftLabels,expression,expressionRowLookUp,gl]);// Update the heatmap tiles if:\n// - new tiles are available (`tileIteration` has changed), or\n// - the matrix bounds have changed, or\n// - the `aggSizeX` or `aggSizeY` have changed, or\n// - the cell ordering has changed.\nvar heatmapLayers=useMemo(function(){var usePaddedExpressions=(expression===null||expression===void 0?void 0:expression.matrix)&&shouldUsePaddedImplementation(expression===null||expression===void 0?void 0:expression.matrix.length);if((!tilesRef.current||backlog.length)&&!usePaddedExpressions){return[];}if(usePaddedExpressions){var cellOrdering=transpose?axisTopLabels:axisLeftLabels;// eslint-disable-next-line no-inner-declarations, no-shadow\nfunction _getLayer(i,j){var cols=expression.cols;return new PaddedExpressionHeatmapBitmapLayer({id:\"heatmapLayer-\".concat(i,\"-\").concat(j),image:paddedExpressions,bounds:[matrixLeft+j*tileWidth,matrixTop+i*tileHeight,matrixLeft+(j+1)*tileWidth,matrixTop+(i+1)*tileHeight],tileI:i,tileJ:j,numXTiles:xTiles,numYTiles:yTiles,origDataSize:transpose?[cols.length,cellOrdering.length]:[cellOrdering.length,cols.length],aggSizeX:aggSizeX,aggSizeY:aggSizeY,colormap:colormap,colorScaleLo:colormapRange[0],colorScaleHi:colormapRange[1],updateTriggers:{image:[axisLeftLabels,axisTopLabels],bounds:[tileHeight,tileWidth]}});}var _layers=range(yTiles*xTiles).map(function(index){return _getLayer(Math.floor(index/xTiles),index%xTiles);});return _layers;}function getLayer(i,j,tile){return new HeatmapBitmapLayer({id:\"heatmapLayer-\".concat(tileIteration,\"-\").concat(i,\"-\").concat(j),image:tile,bounds:[matrixLeft+j*tileWidth,matrixTop+i*tileHeight,matrixLeft+(j+1)*tileWidth,matrixTop+(i+1)*tileHeight],aggSizeX:aggSizeX,aggSizeY:aggSizeY,colormap:colormap,colorScaleLo:colormapRange[0],colorScaleHi:colormapRange[1],updateTriggers:{image:[axisLeftLabels,axisTopLabels],bounds:[tileHeight,tileWidth]}});}var layers=tilesRef.current.map(function(tile,index){return getLayer(Math.floor(index/xTiles),index%xTiles,tile);});return layers;},[expression,backlog.length,transpose,axisTopLabels,axisLeftLabels,yTiles,xTiles,paddedExpressions,matrixLeft,tileWidth,matrixTop,tileHeight,aggSizeX,aggSizeY,colormap,colormapRange,tileIteration]);var axisLeftDashes=transpose?variablesDashes:observationsDashes;var axisTopDashes=transpose?observationsDashes:variablesDashes;// Map cell and gene names to arrays with indices,\n// to prepare to render the names in TextLayers.\nvar axisTopLabelData=useMemo(function(){return axisTopLabels.map(function(d,i){return[i,axisTopDashes?\"- \".concat(d):d];});},[axisTopLabels,axisTopDashes]);var axisLeftLabelData=useMemo(function(){return axisLeftLabels.map(function(d,i){return[i,axisLeftDashes?\"\".concat(d,\" -\"):d];});},[axisLeftLabels,axisLeftDashes]);var cellColorLabelsData=useMemo(function(){return cellColorLabels.map(function(d,i){return[i,d&&(transpose?\"\".concat(d,\" -\"):\"- \".concat(d))];});},[cellColorLabels,transpose]);var hideTopLabels=transpose?hideObservationLabels:hideVariableLabels;var hideLeftLabels=transpose?hideVariableLabels:hideObservationLabels;// Generate the axis label, axis title, and loading indicator text layers.\nvar textLayers=[new HeatmapCompositeTextLayer({axis:'left',id:'axisLeftCompositeTextLayer',targetX:targetX,targetY:targetY,scaleFactor:scaleFactor,axisLeftLabelData:axisLeftLabelData,matrixTop:matrixTop,height:height,matrixHeight:matrixHeight,cellHeight:cellHeight,cellWidth:cellWidth,axisTopLabelData:axisTopLabelData,matrixLeft:matrixLeft,width:width,matrixWidth:matrixWidth,viewHeight:viewHeight,viewWidth:viewWidth,theme:theme,axisLeftTitle:axisLeftTitle,axisTopTitle:axisTopTitle,axisOffsetLeft:axisOffsetLeft,axisOffsetTop:axisOffsetTop,hideTopLabels:hideTopLabels,hideLeftLabels:hideLeftLabels,transpose:transpose}),new HeatmapCompositeTextLayer({axis:'top',id:'axisTopCompositeTextLayer',targetX:targetX,targetY:targetY,scaleFactor:scaleFactor,axisLeftLabelData:axisLeftLabelData,matrixTop:matrixTop,height:height,matrixHeight:matrixHeight,cellHeight:cellHeight,cellWidth:cellWidth,axisTopLabelData:axisTopLabelData,matrixLeft:matrixLeft,width:width,matrixWidth:matrixWidth,viewHeight:viewHeight,viewWidth:viewWidth,theme:theme,axisLeftTitle:axisLeftTitle,axisTopTitle:axisTopTitle,axisOffsetLeft:axisOffsetLeft,axisOffsetTop:axisOffsetTop,cellColorLabelsData:cellColorLabelsData,hideTopLabels:hideTopLabels,hideLeftLabels:hideLeftLabels,transpose:transpose}),new HeatmapCompositeTextLayer({axis:'corner',id:'cellColorLabelCompositeTextLayer',targetX:targetX,targetY:targetY,scaleFactor:scaleFactor,axisLeftLabelData:axisLeftLabelData,matrixTop:matrixTop,height:height,matrixHeight:matrixHeight,cellHeight:cellHeight,cellWidth:cellWidth,axisTopLabelData:axisTopLabelData,matrixLeft:matrixLeft,width:width,matrixWidth:matrixWidth,viewHeight:viewHeight,viewWidth:viewWidth,theme:theme,axisLeftTitle:axisLeftTitle,axisTopTitle:axisTopTitle,axisOffsetLeft:axisOffsetLeft,axisOffsetTop:axisOffsetTop,cellColorLabelsData:cellColorLabelsData,hideTopLabels:hideTopLabels,hideLeftLabels:hideLeftLabels,transpose:transpose})];useEffect(function(){setNumCellColorTracks(cellColorLabels.length);},[cellColorLabels]);// Create the left color bar with a BitmapLayer.\n// TODO: find a way to do aggregation for this as well.\nvar cellColorsTilesList=useMemo(function(){if(!cellColors){return null;}var cellId;var offset;var color;var rowI;var cellOrdering=transpose?axisTopLabels:axisLeftLabels;var colorBarTileWidthPx=transpose?TILE_SIZE:1;var colorBarTileHeightPx=transpose?1:TILE_SIZE;var result=range(numCellColorTracks).map(function(track){var trackResult=range(transpose?xTiles:yTiles).map(function(i){var tileData=new Uint8ClampedArray(TILE_SIZE*1*4);range(TILE_SIZE).forEach(function(tileY){rowI=i*TILE_SIZE+tileY;// the row / cell index\nif(rowI<cellOrdering.length){cellId=cellOrdering[rowI];color=cellColors.get(cellId);offset=(transpose?tileY:TILE_SIZE-tileY-1)*4;if(color){var _color$track;// allows color to be [R, G, B] or array of arrays of [R, G, B]\nif(typeof color[0]!=='number')color=(_color$track=color[track])!==null&&_color$track!==void 0?_color$track:getDefaultColor(theme);var _color=color,_color2=_slicedToArray(_color,3),rValue=_color2[0],gValue=_color2[1],bValue=_color2[2];tileData[offset+0]=rValue;tileData[offset+1]=gValue;tileData[offset+2]=bValue;tileData[offset+3]=255;}}});return new ImageData(tileData,colorBarTileWidthPx,colorBarTileHeightPx);});return trackResult;});return result;},[cellColors,transpose,axisTopLabels,axisLeftLabels,numCellColorTracks,xTiles,yTiles,theme]);var cellColorsLayersList=useMemo(function(){if(!cellColorsTilesList){return[];}var result=cellColorsTilesList.map(function(cellColorsTiles,track){return cellColorsTiles?cellColorsTiles.map(function(tile,i){return new PixelatedBitmapLayer({id:\"\".concat(transpose?'colorsTopLayer':'colorsLeftLayer',\"-\").concat(track,\"-\").concat(i,\"-\").concat(uuidv4()),image:tile,bounds:transpose?[matrixLeft+i*tileWidth,-matrixHeight/2,matrixLeft+(i+1)*tileWidth,matrixHeight/2]:[-matrixWidth/2,matrixTop+i*tileHeight,matrixWidth/2,matrixTop+(i+1)*tileHeight]});}):[];});return result;},[cellColorsTilesList,matrixTop,matrixLeft,matrixHeight,matrixWidth,tileWidth,tileHeight,transpose]);var layers=(_heatmapLayers$concat=heatmapLayers.concat(textLayers)).concat.apply(_heatmapLayers$concat,_toConsumableArray(cellColorsLayersList));// Set up the onHover function.\nfunction onHover(info,event){if(!expression){return;}var _event$offsetCenter=event.offsetCenter,mouseX=_event$offsetCenter.x,mouseY=_event$offsetCenter.y;var _mouseToCellColorPosi=mouseToCellColorPosition(mouseX,mouseY,{axisOffsetTop:axisOffsetTop,axisOffsetLeft:axisOffsetLeft,offsetTop:offsetTop,offsetLeft:offsetLeft,colorBarSize:COLOR_BAR_SIZE,numCellColorTracks:numCellColorTracks,transpose:transpose,targetX:targetX,targetY:targetY,scaleFactor:scaleFactor,matrixWidth:matrixWidth,matrixHeight:matrixHeight,numRows:height,numCols:width}),_mouseToCellColorPosi2=_slicedToArray(_mouseToCellColorPosi,2),trackColI=_mouseToCellColorPosi2[0],trackI=_mouseToCellColorPosi2[1];if(trackI===null||trackColI===null){setTrackHighlight(null);}else{var _obsI=expression.rows.indexOf(axisTopLabels[trackColI]);var cellIndex=expression.rows[_obsI];setTrackHighlight([cellIndex,trackI,mouseX,mouseY]);}var _mouseToHeatmapPositi=mouseToHeatmapPosition(mouseX,mouseY,{offsetLeft:offsetLeft,offsetTop:offsetTop,targetX:targetX,targetY:targetY,scaleFactor:scaleFactor,matrixWidth:matrixWidth,matrixHeight:matrixHeight,numRows:height,numCols:width}),_mouseToHeatmapPositi2=_slicedToArray(_mouseToHeatmapPositi,2),colI=_mouseToHeatmapPositi2[0],rowI=_mouseToHeatmapPositi2[1];if(colI===null){if(transpose){setCellHighlight(null);}else{setGeneHighlight(null);}}if(rowI===null){if(transpose){setGeneHighlight(null);}else{setCellHighlight(null);}}var obsI=expression.rows.indexOf(transpose?axisTopLabels[colI]:axisLeftLabels[rowI]);var varI=expression.cols.indexOf(transpose?axisLeftLabels[rowI]:axisTopLabels[colI]);var obsId=expression.rows[obsI];var varId=expression.cols[varI];if(setComponentHover){setComponentHover();}setCellHighlight(obsId||null);setGeneHighlight(varId||null);}var cellColorsViews=useMemo(function(){var result=range(numCellColorTracks).map(function(track){var view;if(transpose){view=new OrthographicView({id:\"colorsTop-\".concat(track),controller:true,x:offsetLeft,y:axisOffsetTop+track*COLOR_BAR_SIZE,width:matrixWidth,height:COLOR_BAR_SIZE-AXIS_MARGIN});}else{view=new OrthographicView({id:\"colorsLeft-\".concat(track),controller:true,x:axisOffsetLeft+track*COLOR_BAR_SIZE,y:offsetTop,width:COLOR_BAR_SIZE-AXIS_MARGIN,height:matrixHeight});}return view;});return result;},[numCellColorTracks,transpose,offsetLeft,axisOffsetTop,matrixWidth,axisOffsetLeft,offsetTop,matrixHeight]);return/*#__PURE__*/React.createElement(DeckGL,{id:\"deckgl-overlay-\".concat(uuid),ref:deckRef,onWebGLInitialized:setGlContext,views:[// Note that there are multiple views here,\n// but only one viewState.\nnew OrthographicView({id:'heatmap',controller:true,x:offsetLeft,y:offsetTop,width:matrixWidth,height:matrixHeight}),new OrthographicView({id:'axisLeft',controller:false,x:0,y:offsetTop,width:axisOffsetLeft,height:matrixHeight}),new OrthographicView({id:'axisTop',controller:false,x:offsetLeft,y:0,width:matrixWidth,height:axisOffsetTop}),new OrthographicView({id:'cellColorLabel',controller:false,x:transpose?0:axisOffsetLeft,y:transpose?axisOffsetTop:0,width:transpose?axisOffsetLeft:COLOR_BAR_SIZE*numCellColorTracks,height:transpose?COLOR_BAR_SIZE*numCellColorTracks:axisOffsetTop})].concat(_toConsumableArray(cellColorsViews)),layers:layers,layerFilter:layerFilter,getCursor:function getCursor(interactionState){return interactionState.isDragging?'grabbing':'default';},glOptions:DEFAULT_GL_OPTIONS,onViewStateChange:onViewStateChange,viewState:viewState,onHover:onHover,useDevicePixels:useDevicePixels});});export default Heatmap;","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/heatmap/Heatmap.js"],"names":["React","useRef","useState","useCallback","useMemo","useEffect","useReducer","forwardRef","uuidv4","DeckGL","GL","Texture2D","OrthographicView","range","clamp","isEqual","getLongestString","HeatmapCompositeTextLayer","PixelatedBitmapLayer","PaddedExpressionHeatmapBitmapLayer","HeatmapBitmapLayer","DEFAULT_GL_OPTIONS","createDefaultUpdateCellsHover","createDefaultUpdateGenesHover","createDefaultUpdateTracksHover","createDefaultUpdateViewInfo","copyUint8Array","getDefaultColor","layerFilter","getAxisSizes","mouseToHeatmapPosition","heatmapToMousePosition","mouseToCellColorPosition","TILE_SIZE","MAX_ROW_AGG","MIN_ROW_AGG","COLOR_BAR_SIZE","AXIS_MARGIN","DATA_TEXTURE_SIZE","PIXELATED_TEXTURE_PARAMETERS","HeatmapWorkerPool","paddedExpressionContainer","Uint8Array","shouldUsePaddedImplementation","dataLength","Heatmap","props","deckRef","uuid","theme","rawViewState","viewState","setViewState","viewWidth","width","viewHeight","height","expression","expressionMatrix","cellColors","cellColorLabels","colormap","colormapRange","clearPleaseWait","setComponentHover","setCellHighlight","setGeneHighlight","setTrackHighlight","updateViewInfo","setIsRendering","transpose","variablesTitle","observationsTitle","variablesDashes","observationsDashes","useDevicePixels","hideObservationLabels","hideVariableLabels","target","minZoom","axisLeftTitle","axisTopTitle","workerPool","tilesRef","dataRef","axisLeftLabels","setAxisLeftLabels","axisTopLabels","setAxisTopLabels","numCellColorTracks","setNumCellColorTracks","i","tileIteration","incTileIteration","backlog","setBacklog","matrix","length","current","newCellOrdering","size","rows","Array","from","keys","oldCellOrdering","cols","longestCellLabel","longestGeneLabel","expressionRowLookUp","lookUp","Map","forEach","cell","j","set","axisOffsetLeft","axisOffsetTop","gl","setGlContext","offsetTop","offsetLeft","matrixWidth","matrixHeight","matrixLeft","matrixRight","matrixTop","matrixBottom","xTiles","Math","ceil","yTiles","widthRatio","heightRatio","tileWidth","tileHeight","scaleFactor","zoom","cellHeight","cellWidth","aggSizeX","log2","aggSizeY","targetX","targetY","project","cellId","geneId","colI","indexOf","rowI","numRows","numCols","onViewStateChange","nextViewState","nextZoom","nextScaleFactor","minTargetX","maxTargetX","minTargetY","maxTargetY","nextTarget","prev","curr","buffer","byteLength","promises","map","process","tileI","tileJ","tileSize","cellOrdering","data","slice","Promise","all","flat","tiles","tile","currWork","currIndex","paddedExpressions","newIndex","cellOrderingIndex","cellIndex","get","geneIndex","index","mipmaps","parameters","format","LUMINANCE","dataFormat","type","UNSIGNED_BYTE","heatmapLayers","usePaddedExpressions","getLayer","id","image","bounds","numXTiles","numYTiles","origDataSize","colorScaleLo","colorScaleHi","updateTriggers","layers","floor","axisLeftDashes","axisTopDashes","axisTopLabelData","d","axisLeftLabelData","cellColorLabelsData","hideTopLabels","hideLeftLabels","textLayers","axis","cellColorsTilesList","offset","color","colorBarTileWidthPx","colorBarTileHeightPx","result","track","trackResult","tileData","Uint8ClampedArray","tileY","rValue","gValue","bValue","ImageData","cellColorsLayersList","cellColorsTiles","concat","onHover","info","event","offsetCenter","mouseX","x","mouseY","y","colorBarSize","trackColI","trackI","obsI","varI","obsId","varId","cellColorsViews","view","controller","interactionState","isDragging"],"mappings":"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","sourcesContent":["import React, {\n  useRef, useState, useCallback, useMemo, useEffect, useReducer, forwardRef,\n} from 'react';\nimport uuidv4 from 'uuid/v4';\nimport DeckGL from 'deck.gl';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport GL from '@luma.gl/constants';\nimport { Texture2D } from '@luma.gl/core';\nimport { OrthographicView } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport range from 'lodash/range';\nimport clamp from 'lodash/clamp';\nimport isEqual from 'lodash/isEqual';\nimport { getLongestString } from '../../utils';\nimport HeatmapCompositeTextLayer from '../../layers/HeatmapCompositeTextLayer';\nimport PixelatedBitmapLayer from '../../layers/PixelatedBitmapLayer';\nimport PaddedExpressionHeatmapBitmapLayer from '../../layers/PaddedExpressionHeatmapBitmapLayer';\nimport HeatmapBitmapLayer from '../../layers/HeatmapBitmapLayer';\nimport {\n  DEFAULT_GL_OPTIONS,\n  createDefaultUpdateCellsHover,\n  createDefaultUpdateGenesHover,\n  createDefaultUpdateTracksHover,\n  createDefaultUpdateViewInfo,\n  copyUint8Array,\n  getDefaultColor,\n} from '../utils';\nimport {\n  layerFilter,\n  getAxisSizes,\n  mouseToHeatmapPosition,\n  heatmapToMousePosition,\n  mouseToCellColorPosition,\n} from './utils';\nimport {\n  TILE_SIZE, MAX_ROW_AGG, MIN_ROW_AGG,\n  COLOR_BAR_SIZE,\n  AXIS_MARGIN,\n  DATA_TEXTURE_SIZE,\n  PIXELATED_TEXTURE_PARAMETERS,\n} from '../../layers/heatmap-constants';\nimport HeatmapWorkerPool from './HeatmapWorkerPool';\n// Only allocate the memory once for the container\nconst paddedExpressionContainer = new Uint8Array(DATA_TEXTURE_SIZE * DATA_TEXTURE_SIZE);\n\n/**\n * Should the \"padded\" implementation\n * be used? Only works if the number of heatmap values is\n * <=  4096^2 = ~16 million.\n * @param {number|null} dataLength The number of heatmap values.\n * @returns {boolean} Whether the more efficient implementation should be used.\n */\nfunction shouldUsePaddedImplementation(dataLength) {\n  return dataLength <= DATA_TEXTURE_SIZE ** 2;\n}\n\n/**\n * A heatmap component for cell x gene matrices.\n * @param {object} props\n * @param {string} props.uuid The uuid of this component,\n * used by tooltips to determine whether to render a tooltip or\n * a crosshair.\n * @param {string} props.theme The current theme name.\n * @param {object} props.viewState The viewState for\n * DeckGL.\n * @param {function} props.setViewState The viewState setter\n * for DeckGL.\n * @param {number} props.width The width of the canvas.\n * @param {number} props.height The height of the canvas.\n * @param {object} props.expressionMatrix An object { rows, cols, matrix },\n * where matrix is a flat Uint8Array, rows is a list of cell ID strings,\n * and cols is a list of gene ID strings.\n * @param {Map} props.cellColors Map of cell ID to color. Optional.\n * If defined, the key ordering is used to order the cell axis of the heatmap.\n * @param {array} props.cellColorLabels array of labels to place beside cell color\n * tracks. Only works for transpose=true.\n * @param {function} props.clearPleaseWait The clear please wait callback,\n * called when the expression matrix has loaded (is not null).\n * @param {function} props.setCellHighlight Callback function called on\n * hover with the cell ID. Optional.\n * @param {function} props.setGeneHighlight Callback function called on\n * hover with the gene ID. Optional.\n * @param {function} props.updateViewInfo Callback function that gets called with an\n * object { uuid, project() } where project is a function that maps (cellId, geneId)\n * to canvas (x,y) coordinates. Used to show tooltips. Optional.\n * @param {boolean} props.transpose By default, false.\n * @param {string} props.variablesTitle By default, 'Genes'.\n * @param {string} props.observationsTitle By default, 'Cells'.\n * @param {number} props.useDevicePixels By default, 1. Higher values\n * e.g. 2 increase text sharpness.\n * @param {boolean} props.hideObservationLabels By default false.\n * @param {boolean} props.hideVariableLabels By default false.\n * @param {string} props.colormap The name of the colormap function to use.\n * @param {array} props.colormapRange A tuple [lower, upper] to adjust the color scale.\n * @param {function} props.setColormapRange The setter function for colormapRange.\n */\nconst Heatmap = forwardRef((props, deckRef) => {\n  const {\n    uuid,\n    theme,\n    viewState: rawViewState,\n    setViewState,\n    width: viewWidth,\n    height: viewHeight,\n    expressionMatrix: expression,\n    cellColors,\n    cellColorLabels = [''],\n    colormap,\n    colormapRange,\n    clearPleaseWait,\n    setComponentHover,\n    setCellHighlight = createDefaultUpdateCellsHover('Heatmap'),\n    setGeneHighlight = createDefaultUpdateGenesHover('Heatmap'),\n    setTrackHighlight = createDefaultUpdateTracksHover('Heatmap'),\n    updateViewInfo = createDefaultUpdateViewInfo('Heatmap'),\n    setIsRendering = () => {},\n    transpose = false,\n    variablesTitle = 'Genes',\n    observationsTitle = 'Cells',\n    variablesDashes = true,\n    observationsDashes = true,\n    useDevicePixels = 1,\n    hideObservationLabels = false,\n    hideVariableLabels = false,\n  } = props;\n\n  const viewState = {\n    ...rawViewState,\n    target: (transpose ? [rawViewState.target[1], rawViewState.target[0]] : rawViewState.target),\n    minZoom: 0,\n  };\n\n  const axisLeftTitle = (transpose ? variablesTitle : observationsTitle);\n  const axisTopTitle = (transpose ? observationsTitle : variablesTitle);\n\n  const workerPool = useMemo(() => new HeatmapWorkerPool(), []);\n\n  useEffect(() => {\n    if (clearPleaseWait && expression) {\n      clearPleaseWait('expression-matrix');\n    }\n  }, [clearPleaseWait, expression]);\n\n  const tilesRef = useRef();\n  const dataRef = useRef();\n  const [axisLeftLabels, setAxisLeftLabels] = useState([]);\n  const [axisTopLabels, setAxisTopLabels] = useState([]);\n  const [numCellColorTracks, setNumCellColorTracks] = useState([]);\n\n\n  // Since we are storing the tile data in a ref,\n  // and updating it asynchronously when the worker finishes,\n  // we need to tie it to a piece of state through this iteration value.\n  const [tileIteration, incTileIteration] = useReducer(i => i + 1, 0);\n\n  // We need to keep a backlog of the tasks for the worker thread,\n  // since the array buffer can only be held by one thread at a time.\n  const [backlog, setBacklog] = useState([]);\n\n  // Store a reference to the matrix Uint8Array in the dataRef,\n  // since we need to access its array buffer to transfer\n  // it back and forth from the worker thread.\n  useEffect(() => {\n    // Store the expression matrix Uint8Array in the dataRef.\n    if (expression && expression.matrix\n      && !shouldUsePaddedImplementation(expression.matrix.length)\n    ) {\n      dataRef.current = copyUint8Array(expression.matrix);\n    }\n  }, [dataRef, expression]);\n\n  // Check if the ordering of axis labels needs to be changed,\n  // for example if the cells \"selected\" (technically just colored)\n  // have changed.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n\n    const newCellOrdering = (!cellColors || cellColors.size === 0\n      ? expression.rows\n      : Array.from(cellColors.keys())\n    );\n\n    const oldCellOrdering = (transpose ? axisTopLabels : axisLeftLabels);\n\n    if (!isEqual(oldCellOrdering, newCellOrdering)) {\n      if (transpose) {\n        setAxisTopLabels(newCellOrdering);\n      } else {\n        setAxisLeftLabels(newCellOrdering);\n      }\n    }\n  }, [expression, cellColors, axisTopLabels, axisLeftLabels, transpose]);\n\n  // Set the genes ordering.\n  useEffect(() => {\n    if (!expression) {\n      return;\n    }\n    if (transpose) {\n      setAxisLeftLabels(expression.cols);\n    } else {\n      setAxisTopLabels(expression.cols);\n    }\n  }, [expression, transpose]);\n\n  const [longestCellLabel, longestGeneLabel] = useMemo(() => {\n    if (!expression) {\n      return ['', ''];\n    }\n\n    return [\n      getLongestString(expression.rows),\n      getLongestString([...expression.cols, ...cellColorLabels]),\n    ];\n  }, [expression, cellColorLabels]);\n\n  // Creating a look up dictionary once is faster than calling indexOf many times\n  // i.e when cell ordering changes.\n  const expressionRowLookUp = useMemo(() => {\n    const lookUp = new Map();\n    if (expression?.rows) {\n      // eslint-disable-next-line no-return-assign\n      expression.rows.forEach((cell, j) => (lookUp.set(cell, j)));\n    }\n    return lookUp;\n  }, [expression]);\n\n  const width = axisTopLabels.length;\n  const height = axisLeftLabels.length;\n\n  const [axisOffsetLeft, axisOffsetTop] = getAxisSizes(\n    transpose, longestGeneLabel, longestCellLabel,\n    hideObservationLabels, hideVariableLabels,\n  );\n  const [gl, setGlContext] = useState(null);\n\n  const offsetTop = axisOffsetTop + COLOR_BAR_SIZE * (transpose ? numCellColorTracks : 0);\n  const offsetLeft = axisOffsetLeft + COLOR_BAR_SIZE * (transpose ? 0 : numCellColorTracks);\n\n  const matrixWidth = viewWidth - offsetLeft;\n  const matrixHeight = viewHeight - offsetTop;\n\n  const matrixLeft = -matrixWidth / 2;\n  const matrixRight = matrixWidth / 2;\n  const matrixTop = -matrixHeight / 2;\n  const matrixBottom = matrixHeight / 2;\n\n  const xTiles = Math.ceil(width / TILE_SIZE);\n  const yTiles = Math.ceil(height / TILE_SIZE);\n\n  const widthRatio = 1 - (TILE_SIZE - (width % TILE_SIZE)) / (xTiles * TILE_SIZE);\n  const heightRatio = 1 - (TILE_SIZE - (height % TILE_SIZE)) / (yTiles * TILE_SIZE);\n\n  const tileWidth = (matrixWidth / widthRatio) / (xTiles);\n  const tileHeight = (matrixHeight / heightRatio) / (yTiles);\n\n  const scaleFactor = 2 ** viewState.zoom;\n  const cellHeight = (matrixHeight * scaleFactor) / height;\n  const cellWidth = (matrixWidth * scaleFactor) / width;\n\n  // Get power of 2 between 1 and 16,\n  // for number of cells to aggregate together in each direction.\n  const aggSizeX = clamp(2 ** Math.ceil(Math.log2(1 / cellWidth)), MIN_ROW_AGG, MAX_ROW_AGG);\n  const aggSizeY = clamp(2 ** Math.ceil(Math.log2(1 / cellHeight)), MIN_ROW_AGG, MAX_ROW_AGG);\n\n  const [targetX, targetY] = viewState.target;\n\n  // Emit the viewInfo object on viewState updates\n  // (used by tooltips / crosshair elements).\n  useEffect(() => {\n    updateViewInfo({\n      uuid,\n      project: (cellId, geneId) => {\n        const colI = transpose ? axisTopLabels.indexOf(cellId) : axisTopLabels.indexOf(geneId);\n        const rowI = transpose ? axisLeftLabels.indexOf(geneId) : axisLeftLabels.indexOf(cellId);\n        return heatmapToMousePosition(\n          colI, rowI, {\n            offsetLeft,\n            offsetTop,\n            targetX: viewState.target[0],\n            targetY: viewState.target[1],\n            scaleFactor,\n            matrixWidth,\n            matrixHeight,\n            numRows: height,\n            numCols: width,\n          },\n        );\n      },\n    });\n  }, [uuid, updateViewInfo, transpose, axisTopLabels, axisLeftLabels, offsetLeft,\n    offsetTop, viewState, scaleFactor, matrixWidth, matrixHeight, height, width]);\n\n\n  // Listen for viewState changes.\n  // Do not allow the user to zoom and pan outside of the initial window.\n  const onViewStateChange = useCallback(({ viewState: nextViewState }) => {\n    const { zoom: nextZoom } = nextViewState;\n    const nextScaleFactor = 2 ** nextZoom;\n\n    const minTargetX = nextZoom === 0 ? 0 : -(matrixRight - (matrixRight / nextScaleFactor));\n    const maxTargetX = -1 * minTargetX;\n\n    const minTargetY = nextZoom === 0 ? 0 : -(matrixBottom - (matrixBottom / nextScaleFactor));\n    const maxTargetY = -1 * minTargetY;\n\n    // Manipulate view state if necessary to keep the user in the window.\n    const nextTarget = [\n      clamp(nextViewState.target[0], minTargetX, maxTargetX),\n      clamp(nextViewState.target[1], minTargetY, maxTargetY),\n    ];\n\n    setViewState({\n      zoom: nextZoom,\n      target: (transpose ? [nextTarget[1], nextTarget[0]] : nextTarget),\n    });\n  }, [matrixRight, matrixBottom, transpose, setViewState]);\n\n  // If `expression` or `cellOrdering` have changed,\n  // then new tiles need to be generated,\n  // so add a new task to the backlog.\n  useEffect(() => {\n    if (!expression || !expression.matrix || expression.matrix.length < DATA_TEXTURE_SIZE ** 2) {\n      return;\n    }\n    // Use a uuid to give the task a unique ID,\n    // to help identify where in the list it is located\n    // after the worker thread asynchronously sends the data back\n    // to this thread.\n    if (\n      axisTopLabels && axisLeftLabels && xTiles && yTiles\n    ) {\n      setBacklog(prev => [...prev, uuidv4()]);\n    }\n  }, [dataRef, expression, axisTopLabels, axisLeftLabels, xTiles, yTiles]);\n\n  // When the backlog has updated, a new worker job can be submitted if:\n  // - the backlog has length >= 1 (at least one job is waiting), and\n  // - buffer.byteLength is not zero, so the worker does not currently \"own\" the buffer.\n  useEffect(() => {\n    if (backlog.length < 1 || shouldUsePaddedImplementation(dataRef.current.length)) {\n      return;\n    }\n    const curr = backlog[backlog.length - 1];\n    if (dataRef.current\n      && dataRef.current.buffer.byteLength && expressionRowLookUp.size > 0\n      && !shouldUsePaddedImplementation(dataRef.current.length)) {\n      const { cols, matrix } = expression;\n      const promises = range(yTiles).map(i => range(xTiles).map(async j => workerPool.process({\n        curr,\n        tileI: i,\n        tileJ: j,\n        tileSize: TILE_SIZE,\n        cellOrdering: transpose ? axisTopLabels : axisLeftLabels,\n        cols,\n        transpose,\n        data: matrix.buffer.slice(),\n        expressionRowLookUp,\n      })));\n      const process = async () => {\n        const tiles = await Promise.all(promises.flat());\n        tilesRef.current = tiles.map(i => i.tile);\n        incTileIteration();\n        dataRef.current = new Uint8Array(tiles[0].buffer);\n        const { curr: currWork } = tiles[0];\n        setBacklog((prev) => {\n          const currIndex = prev.indexOf(currWork);\n          return prev.slice(currIndex + 1, prev.length);\n        });\n      };\n      process();\n    }\n  }, [axisLeftLabels, axisTopLabels, backlog, expression, transpose,\n    xTiles, yTiles, workerPool, expressionRowLookUp]);\n\n  useEffect(() => {\n    setIsRendering(backlog.length > 0);\n  }, [backlog, setIsRendering]);\n\n  // Create the padded expression matrix for holding data which can then be bound to the GPU.\n  const paddedExpressions = useMemo(() => {\n    const cellOrdering = transpose ? axisTopLabels : axisLeftLabels;\n    if (expression?.matrix && cellOrdering.length\n      && gl && shouldUsePaddedImplementation(expression.matrix.length)) {\n      let newIndex = 0;\n      for (\n        let cellOrderingIndex = 0;\n        cellOrderingIndex < cellOrdering.length;\n        cellOrderingIndex += 1\n      ) {\n        const cell = cellOrdering[cellOrderingIndex];\n        newIndex = transpose ? cellOrderingIndex : newIndex;\n        const cellIndex = expressionRowLookUp.get(cell);\n        for (\n          let geneIndex = 0;\n          geneIndex < expression.cols.length;\n          geneIndex += 1\n        ) {\n          const index = cellIndex * expression.cols.length + geneIndex;\n          paddedExpressionContainer[\n            newIndex % (DATA_TEXTURE_SIZE * DATA_TEXTURE_SIZE)\n          ] = expression.matrix[index];\n          newIndex = transpose ? newIndex + cellOrdering.length : newIndex + 1;\n        }\n      }\n    }\n    return gl ? new Texture2D(gl, {\n      data: paddedExpressionContainer,\n      mipmaps: false,\n      parameters: PIXELATED_TEXTURE_PARAMETERS,\n      // Each color contains a single luminance value.\n      // When sampled, rgb are all set to this luminance, alpha is 1.0.\n      // Reference: https://luma.gl/docs/api-reference/webgl/texture#texture-formats\n      format: GL.LUMINANCE,\n      dataFormat: GL.LUMINANCE,\n      type: GL.UNSIGNED_BYTE,\n      width: DATA_TEXTURE_SIZE,\n      height: DATA_TEXTURE_SIZE,\n    }) : paddedExpressionContainer;\n  }, [\n    transpose,\n    axisTopLabels,\n    axisLeftLabels,\n    expression,\n    expressionRowLookUp,\n    gl,\n  ]);\n\n  // Update the heatmap tiles if:\n  // - new tiles are available (`tileIteration` has changed), or\n  // - the matrix bounds have changed, or\n  // - the `aggSizeX` or `aggSizeY` have changed, or\n  // - the cell ordering has changed.\n  const heatmapLayers = useMemo(() => {\n    const usePaddedExpressions = expression?.matrix\n      && shouldUsePaddedImplementation(expression?.matrix.length);\n    if ((!tilesRef.current || backlog.length) && !usePaddedExpressions) {\n      return [];\n    }\n    if (usePaddedExpressions) {\n      const cellOrdering = transpose ? axisTopLabels : axisLeftLabels;\n      // eslint-disable-next-line no-inner-declarations, no-shadow\n      function getLayer(i, j) {\n        const { cols } = expression;\n        return new PaddedExpressionHeatmapBitmapLayer({\n          id: `heatmapLayer-${i}-${j}`,\n          image: paddedExpressions,\n          bounds: [\n            matrixLeft + j * tileWidth,\n            matrixTop + i * tileHeight,\n            matrixLeft + (j + 1) * tileWidth,\n            matrixTop + (i + 1) * tileHeight,\n          ],\n          tileI: i,\n          tileJ: j,\n          numXTiles: xTiles,\n          numYTiles: yTiles,\n          origDataSize: transpose\n            ? [cols.length, cellOrdering.length]\n            : [cellOrdering.length, cols.length],\n          aggSizeX,\n          aggSizeY,\n          colormap,\n          colorScaleLo: colormapRange[0],\n          colorScaleHi: colormapRange[1],\n          updateTriggers: {\n            image: [axisLeftLabels, axisTopLabels],\n            bounds: [tileHeight, tileWidth],\n          },\n        });\n      }\n      const layers = range(yTiles * xTiles).map(\n        index => getLayer(Math.floor(index / xTiles), index % xTiles),\n      );\n      return layers;\n    }\n    function getLayer(i, j, tile) {\n      return new HeatmapBitmapLayer({\n        id: `heatmapLayer-${tileIteration}-${i}-${j}`,\n        image: tile,\n        bounds: [\n          matrixLeft + j * tileWidth,\n          matrixTop + i * tileHeight,\n          matrixLeft + (j + 1) * tileWidth,\n          matrixTop + (i + 1) * tileHeight,\n        ],\n        aggSizeX,\n        aggSizeY,\n        colormap,\n        colorScaleLo: colormapRange[0],\n        colorScaleHi: colormapRange[1],\n        updateTriggers: {\n          image: [axisLeftLabels, axisTopLabels],\n          bounds: [tileHeight, tileWidth],\n        },\n      });\n    }\n    const layers = tilesRef.current.map(\n      (tile, index) => getLayer(Math.floor(index / xTiles), index % xTiles, tile),\n    );\n    return layers;\n  }, [expression, backlog.length, transpose, axisTopLabels, axisLeftLabels, yTiles, xTiles,\n    paddedExpressions, matrixLeft, tileWidth, matrixTop, tileHeight,\n    aggSizeX, aggSizeY, colormap, colormapRange, tileIteration]);\n  const axisLeftDashes = (transpose ? variablesDashes : observationsDashes);\n  const axisTopDashes = (transpose ? observationsDashes : variablesDashes);\n\n  // Map cell and gene names to arrays with indices,\n  // to prepare to render the names in TextLayers.\n  const axisTopLabelData = useMemo(() => axisTopLabels.map((d, i) => [i, (axisTopDashes ? `- ${d}` : d)]), [axisTopLabels, axisTopDashes]);\n  const axisLeftLabelData = useMemo(() => axisLeftLabels.map((d, i) => [i, (axisLeftDashes ? `${d} -` : d)]), [axisLeftLabels, axisLeftDashes]);\n  const cellColorLabelsData = useMemo(() => cellColorLabels.map((d, i) => [i, d && (transpose ? `${d} -` : `- ${d}`)]), [cellColorLabels, transpose]);\n\n  const hideTopLabels = (transpose ? hideObservationLabels : hideVariableLabels);\n  const hideLeftLabels = (transpose ? hideVariableLabels : hideObservationLabels);\n\n  // Generate the axis label, axis title, and loading indicator text layers.\n  const textLayers = [\n    new HeatmapCompositeTextLayer({\n      axis: 'left',\n      id: 'axisLeftCompositeTextLayer',\n      targetX,\n      targetY,\n      scaleFactor,\n      axisLeftLabelData,\n      matrixTop,\n      height,\n      matrixHeight,\n      cellHeight,\n      cellWidth,\n      axisTopLabelData,\n      matrixLeft,\n      width,\n      matrixWidth,\n      viewHeight,\n      viewWidth,\n      theme,\n      axisLeftTitle,\n      axisTopTitle,\n      axisOffsetLeft,\n      axisOffsetTop,\n      hideTopLabels,\n      hideLeftLabels,\n      transpose,\n    }),\n    new HeatmapCompositeTextLayer({\n      axis: 'top',\n      id: 'axisTopCompositeTextLayer',\n      targetX,\n      targetY,\n      scaleFactor,\n      axisLeftLabelData,\n      matrixTop,\n      height,\n      matrixHeight,\n      cellHeight,\n      cellWidth,\n      axisTopLabelData,\n      matrixLeft,\n      width,\n      matrixWidth,\n      viewHeight,\n      viewWidth,\n      theme,\n      axisLeftTitle,\n      axisTopTitle,\n      axisOffsetLeft,\n      axisOffsetTop,\n      cellColorLabelsData,\n      hideTopLabels,\n      hideLeftLabels,\n      transpose,\n    }),\n    new HeatmapCompositeTextLayer({\n      axis: 'corner',\n      id: 'cellColorLabelCompositeTextLayer',\n      targetX,\n      targetY,\n      scaleFactor,\n      axisLeftLabelData,\n      matrixTop,\n      height,\n      matrixHeight,\n      cellHeight,\n      cellWidth,\n      axisTopLabelData,\n      matrixLeft,\n      width,\n      matrixWidth,\n      viewHeight,\n      viewWidth,\n      theme,\n      axisLeftTitle,\n      axisTopTitle,\n      axisOffsetLeft,\n      axisOffsetTop,\n      cellColorLabelsData,\n      hideTopLabels,\n      hideLeftLabels,\n      transpose,\n    }),\n  ];\n\n  useEffect(() => {\n    setNumCellColorTracks(cellColorLabels.length);\n  }, [cellColorLabels]);\n\n\n  // Create the left color bar with a BitmapLayer.\n  // TODO: find a way to do aggregation for this as well.\n  const cellColorsTilesList = useMemo(() => {\n    if (!cellColors) {\n      return null;\n    }\n\n    let cellId;\n    let offset;\n    let color;\n    let rowI;\n\n    const cellOrdering = (transpose ? axisTopLabels : axisLeftLabels);\n    const colorBarTileWidthPx = (transpose ? TILE_SIZE : 1);\n    const colorBarTileHeightPx = (transpose ? 1 : TILE_SIZE);\n\n    const result = range(numCellColorTracks).map((track) => {\n      const trackResult = range((transpose ? xTiles : yTiles)).map((i) => {\n        const tileData = new Uint8ClampedArray(TILE_SIZE * 1 * 4);\n\n        range(TILE_SIZE).forEach((tileY) => {\n          rowI = (i * TILE_SIZE) + tileY; // the row / cell index\n          if (rowI < cellOrdering.length) {\n            cellId = cellOrdering[rowI];\n            color = cellColors.get(cellId);\n\n            offset = (transpose ? tileY : (TILE_SIZE - tileY - 1)) * 4;\n\n            if (color) {\n              // allows color to be [R, G, B] or array of arrays of [R, G, B]\n              if (typeof color[0] !== 'number') color = color[track] ?? getDefaultColor(theme);\n\n              const [rValue, gValue, bValue] = color;\n              tileData[offset + 0] = rValue;\n              tileData[offset + 1] = gValue;\n              tileData[offset + 2] = bValue;\n              tileData[offset + 3] = 255;\n            }\n          }\n        });\n\n        return new ImageData(tileData, colorBarTileWidthPx, colorBarTileHeightPx);\n      });\n\n      return trackResult;\n    });\n\n    return result;\n  }, [cellColors, transpose, axisTopLabels, axisLeftLabels,\n    numCellColorTracks, xTiles, yTiles, theme]);\n\n\n  const cellColorsLayersList = useMemo(() => {\n    if (!cellColorsTilesList) {\n      return [];\n    }\n\n    const result = cellColorsTilesList.map((cellColorsTiles, track) => (cellColorsTiles\n      ? cellColorsTiles.map((tile, i) => new PixelatedBitmapLayer({\n        id: `${(transpose ? 'colorsTopLayer' : 'colorsLeftLayer')}-${track}-${i}-${uuidv4()}`,\n        image: tile,\n        bounds: (transpose ? [\n          matrixLeft + i * tileWidth,\n          -matrixHeight / 2,\n          matrixLeft + (i + 1) * tileWidth,\n          matrixHeight / 2,\n        ] : [\n          -matrixWidth / 2,\n          matrixTop + i * tileHeight,\n          matrixWidth / 2,\n          matrixTop + (i + 1) * tileHeight,\n        ]),\n      }))\n      : []));\n\n    return (result);\n  }, [cellColorsTilesList, matrixTop, matrixLeft, matrixHeight,\n    matrixWidth, tileWidth, tileHeight, transpose]);\n\n\n  const layers = heatmapLayers\n    .concat(textLayers)\n    .concat(...cellColorsLayersList);\n\n  // Set up the onHover function.\n  function onHover(info, event) {\n    if (!expression) {\n      return;\n    }\n\n    const { x: mouseX, y: mouseY } = event.offsetCenter;\n\n    const [trackColI, trackI] = mouseToCellColorPosition(mouseX, mouseY, {\n      axisOffsetTop,\n      axisOffsetLeft,\n      offsetTop,\n      offsetLeft,\n      colorBarSize: COLOR_BAR_SIZE,\n      numCellColorTracks,\n      transpose,\n      targetX,\n      targetY,\n      scaleFactor,\n      matrixWidth,\n      matrixHeight,\n      numRows: height,\n      numCols: width,\n    });\n\n    if (trackI === null || trackColI === null) {\n      setTrackHighlight(null);\n    } else {\n      const obsI = expression.rows.indexOf(axisTopLabels[trackColI]);\n      const cellIndex = expression.rows[obsI];\n\n      setTrackHighlight([cellIndex, trackI, mouseX, mouseY]);\n    }\n\n    const [colI, rowI] = mouseToHeatmapPosition(mouseX, mouseY, {\n      offsetLeft,\n      offsetTop,\n      targetX,\n      targetY,\n      scaleFactor,\n      matrixWidth,\n      matrixHeight,\n      numRows: height,\n      numCols: width,\n    });\n\n    if (colI === null) {\n      if (transpose) {\n        setCellHighlight(null);\n      } else {\n        setGeneHighlight(null);\n      }\n    }\n\n    if (rowI === null) {\n      if (transpose) {\n        setGeneHighlight(null);\n      } else {\n        setCellHighlight(null);\n      }\n    }\n\n    const obsI = expression.rows.indexOf(transpose\n      ? axisTopLabels[colI]\n      : axisLeftLabels[rowI]);\n    const varI = expression.cols.indexOf(transpose\n      ? axisLeftLabels[rowI]\n      : axisTopLabels[colI]);\n\n    const obsId = expression.rows[obsI];\n    const varId = expression.cols[varI];\n\n    if (setComponentHover) {\n      setComponentHover();\n    }\n    setCellHighlight(obsId || null);\n    setGeneHighlight(varId || null);\n  }\n\n  const cellColorsViews = useMemo(() => {\n    const result = range(numCellColorTracks).map((track) => {\n      let view;\n      if (transpose) {\n        view = new OrthographicView({\n          id: `colorsTop-${track}`,\n          controller: true,\n          x: offsetLeft,\n          y: axisOffsetTop + track * COLOR_BAR_SIZE,\n          width: matrixWidth,\n          height: COLOR_BAR_SIZE - AXIS_MARGIN,\n        });\n      } else {\n        view = new OrthographicView({\n          id: `colorsLeft-${track}`,\n          controller: true,\n          x: axisOffsetLeft + track * COLOR_BAR_SIZE,\n          y: offsetTop,\n          width: COLOR_BAR_SIZE - AXIS_MARGIN,\n          height: matrixHeight,\n        });\n      }\n      return view;\n    });\n\n    return result;\n  }, [numCellColorTracks, transpose, offsetLeft, axisOffsetTop,\n    matrixWidth, axisOffsetLeft, offsetTop, matrixHeight]);\n\n  return (\n    <DeckGL\n      id={`deckgl-overlay-${uuid}`}\n      ref={deckRef}\n      onWebGLInitialized={setGlContext}\n      views={[\n        // Note that there are multiple views here,\n        // but only one viewState.\n        new OrthographicView({\n          id: 'heatmap',\n          controller: true,\n          x: offsetLeft,\n          y: offsetTop,\n          width: matrixWidth,\n          height: matrixHeight,\n        }),\n        new OrthographicView({\n          id: 'axisLeft',\n          controller: false,\n          x: 0,\n          y: offsetTop,\n          width: axisOffsetLeft,\n          height: matrixHeight,\n        }),\n        new OrthographicView({\n          id: 'axisTop',\n          controller: false,\n          x: offsetLeft,\n          y: 0,\n          width: matrixWidth,\n          height: axisOffsetTop,\n        }),\n        new OrthographicView({\n          id: 'cellColorLabel',\n          controller: false,\n          x: (transpose ? 0 : axisOffsetLeft),\n          y: (transpose ? axisOffsetTop : 0),\n          width: (transpose ? axisOffsetLeft : COLOR_BAR_SIZE * numCellColorTracks),\n          height: (transpose ? COLOR_BAR_SIZE * numCellColorTracks : axisOffsetTop),\n        }),\n        ...cellColorsViews,\n      ]}\n      layers={layers}\n      layerFilter={layerFilter}\n      getCursor={interactionState => (interactionState.isDragging ? 'grabbing' : 'default')}\n      glOptions={DEFAULT_GL_OPTIONS}\n      onViewStateChange={onViewStateChange}\n      viewState={viewState}\n      onHover={onHover}\n      useDevicePixels={useDevicePixels}\n    />\n  );\n});\n\nexport default Heatmap;\n"]},"metadata":{},"sourceType":"module"}