{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import React,{Suspense,useMemo}from'react';import{Handler}from'vega-tooltip';import ReactVega from'./ReactVega';// TODO: React.lazy is not working with Vitessce in the portal-ui.\n// For now, we can work around this by not using React.lazy,\n// but for performance benefits that come with lazy-loading\n// we should eventually try to resolve this issue.\n// const ReactVega = React.lazy(() => import('./ReactVega'));\nexport var DATASET_NAME='table';function isVega(spec){return spec.$schema==='https://vega.github.io/schema/vega/v5.json';}/**\n * A wrapper around the react-vega Vega component.\n * @param {object} props\n * @param {object} spec A vega or vega-lite spec.\n * @param {object[]} data The plot data as an array of objects.\n * @param {object} signalListeners Vega signal listeners. Optional.\n */export default function VegaPlot(props){var partialSpec=props.spec,data=props.data,signalListeners=props.signalListeners;var spec=_objectSpread({},partialSpec,{data:isVega(partialSpec)?[{name:DATASET_NAME}].concat(_toConsumableArray(partialSpec.data)):{name:DATASET_NAME}});var vegaComponent=useMemo(function(){return/*#__PURE__*/React.createElement(ReactVega,{spec:spec,data:_defineProperty({},DATASET_NAME,data),signalListeners:signalListeners,tooltip:new Handler().call,renderer:\"canvas\",scaleFactor:3});},[spec,data,signalListeners]);return spec&&data&&data.length>0?/*#__PURE__*/React.createElement(Suspense,{fallback:/*#__PURE__*/React.createElement(\"div\",null,\"Loading...\")},vegaComponent):null;}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/vega/VegaPlot.js"],"names":["React","Suspense","useMemo","Handler","ReactVega","DATASET_NAME","isVega","spec","$schema","VegaPlot","props","partialSpec","data","signalListeners","name","vegaComponent","call","length"],"mappings":"ijBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,OAA1B,KAAyC,OAAzC,CACA,OAASC,OAAT,KAAwB,cAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA;AACA;AACA;AACA;AACA;AAEA,MAAO,IAAMC,CAAAA,YAAY,CAAG,OAArB,CAEP,QAASC,CAAAA,MAAT,CAAgBC,IAAhB,CAAsB,CACpB,MAAOA,CAAAA,IAAI,CAACC,OAAL,GAAiB,4CAAxB,CACD,CAED;;;;;;GAOA,cAAe,SAASC,CAAAA,QAAT,CAAkBC,KAAlB,CAAyB,IAE9BC,CAAAA,WAF8B,CAKlCD,KALkC,CAEpCH,IAFoC,CAGpCK,IAHoC,CAKlCF,KALkC,CAGpCE,IAHoC,CAIpCC,eAJoC,CAKlCH,KALkC,CAIpCG,eAJoC,CAOtC,GAAMN,CAAAA,IAAI,kBACLI,WADK,EAERC,IAAI,CAAGN,MAAM,CAACK,WAAD,CAAN,EAEH,CAAEG,IAAI,CAAET,YAAR,CAFG,4BAGAM,WAAW,CAACC,IAHZ,GAKH,CAAEE,IAAI,CAAET,YAAR,CAPI,EAAV,CAWA,GAAMU,CAAAA,aAAa,CAAGb,OAAO,CAAC,8BAC5B,oBAAC,SAAD,EACE,IAAI,CAAEK,IADR,CAEE,IAAI,oBACDF,YADC,CACcO,IADd,CAFN,CAKE,eAAe,CAAEC,eALnB,CAME,OAAO,CAAE,GAAIV,CAAAA,OAAJ,GAAca,IANzB,CAOE,QAAQ,CAAC,QAPX,CAQE,WAAW,CAAE,CARf,EAD4B,EAAD,CAW1B,CAACT,IAAD,CAAOK,IAAP,CAAaC,eAAb,CAX0B,CAA7B,CAaA,MACEN,CAAAA,IAAI,EAAIK,IAAR,EAAgBA,IAAI,CAACK,MAAL,CAAc,CAA9B,cACE,oBAAC,QAAD,EAAU,QAAQ,cAAE,4CAApB,EACGF,aADH,CADF,CAII,IALN,CAOD","sourcesContent":["import React, { Suspense, useMemo } from 'react';\nimport { Handler } from 'vega-tooltip';\nimport ReactVega from './ReactVega';\n\n// TODO: React.lazy is not working with Vitessce in the portal-ui.\n// For now, we can work around this by not using React.lazy,\n// but for performance benefits that come with lazy-loading\n// we should eventually try to resolve this issue.\n// const ReactVega = React.lazy(() => import('./ReactVega'));\n\nexport const DATASET_NAME = 'table';\n\nfunction isVega(spec) {\n  return spec.$schema === 'https://vega.github.io/schema/vega/v5.json';\n}\n\n/**\n * A wrapper around the react-vega Vega component.\n * @param {object} props\n * @param {object} spec A vega or vega-lite spec.\n * @param {object[]} data The plot data as an array of objects.\n * @param {object} signalListeners Vega signal listeners. Optional.\n */\nexport default function VegaPlot(props) {\n  const {\n    spec: partialSpec,\n    data,\n    signalListeners,\n  } = props;\n\n  const spec = {\n    ...partialSpec,\n    data: (isVega(partialSpec)\n      ? [\n        { name: DATASET_NAME },\n        ...partialSpec.data,\n      ]\n      : { name: DATASET_NAME }\n    ),\n  };\n\n  const vegaComponent = useMemo(() => (\n    <ReactVega\n      spec={spec}\n      data={{\n        [DATASET_NAME]: data,\n      }}\n      signalListeners={signalListeners}\n      tooltip={new Handler().call}\n      renderer=\"canvas\"\n      scaleFactor={3}\n    />\n  ), [spec, data, signalListeners]);\n\n  return (\n    spec && data && data.length > 0 ? (\n      <Suspense fallback={<div>Loading...</div>}>\n        {vegaComponent}\n      </Suspense>\n    ) : null\n  );\n}\n"]},"metadata":{},"sourceType":"module"}