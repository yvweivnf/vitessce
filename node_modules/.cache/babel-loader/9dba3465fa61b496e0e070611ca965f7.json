{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";/* eslint-disable camelcase */import React,{useEffect,useMemo}from'react';import{ThemeProvider,StylesProvider,createGenerateClassName}from'@material-ui/core/styles';import isEqual from'lodash/isEqual';import{muiTheme}from'../components/shared-mui/styles';import{ViewConfigProvider,createViewConfigStore,AuxiliaryProvider,createAuxiliaryStore}from'./state/hooks';import VitessceGrid from'./VitessceGrid';import Warning from'./Warning';import CallbackPublisher from'./CallbackPublisher';import{getComponent}from'./component-registry';import{checkTypes,initialize,upgradeAndValidate}from'./view-config-utils';var generateClassName=createGenerateClassName({disableGlobal:true});/**\n * The Vitessce component.\n * @param {object} props\n * @param {object} props.config A Vitessce view config.\n * If the config is valid, the VitessceGrid will be rendered as a child.\n * If the config is invalid, a Warning will be rendered instead.\n * @param {number} props.rowHeight Row height for grid layout. Optional.\n * @param {number} props.height Total height for grid layout. Optional.\n * @param {string} props.theme The theme, used for styling as\n * light or dark. Optional. By default, \"dark\"\n * @param {function} props.onWarn A callback for warning messages. Optional.\n * @param {function} props.onConfigChange A callback for view config\n * updates. Optional.\n * @param {function} props.onLoaderChange A callback for loader\n * updates. Optional.\n * @param {boolean} props.validateOnConfigChange Whether to validate\n * against the view config schema when publishing changes. Use for debugging\n * purposes, as this may have a performance impact. By default, false.\n */export default function Vitessce(props){var config=props.config,rowHeight=props.rowHeight,height=props.height,theme=props.theme,onWarn=props.onWarn,onConfigChange=props.onConfigChange,onLoaderChange=props.onLoaderChange,_props$validateOnConf=props.validateOnConfigChange,validateOnConfigChange=_props$validateOnConf===void 0?false:_props$validateOnConf,_props$isBounded=props.isBounded,isBounded=_props$isBounded===void 0?false:_props$isBounded;// Process the view config and memoize the result:\n// - Validate.\n// - Upgrade, if legacy schema.\n// - Validate after upgrade, if legacy schema.\n// - Initialize (based on initStrategy).\nvar _useMemo=useMemo(function(){// If the config value is undefined, show a warning message.\nif(!config){return[{title:'No such dataset',unformatted:'The dataset configuration could not be found.'},false];}// If the view config is missing a version, show a warning message.\nif(!config.version){return[{title:'Missing version',unformatted:'The dataset configuration is missing a version, preventing validation.'},false];}// Check if this is a \"legacy\" view config.\nvar _upgradeAndValidate=upgradeAndValidate(config),_upgradeAndValidate2=_slicedToArray(_upgradeAndValidate,2),upgradedConfig=_upgradeAndValidate2[0],upgradeSuccess=_upgradeAndValidate2[1];if(upgradeSuccess){// Initialize the view config according to the initStrategy.\nvar _checkTypes=checkTypes(upgradedConfig),_checkTypes2=_slicedToArray(_checkTypes,2),typeCheckSuccess=_checkTypes2[0],typeCheckMessage=_checkTypes2[1];if(typeCheckSuccess){var initializedConfig=initialize(upgradedConfig);return[initializedConfig,true];}return[{title:'View config initialization failed.',unformatted:typeCheckMessage},false];}return[upgradedConfig,false];},[config]),_useMemo2=_slicedToArray(_useMemo,2),configOrWarning=_useMemo2[0],success=_useMemo2[1];// Emit the upgraded/initialized view config\n// to onConfigChange if necessary.\nuseEffect(function(){if(success&&!isEqual(configOrWarning,config)&&onConfigChange){onConfigChange(configOrWarning);}},[success,config,configOrWarning,onConfigChange]);return success?/*#__PURE__*/React.createElement(StylesProvider,{generateClassName:generateClassName},/*#__PURE__*/React.createElement(ThemeProvider,{theme:muiTheme[theme]},/*#__PURE__*/React.createElement(ViewConfigProvider,{createStore:createViewConfigStore},/*#__PURE__*/React.createElement(AuxiliaryProvider,{createStore:createAuxiliaryStore},/*#__PURE__*/React.createElement(VitessceGrid,{config:configOrWarning,getComponent:getComponent,rowHeight:rowHeight,height:height,theme:theme,isBounded:isBounded}),/*#__PURE__*/React.createElement(CallbackPublisher,{onWarn:onWarn,onConfigChange:onConfigChange,onLoaderChange:onLoaderChange,validateOnConfigChange:validateOnConfigChange}))))):/*#__PURE__*/React.createElement(Warning,Object.assign({theme:theme},configOrWarning));}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/app/Vitessce.js"],"names":["React","useEffect","useMemo","ThemeProvider","StylesProvider","createGenerateClassName","isEqual","muiTheme","ViewConfigProvider","createViewConfigStore","AuxiliaryProvider","createAuxiliaryStore","VitessceGrid","Warning","CallbackPublisher","getComponent","checkTypes","initialize","upgradeAndValidate","generateClassName","disableGlobal","Vitessce","props","config","rowHeight","height","theme","onWarn","onConfigChange","onLoaderChange","validateOnConfigChange","isBounded","title","unformatted","version","upgradedConfig","upgradeSuccess","typeCheckSuccess","typeCheckMessage","initializedConfig","configOrWarning","success"],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport React, { useEffect, useMemo } from 'react';\nimport {\n  ThemeProvider, StylesProvider,\n  createGenerateClassName,\n} from '@material-ui/core/styles';\nimport isEqual from 'lodash/isEqual';\nimport { muiTheme } from '../components/shared-mui/styles';\nimport {\n  ViewConfigProvider, createViewConfigStore,\n  AuxiliaryProvider, createAuxiliaryStore,\n} from './state/hooks';\n\nimport VitessceGrid from './VitessceGrid';\nimport Warning from './Warning';\nimport CallbackPublisher from './CallbackPublisher';\nimport { getComponent } from './component-registry';\nimport { checkTypes, initialize, upgradeAndValidate } from './view-config-utils';\n\nconst generateClassName = createGenerateClassName({\n  disableGlobal: true,\n});\n\n/**\n * The Vitessce component.\n * @param {object} props\n * @param {object} props.config A Vitessce view config.\n * If the config is valid, the VitessceGrid will be rendered as a child.\n * If the config is invalid, a Warning will be rendered instead.\n * @param {number} props.rowHeight Row height for grid layout. Optional.\n * @param {number} props.height Total height for grid layout. Optional.\n * @param {string} props.theme The theme, used for styling as\n * light or dark. Optional. By default, \"dark\"\n * @param {function} props.onWarn A callback for warning messages. Optional.\n * @param {function} props.onConfigChange A callback for view config\n * updates. Optional.\n * @param {function} props.onLoaderChange A callback for loader\n * updates. Optional.\n * @param {boolean} props.validateOnConfigChange Whether to validate\n * against the view config schema when publishing changes. Use for debugging\n * purposes, as this may have a performance impact. By default, false.\n */\nexport default function Vitessce(props) {\n  const {\n    config,\n    rowHeight,\n    height,\n    theme,\n    onWarn,\n    onConfigChange,\n    onLoaderChange,\n    validateOnConfigChange = false,\n    isBounded = false,\n  } = props;\n\n  // Process the view config and memoize the result:\n  // - Validate.\n  // - Upgrade, if legacy schema.\n  // - Validate after upgrade, if legacy schema.\n  // - Initialize (based on initStrategy).\n  const [configOrWarning, success] = useMemo(() => {\n    // If the config value is undefined, show a warning message.\n    if (!config) {\n      return [{\n        title: 'No such dataset',\n        unformatted: 'The dataset configuration could not be found.',\n      }, false];\n    }\n    // If the view config is missing a version, show a warning message.\n    if (!config.version) {\n      return [{\n        title: 'Missing version',\n        unformatted: 'The dataset configuration is missing a version, preventing validation.',\n      }, false];\n    }\n    // Check if this is a \"legacy\" view config.\n    const [upgradedConfig, upgradeSuccess] = upgradeAndValidate(config);\n    if (upgradeSuccess) {\n      // Initialize the view config according to the initStrategy.\n      const [typeCheckSuccess, typeCheckMessage] = checkTypes(upgradedConfig);\n      if (typeCheckSuccess) {\n        const initializedConfig = initialize(upgradedConfig);\n        return [initializedConfig, true];\n      }\n      return [{\n        title: 'View config initialization failed.',\n        unformatted: typeCheckMessage,\n      }, false];\n    }\n    return [upgradedConfig, false];\n  }, [config]);\n\n  // Emit the upgraded/initialized view config\n  // to onConfigChange if necessary.\n  useEffect(() => {\n    if (success && !isEqual(configOrWarning, config) && onConfigChange) {\n      onConfigChange(configOrWarning);\n    }\n  }, [success, config, configOrWarning, onConfigChange]);\n\n  return success ? (\n    <StylesProvider generateClassName={generateClassName}>\n      <ThemeProvider theme={muiTheme[theme]}>\n        <ViewConfigProvider createStore={createViewConfigStore}>\n          <AuxiliaryProvider createStore={createAuxiliaryStore}>\n            <VitessceGrid\n              config={configOrWarning}\n              getComponent={getComponent}\n              rowHeight={rowHeight}\n              height={height}\n              theme={theme}\n              isBounded={isBounded}\n            />\n            <CallbackPublisher\n              onWarn={onWarn}\n              onConfigChange={onConfigChange}\n              onLoaderChange={onLoaderChange}\n              validateOnConfigChange={validateOnConfigChange}\n            />\n          </AuxiliaryProvider>\n        </ViewConfigProvider>\n      </ThemeProvider>\n    </StylesProvider>\n  ) : (\n    <Warning\n      theme={theme}\n      {...configOrWarning}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}