{"ast":null,"code":"import _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _objectSpread from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport View from './view';\nimport Viewport from '../viewports/viewport';\nimport { getMeterZoom } from '@math.gl/web-mercator';\nimport { Matrix4, _SphericalCoordinates as SphericalCoordinates } from 'math.gl';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nfunction getDirectionFromBearingAndPitch(_ref) {\n  var bearing = _ref.bearing,\n      pitch = _ref.pitch;\n  var spherical = new SphericalCoordinates({\n    bearing: bearing,\n    pitch: pitch\n  });\n  var direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nvar FirstPersonViewport = /*#__PURE__*/function (_Viewport) {\n  _inherits(FirstPersonViewport, _Viewport);\n\n  var _super = _createSuper(FirstPersonViewport);\n\n  function FirstPersonViewport(props) {\n    _classCallCheck(this, FirstPersonViewport);\n\n    var _props$modelMatrix = props.modelMatrix,\n        modelMatrix = _props$modelMatrix === void 0 ? null : _props$modelMatrix,\n        _props$bearing = props.bearing,\n        bearing = _props$bearing === void 0 ? 0 : _props$bearing,\n        _props$pitch = props.pitch,\n        pitch = _props$pitch === void 0 ? 0 : _props$pitch,\n        _props$up = props.up,\n        up = _props$up === void 0 ? [0, 0, 1] : _props$up;\n    var dir = getDirectionFromBearingAndPitch({\n      bearing: bearing,\n      pitch: pitch === -90 ? 0.0001 : 90 + pitch\n    });\n    var center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n    var zoom = getMeterZoom(props);\n    var scale = Math.pow(2, zoom);\n    var viewMatrix = new Matrix4().lookAt({\n      eye: [0, 0, 0],\n      center: center,\n      up: up\n    }).scale(scale);\n    return _super.call(this, _objectSpread({}, props, {\n      zoom: zoom,\n      viewMatrix: viewMatrix\n    }));\n  }\n\n  return FirstPersonViewport;\n}(Viewport);\n\nvar FirstPersonView = /*#__PURE__*/function (_View) {\n  _inherits(FirstPersonView, _View);\n\n  var _super2 = _createSuper(FirstPersonView);\n\n  function FirstPersonView(props) {\n    _classCallCheck(this, FirstPersonView);\n\n    return _super2.call(this, _objectSpread({}, props, {\n      type: FirstPersonViewport\n    }));\n  }\n\n  _createClass(FirstPersonView, [{\n    key: \"controller\",\n    get: function get() {\n      return this._getControllerProps({\n        type: FirstPersonController\n      });\n    }\n  }]);\n\n  return FirstPersonView;\n}(View);\n\nexport { FirstPersonView as default };\nFirstPersonView.displayName = 'FirstPersonView';","map":{"version":3,"sources":["../../../src/views/first-person-view.js"],"names":["_SphericalCoordinates","pitch","spherical","bearing","direction","constructor","modelMatrix","up","dir","getDirectionFromBearingAndPitch","center","zoom","getMeterZoom","scale","Math","viewMatrix","eye","type","FirstPersonViewport","FirstPersonController","FirstPersonView"],"mappings":";;;;;AAAA,OAAA,IAAA,MAAA,QAAA;AACA,OAAA,QAAA,MAAA,uBAAA;AACA,SAAA,YAAA,QAAA,uBAAA;AACA,SAAA,OAAA,EAAiBA,qBAAqB,IAAtC,oBAAA,QAAA,SAAA;AACA,OAAA,qBAAA,MAAA,wCAAA;;AAEA,SAAA,+BAAA,CAAA,IAAA,EAA2D;AAAA,MAAlB,OAAkB,GAAA,IAAA,CAAlB,OAAkB;AAAA,MAARC,KAAQ,GAAA,IAAA,CAARA,KAAQ;AACzD,MAAMC,SAAS,GAAG,IAAA,oBAAA,CAAyB;AAACC,IAAAA,OAAD,EAACA,OAAD;AAAUF,IAAAA,KAAAA,EAAAA;AAAV,GAAzB,CAAlB;AACA,MAAMG,SAAS,GAAGF,SAAS,CAATA,SAAAA,GAAlB,SAAkBA,EAAlB;AACA,SAAA,SAAA;AACD;;IAED,mB;;;;;AACEG,+BAAW,KAAXA,EAAmB;AAAA;;AAAA,6BAEjB,KAFiB,CAIfC,WAJe;AAAA,QAIfA,WAJe,mCAEX,IAFW;AAAA,yBAEjB,KAFiB,CAKfH,OALe;AAAA,QAKfA,OALe,+BAEX,CAFW;AAAA,uBAEjB,KAFiB,CAMfF,KANe;AAAA,QAMfA,KANe,6BAEX,CAFW;AAAA,oBAEjB,KAFiB,CAOfM,EAPe;AAAA,QAOfA,EAPe,0BAOV,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAPU;AAWjB,QAAMC,GAAG,GAAGC,+BAA+B,CAAC;AAC1CN,MAAAA,OAD0C,EAC1CA,OAD0C;AAG1CF,MAAAA,KAAK,EAAEA,KAAK,KAAK,CAAVA,EAAAA,GAAAA,MAAAA,GAAyB,KAAKA;AAHK,KAAD,CAA3C;AAOA,QAAMS,MAAM,GAAGJ,WAAW,GAAGA,WAAW,CAAXA,kBAAAA,CAAH,GAAGA,CAAH,GAA1B,GAAA;AAGA,QAAMK,IAAI,GAAGC,YAAY,CAAzB,KAAyB,CAAzB;AACA,QAAMC,KAAK,GAAGC,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,EAAd,IAAcA,CAAd;AACA,QAAMC,UAAU,GAAG,IAAA,OAAA,GAAA,MAAA,CAAqB;AAACC,MAAAA,GAAG,EAAE,CAAA,CAAA,EAAA,CAAA,EAAN,CAAM,CAAN;AAAiBN,MAAAA,MAAjB,EAAiBA,MAAjB;AAAyBH,MAAAA,EAAAA,EAAAA;AAAzB,KAArB,EAAA,KAAA,CAAnB,KAAmB,CAAnB;AAvBiB,+CAyBX,KAzBW;AA2BfI,MAAAA,IAFI,EAEJA,IA3Be;AA4BfI,MAAAA,UAAAA,EAAAA;AA5Be;AA8BlB;;;EA/BH,Q;;IAkCe,e;;;;;AACbV,2BAAW,KAAXA,EAAmB;AAAA;;AAAA,gDACX,KADW;AAGfY,MAAAA,IAAI,EAAEC;AAHS;AAKlB;;;;wBAEgB;AACf,aAAO,KAAA,mBAAA,CAAyB;AAC9BD,QAAAA,IAAI,EAAEE;AADwB,OAAzB,CAAP;AAGD;;;;EAZY,I;;SAAA,e;AAefC,eAAe,CAAfA,WAAAA,GAAAA,iBAAAA","sourcesContent":["import View from './view';\nimport Viewport from '../viewports/viewport';\nimport {getMeterZoom} from '@math.gl/web-mercator';\nimport {Matrix4, _SphericalCoordinates as SphericalCoordinates} from 'math.gl';\nimport FirstPersonController from '../controllers/first-person-controller';\n\nfunction getDirectionFromBearingAndPitch({bearing, pitch}) {\n  const spherical = new SphericalCoordinates({bearing, pitch});\n  const direction = spherical.toVector3().normalize();\n  return direction;\n}\n\nclass FirstPersonViewport extends Viewport {\n  constructor(props) {\n    // TODO - push direction handling into Matrix4.lookAt\n    const {\n      // view matrix arguments\n      modelMatrix = null,\n      bearing = 0,\n      pitch = 0,\n      up = [0, 0, 1] // Defines up direction, default positive z axis,\n    } = props;\n\n    // Always calculate direction from bearing and pitch\n    const dir = getDirectionFromBearingAndPitch({\n      bearing,\n      // Avoid \"pixel project matrix not invertible\" error\n      pitch: pitch === -90 ? 0.0001 : 90 + pitch\n    });\n\n    // Direction is relative to model coordinates, of course\n    const center = modelMatrix ? modelMatrix.transformDirection(dir) : dir;\n\n    // Just the direction. All the positioning is done in viewport.js\n    const zoom = getMeterZoom(props);\n    const scale = Math.pow(2, zoom);\n    const viewMatrix = new Matrix4().lookAt({eye: [0, 0, 0], center, up}).scale(scale);\n\n    super({\n      ...props,\n      zoom,\n      viewMatrix\n    });\n  }\n}\n\nexport default class FirstPersonView extends View {\n  constructor(props) {\n    super({\n      ...props,\n      type: FirstPersonViewport\n    });\n  }\n\n  get controller() {\n    return this._getControllerProps({\n      type: FirstPersonController\n    });\n  }\n}\n\nFirstPersonView.displayName = 'FirstPersonView';\n"]},"metadata":{},"sourceType":"module"}