{"ast":null,"code":"import AbstractLoaderError from './AbstractLoaderError';\nexport default class LoaderNotFoundError extends AbstractLoaderError {\n  constructor(datasetType, datasetFileType, datasetUrl) {\n    super(`Error finding loader for ${datasetType}.`);\n    this.name = 'LoaderNotFoundError';\n    this.datasetType = datasetType;\n    this.datasetFileType = datasetFileType;\n    this.datasetUrl = datasetUrl;\n  }\n\n  warnInConsole() {\n    const {\n      datasetType,\n      datasetFileType,\n      datasetUrl\n    } = this;\n\n    if (datasetFileType && datasetUrl) {\n      console.warn(`${datasetType} from ${datasetUrl}: unable to find loader for fileType ${datasetFileType}`);\n    } else {\n      console.warn(`${datasetType}: unable to find loader`);\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/loaders/errors/LoaderNotFoundError.js"],"names":["AbstractLoaderError","LoaderNotFoundError","constructor","datasetType","datasetFileType","datasetUrl","name","warnInConsole","console","warn"],"mappings":"AAAA,OAAOA,mBAAP,MAAgC,uBAAhC;AAEA,eAAe,MAAMC,mBAAN,SAAkCD,mBAAlC,CAAsD;AACnEE,EAAAA,WAAW,CAACC,WAAD,EAAcC,eAAd,EAA+BC,UAA/B,EAA2C;AACpD,UAAO,4BAA2BF,WAAY,GAA9C;AACA,SAAKG,IAAL,GAAY,qBAAZ;AAEA,SAAKH,WAAL,GAAmBA,WAAnB;AACA,SAAKC,eAAL,GAAuBA,eAAvB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACD;;AAEDE,EAAAA,aAAa,GAAG;AACd,UAAM;AACJJ,MAAAA,WADI;AACSC,MAAAA,eADT;AAC0BC,MAAAA;AAD1B,QAEF,IAFJ;;AAGA,QAAID,eAAe,IAAIC,UAAvB,EAAmC;AACjCG,MAAAA,OAAO,CAACC,IAAR,CACG,GAAEN,WAAY,SAAQE,UAAW,wCAAuCD,eAAgB,EAD3F;AAGD,KAJD,MAIO;AACLI,MAAAA,OAAO,CAACC,IAAR,CACG,GAAEN,WAAY,yBADjB;AAGD;AACF;;AAvBkE","sourcesContent":["import AbstractLoaderError from './AbstractLoaderError';\n\nexport default class LoaderNotFoundError extends AbstractLoaderError {\n  constructor(datasetType, datasetFileType, datasetUrl) {\n    super(`Error finding loader for ${datasetType}.`);\n    this.name = 'LoaderNotFoundError';\n\n    this.datasetType = datasetType;\n    this.datasetFileType = datasetFileType;\n    this.datasetUrl = datasetUrl;\n  }\n\n  warnInConsole() {\n    const {\n      datasetType, datasetFileType, datasetUrl,\n    } = this;\n    if (datasetFileType && datasetUrl) {\n      console.warn(\n        `${datasetType} from ${datasetUrl}: unable to find loader for fileType ${datasetFileType}`,\n      );\n    } else {\n      console.warn(\n        `${datasetType}: unable to find loader`,\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}