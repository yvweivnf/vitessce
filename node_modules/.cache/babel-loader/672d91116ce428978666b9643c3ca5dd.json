{"ast":null,"code":"import { isNumber, isObject } from 'vega-util';\nimport { keys } from '../util';\nimport { isConcatSpec, isVConcatSpec } from './concat';\nimport { isFacetMapping, isFacetSpec } from './facet';\nexport function isStep(size) {\n  return isObject(size) && size['step'] !== undefined;\n}\nexport function isFrameMixins(o) {\n  return o['view'] || o['width'] || o['height'];\n}\nexport const DEFAULT_SPACING = 20;\nconst COMPOSITION_LAYOUT_INDEX = {\n  align: 1,\n  bounds: 1,\n  center: 1,\n  columns: 1,\n  spacing: 1\n};\nconst COMPOSITION_LAYOUT_PROPERTIES = keys(COMPOSITION_LAYOUT_INDEX);\nexport function extractCompositionLayout(spec, specType, config) {\n  var _a, _b;\n\n  const compositionConfig = config[specType];\n  const layout = {}; // Apply config first\n\n  const {\n    spacing: spacingConfig,\n    columns\n  } = compositionConfig;\n\n  if (spacingConfig !== undefined) {\n    layout.spacing = spacingConfig;\n  }\n\n  if (columns !== undefined) {\n    if (isFacetSpec(spec) && !isFacetMapping(spec.facet) || isConcatSpec(spec)) {\n      layout.columns = columns;\n    }\n  }\n\n  if (isVConcatSpec(spec)) {\n    layout.columns = 1;\n  } // Then copy properties from the spec\n\n\n  for (const prop of COMPOSITION_LAYOUT_PROPERTIES) {\n    if (spec[prop] !== undefined) {\n      if (prop === 'spacing') {\n        const spacing = spec[prop];\n        layout[prop] = isNumber(spacing) ? spacing : {\n          row: (_a = spacing.row) !== null && _a !== void 0 ? _a : spacingConfig,\n          column: (_b = spacing.column) !== null && _b !== void 0 ? _b : spacingConfig\n        };\n      } else {\n        layout[prop] = spec[prop];\n      }\n    }\n  }\n\n  return layout;\n}","map":{"version":3,"sources":["../../../src/spec/base.ts"],"names":[],"mappings":"AACA,SAAQ,QAAR,EAAkB,QAAlB,QAAiC,WAAjC;AAQA,SAAc,IAAd,QAAyB,SAAzB;AAEA,SAAQ,YAAR,EAAsB,aAAtB,QAA0C,UAA1C;AACA,SAAQ,cAAR,EAAwB,WAAxB,QAA0C,SAA1C;AAgDA,OAAM,SAAU,MAAV,CAAiB,IAAjB,EAA6D;AACjE,SAAO,QAAQ,CAAC,IAAD,CAAR,IAAkB,IAAI,CAAC,MAAD,CAAJ,KAAiB,SAA1C;AACD;AAuCD,OAAM,SAAU,aAAV,CAAwB,CAAxB,EAA8B;AAClC,SAAO,CAAC,CAAC,MAAD,CAAD,IAAa,CAAC,CAAC,OAAD,CAAd,IAA2B,CAAC,CAAC,QAAD,CAAnC;AACD;AAqHD,OAAO,MAAM,eAAe,GAAG,EAAxB;AAuCP,MAAM,wBAAwB,GAAoD;AAChF,EAAA,KAAK,EAAE,CADyE;AAEhF,EAAA,MAAM,EAAE,CAFwE;AAGhF,EAAA,MAAM,EAAE,CAHwE;AAIhF,EAAA,OAAO,EAAE,CAJuE;AAKhF,EAAA,OAAO,EAAE;AALuE,CAAlF;AAQA,MAAM,6BAA6B,GAAG,IAAI,CAAC,wBAAD,CAA1C;AAIA,OAAM,SAAU,wBAAV,CACJ,IADI,EAEJ,QAFI,EAGJ,MAHI,EAG2B;;;AAE/B,QAAM,iBAAiB,GAAG,MAAM,CAAC,QAAD,CAAhC;AACA,QAAM,MAAM,GAAwC,EAApD,CAH+B,CAK/B;;AACA,QAAM;AAAC,IAAA,OAAO,EAAE,aAAV;AAAyB,IAAA;AAAzB,MAAoC,iBAA1C;;AACA,MAAI,aAAa,KAAK,SAAtB,EAAiC;AAC/B,IAAA,MAAM,CAAC,OAAP,GAAiB,aAAjB;AACD;;AAED,MAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,QAAK,WAAW,CAAC,IAAD,CAAX,IAAqB,CAAC,cAAc,CAAC,IAAI,CAAC,KAAN,CAArC,IAAsD,YAAY,CAAC,IAAD,CAAtE,EAA8E;AAC5E,MAAA,MAAM,CAAC,OAAP,GAAiB,OAAjB;AACD;AACF;;AAED,MAAI,aAAa,CAAC,IAAD,CAAjB,EAAyB;AACvB,IAAA,MAAM,CAAC,OAAP,GAAiB,CAAjB;AACD,GAnB8B,CAqB/B;;;AACA,OAAK,MAAM,IAAX,IAAmB,6BAAnB,EAAkD;AAChD,QAAI,IAAI,CAAC,IAAD,CAAJ,KAAe,SAAnB,EAA8B;AAC5B,UAAI,IAAI,KAAK,SAAb,EAAwB;AACtB,cAAM,OAAO,GAA4B,IAAI,CAAC,IAAD,CAA7C;AAEA,QAAA,MAAM,CAAC,IAAD,CAAN,GAAe,QAAQ,CAAC,OAAD,CAAR,GACX,OADW,GAEX;AACE,UAAA,GAAG,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,GAAR,MAAW,IAAX,IAAW,EAAA,KAAA,KAAA,CAAX,GAAW,EAAX,GAAe,aADtB;AAEE,UAAA,MAAM,EAAE,CAAA,EAAA,GAAA,OAAO,CAAC,MAAR,MAAc,IAAd,IAAc,EAAA,KAAA,KAAA,CAAd,GAAc,EAAd,GAAkB;AAF5B,SAFJ;AAMD,OATD,MASO;AACJ,QAAA,MAAM,CAAC,IAAD,CAAN,GAAuB,IAAI,CAAC,IAAD,CAA3B;AACF;AACF;AACF;;AAED,SAAO,MAAP;AACD","sourceRoot":"","sourcesContent":["import { isNumber, isObject } from 'vega-util';\nimport { keys } from '../util';\nimport { isConcatSpec, isVConcatSpec } from './concat';\nimport { isFacetMapping, isFacetSpec } from './facet';\nexport function isStep(size) {\n    return isObject(size) && size['step'] !== undefined;\n}\nexport function isFrameMixins(o) {\n    return o['view'] || o['width'] || o['height'];\n}\nexport const DEFAULT_SPACING = 20;\nconst COMPOSITION_LAYOUT_INDEX = {\n    align: 1,\n    bounds: 1,\n    center: 1,\n    columns: 1,\n    spacing: 1\n};\nconst COMPOSITION_LAYOUT_PROPERTIES = keys(COMPOSITION_LAYOUT_INDEX);\nexport function extractCompositionLayout(spec, specType, config) {\n    var _a, _b;\n    const compositionConfig = config[specType];\n    const layout = {};\n    // Apply config first\n    const { spacing: spacingConfig, columns } = compositionConfig;\n    if (spacingConfig !== undefined) {\n        layout.spacing = spacingConfig;\n    }\n    if (columns !== undefined) {\n        if ((isFacetSpec(spec) && !isFacetMapping(spec.facet)) || isConcatSpec(spec)) {\n            layout.columns = columns;\n        }\n    }\n    if (isVConcatSpec(spec)) {\n        layout.columns = 1;\n    }\n    // Then copy properties from the spec\n    for (const prop of COMPOSITION_LAYOUT_PROPERTIES) {\n        if (spec[prop] !== undefined) {\n            if (prop === 'spacing') {\n                const spacing = spec[prop];\n                layout[prop] = isNumber(spacing)\n                    ? spacing\n                    : {\n                        row: (_a = spacing.row) !== null && _a !== void 0 ? _a : spacingConfig,\n                        column: (_b = spacing.column) !== null && _b !== void 0 ? _b : spacingConfig\n                    };\n            }\n            else {\n                layout[prop] = spec[prop];\n            }\n        }\n    }\n    return layout;\n}\n//# sourceMappingURL=base.js.map"]},"metadata":{},"sourceType":"module"}