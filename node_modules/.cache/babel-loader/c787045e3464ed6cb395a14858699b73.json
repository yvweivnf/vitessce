{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport { BaseSource } from './basesource';\n\nvar FileReaderSource = /*#__PURE__*/function (_BaseSource) {\n  _inherits(FileReaderSource, _BaseSource);\n\n  var _super = _createSuper(FileReaderSource);\n\n  function FileReaderSource(file) {\n    var _this;\n\n    _classCallCheck(this, FileReaderSource);\n\n    _this = _super.call(this);\n    _this.file = file;\n    return _this;\n  }\n\n  _createClass(FileReaderSource, [{\n    key: \"fetchSlice\",\n    value: function () {\n      var _fetchSlice = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(slice, signal) {\n        var _this2 = this;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var blob = _this2.file.slice(slice.offset, slice.offset + slice.length);\n\n                  var reader = new FileReader();\n\n                  reader.onload = function (event) {\n                    return resolve(event.target.result);\n                  };\n\n                  reader.onerror = reject;\n                  reader.onabort = reject;\n                  reader.readAsArrayBuffer(blob);\n\n                  if (signal) {\n                    signal.addEventListener('abort', function () {\n                      return reader.abort();\n                    });\n                  }\n                }));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function fetchSlice(_x, _x2) {\n        return _fetchSlice.apply(this, arguments);\n      }\n\n      return fetchSlice;\n    }()\n  }]);\n\n  return FileReaderSource;\n}(BaseSource);\n/**\n * Create a new source from a given file/blob.\n * @param {Blob} file The file or blob to read from.\n * @returns The constructed source\n */\n\n\nexport function makeFileReaderSource(file) {\n  return new FileReaderSource(file);\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/geotiff/src/source/filereader.js"],"names":["BaseSource","FileReaderSource","file","slice","signal","Promise","resolve","reject","blob","offset","length","reader","FileReader","onload","event","target","result","onerror","onabort","readAsArrayBuffer","addEventListener","abort","makeFileReaderSource"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,cAA3B;;IAGMC,gB;;;;;AACJ,4BAAYC,IAAZ,EAAkB;AAAA;;AAAA;;AAChB;AACA,UAAKA,IAAL,GAAYA,IAAZ;AAFgB;AAGjB;;;;;kGAEgBC,K,EAAOC,M;;;;;;;iDACf,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,sBAAMC,IAAI,GAAG,MAAI,CAACN,IAAL,CAAUC,KAAV,CAAgBA,KAAK,CAACM,MAAtB,EAA8BN,KAAK,CAACM,MAAN,GAAeN,KAAK,CAACO,MAAnD,CAAb;;AACA,sBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,kBAAAA,MAAM,CAACE,MAAP,GAAgB,UAACC,KAAD;AAAA,2BAAWR,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaC,MAAd,CAAlB;AAAA,mBAAhB;;AACAL,kBAAAA,MAAM,CAACM,OAAP,GAAiBV,MAAjB;AACAI,kBAAAA,MAAM,CAACO,OAAP,GAAiBX,MAAjB;AACAI,kBAAAA,MAAM,CAACQ,iBAAP,CAAyBX,IAAzB;;AAEA,sBAAIJ,MAAJ,EAAY;AACVA,oBAAAA,MAAM,CAACgB,gBAAP,CAAwB,OAAxB,EAAiC;AAAA,6BAAMT,MAAM,CAACU,KAAP,EAAN;AAAA,qBAAjC;AACD;AACF,iBAXM,C;;;;;;;;;;;;;;;;;;;EAPoBrB,U;AAsB/B;;;;;;;AAKA,OAAO,SAASsB,oBAAT,CAA8BpB,IAA9B,EAAoC;AACzC,SAAO,IAAID,gBAAJ,CAAqBC,IAArB,CAAP;AACD","sourcesContent":["import { BaseSource } from './basesource';\n\n\nclass FileReaderSource extends BaseSource {\n  constructor(file) {\n    super();\n    this.file = file;\n  }\n\n  async fetchSlice(slice, signal) {\n    return new Promise((resolve, reject) => {\n      const blob = this.file.slice(slice.offset, slice.offset + slice.length);\n      const reader = new FileReader();\n      reader.onload = (event) => resolve(event.target.result);\n      reader.onerror = reject;\n      reader.onabort = reject;\n      reader.readAsArrayBuffer(blob);\n\n      if (signal) {\n        signal.addEventListener('abort', () => reader.abort());\n      }\n    });\n  }\n}\n\n/**\n * Create a new source from a given file/blob.\n * @param {Blob} file The file or blob to read from.\n * @returns The constructed source\n */\nexport function makeFileReaderSource(file) {\n  return new FileReaderSource(file);\n}\n"]},"metadata":{},"sourceType":"module"}