{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _toConsumableArray from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapNativeSuper\";\nimport { ToInteger, defaultCompareFunction } from \"./spec\";\nimport { isStringNumberKey, isArrayBuffer } from \"./is\";\nimport { createPrivateStorage } from \"./private\";\nimport memoize from \"lodash-es/memoize\";\nimport { roundToFloat16Bits, convertToNumber } from \"./lib\";\nimport { isTypedArrayIndexedPropertyWritable } from \"./bug\";\n\nvar _ = createPrivateStorage();\n\nfunction isFloat16Array(target) {\n  return target instanceof Float16Array;\n}\n\nfunction assertFloat16Array(target) {\n  if (!isFloat16Array(target)) {\n    throw new TypeError(\"This is not a Float16Array\");\n  }\n}\n\nfunction isDefaultFloat16ArrayMethods(target) {\n  return typeof target === \"function\" && defaultFloat16ArrayMethods.has(target);\n}\n\nfunction copyToArray(float16bits) {\n  var length = float16bits.length;\n  var array = new Array(length);\n\n  for (var i = 0; i < length; ++i) {\n    array[i] = convertToNumber(float16bits[i]);\n  }\n\n  return array;\n} // proxy handler\n\n\nvar applyHandler = {\n  apply: function apply(func, thisArg, args) {\n    // peel off proxy\n    if (isFloat16Array(thisArg) && isDefaultFloat16ArrayMethods(func)) return Reflect.apply(func, _(thisArg).target, args);\n    return Reflect.apply(func, thisArg, args);\n  }\n};\nvar handler = {\n  get: function get(target, key) {\n    var wrapper = null;\n\n    if (!isTypedArrayIndexedPropertyWritable) {\n      wrapper = target;\n      target = _(wrapper).target;\n    }\n\n    if (isStringNumberKey(key)) {\n      return Reflect.has(target, key) ? convertToNumber(Reflect.get(target, key)) : undefined;\n    } else {\n      var ret = wrapper !== null && Reflect.has(wrapper, key) ? Reflect.get(wrapper, key) : Reflect.get(target, key);\n      if (typeof ret !== \"function\") return ret; // TypedArray methods can't be called by Proxy Object\n\n      var proxy = _(ret).proxy;\n\n      if (proxy === undefined) {\n        proxy = _(ret).proxy = new Proxy(ret, applyHandler);\n      }\n\n      return proxy;\n    }\n  },\n  set: function set(target, key, value) {\n    var wrapper = null;\n\n    if (!isTypedArrayIndexedPropertyWritable) {\n      wrapper = target;\n      target = _(wrapper).target;\n    }\n\n    if (isStringNumberKey(key)) {\n      return Reflect.set(target, key, roundToFloat16Bits(value));\n    } else {\n      // frozen object can't change prototype property\n      if (wrapper !== null && (!Reflect.has(target, key) || Object.isFrozen(wrapper))) {\n        return Reflect.set(wrapper, key, value);\n      } else {\n        return Reflect.set(target, key, value);\n      }\n    }\n  }\n};\n\nif (!isTypedArrayIndexedPropertyWritable) {\n  handler.getPrototypeOf = function (wrapper) {\n    return Reflect.getPrototypeOf(_(wrapper).target);\n  };\n\n  handler.setPrototypeOf = function (wrapper, prototype) {\n    return Reflect.setPrototypeOf(_(wrapper).target, prototype);\n  };\n\n  handler.defineProperty = function (wrapper, key, descriptor) {\n    var target = _(wrapper).target;\n\n    return !Reflect.has(target, key) || Object.isFrozen(wrapper) ? Reflect.defineProperty(wrapper, key, descriptor) : Reflect.defineProperty(target, key, descriptor);\n  };\n\n  handler.deleteProperty = function (wrapper, key) {\n    var target = _(wrapper).target;\n\n    return Reflect.has(wrapper, key) ? Reflect.deleteProperty(wrapper, key) : Reflect.deleteProperty(target, key);\n  };\n\n  handler.has = function (wrapper, key) {\n    return Reflect.has(wrapper, key) || Reflect.has(_(wrapper).target, key);\n  };\n\n  handler.isExtensible = function (wrapper) {\n    return Reflect.isExtensible(wrapper);\n  };\n\n  handler.preventExtensions = function (wrapper) {\n    return Reflect.preventExtensions(wrapper);\n  };\n\n  handler.getOwnPropertyDescriptor = function (wrapper, key) {\n    return Reflect.getOwnPropertyDescriptor(wrapper, key);\n  };\n\n  handler.ownKeys = function (wrapper) {\n    return Reflect.ownKeys(wrapper);\n  };\n}\n\nvar Float16Array = /*#__PURE__*/function (_Uint16Array) {\n  _inherits(Float16Array, _Uint16Array);\n\n  var _super = _createSuper(Float16Array);\n\n  function Float16Array(input, byteOffset, length) {\n    var _this;\n\n    _classCallCheck(this, Float16Array);\n\n    // input Float16Array\n    if (isFloat16Array(input)) {\n      _this = _super.call(this, _(input).target); // 22.2.1.3, 22.2.1.4 TypedArray, Array, ArrayLike, Iterable\n    } else if (input !== null && typeof input === \"object\" && !isArrayBuffer(input)) {\n      // if input is not ArrayLike and Iterable, get Array\n      var arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? _toConsumableArray(input) : input;\n      var _length = arrayLike.length;\n      _this = _super.call(this, _length);\n\n      for (var i = 0; i < _length; ++i) {\n        // super (Uint16Array)\n        _this[i] = roundToFloat16Bits(arrayLike[i]);\n      } // 22.2.1.2, 22.2.1.5 primitive, ArrayBuffer\n\n    } else {\n      switch (arguments.length) {\n        case 0:\n          _this = _super.call(this);\n          break;\n\n        case 1:\n          _this = _super.call(this, input);\n          break;\n\n        case 2:\n          _this = _super.call(this, input, byteOffset);\n          break;\n\n        case 3:\n          _this = _super.call(this, input, byteOffset, length);\n          break;\n\n        default:\n          _this = _super.apply(this, arguments);\n      }\n    }\n\n    var proxy;\n\n    if (isTypedArrayIndexedPropertyWritable) {\n      proxy = new Proxy(_assertThisInitialized(_this), handler);\n    } else {\n      var wrapper = Object.create(null);\n      _(wrapper).target = _assertThisInitialized(_this);\n      proxy = new Proxy(wrapper, handler);\n    } // proxy private storage\n\n\n    _(proxy).target = _assertThisInitialized(_this); // this private storage\n\n    _(_assertThisInitialized(_this)).proxy = proxy;\n    return _possibleConstructorReturn(_this, proxy);\n  } // static methods\n\n\n  _createClass(Float16Array, [{\n    key: Symbol.iterator,\n    // iterate methods\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function value() {\n      var _iterator, _step, val;\n\n      return _regeneratorRuntime.wrap(function value$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _iterator = _createForOfIteratorHelper(_get(_getPrototypeOf(Float16Array.prototype), Symbol.iterator, this).call(this));\n              _context.prev = 1;\n\n              _iterator.s();\n\n            case 3:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 9;\n                break;\n              }\n\n              val = _step.value;\n              _context.next = 7;\n              return convertToNumber(val);\n\n            case 7:\n              _context.next = 3;\n              break;\n\n            case 9:\n              _context.next = 14;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n\n              _iterator.e(_context.t0);\n\n            case 14:\n              _context.prev = 14;\n\n              _iterator.f();\n\n              return _context.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, value, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"keys\",\n    value: function keys() {\n      return _get(_getPrototypeOf(Float16Array.prototype), \"keys\", this).call(this);\n    }\n  }, {\n    key: \"values\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function values() {\n      var _iterator2, _step2, val;\n\n      return _regeneratorRuntime.wrap(function values$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _iterator2 = _createForOfIteratorHelper(_get(_getPrototypeOf(Float16Array.prototype), \"values\", this).call(this));\n              _context2.prev = 1;\n\n              _iterator2.s();\n\n            case 3:\n              if ((_step2 = _iterator2.n()).done) {\n                _context2.next = 9;\n                break;\n              }\n\n              val = _step2.value;\n              _context2.next = 7;\n              return convertToNumber(val);\n\n            case 7:\n              _context2.next = 3;\n              break;\n\n            case 9:\n              _context2.next = 14;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n\n              _iterator2.e(_context2.t0);\n\n            case 14:\n              _context2.prev = 14;\n\n              _iterator2.f();\n\n              return _context2.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, values, this, [[1, 11, 14, 17]]);\n    })\n  }, {\n    key: \"entries\",\n    value: /*#__PURE__*/_regeneratorRuntime.mark(function entries() {\n      var _iterator3, _step3, _step3$value, i, val;\n\n      return _regeneratorRuntime.wrap(function entries$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _iterator3 = _createForOfIteratorHelper(_get(_getPrototypeOf(Float16Array.prototype), \"entries\", this).call(this));\n              _context3.prev = 1;\n\n              _iterator3.s();\n\n            case 3:\n              if ((_step3 = _iterator3.n()).done) {\n                _context3.next = 9;\n                break;\n              }\n\n              _step3$value = _slicedToArray(_step3.value, 2), i = _step3$value[0], val = _step3$value[1];\n              _context3.next = 7;\n              return [i, convertToNumber(val)];\n\n            case 7:\n              _context3.next = 3;\n              break;\n\n            case 9:\n              _context3.next = 14;\n              break;\n\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n\n              _iterator3.e(_context3.t0);\n\n            case 14:\n              _context3.prev = 14;\n\n              _iterator3.f();\n\n              return _context3.finish(14);\n\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, entries, this, [[1, 11, 14, 17]]);\n    }) // functional methods\n\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      assertFloat16Array(this);\n      var thisArg = arguments.length <= 1 ? undefined : arguments[1];\n      var array = [];\n\n      for (var i = 0, l = this.length; i < l; ++i) {\n        var val = convertToNumber(this[i]);\n        array.push(callback.call(thisArg, val, i, _(this).proxy));\n      }\n\n      return new Float16Array(array);\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(callback) {\n      assertFloat16Array(this);\n      var thisArg = arguments.length <= 1 ? undefined : arguments[1];\n      var array = [];\n\n      for (var i = 0, l = this.length; i < l; ++i) {\n        var val = convertToNumber(this[i]);\n\n        if (callback.call(thisArg, val, i, _(this).proxy)) {\n          array.push(val);\n        }\n      }\n\n      return new Float16Array(array);\n    }\n  }, {\n    key: \"reduce\",\n    value: function reduce(callback) {\n      assertFloat16Array(this);\n      var val, start;\n\n      if ((arguments.length <= 1 ? 0 : arguments.length - 1) === 0) {\n        val = convertToNumber(this[0]);\n        start = 1;\n      } else {\n        val = arguments.length <= 1 ? undefined : arguments[1];\n        start = 0;\n      }\n\n      for (var i = start, l = this.length; i < l; ++i) {\n        val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n      }\n\n      return val;\n    }\n  }, {\n    key: \"reduceRight\",\n    value: function reduceRight(callback) {\n      assertFloat16Array(this);\n      var val, start;\n      var length = this.length;\n\n      if ((arguments.length <= 1 ? 0 : arguments.length - 1) === 0) {\n        val = convertToNumber(this[length - 1]);\n        start = length - 1;\n      } else {\n        val = arguments.length <= 1 ? undefined : arguments[1];\n        start = length;\n      }\n\n      for (var i = start; i--;) {\n        val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n      }\n\n      return val;\n    }\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      assertFloat16Array(this);\n      var thisArg = arguments.length <= 1 ? undefined : arguments[1];\n\n      for (var i = 0, l = this.length; i < l; ++i) {\n        callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy);\n      }\n    }\n  }, {\n    key: \"find\",\n    value: function find(callback) {\n      assertFloat16Array(this);\n      var thisArg = arguments.length <= 1 ? undefined : arguments[1];\n\n      for (var i = 0, l = this.length; i < l; ++i) {\n        var _value = convertToNumber(this[i]);\n\n        if (callback.call(thisArg, _value, i, _(this).proxy)) return _value;\n      }\n    }\n  }, {\n    key: \"findIndex\",\n    value: function findIndex(callback) {\n      assertFloat16Array(this);\n      var thisArg = arguments.length <= 1 ? undefined : arguments[1];\n\n      for (var i = 0, l = this.length; i < l; ++i) {\n        var _value2 = convertToNumber(this[i]);\n\n        if (callback.call(thisArg, _value2, i, _(this).proxy)) return i;\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"every\",\n    value: function every(callback) {\n      assertFloat16Array(this);\n      var thisArg = arguments.length <= 1 ? undefined : arguments[1];\n\n      for (var i = 0, l = this.length; i < l; ++i) {\n        if (!callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"some\",\n    value: function some(callback) {\n      assertFloat16Array(this);\n      var thisArg = arguments.length <= 1 ? undefined : arguments[1];\n\n      for (var i = 0, l = this.length; i < l; ++i) {\n        if (callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) return true;\n      }\n\n      return false;\n    } // change element methods\n\n  }, {\n    key: \"set\",\n    value: function set(input) {\n      assertFloat16Array(this);\n      var offset = arguments.length <= 1 ? undefined : arguments[1];\n      var float16bits; // input Float16Array\n\n      if (isFloat16Array(input)) {\n        float16bits = _(input).target; // input others\n      } else {\n        var arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? _toConsumableArray(input) : input;\n        var length = arrayLike.length;\n        float16bits = new Uint16Array(length);\n\n        for (var i = 0, l = arrayLike.length; i < l; ++i) {\n          float16bits[i] = roundToFloat16Bits(arrayLike[i]);\n        }\n      }\n\n      _get(_getPrototypeOf(Float16Array.prototype), \"set\", this).call(this, float16bits, offset);\n    }\n  }, {\n    key: \"reverse\",\n    value: function reverse() {\n      assertFloat16Array(this);\n\n      _get(_getPrototypeOf(Float16Array.prototype), \"reverse\", this).call(this);\n\n      return _(this).proxy;\n    }\n  }, {\n    key: \"fill\",\n    value: function fill(value) {\n      var _get2;\n\n      assertFloat16Array(this);\n\n      for (var _len = arguments.length, opts = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        opts[_key - 1] = arguments[_key];\n      }\n\n      (_get2 = _get(_getPrototypeOf(Float16Array.prototype), \"fill\", this)).call.apply(_get2, [this, roundToFloat16Bits(value)].concat(opts));\n\n      return _(this).proxy;\n    }\n  }, {\n    key: \"copyWithin\",\n    value: function copyWithin(target, start) {\n      var _get3;\n\n      assertFloat16Array(this);\n\n      for (var _len2 = arguments.length, opts = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n        opts[_key2 - 2] = arguments[_key2];\n      }\n\n      (_get3 = _get(_getPrototypeOf(Float16Array.prototype), \"copyWithin\", this)).call.apply(_get3, [this, target, start].concat(opts));\n\n      return _(this).proxy;\n    }\n  }, {\n    key: \"sort\",\n    value: function sort() {\n      assertFloat16Array(this);\n      var compareFunction = arguments.length <= 0 ? undefined : arguments[0];\n\n      if (compareFunction === undefined) {\n        compareFunction = defaultCompareFunction;\n      }\n\n      var _convertToNumber = memoize(convertToNumber);\n\n      _get(_getPrototypeOf(Float16Array.prototype), \"sort\", this).call(this, function (x, y) {\n        return compareFunction(_convertToNumber(x), _convertToNumber(y));\n      });\n\n      return _(this).proxy;\n    } // copy element methods\n\n  }, {\n    key: \"slice\",\n    value: function slice() {\n      assertFloat16Array(this);\n      var float16bits; // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n\n      for (var _len3 = arguments.length, opts = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        opts[_key3] = arguments[_key3];\n      }\n\n      try {\n        var _get4;\n\n        float16bits = (_get4 = _get(_getPrototypeOf(Float16Array.prototype), \"slice\", this)).call.apply(_get4, [this].concat(opts));\n      } catch (e) {\n        if (e instanceof TypeError) {\n          var uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n          float16bits = uint16.slice.apply(uint16, opts);\n        } else {\n          throw e;\n        }\n      }\n\n      return new Float16Array(float16bits.buffer);\n    }\n  }, {\n    key: \"subarray\",\n    value: function subarray() {\n      assertFloat16Array(this);\n      var float16bits; // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n\n      for (var _len4 = arguments.length, opts = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        opts[_key4] = arguments[_key4];\n      }\n\n      try {\n        var _get5;\n\n        float16bits = (_get5 = _get(_getPrototypeOf(Float16Array.prototype), \"subarray\", this)).call.apply(_get5, [this].concat(opts));\n      } catch (e) {\n        if (e instanceof TypeError) {\n          var uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n          float16bits = uint16.subarray.apply(uint16, opts);\n        } else {\n          throw e;\n        }\n      }\n\n      return new Float16Array(float16bits.buffer, float16bits.byteOffset, float16bits.length);\n    } // contains methods\n\n  }, {\n    key: \"indexOf\",\n    value: function indexOf(element) {\n      assertFloat16Array(this);\n      var length = this.length;\n      var from = ToInteger(arguments.length <= 1 ? undefined : arguments[1]);\n\n      if (from < 0) {\n        from += length;\n        if (from < 0) from = 0;\n      }\n\n      for (var i = from, l = length; i < l; ++i) {\n        if (convertToNumber(this[i]) === element) return i;\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"lastIndexOf\",\n    value: function lastIndexOf(element) {\n      assertFloat16Array(this);\n      var length = this.length;\n      var from = ToInteger(arguments.length <= 1 ? undefined : arguments[1]);\n      from = from === 0 ? length : from + 1;\n\n      if (from >= 0) {\n        from = from < length ? from : length;\n      } else {\n        from += length;\n      }\n\n      for (var i = from; i--;) {\n        if (convertToNumber(this[i]) === element) return i;\n      }\n\n      return -1;\n    }\n  }, {\n    key: \"includes\",\n    value: function includes(element) {\n      assertFloat16Array(this);\n      var length = this.length;\n      var from = ToInteger(arguments.length <= 1 ? undefined : arguments[1]);\n\n      if (from < 0) {\n        from += length;\n        if (from < 0) from = 0;\n      }\n\n      var isNaN = Number.isNaN(element);\n\n      for (var i = from, l = length; i < l; ++i) {\n        var _value3 = convertToNumber(this[i]);\n\n        if (isNaN && Number.isNaN(_value3)) return true;\n        if (_value3 === element) return true;\n      }\n\n      return false;\n    } // string methods\n\n  }, {\n    key: \"join\",\n    value: function join() {\n      assertFloat16Array(this);\n      var array = copyToArray(this);\n      return array.join.apply(array, arguments);\n    }\n  }, {\n    key: \"toLocaleString\",\n    value: function toLocaleString() {\n      assertFloat16Array(this);\n      var array = copyToArray(this);\n      return array.toLocaleString.apply(array, arguments);\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      if (isFloat16Array(this)) return \"Float16Array\";\n    }\n  }], [{\n    key: \"from\",\n    value: function from(src) {\n      if ((arguments.length <= 1 ? 0 : arguments.length - 1) === 0) return new Float16Array(Uint16Array.from(src, roundToFloat16Bits).buffer);\n      var mapFunc = arguments.length <= 1 ? undefined : arguments[1];\n      var thisArg = arguments.length <= 2 ? undefined : arguments[2];\n      return new Float16Array(Uint16Array.from(src, function (val) {\n        for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n          args[_key5 - 1] = arguments[_key5];\n        }\n\n        return roundToFloat16Bits(mapFunc.call.apply(mapFunc, [this, val].concat(args)));\n      }, thisArg).buffer);\n    }\n  }, {\n    key: \"of\",\n    value: function of() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return new Float16Array(args);\n    }\n  }]);\n\n  return Float16Array;\n}( /*#__PURE__*/_wrapNativeSuper(Uint16Array));\n\nexport { Float16Array as default };\nvar Float16Array$prototype = Float16Array.prototype;\nvar defaultFloat16ArrayMethods = new WeakSet();\n\nvar _iterator4 = _createForOfIteratorHelper(Reflect.ownKeys(Float16Array$prototype)),\n    _step4;\n\ntry {\n  for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n    var key = _step4.value;\n    var val = Float16Array$prototype[key];\n    if (typeof val === \"function\") defaultFloat16ArrayMethods.add(val);\n  }\n} catch (err) {\n  _iterator4.e(err);\n} finally {\n  _iterator4.f();\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/@petamoriken/float16/src/Float16Array.js"],"names":["ToInteger","defaultCompareFunction","isStringNumberKey","isArrayBuffer","createPrivateStorage","memoize","roundToFloat16Bits","convertToNumber","isTypedArrayIndexedPropertyWritable","_","isFloat16Array","target","Float16Array","assertFloat16Array","TypeError","isDefaultFloat16ArrayMethods","defaultFloat16ArrayMethods","has","copyToArray","float16bits","length","array","Array","i","applyHandler","apply","func","thisArg","args","Reflect","handler","get","key","wrapper","undefined","ret","proxy","Proxy","set","value","Object","isFrozen","getPrototypeOf","setPrototypeOf","prototype","defineProperty","descriptor","deleteProperty","isExtensible","preventExtensions","getOwnPropertyDescriptor","ownKeys","input","byteOffset","arrayLike","Symbol","iterator","arguments","create","val","callback","l","push","call","start","offset","Uint16Array","opts","compareFunction","_convertToNumber","x","y","e","uint16","buffer","slice","subarray","element","from","isNaN","Number","join","toLocaleString","toStringTag","src","mapFunc","Float16Array$prototype","WeakSet","add"],"mappings":"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","sourcesContent":["import { ToInteger, defaultCompareFunction } from \"./spec\";\nimport { isStringNumberKey, isArrayBuffer } from \"./is\";\nimport { createPrivateStorage } from \"./private\";\n\nimport memoize from \"lodash-es/memoize\";\n\nimport { roundToFloat16Bits, convertToNumber } from \"./lib\";\n\nimport { isTypedArrayIndexedPropertyWritable } from \"./bug\";\n\n\nconst _ = createPrivateStorage();\n\n\nfunction isFloat16Array(target) {\n    return target instanceof Float16Array;\n}\n\nfunction assertFloat16Array(target) {\n    if(!isFloat16Array(target)) {\n        throw new TypeError(\"This is not a Float16Array\");\n    }\n}\n\nfunction isDefaultFloat16ArrayMethods(target) {\n    return typeof target === \"function\" && defaultFloat16ArrayMethods.has(target);\n}\n\n\nfunction copyToArray(float16bits) {\n    const length = float16bits.length;\n\n    const array = new Array(length);\n    for(let i = 0; i < length; ++i) {\n        array[i] = convertToNumber(float16bits[i]);\n    }\n\n    return array;\n}\n\n// proxy handler\nconst applyHandler = {\n    apply(func, thisArg, args) {\n        // peel off proxy\n        if(isFloat16Array(thisArg) && isDefaultFloat16ArrayMethods(func))\n            return Reflect.apply(func, _(thisArg).target ,args);\n\n        return Reflect.apply(func, thisArg, args);\n    }\n};\n\nconst handler = {\n    get(target, key) {\n        let wrapper = null;\n        if(!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if(isStringNumberKey(key)) {\n            return Reflect.has(target, key) ? convertToNumber(Reflect.get(target, key)) : undefined;\n\n        } else {\n            const ret = wrapper !== null && Reflect.has(wrapper, key) ? Reflect.get(wrapper, key) : Reflect.get(target, key);\n\n            if(typeof ret !== \"function\")\n                return ret;\n\n            // TypedArray methods can't be called by Proxy Object\n            let proxy = _(ret).proxy;\n\n            if(proxy === undefined) {\n                proxy = _(ret).proxy = new Proxy(ret, applyHandler);\n            }\n\n            return proxy;\n        }\n    },\n\n    set(target, key, value) {\n        let wrapper = null;\n        if(!isTypedArrayIndexedPropertyWritable) {\n            wrapper = target;\n            target = _(wrapper).target;\n        }\n\n        if(isStringNumberKey(key)) {\n            return Reflect.set(target, key, roundToFloat16Bits(value));\n\n        } else {\n            // frozen object can't change prototype property\n            if(wrapper !== null && (!Reflect.has(target, key) || Object.isFrozen(wrapper))) {\n                return Reflect.set(wrapper, key, value);\n\n            } else {\n                return Reflect.set(target, key, value);\n            }\n        }\n    }\n};\n\nif(!isTypedArrayIndexedPropertyWritable) {\n    handler.getPrototypeOf = wrapper => Reflect.getPrototypeOf(_(wrapper).target);\n    handler.setPrototypeOf = (wrapper, prototype) => Reflect.setPrototypeOf(_(wrapper).target, prototype);\n\n    handler.defineProperty = (wrapper, key, descriptor) => {\n        const target = _(wrapper).target;\n        return !Reflect.has(target, key) || Object.isFrozen(wrapper) ? Reflect.defineProperty(wrapper, key, descriptor) : Reflect.defineProperty(target, key, descriptor);\n    };\n    handler.deleteProperty = (wrapper, key) => {\n        const target = _(wrapper).target;\n        return Reflect.has(wrapper, key) ? Reflect.deleteProperty(wrapper, key) : Reflect.deleteProperty(target, key);\n    };\n\n    handler.has = (wrapper, key) => Reflect.has(wrapper, key) || Reflect.has(_(wrapper).target, key);\n\n    handler.isExtensible = wrapper => Reflect.isExtensible(wrapper);\n    handler.preventExtensions = wrapper => Reflect.preventExtensions(wrapper);\n\n    handler.getOwnPropertyDescriptor = (wrapper, key) => Reflect.getOwnPropertyDescriptor(wrapper, key);\n    handler.ownKeys = wrapper => Reflect.ownKeys(wrapper);\n}\n\n\nexport default class Float16Array extends Uint16Array {\n\n    constructor(input, byteOffset, length) {\n\n        // input Float16Array\n        if(isFloat16Array(input)) {\n            super(_(input).target);\n\n        // 22.2.1.3, 22.2.1.4 TypedArray, Array, ArrayLike, Iterable\n        } else if(input !== null && typeof input === \"object\" && !isArrayBuffer(input)) {\n            // if input is not ArrayLike and Iterable, get Array\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n\n            const length = arrayLike.length;\n            super(length);\n\n            for(let i = 0; i < length; ++i) {\n                // super (Uint16Array)\n                this[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n\n        // 22.2.1.2, 22.2.1.5 primitive, ArrayBuffer\n        } else {\n            switch(arguments.length) {\n                case 0:\n                    super();\n                    break;\n\n                case 1:\n                    super(input);\n                    break;\n\n                case 2:\n                    super(input, byteOffset);\n                    break;\n\n                case 3:\n                    super(input, byteOffset, length);\n                    break;\n\n                default:\n                    super(...arguments);\n            }\n        }\n\n        let proxy;\n\n        if(isTypedArrayIndexedPropertyWritable) {\n            proxy = new Proxy(this, handler);\n        } else {\n            const wrapper = Object.create(null);\n            _(wrapper).target = this;\n            proxy = new Proxy(wrapper, handler);\n        }\n\n        // proxy private storage\n        _(proxy).target = this;\n\n        // this private storage\n        _(this).proxy = proxy;\n\n        return proxy;\n    }\n\n    // static methods\n    static from(src, ...opts) {\n        if(opts.length === 0)\n            return new Float16Array(Uint16Array.from(src, roundToFloat16Bits).buffer);\n\n        const mapFunc = opts[0];\n        const thisArg = opts[1];\n\n        return new Float16Array(Uint16Array.from(src, function(val, ...args) {\n            return roundToFloat16Bits(mapFunc.call(this, val, ...args));\n        }, thisArg).buffer);\n    }\n\n    static of(...args) {\n        return new Float16Array(args);\n    }\n\n    // iterate methods\n    * [Symbol.iterator]() {\n        for(const val of super[Symbol.iterator]()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    keys() {\n        return super.keys();\n    }\n\n    * values() {\n        for(const val of super.values()) {\n            yield convertToNumber(val);\n        }\n    }\n\n    * entries() {\n        for(const [i, val] of super.entries()) {\n            yield [i, convertToNumber(val)];\n        }\n    }\n\n    // functional methods\n    map(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            array.push(callback.call(thisArg, val, i, _(this).proxy));\n        }\n\n        return new Float16Array(array);\n    }\n\n    filter(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        const array = [];\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const val = convertToNumber(this[i]);\n            if(callback.call(thisArg, val, i, _(this).proxy)) {\n                array.push(val);\n            }\n        }\n\n        return new Float16Array(array);\n    }\n\n    reduce(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        if(opts.length === 0) {\n            val = convertToNumber(this[0]);\n            start = 1;\n        } else {\n            val = opts[0];\n            start = 0;\n        }\n\n        for(let i = start, l = this.length; i < l; ++i) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    reduceRight(callback, ...opts) {\n        assertFloat16Array(this);\n\n        let val, start;\n\n        const length = this.length;\n        if(opts.length === 0) {\n            val = convertToNumber(this[length - 1]);\n            start = length - 1;\n        } else {\n            val = opts[0];\n            start = length;\n        }\n\n        for(let i = start; i--;) {\n            val = callback(val, convertToNumber(this[i]), i, _(this).proxy);\n        }\n\n        return val;\n    }\n\n    forEach(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy);\n        }\n    }\n\n    find(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if(callback.call(thisArg, value, i, _(this).proxy)) return value;\n        }\n    }\n\n    findIndex(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n            if(callback.call(thisArg, value, i, _(this).proxy)) return i;\n        }\n\n        return -1;\n    }\n\n    every(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if(!callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) return false;\n        }\n\n        return true;\n    }\n\n    some(callback, ...opts) {\n        assertFloat16Array(this);\n\n        const thisArg = opts[0];\n\n        for(let i = 0, l = this.length; i < l; ++i) {\n            if(callback.call(thisArg, convertToNumber(this[i]), i, _(this).proxy)) return true;\n        }\n\n        return false;\n    }\n\n    // change element methods\n    set(input, ...opts) {\n        assertFloat16Array(this);\n\n        const offset = opts[0];\n\n        let float16bits;\n\n        // input Float16Array\n        if(isFloat16Array(input)) {\n            float16bits = _(input).target;\n\n        // input others\n        } else {\n            const arrayLike = !Reflect.has(input, \"length\") && input[Symbol.iterator] !== undefined ? [...input] : input;\n            const length = arrayLike.length;\n\n            float16bits = new Uint16Array(length);\n            for(let i = 0, l = arrayLike.length; i < l; ++i) {\n                float16bits[i] = roundToFloat16Bits(arrayLike[i]);\n            }\n        }\n\n        super.set(float16bits, offset);\n    }\n\n    reverse() {\n        assertFloat16Array(this);\n\n        super.reverse();\n\n        return _(this).proxy;\n    }\n\n    fill(value, ...opts) {\n        assertFloat16Array(this);\n\n        super.fill(roundToFloat16Bits(value), ...opts);\n\n        return _(this).proxy;\n    }\n\n    copyWithin(target, start, ...opts) {\n        assertFloat16Array(this);\n\n        super.copyWithin(target, start, ...opts);\n\n        return _(this).proxy;\n    }\n\n    sort(...opts) {\n        assertFloat16Array(this);\n\n        let compareFunction = opts[0];\n\n        if(compareFunction === undefined) {\n            compareFunction = defaultCompareFunction;\n        }\n\n        const _convertToNumber = memoize(convertToNumber);\n\n        super.sort((x, y) => compareFunction(_convertToNumber(x), _convertToNumber(y)));\n\n        return _(this).proxy;\n    }\n\n    // copy element methods\n    slice(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.slice(...opts);\n        } catch(e) {\n            if(e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.slice(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer);\n    }\n\n    subarray(...opts) {\n        assertFloat16Array(this);\n\n        let float16bits;\n\n        // V8, SpiderMonkey, JavaScriptCore, Chakra throw TypeError\n        try {\n            float16bits = super.subarray(...opts);\n        } catch(e) {\n            if(e instanceof TypeError) {\n                const uint16 = new Uint16Array(this.buffer, this.byteOffset, this.length);\n                float16bits = uint16.subarray(...opts);\n            } else {\n                throw e;\n            }\n        }\n\n        return new Float16Array(float16bits.buffer, float16bits.byteOffset, float16bits.length);\n    }\n\n    // contains methods\n    indexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if(from < 0) {\n            from += length;\n            if(from < 0)\n                from = 0;\n        }\n\n        for(let i = from, l = length; i < l; ++i) {\n            if(convertToNumber(this[i]) === element)\n                return i;\n        }\n\n        return -1;\n    }\n\n    lastIndexOf(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        from = from === 0 ? length : from + 1;\n\n        if(from >= 0) {\n            from = from < length ? from : length;\n        } else {\n            from += length;\n        }\n\n        for(let i = from; i--;) {\n            if(convertToNumber(this[i]) === element)\n                return i;\n        }\n\n        return -1;\n    }\n\n    includes(element, ...opts) {\n        assertFloat16Array(this);\n\n        const length = this.length;\n\n        let from = ToInteger(opts[0]);\n\n        if(from < 0) {\n            from += length;\n            if(from < 0)\n                from = 0;\n        }\n\n        const isNaN = Number.isNaN(element);\n        for(let i = from, l = length; i < l; ++i) {\n            const value = convertToNumber(this[i]);\n\n            if(isNaN && Number.isNaN(value))\n                return true;\n\n            if(value === element)\n                return true;\n        }\n\n        return false;\n    }\n\n    // string methods\n    join(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        return array.join(...opts);\n    }\n\n    toLocaleString(...opts) {\n        assertFloat16Array(this);\n\n        const array = copyToArray(this);\n\n        return array.toLocaleString(...opts);\n    }\n\n    get [Symbol.toStringTag]() {\n        if(isFloat16Array(this))\n            return \"Float16Array\";\n    }\n}\n\nconst Float16Array$prototype = Float16Array.prototype;\n\nconst defaultFloat16ArrayMethods = new WeakSet();\nfor(const key of Reflect.ownKeys(Float16Array$prototype)) {\n    const val = Float16Array$prototype[key];\n    if(typeof val === \"function\")\n        defaultFloat16ArrayMethods.add(val);\n}\n"]},"metadata":{},"sourceType":"module"}