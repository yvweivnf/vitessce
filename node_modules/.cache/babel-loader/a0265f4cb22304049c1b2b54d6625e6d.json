{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { deepEqual } from '../utils/deep-equal';\n\nvar LayerExtension = /*#__PURE__*/function () {\n  function LayerExtension() {\n    _classCallCheck(this, LayerExtension);\n\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.opts = opts;\n  }\n\n  _createClass(LayerExtension, [{\n    key: \"equals\",\n    value: function equals(extension) {\n      if (this === extension) {\n        return true;\n      }\n\n      return this.constructor === extension.constructor && deepEqual(this.opts, extension.opts);\n    }\n  }, {\n    key: \"getShaders\",\n    value: function getShaders(extension) {\n      return null;\n    }\n  }, {\n    key: \"getSubLayerProps\",\n    value: function getSubLayerProps(extension) {\n      var _extension$constructo = extension.constructor.defaultProps,\n          defaultProps = _extension$constructo === void 0 ? {} : _extension$constructo;\n      var newProps = {\n        updateTriggers: {}\n      };\n\n      for (var key in defaultProps) {\n        if (key in this.props) {\n          var propDef = defaultProps[key];\n          var propValue = this.props[key];\n          newProps[key] = propValue;\n\n          if (propDef && propDef.type === 'accessor') {\n            newProps.updateTriggers[key] = this.props.updateTriggers[key];\n\n            if (typeof propValue === 'function') {\n              newProps[key] = this.getSubLayerAccessor(propValue, true);\n            }\n          }\n        }\n      }\n\n      return newProps;\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState(context, extension) {}\n  }, {\n    key: \"updateState\",\n    value: function updateState(params, extension) {}\n  }, {\n    key: \"draw\",\n    value: function draw(params, extension) {}\n  }, {\n    key: \"finalizeState\",\n    value: function finalizeState(extension) {}\n  }]);\n\n  return LayerExtension;\n}();\n\nexport { LayerExtension as default };","map":{"version":3,"sources":["../../../src/lib/layer-extension.js"],"names":["constructor","opts","extension","deepEqual","defaultProps","newProps","updateTriggers","key","propDef","propValue"],"mappings":";;AAmBA,SAAA,SAAA,QAAA,qBAAA;;IAEe,c;AACbA,4BAAuB;AAAA;;AAAA,QAAXC,IAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AACrB,SAAA,IAAA,GAAA,IAAA;AACD;;;;2BAEK,S,EAAY;AAChB,UAAI,SAAJ,SAAA,EAAwB;AACtB,eAAA,IAAA;AACD;;AAED,aAAO,KAAA,WAAA,KAAqBC,SAAS,CAA9B,WAAA,IAA8CC,SAAS,CAAC,KAAD,IAAA,EAAYD,SAAS,CAAnF,IAA8D,CAA9D;AACD;;;+BAES,S,EAAY;AACpB,aAAA,IAAA;AACD;;;qCAEe,S,EAAY;AAAA,kCACEA,SAAS,CAArC,WAD0B,CACnBE,YADmB;AAAA,UACnBA,YADmB,sCACJ,EADI;AAE1B,UAAMC,QAAQ,GAAG;AACfC,QAAAA,cAAc,EAAE;AADD,OAAjB;;AAKA,WAAK,IAAL,GAAA,IAAA,YAAA,EAAgC;AAC9B,YAAIC,GAAG,IAAI,KAAX,KAAA,EAAuB;AACrB,cAAMC,OAAO,GAAGJ,YAAY,CAA5B,GAA4B,CAA5B;AACA,cAAMK,SAAS,GAAG,KAAA,KAAA,CAAlB,GAAkB,CAAlB;AACAJ,UAAAA,QAAQ,CAARA,GAAQ,CAARA,GAAAA,SAAAA;;AACA,cAAIG,OAAO,IAAIA,OAAO,CAAPA,IAAAA,KAAf,UAAA,EAA4C;AAC1CH,YAAAA,QAAQ,CAARA,cAAAA,CAAAA,GAAAA,IAA+B,KAAA,KAAA,CAAA,cAAA,CAA/BA,GAA+B,CAA/BA;;AACA,gBAAI,OAAA,SAAA,KAAJ,UAAA,EAAqC;AACnCA,cAAAA,QAAQ,CAARA,GAAQ,CAARA,GAAgB,KAAA,mBAAA,CAAA,SAAA,EAAhBA,IAAgB,CAAhBA;AACD;AACF;AACF;AACF;;AAED,aAAA,QAAA;AACD;;;oCAEc,O,EAAA,S,EAAqB,CAAE;;;gCAE3B,M,EAAA,S,EAAoB,CAAE;;;yBAE7B,M,EAAA,S,EAAoB,CAAE;;;kCAEb,S,EAAY,CAAE;;;;;;SA/Cd,c","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\nimport {deepEqual} from '../utils/deep-equal';\n\nexport default class LayerExtension {\n  constructor(opts = {}) {\n    this.opts = opts;\n  }\n\n  equals(extension) {\n    if (this === extension) {\n      return true;\n    }\n\n    return this.constructor === extension.constructor && deepEqual(this.opts, extension.opts);\n  }\n\n  getShaders(extension) {\n    return null;\n  }\n\n  getSubLayerProps(extension) {\n    const {defaultProps = {}} = extension.constructor;\n    const newProps = {\n      updateTriggers: {}\n    };\n\n    /* eslint-disable max-depth */\n    for (const key in defaultProps) {\n      if (key in this.props) {\n        const propDef = defaultProps[key];\n        const propValue = this.props[key];\n        newProps[key] = propValue;\n        if (propDef && propDef.type === 'accessor') {\n          newProps.updateTriggers[key] = this.props.updateTriggers[key];\n          if (typeof propValue === 'function') {\n            newProps[key] = this.getSubLayerAccessor(propValue, true);\n          }\n        }\n      }\n    }\n    /* eslint-enable max-depth */\n    return newProps;\n  }\n\n  initializeState(context, extension) {}\n\n  updateState(params, extension) {}\n\n  draw(params, extension) {}\n\n  finalizeState(extension) {}\n}\n"]},"metadata":{},"sourceType":"module"}