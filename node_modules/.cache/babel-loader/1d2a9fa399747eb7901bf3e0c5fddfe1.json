{"ast":null,"code":"import React from'react';import TableCell from'@material-ui/core/TableCell';import TableRow from'@material-ui/core/TableRow';import TextField from'@material-ui/core/TextField';import{useStyles}from'../shared-plot-options/styles';import OptionSelect from'../shared-plot-options/OptionSelect';export default function GatingScatterplotOptions(props){var gatingFeatureSelectionX=props.gatingFeatureSelectionX,setGatingFeatureSelectionX=props.setGatingFeatureSelectionX,gatingFeatureSelectionY=props.gatingFeatureSelectionY,setGatingFeatureSelectionY=props.setGatingFeatureSelectionY,gatingFeatureValueTransform=props.gatingFeatureValueTransform,setGatingFeatureValueTransform=props.setGatingFeatureValueTransform,gatingFeatureValueTransformCoefficient=props.gatingFeatureValueTransformCoefficient,setGatingFeatureValueTransformCoefficient=props.setGatingFeatureValueTransformCoefficient,geneSelectOptions=props.geneSelectOptions,transformOptions=props.transformOptions;var classes=useStyles();// Handlers for custom option field changes.\nvar handleGeneSelectChange=function handleGeneSelectChange(event){var options=event.target.options;var newValues=[];for(var i=0,l=options.length;i<l;i+=1){if(options[i].selected){newValues.push(options[i].value);}}if(newValues.length===1&&gatingFeatureSelectionX&&!gatingFeatureSelectionY&&newValues[0]!==gatingFeatureSelectionX){setGatingFeatureSelectionY(newValues[0]);}else if(newValues.length<=2){setGatingFeatureSelectionX(newValues[0]);setGatingFeatureSelectionY(newValues[1]);}};var handleTransformChange=function handleTransformChange(event){setGatingFeatureValueTransform(event.target.value===''?null:event.target.value);};// Feels a little hacky, but I think this is the best way to handle\n// the limitations of the v4 material-ui number input.\nvar handleTransformCoefficientChange=function handleTransformCoefficientChange(event){var value=event.target.value;if(!value){setGatingFeatureValueTransformCoefficient(value);}else{var newCoefficient=Number(value);if(!Number.isNaN(newCoefficient)&&newCoefficient>=0){setGatingFeatureValueTransformCoefficient(value);}}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableRow,{key:\"gene-option-row\"},/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},\"Genes\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(OptionSelect,{key:\"gating-gene-select\",multiple:true,className:classes.select,value:[gatingFeatureSelectionX,gatingFeatureSelectionY].filter(function(v){return v;}),onChange:handleGeneSelectChange,inputProps:{id:'scatterplot-gene-select'}},geneSelectOptions.map(function(name){return/*#__PURE__*/React.createElement(\"option\",{key:name,value:name},name);})))),/*#__PURE__*/React.createElement(TableRow,{key:\"transform-option-row\"},/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},\"Transform\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(OptionSelect,{key:\"gating-transform-select\",className:classes.select,value:gatingFeatureValueTransform===null?'':gatingFeatureValueTransform,onChange:handleTransformChange,inputProps:{id:'scatterplot-transform-select'}},transformOptions.map(function(opt){return/*#__PURE__*/React.createElement(\"option\",{key:opt.name,value:opt.value===null?'':opt.value},opt.name);})))),/*#__PURE__*/React.createElement(TableRow,{key:\"transform-coefficient-option-row\"},/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},\"Transform Coefficient\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(TextField,{label:\"Number\",type:\"number\",onChange:handleTransformCoefficientChange,value:gatingFeatureValueTransformCoefficient,InputLabelProps:{shrink:true}}))));}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/gating/GatingScatterplotOptions.js"],"names":["React","TableCell","TableRow","TextField","useStyles","OptionSelect","GatingScatterplotOptions","props","gatingFeatureSelectionX","setGatingFeatureSelectionX","gatingFeatureSelectionY","setGatingFeatureSelectionY","gatingFeatureValueTransform","setGatingFeatureValueTransform","gatingFeatureValueTransformCoefficient","setGatingFeatureValueTransformCoefficient","geneSelectOptions","transformOptions","classes","handleGeneSelectChange","event","options","target","newValues","i","l","length","selected","push","value","handleTransformChange","handleTransformCoefficientChange","newCoefficient","Number","isNaN","labelCell","inputCell","select","filter","v","id","map","name","opt","shrink"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TextField from '@material-ui/core/TextField';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\n\nexport default function GatingScatterplotOptions(props) {\n  const {\n    gatingFeatureSelectionX,\n    setGatingFeatureSelectionX,\n    gatingFeatureSelectionY,\n    setGatingFeatureSelectionY,\n    gatingFeatureValueTransform,\n    setGatingFeatureValueTransform,\n    gatingFeatureValueTransformCoefficient,\n    setGatingFeatureValueTransformCoefficient,\n    geneSelectOptions,\n    transformOptions,\n  } = props;\n\n  const classes = useStyles();\n\n  // Handlers for custom option field changes.\n  const handleGeneSelectChange = (event) => {\n    const { options } = event.target;\n    const newValues = [];\n    for (let i = 0, l = options.length; i < l; i += 1) {\n      if (options[i].selected) {\n        newValues.push(options[i].value);\n      }\n    }\n\n    if (newValues.length === 1\n          && gatingFeatureSelectionX\n          && !gatingFeatureSelectionY\n          && newValues[0] !== gatingFeatureSelectionX) {\n      setGatingFeatureSelectionY(newValues[0]);\n    } else if (newValues.length <= 2) {\n      setGatingFeatureSelectionX(newValues[0]);\n      setGatingFeatureSelectionY(newValues[1]);\n    }\n  };\n\n  const handleTransformChange = (event) => {\n    setGatingFeatureValueTransform(event.target.value === '' ? null : event.target.value);\n  };\n\n  // Feels a little hacky, but I think this is the best way to handle\n  // the limitations of the v4 material-ui number input.\n  const handleTransformCoefficientChange = (event) => {\n    const { value } = event.target;\n    if (!value) {\n      setGatingFeatureValueTransformCoefficient(value);\n    } else {\n      const newCoefficient = Number(value);\n      if (!Number.isNaN(newCoefficient) && newCoefficient >= 0) {\n        setGatingFeatureValueTransformCoefficient(value);\n      }\n    }\n  };\n\n  return (\n    <>\n      <TableRow key=\"gene-option-row\">\n        <TableCell className={classes.labelCell}>\n            Genes\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            key=\"gating-gene-select\"\n            multiple\n            className={classes.select}\n            value={[gatingFeatureSelectionX, gatingFeatureSelectionY].filter(v => v)}\n            onChange={handleGeneSelectChange}\n            inputProps={{\n              id: 'scatterplot-gene-select',\n            }}\n          >\n            {geneSelectOptions.map(name => (\n              <option key={name} value={name}>\n                {name}\n              </option>\n            ))}\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow key=\"transform-option-row\">\n        <TableCell className={classes.labelCell}>\n          Transform\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            key=\"gating-transform-select\"\n            className={classes.select}\n            value={gatingFeatureValueTransform === null ? '' : gatingFeatureValueTransform}\n            onChange={handleTransformChange}\n            inputProps={{\n              id: 'scatterplot-transform-select',\n            }}\n          >\n            {transformOptions.map(opt => (\n              <option key={opt.name} value={opt.value === null ? '' : opt.value}>\n                {opt.name}\n              </option>\n            ))}\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow key=\"transform-coefficient-option-row\">\n        <TableCell className={classes.labelCell}>\n              Transform Coefficient\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <TextField\n            label=\"Number\"\n            type=\"number\"\n            onChange={handleTransformCoefficientChange}\n            value={gatingFeatureValueTransformCoefficient}\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </TableCell>\n      </TableRow>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}