{"ast":null,"code":"import _pt from \"prop-types\";\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport shallowEqual from './utils/shallowEqual';\nimport updateMultipleDatasetsInView from './utils/updateMultipleDatasetsInView';\nimport VegaEmbed from './VegaEmbed';\nimport { NOOP } from './constants';\nconst EMPTY = {};\nexport default class Vega extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"vegaEmbed\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"handleNewView\", view => {\n      this.update();\n      const {\n        onNewView = NOOP\n      } = this.props;\n      onNewView(view);\n    });\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!shallowEqual(this.props.data, prevProps.data)) {\n      this.update();\n    }\n  }\n\n  update() {\n    const {\n      data\n    } = this.props;\n\n    if (this.vegaEmbed.current && data && Object.keys(data).length > 0) {\n      this.vegaEmbed.current.modifyView(view => {\n        updateMultipleDatasetsInView(view, data);\n        view.resize().run();\n      });\n    }\n  }\n\n  render() {\n    const {\n      data,\n      ...restProps\n    } = this.props;\n    return /*#__PURE__*/React.createElement(VegaEmbed, _extends({\n      ref: this.vegaEmbed\n    }, restProps, {\n      onNewView: this.handleNewView\n    }));\n  }\n\n}\n\n_defineProperty(Vega, \"defaultProps\", {\n  data: EMPTY\n});","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/react-vega/esm/Vega.js"],"names":["_pt","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","obj","value","defineProperty","enumerable","configurable","writable","React","shallowEqual","updateMultipleDatasetsInView","VegaEmbed","NOOP","EMPTY","Vega","PureComponent","constructor","args","createRef","view","update","onNewView","props","componentDidMount","componentDidUpdate","prevProps","data","vegaEmbed","current","keys","modifyView","resize","run","render","restProps","createElement","ref","handleNewView"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport shallowEqual from './utils/shallowEqual';\nimport updateMultipleDatasetsInView from './utils/updateMultipleDatasetsInView';\nimport VegaEmbed from './VegaEmbed';\nimport { NOOP } from './constants';\nconst EMPTY = {};\nexport default class Vega extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"vegaEmbed\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"handleNewView\", view => {\n      this.update();\n      const {\n        onNewView = NOOP\n      } = this.props;\n      onNewView(view);\n    });\n  }\n\n  componentDidMount() {\n    this.update();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!shallowEqual(this.props.data, prevProps.data)) {\n      this.update();\n    }\n  }\n\n  update() {\n    const {\n      data\n    } = this.props;\n\n    if (this.vegaEmbed.current && data && Object.keys(data).length > 0) {\n      this.vegaEmbed.current.modifyView(view => {\n        updateMultipleDatasetsInView(view, data);\n        view.resize().run();\n      });\n    }\n  }\n\n  render() {\n    const {\n      data,\n      ...restProps\n    } = this.props;\n    return /*#__PURE__*/React.createElement(VegaEmbed, _extends({\n      ref: this.vegaEmbed\n    }, restProps, {\n      onNewView: this.handleNewView\n    }));\n  }\n\n}\n\n_defineProperty(Vega, \"defaultProps\", {\n  data: EMPTY\n});"]},"metadata":{},"sourceType":"module"}