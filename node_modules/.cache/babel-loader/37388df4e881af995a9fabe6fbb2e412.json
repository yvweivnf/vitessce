{"ast":null,"code":"/* eslint-disable no-underscore-dangle */\nimport DataSourceFetchError from '../errors/DataSourceFetchError';\nexport default class JsonSource {\n  constructor({\n    url,\n    requestInit\n  }) {\n    this.url = url;\n    this.requestInit = requestInit;\n  }\n\n  get data() {\n    if (this._data) return this._data;\n    this._data = fetch(this.url, this.requestInit).then(response => {\n      if (!response.ok) {\n        return Promise.reject(new DataSourceFetchError('JsonSource', this.url, response.headers));\n      }\n\n      return response.json(); // eslint-disable-next-line no-console\n    }).catch(() => Promise.reject(new DataSourceFetchError('JsonSource', this.url, {})));\n    return this._data;\n  }\n\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/loaders/data-sources/JsonSource.js"],"names":["DataSourceFetchError","JsonSource","constructor","url","requestInit","data","_data","fetch","then","response","ok","Promise","reject","headers","json","catch"],"mappings":"AAAA;AACA,OAAOA,oBAAP,MAAiC,gCAAjC;AAEA,eAAe,MAAMC,UAAN,CAAiB;AAC9BC,EAAAA,WAAW,CAAC;AAAEC,IAAAA,GAAF;AAAOC,IAAAA;AAAP,GAAD,EAAuB;AAChC,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;AAED,MAAIC,IAAJ,GAAW;AACT,QAAI,KAAKC,KAAT,EAAgB,OAAO,KAAKA,KAAZ;AAChB,SAAKA,KAAL,GAAaC,KAAK,CAAC,KAAKJ,GAAN,EAAW,KAAKC,WAAhB,CAAL,CAAkCI,IAAlC,CAAwCC,QAAD,IAAc;AAChE,UAAI,CAACA,QAAQ,CAACC,EAAd,EAAkB;AAChB,eAAOC,OAAO,CAACC,MAAR,CAAe,IAAIZ,oBAAJ,CAAyB,YAAzB,EAAuC,KAAKG,GAA5C,EAAiDM,QAAQ,CAACI,OAA1D,CAAf,CAAP;AACD;;AACD,aAAOJ,QAAQ,CAACK,IAAT,EAAP,CAJgE,CAKlE;AACC,KANY,EAMVC,KANU,CAMJ,MAAMJ,OAAO,CAACC,MAAR,CAAe,IAAIZ,oBAAJ,CAAyB,YAAzB,EAAuC,KAAKG,GAA5C,EAAiD,EAAjD,CAAf,CANF,CAAb;AAOA,WAAO,KAAKG,KAAZ;AACD;;AAhB6B","sourcesContent":["/* eslint-disable no-underscore-dangle */\nimport DataSourceFetchError from '../errors/DataSourceFetchError';\n\nexport default class JsonSource {\n  constructor({ url, requestInit }) {\n    this.url = url;\n    this.requestInit = requestInit;\n  }\n\n  get data() {\n    if (this._data) return this._data;\n    this._data = fetch(this.url, this.requestInit).then((response) => {\n      if (!response.ok) {\n        return Promise.reject(new DataSourceFetchError('JsonSource', this.url, response.headers));\n      }\n      return response.json();\n    // eslint-disable-next-line no-console\n    }).catch(() => Promise.reject(new DataSourceFetchError('JsonSource', this.url, {})));\n    return this._data;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}