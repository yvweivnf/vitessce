{"ast":null,"code":"import React,{useCallback}from'react';import debounce from'lodash/debounce';import Checkbox from'@material-ui/core/Checkbox';import Slider from'@material-ui/core/Slider';import TableCell from'@material-ui/core/TableCell';import TableRow from'@material-ui/core/TableRow';import{capitalize}from'../../utils';import{useStyles}from'../shared-plot-options/styles';import OptionsContainer from'../shared-plot-options/OptionsContainer';import OptionSelect from'../shared-plot-options/OptionSelect';import CellColorEncodingOption from'../shared-plot-options/CellColorEncodingOption';import{GLSL_COLORMAPS}from'../../layers/constants';export default function ScatterplotOptions(props){var children=props.children,observationsLabel=props.observationsLabel,cellRadius=props.cellRadius,setCellRadius=props.setCellRadius,cellRadiusMode=props.cellRadiusMode,setCellRadiusMode=props.setCellRadiusMode,cellOpacity=props.cellOpacity,setCellOpacity=props.setCellOpacity,cellOpacityMode=props.cellOpacityMode,setCellOpacityMode=props.setCellOpacityMode,cellSetLabelsVisible=props.cellSetLabelsVisible,setCellSetLabelsVisible=props.setCellSetLabelsVisible,cellSetLabelSize=props.cellSetLabelSize,setCellSetLabelSize=props.setCellSetLabelSize,cellSetPolygonsVisible=props.cellSetPolygonsVisible,setCellSetPolygonsVisible=props.setCellSetPolygonsVisible,cellColorEncoding=props.cellColorEncoding,setCellColorEncoding=props.setCellColorEncoding,geneExpressionColormap=props.geneExpressionColormap,setGeneExpressionColormap=props.setGeneExpressionColormap,geneExpressionColormapRange=props.geneExpressionColormapRange,setGeneExpressionColormapRange=props.setGeneExpressionColormapRange;var observationsLabelNice=capitalize(observationsLabel);var classes=useStyles();function handleCellRadiusModeChange(event){setCellRadiusMode(event.target.value);}function handleCellOpacityModeChange(event){setCellOpacityMode(event.target.value);}function handleRadiusChange(event,value){setCellRadius(value);}function handleOpacityChange(event,value){setCellOpacity(value);}function handleLabelVisibilityChange(event){setCellSetLabelsVisible(event.target.checked);}function handleLabelSizeChange(event,value){setCellSetLabelSize(value);}function handlePolygonVisibilityChange(event){setCellSetPolygonsVisible(event.target.checked);}function handleGeneExpressionColormapChange(event){setGeneExpressionColormap(event.target.value);}function handleColormapRangeChange(event,value){setGeneExpressionColormapRange(value);}var handleColormapRangeChangeDebounced=useCallback(debounce(handleColormapRangeChange,5,{trailing:true}),[handleColormapRangeChange]);return/*#__PURE__*/React.createElement(OptionsContainer,null,children,/*#__PURE__*/React.createElement(CellColorEncodingOption,{observationsLabel:observationsLabel,cellColorEncoding:cellColorEncoding,setCellColorEncoding:setCellColorEncoding}),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},observationsLabelNice,\" Set Labels Visible\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(Checkbox,{className:classes.checkbox,checked:cellSetLabelsVisible,onChange:handleLabelVisibilityChange,name:\"scatterplot-option-cell-set-labels\",color:\"default\"}))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},observationsLabelNice,\" Set Label Size\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(Slider,{disabled:!cellSetLabelsVisible,classes:{root:classes.slider,valueLabel:classes.sliderValueLabel},value:cellSetLabelSize,onChange:handleLabelSizeChange,\"aria-labelledby\":\"cell-set-label-size-slider\",valueLabelDisplay:\"auto\",step:1,min:8,max:36}))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},observationsLabelNice,\" Set Polygons Visible\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(Checkbox,{className:classes.checkbox,checked:cellSetPolygonsVisible,onChange:handlePolygonVisibilityChange,name:\"scatterplot-option-cell-set-polygons\",color:\"default\"}))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell,htmlFor:\"cell-radius-mode-select\"},observationsLabelNice,\" Radius Mode\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(OptionSelect,{className:classes.select,value:cellRadiusMode,onChange:handleCellRadiusModeChange,inputProps:{id:'cell-radius-mode-select'}},/*#__PURE__*/React.createElement(\"option\",{value:\"auto\"},\"Auto\"),/*#__PURE__*/React.createElement(\"option\",{value:\"manual\"},\"Manual\")))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},observationsLabelNice,\" Radius\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(Slider,{disabled:cellRadiusMode!=='manual',classes:{root:classes.slider,valueLabel:classes.sliderValueLabel},value:cellRadius,onChange:handleRadiusChange,\"aria-labelledby\":\"cell-radius-slider\",valueLabelDisplay:\"auto\",step:0.01,min:0.01,max:10}))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell,htmlFor:\"cell-opacity-mode-select\"},observationsLabelNice,\" Opacity Mode\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(OptionSelect,{className:classes.select,value:cellOpacityMode,onChange:handleCellOpacityModeChange,inputProps:{id:'cell-opacity-mode-select'}},/*#__PURE__*/React.createElement(\"option\",{value:\"auto\"},\"Auto\"),/*#__PURE__*/React.createElement(\"option\",{value:\"manual\"},\"Manual\")))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},observationsLabelNice,\" Opacity\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(Slider,{disabled:cellOpacityMode!=='manual',classes:{root:classes.slider,valueLabel:classes.sliderValueLabel},value:cellOpacity,onChange:handleOpacityChange,\"aria-labelledby\":\"cell-opacity-slider\",valueLabelDisplay:\"auto\",step:0.05,min:0.0,max:1.0}))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell,htmlFor:\"gene-expression-colormap-select\"},\"Gene Expression Colormap\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(OptionSelect,{className:classes.select,value:geneExpressionColormap,onChange:handleGeneExpressionColormapChange,inputProps:{id:'gene-expression-colormap-select'}},GLSL_COLORMAPS.map(function(cmap){return/*#__PURE__*/React.createElement(\"option\",{key:cmap,value:cmap},cmap);})))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},\"Gene Expression Colormap Range\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(Slider,{classes:{root:classes.slider,valueLabel:classes.sliderValueLabel},value:geneExpressionColormapRange,onChange:handleColormapRangeChangeDebounced,\"aria-labelledby\":\"gene-expression-colormap-range-slider\",valueLabelDisplay:\"auto\",step:0.005,min:0.0,max:1.0}))));}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/scatterplot/ScatterplotOptions.js"],"names":["React","useCallback","debounce","Checkbox","Slider","TableCell","TableRow","capitalize","useStyles","OptionsContainer","OptionSelect","CellColorEncodingOption","GLSL_COLORMAPS","ScatterplotOptions","props","children","observationsLabel","cellRadius","setCellRadius","cellRadiusMode","setCellRadiusMode","cellOpacity","setCellOpacity","cellOpacityMode","setCellOpacityMode","cellSetLabelsVisible","setCellSetLabelsVisible","cellSetLabelSize","setCellSetLabelSize","cellSetPolygonsVisible","setCellSetPolygonsVisible","cellColorEncoding","setCellColorEncoding","geneExpressionColormap","setGeneExpressionColormap","geneExpressionColormapRange","setGeneExpressionColormapRange","observationsLabelNice","classes","handleCellRadiusModeChange","event","target","value","handleCellOpacityModeChange","handleRadiusChange","handleOpacityChange","handleLabelVisibilityChange","checked","handleLabelSizeChange","handlePolygonVisibilityChange","handleGeneExpressionColormapChange","handleColormapRangeChange","handleColormapRangeChangeDebounced","trailing","labelCell","inputCell","checkbox","root","slider","valueLabel","sliderValueLabel","select","id","map","cmap"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\n\nexport default function ScatterplotOptions(props) {\n  const {\n    children,\n    observationsLabel,\n    cellRadius,\n    setCellRadius,\n    cellRadiusMode,\n    setCellRadiusMode,\n    cellOpacity,\n    setCellOpacity,\n    cellOpacityMode,\n    setCellOpacityMode,\n    cellSetLabelsVisible,\n    setCellSetLabelsVisible,\n    cellSetLabelSize,\n    setCellSetLabelSize,\n    cellSetPolygonsVisible,\n    setCellSetPolygonsVisible,\n    cellColorEncoding,\n    setCellColorEncoding,\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange,\n  } = props;\n\n  const observationsLabelNice = capitalize(observationsLabel);\n\n  const classes = useStyles();\n\n  function handleCellRadiusModeChange(event) {\n    setCellRadiusMode(event.target.value);\n  }\n\n  function handleCellOpacityModeChange(event) {\n    setCellOpacityMode(event.target.value);\n  }\n\n  function handleRadiusChange(event, value) {\n    setCellRadius(value);\n  }\n\n  function handleOpacityChange(event, value) {\n    setCellOpacity(value);\n  }\n\n  function handleLabelVisibilityChange(event) {\n    setCellSetLabelsVisible(event.target.checked);\n  }\n\n  function handleLabelSizeChange(event, value) {\n    setCellSetLabelSize(value);\n  }\n\n  function handlePolygonVisibilityChange(event) {\n    setCellSetPolygonsVisible(event.target.checked);\n  }\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n  const handleColormapRangeChangeDebounced = useCallback(\n    debounce(handleColormapRangeChange, 5, { trailing: true }),\n    [handleColormapRangeChange],\n  );\n\n  return (\n    <OptionsContainer>\n      {children}\n      <CellColorEncodingOption\n        observationsLabel={observationsLabel}\n        cellColorEncoding={cellColorEncoding}\n        setCellColorEncoding={setCellColorEncoding}\n      />\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Labels Visible\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={cellSetLabelsVisible}\n            onChange={handleLabelVisibilityChange}\n            name=\"scatterplot-option-cell-set-labels\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Label Size\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={!cellSetLabelsVisible}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellSetLabelSize}\n            onChange={handleLabelSizeChange}\n            aria-labelledby=\"cell-set-label-size-slider\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            min={8}\n            max={36}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Polygons Visible\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={cellSetPolygonsVisible}\n            onChange={handlePolygonVisibilityChange}\n            name=\"scatterplot-option-cell-set-polygons\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"cell-radius-mode-select\">\n          {observationsLabelNice} Radius Mode\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={cellRadiusMode}\n            onChange={handleCellRadiusModeChange}\n            inputProps={{\n              id: 'cell-radius-mode-select',\n            }}\n          >\n            <option value=\"auto\">Auto</option>\n            <option value=\"manual\">Manual</option>\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Radius\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={cellRadiusMode !== 'manual'}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellRadius}\n            onChange={handleRadiusChange}\n            aria-labelledby=\"cell-radius-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.01}\n            min={0.01}\n            max={10}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"cell-opacity-mode-select\">\n          {observationsLabelNice} Opacity Mode\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={cellOpacityMode}\n            onChange={handleCellOpacityModeChange}\n            inputProps={{\n              id: 'cell-opacity-mode-select',\n            }}\n          >\n            <option value=\"auto\">Auto</option>\n            <option value=\"manual\">Manual</option>\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Opacity\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={cellOpacityMode !== 'manual'}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellOpacity}\n            onChange={handleOpacityChange}\n            aria-labelledby=\"cell-opacity-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.05}\n            min={0.0}\n            max={1.0}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"gene-expression-colormap-select\">\n          Gene Expression Colormap\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={geneExpressionColormap}\n            onChange={handleGeneExpressionColormapChange}\n            inputProps={{\n              id: 'gene-expression-colormap-select',\n            }}\n          >\n            {GLSL_COLORMAPS.map(cmap => (\n              <option key={cmap} value={cmap}>{cmap}</option>\n            ))}\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          Gene Expression Colormap Range\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={geneExpressionColormapRange}\n            onChange={handleColormapRangeChangeDebounced}\n            aria-labelledby=\"gene-expression-colormap-range-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.005}\n            min={0.0}\n            max={1.0}\n          />\n        </TableCell>\n      </TableRow>\n    </OptionsContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}