{"ast":null,"code":"import { Observable } from \"./observable\";\n/**\n * Creates an observable that yields a new value every `period` milliseconds.\n * The first value emitted is 0, then 1, 2, etc. The first value is not emitted\n * immediately, but after the first interval.\n */\n\nexport default function interval(period) {\n  return new Observable(function (observer) {\n    var counter = 0;\n    var handle = setInterval(function () {\n      observer.next(counter++);\n    }, period);\n    return function () {\n      return clearInterval(handle);\n    };\n  });\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/observable-fns/dist.esm/interval.js"],"names":["Observable","interval","period","observer","counter","handle","setInterval","next","clearInterval"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA;;;;;;AAKA,eAAe,SAASC,QAAT,CAAkBC,MAAlB,EAA0B;AACrC,SAAO,IAAIF,UAAJ,CAAe,UAAAG,QAAQ,EAAI;AAC9B,QAAIC,OAAO,GAAG,CAAd;AACA,QAAMC,MAAM,GAAGC,WAAW,CAAC,YAAM;AAC7BH,MAAAA,QAAQ,CAACI,IAAT,CAAcH,OAAO,EAArB;AACH,KAFyB,EAEvBF,MAFuB,CAA1B;AAGA,WAAO;AAAA,aAAMM,aAAa,CAACH,MAAD,CAAnB;AAAA,KAAP;AACH,GANM,CAAP;AAOH","sourcesContent":["import { Observable } from \"./observable\";\n/**\n * Creates an observable that yields a new value every `period` milliseconds.\n * The first value emitted is 0, then 1, 2, etc. The first value is not emitted\n * immediately, but after the first interval.\n */\nexport default function interval(period) {\n    return new Observable(observer => {\n        let counter = 0;\n        const handle = setInterval(() => {\n            observer.next(counter++);\n        }, period);\n        return () => clearInterval(handle);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}