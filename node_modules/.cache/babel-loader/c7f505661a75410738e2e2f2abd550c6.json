{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DuplicateMode = void 0;\n\nvar _translateMode = require(\"./translate-mode\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar DuplicateMode = /*#__PURE__*/function (_TranslateMode) {\n  _inherits(DuplicateMode, _TranslateMode);\n\n  var _super = _createSuper(DuplicateMode);\n\n  function DuplicateMode() {\n    _classCallCheck(this, DuplicateMode);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DuplicateMode, [{\n    key: \"handleStartDragging\",\n    value: function handleStartDragging(event, props) {\n      _get(_getPrototypeOf(DuplicateMode.prototype), \"handleStartDragging\", this).call(this, event, props);\n\n      if (this._geometryBeforeTranslate) {\n        props.onEdit(this.getAddManyFeaturesAction(this._geometryBeforeTranslate, props.data));\n      }\n    }\n  }, {\n    key: \"updateCursor\",\n    value: function updateCursor(props) {\n      if (this._isTranslatable) {\n        props.onUpdateCursor('copy');\n      } else {\n        props.onUpdateCursor(null);\n      }\n    }\n  }]);\n\n  return DuplicateMode;\n}(_translateMode.TranslateMode);\n\nexports.DuplicateMode = DuplicateMode;","map":{"version":3,"sources":["../../src/lib/duplicate-mode.ts"],"names":["DuplicateMode","TranslateMode","event","props"],"mappings":";;;;;;;AAEA,IAAA,cAAA,GAAA,OAAA,CAAA,kBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,a;;;;;;;;;;;;;wCACSE,K,EAA2BC,K,EAAqC;AAClF,MAAA,IAAA,CAAA,eAAA,CAAA,aAAA,CAAA,SAAA,CAAA,EAAA,qBAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA;;AAEA,UAAI,KAAJ,wBAAA,EAAmC;AACjCA,QAAAA,KAAK,CAALA,MAAAA,CAAa,KAAA,wBAAA,CAA8B,KAA9B,wBAAA,EAA6DA,KAAK,CAA/EA,IAAa,CAAbA;AACD;AACF;;;iCAEYA,K,EAAqC;AAChD,UAAI,KAAJ,eAAA,EAA0B;AACxBA,QAAAA,KAAK,CAALA,cAAAA,CAAAA,MAAAA;AADF,OAAA,MAEO;AACLA,QAAAA,KAAK,CAALA,cAAAA,CAAAA,IAAAA;AACD;AACF;;;;EAfgCF,cAAAA,CAAAA,a","sourcesContent":["import { StartDraggingEvent, ModeProps } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { TranslateMode } from './translate-mode';\n\nexport class DuplicateMode extends TranslateMode {\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    super.handleStartDragging(event, props);\n\n    if (this._geometryBeforeTranslate) {\n      props.onEdit(this.getAddManyFeaturesAction(this._geometryBeforeTranslate, props.data));\n    }\n  }\n\n  updateCursor(props: ModeProps<FeatureCollection>) {\n    if (this._isTranslatable) {\n      props.onUpdateCursor('copy');\n    } else {\n      props.onUpdateCursor(null);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}