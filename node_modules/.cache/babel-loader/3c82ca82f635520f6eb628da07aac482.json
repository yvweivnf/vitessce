{"ast":null,"code":"import { default as geoStream } from \"../stream\";\nimport boundsStream from \"../path/bounds\";\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n  if (clip != null) projection.clipExtent(clip);\n  return projection.scale(k * 150).translate([x, y]);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/d3-geo/src/projection/fit.js"],"names":["default","geoStream","boundsStream","fitExtent","projection","extent","object","w","h","clip","clipExtent","scale","translate","stream","b","result","k","Math","min","x","y","fitSize","size"],"mappings":"AAAA,SAAQA,OAAO,IAAIC,SAAnB,QAAmC,WAAnC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,OAAO,SAASC,SAAT,CAAmBC,UAAnB,EAA+BC,MAA/B,EAAuCC,MAAvC,EAA+C;AACpD,MAAIC,CAAC,GAAGF,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,IAAeA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAvB;AAAA,MACIG,CAAC,GAAGH,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,IAAeA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CADvB;AAAA,MAEII,IAAI,GAAGL,UAAU,CAACM,UAAX,IAAyBN,UAAU,CAACM,UAAX,EAFpC;AAIAN,EAAAA,UAAU,CACLO,KADL,CACW,GADX,EAEKC,SAFL,CAEe,CAAC,CAAD,EAAI,CAAJ,CAFf;AAIA,MAAIH,IAAI,IAAI,IAAZ,EAAkBL,UAAU,CAACM,UAAX,CAAsB,IAAtB;AAElBT,EAAAA,SAAS,CAACK,MAAD,EAASF,UAAU,CAACS,MAAX,CAAkBX,YAAlB,CAAT,CAAT;AAEA,MAAIY,CAAC,GAAGZ,YAAY,CAACa,MAAb,EAAR;AAAA,MACIC,CAAC,GAAGC,IAAI,CAACC,GAAL,CAASX,CAAC,IAAIO,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAd,CAAV,EAAkCN,CAAC,IAAIM,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAd,CAAnC,CADR;AAAA,MAEIK,CAAC,GAAG,CAACd,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAD,GAAgB,CAACE,CAAC,GAAGS,CAAC,IAAIF,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAd,CAAN,IAAgC,CAFxD;AAAA,MAGIM,CAAC,GAAG,CAACf,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAD,GAAgB,CAACG,CAAC,GAAGQ,CAAC,IAAIF,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,IAAUA,CAAC,CAAC,CAAD,CAAD,CAAK,CAAL,CAAd,CAAN,IAAgC,CAHxD;AAKA,MAAIL,IAAI,IAAI,IAAZ,EAAkBL,UAAU,CAACM,UAAX,CAAsBD,IAAtB;AAElB,SAAOL,UAAU,CACZO,KADE,CACIK,CAAC,GAAG,GADR,EAEFJ,SAFE,CAEQ,CAACO,CAAD,EAAIC,CAAJ,CAFR,CAAP;AAGD;AAED,OAAO,SAASC,OAAT,CAAiBjB,UAAjB,EAA6BkB,IAA7B,EAAmChB,MAAnC,EAA2C;AAChD,SAAOH,SAAS,CAACC,UAAD,EAAa,CAAC,CAAC,CAAD,EAAI,CAAJ,CAAD,EAASkB,IAAT,CAAb,EAA6BhB,MAA7B,CAAhB;AACD","sourcesContent":["import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nexport function fitExtent(projection, extent, object) {\n  var w = extent[1][0] - extent[0][0],\n      h = extent[1][1] - extent[0][1],\n      clip = projection.clipExtent && projection.clipExtent();\n\n  projection\n      .scale(150)\n      .translate([0, 0]);\n\n  if (clip != null) projection.clipExtent(null);\n\n  geoStream(object, projection.stream(boundsStream));\n\n  var b = boundsStream.result(),\n      k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n      x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n      y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n\n  if (clip != null) projection.clipExtent(clip);\n\n  return projection\n      .scale(k * 150)\n      .translate([x, y]);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n"]},"metadata":{},"sourceType":"module"}