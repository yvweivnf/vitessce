{"ast":null,"code":"/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017 Joachim Wester\n * MIT license\n */\nimport { _deepClone, _objectKeys, escapePathComponent, hasOwnProperty } from './helpers.mjs';\nimport { applyPatch } from './core.mjs';\nvar beforeDict = new WeakMap();\n\nvar Mirror =\n/** @class */\nfunction () {\n  function Mirror(obj) {\n    this.observers = new Map();\n    this.obj = obj;\n  }\n\n  return Mirror;\n}();\n\nvar ObserverInfo =\n/** @class */\nfunction () {\n  function ObserverInfo(callback, observer) {\n    this.callback = callback;\n    this.observer = observer;\n  }\n\n  return ObserverInfo;\n}();\n\nfunction getMirror(obj) {\n  return beforeDict.get(obj);\n}\n\nfunction getObserverFromMirror(mirror, callback) {\n  return mirror.observers.get(callback);\n}\n\nfunction removeObserverFromMirror(mirror, observer) {\n  mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\n\n\nexport function unobserve(root, observer) {\n  observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\n\nexport function observe(obj, callback) {\n  var patches = [];\n  var observer;\n  var mirror = getMirror(obj);\n\n  if (!mirror) {\n    mirror = new Mirror(obj);\n    beforeDict.set(obj, mirror);\n  } else {\n    var observerInfo = getObserverFromMirror(mirror, callback);\n    observer = observerInfo && observerInfo.observer;\n  }\n\n  if (observer) {\n    return observer;\n  }\n\n  observer = {};\n  mirror.value = _deepClone(obj);\n\n  if (callback) {\n    observer.callback = callback;\n    observer.next = null;\n\n    var dirtyCheck = function dirtyCheck() {\n      generate(observer);\n    };\n\n    var fastCheck = function fastCheck() {\n      clearTimeout(observer.next);\n      observer.next = setTimeout(dirtyCheck);\n    };\n\n    if (typeof window !== 'undefined') {\n      //not Node\n      window.addEventListener('mouseup', fastCheck);\n      window.addEventListener('keyup', fastCheck);\n      window.addEventListener('mousedown', fastCheck);\n      window.addEventListener('keydown', fastCheck);\n      window.addEventListener('change', fastCheck);\n    }\n  }\n\n  observer.patches = patches;\n  observer.object = obj;\n\n  observer.unobserve = function () {\n    generate(observer);\n    clearTimeout(observer.next);\n    removeObserverFromMirror(mirror, observer);\n\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('mouseup', fastCheck);\n      window.removeEventListener('keyup', fastCheck);\n      window.removeEventListener('mousedown', fastCheck);\n      window.removeEventListener('keydown', fastCheck);\n      window.removeEventListener('change', fastCheck);\n    }\n  };\n\n  mirror.observers.set(callback, new ObserverInfo(callback, observer));\n  return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\n\nexport function generate(observer, invertible) {\n  if (invertible === void 0) {\n    invertible = false;\n  }\n\n  var mirror = beforeDict.get(observer.object);\n\n  _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n\n  if (observer.patches.length) {\n    applyPatch(mirror.value, observer.patches);\n  }\n\n  var temp = observer.patches;\n\n  if (temp.length > 0) {\n    observer.patches = [];\n\n    if (observer.callback) {\n      observer.callback(temp);\n    }\n  }\n\n  return temp;\n} // Dirty check if obj is different from mirror, generate patches and update mirror\n\nfunction _generate(mirror, obj, patches, path, invertible) {\n  if (obj === mirror) {\n    return;\n  }\n\n  if (typeof obj.toJSON === \"function\") {\n    obj = obj.toJSON();\n  }\n\n  var newKeys = _objectKeys(obj);\n\n  var oldKeys = _objectKeys(mirror);\n\n  var changed = false;\n  var deleted = false; //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n\n  for (var t = oldKeys.length - 1; t >= 0; t--) {\n    var key = oldKeys[t];\n    var oldVal = mirror[key];\n\n    if (hasOwnProperty(obj, key) && !(obj[key] === undefined && oldVal !== undefined && Array.isArray(obj) === false)) {\n      var newVal = obj[key];\n\n      if (typeof oldVal == \"object\" && oldVal != null && typeof newVal == \"object\" && newVal != null && Array.isArray(oldVal) === Array.isArray(newVal)) {\n        _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key), invertible);\n      } else {\n        if (oldVal !== newVal) {\n          changed = true;\n\n          if (invertible) {\n            patches.push({\n              op: \"test\",\n              path: path + \"/\" + escapePathComponent(key),\n              value: _deepClone(oldVal)\n            });\n          }\n\n          patches.push({\n            op: \"replace\",\n            path: path + \"/\" + escapePathComponent(key),\n            value: _deepClone(newVal)\n          });\n        }\n      }\n    } else if (Array.isArray(mirror) === Array.isArray(obj)) {\n      if (invertible) {\n        patches.push({\n          op: \"test\",\n          path: path + \"/\" + escapePathComponent(key),\n          value: _deepClone(oldVal)\n        });\n      }\n\n      patches.push({\n        op: \"remove\",\n        path: path + \"/\" + escapePathComponent(key)\n      });\n      deleted = true; // property has been deleted\n    } else {\n      if (invertible) {\n        patches.push({\n          op: \"test\",\n          path: path,\n          value: mirror\n        });\n      }\n\n      patches.push({\n        op: \"replace\",\n        path: path,\n        value: obj\n      });\n      changed = true;\n    }\n  }\n\n  if (!deleted && newKeys.length == oldKeys.length) {\n    return;\n  }\n\n  for (var t = 0; t < newKeys.length; t++) {\n    var key = newKeys[t];\n\n    if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n      patches.push({\n        op: \"add\",\n        path: path + \"/\" + escapePathComponent(key),\n        value: _deepClone(obj[key])\n      });\n    }\n  }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\n\n\nexport function compare(tree1, tree2, invertible) {\n  if (invertible === void 0) {\n    invertible = false;\n  }\n\n  var patches = [];\n\n  _generate(tree1, tree2, patches, '', invertible);\n\n  return patches;\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/fast-json-patch/module/duplex.mjs"],"names":["_deepClone","_objectKeys","escapePathComponent","hasOwnProperty","applyPatch","beforeDict","WeakMap","Mirror","obj","observers","Map","ObserverInfo","callback","observer","getMirror","get","getObserverFromMirror","mirror","removeObserverFromMirror","delete","unobserve","root","observe","patches","set","observerInfo","value","next","dirtyCheck","generate","fastCheck","clearTimeout","setTimeout","window","addEventListener","object","removeEventListener","invertible","_generate","length","temp","path","toJSON","newKeys","oldKeys","changed","deleted","t","key","oldVal","undefined","Array","isArray","newVal","push","op","compare","tree1","tree2"],"mappings":"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","sourcesContent":["/*!\n * https://github.com/Starcounter-Jack/JSON-Patch\n * (c) 2017 Joachim Wester\n * MIT license\n */\nimport { _deepClone, _objectKeys, escapePathComponent, hasOwnProperty } from './helpers.mjs';\nimport { applyPatch } from './core.mjs';\nvar beforeDict = new WeakMap();\nvar Mirror = /** @class */ (function () {\n    function Mirror(obj) {\n        this.observers = new Map();\n        this.obj = obj;\n    }\n    return Mirror;\n}());\nvar ObserverInfo = /** @class */ (function () {\n    function ObserverInfo(callback, observer) {\n        this.callback = callback;\n        this.observer = observer;\n    }\n    return ObserverInfo;\n}());\nfunction getMirror(obj) {\n    return beforeDict.get(obj);\n}\nfunction getObserverFromMirror(mirror, callback) {\n    return mirror.observers.get(callback);\n}\nfunction removeObserverFromMirror(mirror, observer) {\n    mirror.observers.delete(observer.callback);\n}\n/**\n * Detach an observer from an object\n */\nexport function unobserve(root, observer) {\n    observer.unobserve();\n}\n/**\n * Observes changes made to an object, which can then be retrieved using generate\n */\nexport function observe(obj, callback) {\n    var patches = [];\n    var observer;\n    var mirror = getMirror(obj);\n    if (!mirror) {\n        mirror = new Mirror(obj);\n        beforeDict.set(obj, mirror);\n    }\n    else {\n        var observerInfo = getObserverFromMirror(mirror, callback);\n        observer = observerInfo && observerInfo.observer;\n    }\n    if (observer) {\n        return observer;\n    }\n    observer = {};\n    mirror.value = _deepClone(obj);\n    if (callback) {\n        observer.callback = callback;\n        observer.next = null;\n        var dirtyCheck = function () {\n            generate(observer);\n        };\n        var fastCheck = function () {\n            clearTimeout(observer.next);\n            observer.next = setTimeout(dirtyCheck);\n        };\n        if (typeof window !== 'undefined') { //not Node\n            window.addEventListener('mouseup', fastCheck);\n            window.addEventListener('keyup', fastCheck);\n            window.addEventListener('mousedown', fastCheck);\n            window.addEventListener('keydown', fastCheck);\n            window.addEventListener('change', fastCheck);\n        }\n    }\n    observer.patches = patches;\n    observer.object = obj;\n    observer.unobserve = function () {\n        generate(observer);\n        clearTimeout(observer.next);\n        removeObserverFromMirror(mirror, observer);\n        if (typeof window !== 'undefined') {\n            window.removeEventListener('mouseup', fastCheck);\n            window.removeEventListener('keyup', fastCheck);\n            window.removeEventListener('mousedown', fastCheck);\n            window.removeEventListener('keydown', fastCheck);\n            window.removeEventListener('change', fastCheck);\n        }\n    };\n    mirror.observers.set(callback, new ObserverInfo(callback, observer));\n    return observer;\n}\n/**\n * Generate an array of patches from an observer\n */\nexport function generate(observer, invertible) {\n    if (invertible === void 0) { invertible = false; }\n    var mirror = beforeDict.get(observer.object);\n    _generate(mirror.value, observer.object, observer.patches, \"\", invertible);\n    if (observer.patches.length) {\n        applyPatch(mirror.value, observer.patches);\n    }\n    var temp = observer.patches;\n    if (temp.length > 0) {\n        observer.patches = [];\n        if (observer.callback) {\n            observer.callback(temp);\n        }\n    }\n    return temp;\n}\n// Dirty check if obj is different from mirror, generate patches and update mirror\nfunction _generate(mirror, obj, patches, path, invertible) {\n    if (obj === mirror) {\n        return;\n    }\n    if (typeof obj.toJSON === \"function\") {\n        obj = obj.toJSON();\n    }\n    var newKeys = _objectKeys(obj);\n    var oldKeys = _objectKeys(mirror);\n    var changed = false;\n    var deleted = false;\n    //if ever \"move\" operation is implemented here, make sure this test runs OK: \"should not generate the same patch twice (move)\"\n    for (var t = oldKeys.length - 1; t >= 0; t--) {\n        var key = oldKeys[t];\n        var oldVal = mirror[key];\n        if (hasOwnProperty(obj, key) && !(obj[key] === undefined && oldVal !== undefined && Array.isArray(obj) === false)) {\n            var newVal = obj[key];\n            if (typeof oldVal == \"object\" && oldVal != null && typeof newVal == \"object\" && newVal != null && Array.isArray(oldVal) === Array.isArray(newVal)) {\n                _generate(oldVal, newVal, patches, path + \"/\" + escapePathComponent(key), invertible);\n            }\n            else {\n                if (oldVal !== newVal) {\n                    changed = true;\n                    if (invertible) {\n                        patches.push({ op: \"test\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(oldVal) });\n                    }\n                    patches.push({ op: \"replace\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(newVal) });\n                }\n            }\n        }\n        else if (Array.isArray(mirror) === Array.isArray(obj)) {\n            if (invertible) {\n                patches.push({ op: \"test\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(oldVal) });\n            }\n            patches.push({ op: \"remove\", path: path + \"/\" + escapePathComponent(key) });\n            deleted = true; // property has been deleted\n        }\n        else {\n            if (invertible) {\n                patches.push({ op: \"test\", path: path, value: mirror });\n            }\n            patches.push({ op: \"replace\", path: path, value: obj });\n            changed = true;\n        }\n    }\n    if (!deleted && newKeys.length == oldKeys.length) {\n        return;\n    }\n    for (var t = 0; t < newKeys.length; t++) {\n        var key = newKeys[t];\n        if (!hasOwnProperty(mirror, key) && obj[key] !== undefined) {\n            patches.push({ op: \"add\", path: path + \"/\" + escapePathComponent(key), value: _deepClone(obj[key]) });\n        }\n    }\n}\n/**\n * Create an array of patches from the differences in two objects\n */\nexport function compare(tree1, tree2, invertible) {\n    if (invertible === void 0) { invertible = false; }\n    var patches = [];\n    _generate(tree1, tree2, patches, '', invertible);\n    return patches;\n}\n"]},"metadata":{},"sourceType":"module"}