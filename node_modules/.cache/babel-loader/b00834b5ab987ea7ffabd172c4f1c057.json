{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { hasOwnProperty, isArray } from 'vega-util';\nimport { hasConditionalFieldOrDatumDef, isConditionalDef, isFieldDef, isFieldOrDatumDef, isRepeatRef, isSortableFieldDef } from '../channeldef';\nimport * as log from '../log';\nimport { isSortField } from '../sort';\nimport { isFacetMapping } from '../spec/facet';\nexport function replaceRepeaterInFacet(facet, repeater) {\n  if (!repeater) {\n    return facet;\n  }\n\n  if (isFacetMapping(facet)) {\n    return replaceRepeaterInMapping(facet, repeater);\n  }\n\n  return replaceRepeaterInFieldDef(facet, repeater);\n}\nexport function replaceRepeaterInEncoding(encoding, repeater) {\n  if (!repeater) {\n    return encoding;\n  }\n\n  return replaceRepeaterInMapping(encoding, repeater);\n}\n/**\n * Replaces repeated value and returns if the repeated value is valid.\n */\n\nfunction replaceRepeatInProp(prop, o, repeater) {\n  var val = o[prop];\n\n  if (isRepeatRef(val)) {\n    if (val.repeat in repeater) {\n      return Object.assign(Object.assign({}, o), _defineProperty({}, prop, repeater[val.repeat]));\n    } else {\n      log.warn(log.message.noSuchRepeatedValue(val.repeat));\n      return undefined;\n    }\n  }\n\n  return o;\n}\n/**\n * Replace repeater values in a field def with the concrete field name.\n */\n\n\nfunction replaceRepeaterInFieldDef(fieldDef, repeater) {\n  fieldDef = replaceRepeatInProp('field', fieldDef, repeater);\n\n  if (fieldDef === undefined) {\n    // the field def should be ignored\n    return undefined;\n  } else if (fieldDef === null) {\n    return null;\n  }\n\n  if (isSortableFieldDef(fieldDef) && isSortField(fieldDef.sort)) {\n    var sort = replaceRepeatInProp('field', fieldDef.sort, repeater);\n    fieldDef = Object.assign(Object.assign({}, fieldDef), sort ? {\n      sort: sort\n    } : {});\n  }\n\n  return fieldDef;\n}\n\nfunction replaceRepeaterInFieldOrDatumDef(def, repeater) {\n  if (isFieldDef(def)) {\n    return replaceRepeaterInFieldDef(def, repeater);\n  } else {\n    var datumDef = replaceRepeatInProp('datum', def, repeater);\n\n    if (datumDef !== def && !datumDef.type) {\n      datumDef.type = 'nominal';\n    }\n\n    return datumDef;\n  }\n}\n\nfunction replaceRepeaterInChannelDef(channelDef, repeater) {\n  if (isFieldOrDatumDef(channelDef)) {\n    var fd = replaceRepeaterInFieldOrDatumDef(channelDef, repeater);\n\n    if (fd) {\n      return fd;\n    } else if (isConditionalDef(channelDef)) {\n      return {\n        condition: channelDef.condition\n      };\n    }\n  } else {\n    if (hasConditionalFieldOrDatumDef(channelDef)) {\n      var _fd = replaceRepeaterInFieldOrDatumDef(channelDef.condition, repeater);\n\n      if (_fd) {\n        return Object.assign(Object.assign({}, channelDef), {\n          condition: _fd\n        });\n      } else {\n        var condition = channelDef.condition,\n            channelDefWithoutCondition = __rest(channelDef, [\"condition\"]);\n\n        return channelDefWithoutCondition;\n      }\n    }\n\n    return channelDef;\n  }\n\n  return undefined;\n}\n\nfunction replaceRepeaterInMapping(mapping, repeater) {\n  var out = {};\n\n  for (var channel in mapping) {\n    if (hasOwnProperty(mapping, channel)) {\n      var channelDef = mapping[channel];\n\n      if (isArray(channelDef)) {\n        // array cannot have condition\n        out[channel] = channelDef // somehow we need to cast it here\n        .map(function (cd) {\n          return replaceRepeaterInChannelDef(cd, repeater);\n        }).filter(function (cd) {\n          return cd;\n        });\n      } else {\n        var cd = replaceRepeaterInChannelDef(channelDef, repeater);\n\n        if (cd !== undefined) {\n          out[channel] = cd;\n        }\n      }\n    }\n  }\n\n  return out;\n}","map":{"version":3,"sources":["../../../src/normalize/repeater.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { hasOwnProperty, isArray } from 'vega-util';\nimport { hasConditionalFieldOrDatumDef, isConditionalDef, isFieldDef, isFieldOrDatumDef, isRepeatRef, isSortableFieldDef } from '../channeldef';\nimport * as log from '../log';\nimport { isSortField } from '../sort';\nimport { isFacetMapping } from '../spec/facet';\nexport function replaceRepeaterInFacet(facet, repeater) {\n    if (!repeater) {\n        return facet;\n    }\n    if (isFacetMapping(facet)) {\n        return replaceRepeaterInMapping(facet, repeater);\n    }\n    return replaceRepeaterInFieldDef(facet, repeater);\n}\nexport function replaceRepeaterInEncoding(encoding, repeater) {\n    if (!repeater) {\n        return encoding;\n    }\n    return replaceRepeaterInMapping(encoding, repeater);\n}\n/**\n * Replaces repeated value and returns if the repeated value is valid.\n */\nfunction replaceRepeatInProp(prop, o, repeater) {\n    const val = o[prop];\n    if (isRepeatRef(val)) {\n        if (val.repeat in repeater) {\n            return Object.assign(Object.assign({}, o), { [prop]: repeater[val.repeat] });\n        }\n        else {\n            log.warn(log.message.noSuchRepeatedValue(val.repeat));\n            return undefined;\n        }\n    }\n    return o;\n}\n/**\n * Replace repeater values in a field def with the concrete field name.\n */\nfunction replaceRepeaterInFieldDef(fieldDef, repeater) {\n    fieldDef = replaceRepeatInProp('field', fieldDef, repeater);\n    if (fieldDef === undefined) {\n        // the field def should be ignored\n        return undefined;\n    }\n    else if (fieldDef === null) {\n        return null;\n    }\n    if (isSortableFieldDef(fieldDef) && isSortField(fieldDef.sort)) {\n        const sort = replaceRepeatInProp('field', fieldDef.sort, repeater);\n        fieldDef = Object.assign(Object.assign({}, fieldDef), (sort ? { sort } : {}));\n    }\n    return fieldDef;\n}\nfunction replaceRepeaterInFieldOrDatumDef(def, repeater) {\n    if (isFieldDef(def)) {\n        return replaceRepeaterInFieldDef(def, repeater);\n    }\n    else {\n        const datumDef = replaceRepeatInProp('datum', def, repeater);\n        if (datumDef !== def && !datumDef.type) {\n            datumDef.type = 'nominal';\n        }\n        return datumDef;\n    }\n}\nfunction replaceRepeaterInChannelDef(channelDef, repeater) {\n    if (isFieldOrDatumDef(channelDef)) {\n        const fd = replaceRepeaterInFieldOrDatumDef(channelDef, repeater);\n        if (fd) {\n            return fd;\n        }\n        else if (isConditionalDef(channelDef)) {\n            return { condition: channelDef.condition };\n        }\n    }\n    else {\n        if (hasConditionalFieldOrDatumDef(channelDef)) {\n            const fd = replaceRepeaterInFieldOrDatumDef(channelDef.condition, repeater);\n            if (fd) {\n                return Object.assign(Object.assign({}, channelDef), { condition: fd });\n            }\n            else {\n                const { condition } = channelDef, channelDefWithoutCondition = __rest(channelDef, [\"condition\"]);\n                return channelDefWithoutCondition;\n            }\n        }\n        return channelDef;\n    }\n    return undefined;\n}\nfunction replaceRepeaterInMapping(mapping, repeater) {\n    const out = {};\n    for (const channel in mapping) {\n        if (hasOwnProperty(mapping, channel)) {\n            const channelDef = mapping[channel];\n            if (isArray(channelDef)) {\n                // array cannot have condition\n                out[channel] = channelDef // somehow we need to cast it here\n                    .map(cd => replaceRepeaterInChannelDef(cd, repeater))\n                    .filter(cd => cd);\n            }\n            else {\n                const cd = replaceRepeaterInChannelDef(channelDef, repeater);\n                if (cd !== undefined) {\n                    out[channel] = cd;\n                }\n            }\n        }\n    }\n    return out;\n}\n//# sourceMappingURL=repeater.js.map"]},"metadata":{},"sourceType":"module"}