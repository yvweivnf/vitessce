{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _asyncToGenerator from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";/* eslint-disable no-plusplus */import shortNumber from'short-number';import isEqual from'lodash/isEqual';import{getDefaultInitialViewState,MultiscaleImageLayer,ImageLayer,VolumeLayer}from'@hms-dbmi/viv';import{extent}from'd3-array';import{Matrix4}from'math.gl';import{divide,compare,unit}from'mathjs';import{pluralize,getSourceFromLoader,isRgb}from'../../utils';import{VIEWER_PALETTE}from'../utils';import{GLOBAL_LABELS,DEFAULT_RASTER_LAYER_PROPS,DEFAULT_LAYER_TYPE_ORDERING}from'./constants';import BitmaskLayer from'../../layers/BitmaskLayer';import{getMultiSelectionStats}from'../layer-controller/utils';export function square(x,y,r){return[[x,y+r],[x+r,y],[x,y-r],[x-r,y]];}/**\n * Sort spatial layer definition array,\n * to keep the ordering in the layer controller\n * consistent.\n * Intended to be used with auto-initialized layer\n * definition arrays only, as a pre-defined layer array\n * should not be re-ordered.\n * @param {object[]} layers Array of layer definition objects.\n * Object must have a .type property.\n */export function sortLayers(layers){return layers.sort(function(a,b){return DEFAULT_LAYER_TYPE_ORDERING.indexOf(a.type)-DEFAULT_LAYER_TYPE_ORDERING.indexOf(b.type);});}/**\n * Return the midpoint of the global dimensions.\n * @param {object} source PixelSource object from Viv\n * @returns {object} The selection.\n */function getDefaultGlobalSelection(source){var globalIndices=source.labels.filter(function(dim){return GLOBAL_LABELS.includes(dim);});var selection={};globalIndices.forEach(function(dim){selection[dim]=Math.floor((source.shape[source.labels.indexOf(dim)]||0)/2);});return selection;}/**\n * Create a default selection using the midpoint of the available global dimensions,\n * and then the first four available selections from the first selectable channel.\n * @param {object} source PixelSource object from Viv\n * @returns {object} The selection.\n */function buildDefaultSelection(source){var selection=[];var globalSelection=getDefaultGlobalSelection(source);// First non-global dimension with some sort of selectable values\nvar firstNonGlobalDimension=source.labels.filter(function(dim){return!GLOBAL_LABELS.includes(dim)&&source.shape[source.labels.indexOf(dim)];})[0];for(var i=0;i<Math.min(4,source.shape[source.labels.indexOf(firstNonGlobalDimension)]);i+=1){selection.push(_objectSpread(_defineProperty({},firstNonGlobalDimension,i),globalSelection));}return selection;}/**\n * @param {Array.<number>} shape loader shape\n */export function isInterleaved(shape){var lastDimSize=shape[shape.length-1];return lastDimSize===3||lastDimSize===4;}/**\n * Initialize the channel selections for an individual layer.\n * @param {object} loader A viv loader instance with channel names appended by Vitessce loaders\n * of the form { data: (PixelSource[]|PixelSource), metadata: Object, channels }\n * @returns {object[]} An array of selected channels with default\n * domain/slider settings.\n */export function initializeLayerChannels(_x,_x2){return _initializeLayerChannels.apply(this,arguments);}function _initializeLayerChannels(){_initializeLayerChannels=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(loader,use3d){var result,source,defaultSelection,stats,domains,colors,sliders;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:result=[];source=getSourceFromLoader(loader);// Add channel automatically as the first avaialable value for each dimension.\ndefaultSelection=buildDefaultSelection(source);defaultSelection=isInterleaved(source.shape)?[_objectSpread({},defaultSelection[0],{c:0})]:defaultSelection;_context.next=6;return getMultiSelectionStats({loader:loader.data,selections:defaultSelection,use3d:use3d});case 6:stats=_context.sent;domains=isRgb(loader)?[[0,255],[0,255],[0,255]]:stats.domains;colors=isRgb(loader)?[[255,0,0],[0,255,0],[0,0,255]]:null;sliders=isRgb(loader)?[[0,255],[0,255],[0,255]]:stats.sliders;defaultSelection.forEach(function(selection,i){var domain=domains[i];var slider=sliders[i];var channel={selection:selection,// eslint-disable-next-line no-nested-ternary\ncolor:colors?colors[i]:defaultSelection.length!==1?VIEWER_PALETTE[i]:[255,255,255],visible:true,slider:slider||domain};result.push(channel);});return _context.abrupt(\"return\",result);case 12:case\"end\":return _context.stop();}}},_callee);}));return _initializeLayerChannels.apply(this,arguments);}function getMetaWithTransformMatrices(imageMeta,imageLoaders){// Do not fill in transformation matrices if any of the layers specify one.\nvar sources=imageLoaders.map(function(loader){return getSourceFromLoader(loader);});if(imageMeta.map(function(meta){var _meta$metadata,_meta$metadata$transf,_meta$metadata2,_meta$metadata2$trans,_meta$metadata3,_meta$metadata3$trans;return(meta===null||meta===void 0?void 0:(_meta$metadata=meta.metadata)===null||_meta$metadata===void 0?void 0:(_meta$metadata$transf=_meta$metadata.transform)===null||_meta$metadata$transf===void 0?void 0:_meta$metadata$transf.matrix)||(meta===null||meta===void 0?void 0:(_meta$metadata2=meta.metadata)===null||_meta$metadata2===void 0?void 0:(_meta$metadata2$trans=_meta$metadata2.transform)===null||_meta$metadata2$trans===void 0?void 0:_meta$metadata2$trans.scale)||(meta===null||meta===void 0?void 0:(_meta$metadata3=meta.metadata)===null||_meta$metadata3===void 0?void 0:(_meta$metadata3$trans=_meta$metadata3.transform)===null||_meta$metadata3$trans===void 0?void 0:_meta$metadata3$trans.translate);}).some(Boolean)||sources.every(function(source){var _source$meta,_source$meta$physical,_source$meta2,_source$meta2$physica;return!((_source$meta=source.meta)===null||_source$meta===void 0?void 0:(_source$meta$physical=_source$meta.physicalSizes)===null||_source$meta$physical===void 0?void 0:_source$meta$physical.x)||!((_source$meta2=source.meta)===null||_source$meta2===void 0?void 0:(_source$meta2$physica=_source$meta2.physicalSizes)===null||_source$meta2$physica===void 0?void 0:_source$meta2$physica.y);})){return imageMeta;}// Get the minimum physical among all the current images.\nvar minPhysicalSize=sources.reduce(function(acc,source){var _source$meta3,_source$meta3$physica,_source$meta3$physica2,_source$meta4,_source$meta5,_source$meta6,_source$meta7;var hasZPhyscialSize=(_source$meta3=source.meta)===null||_source$meta3===void 0?void 0:(_source$meta3$physica=_source$meta3.physicalSizes)===null||_source$meta3$physica===void 0?void 0:(_source$meta3$physica2=_source$meta3$physica.z)===null||_source$meta3$physica2===void 0?void 0:_source$meta3$physica2.size;var sizes=[unit(\"\".concat((_source$meta4=source.meta)===null||_source$meta4===void 0?void 0:_source$meta4.physicalSizes.x.size,\" \").concat((_source$meta5=source.meta)===null||_source$meta5===void 0?void 0:_source$meta5.physicalSizes.x.unit).replace('µ','u')),unit(\"\".concat((_source$meta6=source.meta)===null||_source$meta6===void 0?void 0:_source$meta6.physicalSizes.y.size,\" \").concat((_source$meta7=source.meta)===null||_source$meta7===void 0?void 0:_source$meta7.physicalSizes.y.unit).replace('µ','u'))];if(hasZPhyscialSize){var _source$meta8,_source$meta9;sizes.push(unit(\"\".concat((_source$meta8=source.meta)===null||_source$meta8===void 0?void 0:_source$meta8.physicalSizes.z.size,\" \").concat((_source$meta9=source.meta)===null||_source$meta9===void 0?void 0:_source$meta9.physicalSizes.z.unit).replace('µ','u')));}acc[0]=acc[0]===undefined||compare(sizes[0],acc[0])===-1?sizes[0]:acc[0];acc[1]=acc[1]===undefined||compare(sizes[1],acc[1])===-1?sizes[1]:acc[1];acc[2]=acc[2]===undefined||compare(sizes[2],acc[2])===-1?sizes[2]:acc[2];return acc;},[]);var imageMetaWithTransform=imageMeta.map(function(meta,j){var _source$meta10,_source$meta10$physic,_source$meta10$physic2,_source$meta11,_source$meta12,_source$meta13,_source$meta14;var source=sources[j];var hasZPhyscialSize=(_source$meta10=source.meta)===null||_source$meta10===void 0?void 0:(_source$meta10$physic=_source$meta10.physicalSizes)===null||_source$meta10$physic===void 0?void 0:(_source$meta10$physic2=_source$meta10$physic.z)===null||_source$meta10$physic2===void 0?void 0:_source$meta10$physic2.size;var sizes=[unit(\"\".concat((_source$meta11=source.meta)===null||_source$meta11===void 0?void 0:_source$meta11.physicalSizes.x.size,\" \").concat((_source$meta12=source.meta)===null||_source$meta12===void 0?void 0:_source$meta12.physicalSizes.x.unit).replace('µ','u')),unit(\"\".concat((_source$meta13=source.meta)===null||_source$meta13===void 0?void 0:_source$meta13.physicalSizes.y.size,\" \").concat((_source$meta14=source.meta)===null||_source$meta14===void 0?void 0:_source$meta14.physicalSizes.y.unit).replace('µ','u'))];if(hasZPhyscialSize){var _source$meta15,_source$meta16;sizes.push(unit(\"\".concat((_source$meta15=source.meta)===null||_source$meta15===void 0?void 0:_source$meta15.physicalSizes.z.size,\" \").concat((_source$meta16=source.meta)===null||_source$meta16===void 0?void 0:_source$meta16.physicalSizes.z.unit).replace('µ','u')));}// Find the ratio of the sizes to get the scaling factor.\nvar scale=sizes.map(function(i,k){return divide(i,minPhysicalSize[k]);});// Add in z dimension needed for Matrix4 scale API.\nif(!scale[2]){scale[2]=1;}// no need to store/use identity scaling\nif(isEqual(scale,[1,1,1])){return meta;}// Make sure to scale the z direction by one.\nvar matrix=new Matrix4().scale(_toConsumableArray(scale));var newMeta=_objectSpread({},meta);newMeta.metadata=_objectSpread({},newMeta.metadata,{// We don't want to store matrix objects in the view config.\ntransform:{matrix:matrix.toArray()}});return newMeta;});return imageMetaWithTransform;}/**\n * Given a set of image layer loader creator functions,\n * create loader objects for an initial layer or set of layers,\n * which will be selected based on default values predefined in\n * the image data file or otherwise by a heuristic\n * (the midpoint of the layers array).\n * @param {object[]} rasterLayers A list of layer metadata objects with\n * shape { name, type, url, createLoader }.\n * @param {(string[]|null)} rasterRenderLayers A list of default raster layers. Optional.\n */export function initializeRasterLayersAndChannels(_x3,_x4,_x5){return _initializeRasterLayersAndChannels.apply(this,arguments);}/**\n * Make a subtitle for the spatial component.\n * @param {object} params\n * @param {number} params.observationsCount\n * @param {string} params.observationsLabel\n * @param {string} params.observationsPluralLabel\n * @param {number} params.subobservationsCount\n * @param {string} params.subobservationsLabel\n * @param {string} params.subobservationsPluralLabel\n * @param {number} params.locationsCount\n * @returns {string} The subtitle string,\n * with info about items with zero counts omitted.\n */function _initializeRasterLayersAndChannels(){_initializeRasterLayersAndChannels=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(rasterLayers,rasterRenderLayers,usePhysicalSizeScaling){var nextImageLoaders,nextImageMetaAndLayers,autoImageLayerDefPromises,loaders,i,layer,loader,layerIndex,_loader,autoImageLayerDefPromise,globalIndicesOfRenderLayers,_loop,_i,autoImageLayerDefs;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:nextImageLoaders=[];nextImageMetaAndLayers=[];autoImageLayerDefPromises=[];// Start all loader creators immediately.\n// Reference: https://eslint.org/docs/rules/no-await-in-loop\n_context2.next=5;return Promise.all(rasterLayers.map(function(layer){return layer.loaderCreator();}));case 5:loaders=_context2.sent;for(i=0;i<rasterLayers.length;i++){layer=rasterLayers[i];loader=loaders[i];nextImageLoaders[i]=loader;nextImageMetaAndLayers[i]=layer;}if(usePhysicalSizeScaling){nextImageMetaAndLayers=getMetaWithTransformMatrices(nextImageMetaAndLayers,nextImageLoaders);}// No layers were pre-defined so set up the default image layers.\nif(!rasterRenderLayers){// Midpoint of images list as default image to show.\nlayerIndex=Math.floor(rasterLayers.length/2);_loader=nextImageLoaders[layerIndex];autoImageLayerDefPromise=initializeLayerChannels(_loader).then(function(channels){var _nextImageMetaAndLaye,_nextImageMetaAndLaye2,_nextImageMetaAndLaye3,_nextImageMetaAndLaye4,_nextImageMetaAndLaye5;return Promise.resolve(_objectSpread({type:((_nextImageMetaAndLaye=nextImageMetaAndLayers[layerIndex])===null||_nextImageMetaAndLaye===void 0?void 0:(_nextImageMetaAndLaye2=_nextImageMetaAndLaye.metadata)===null||_nextImageMetaAndLaye2===void 0?void 0:_nextImageMetaAndLaye2.isBitmask)?'bitmask':'raster',index:layerIndex},DEFAULT_RASTER_LAYER_PROPS,{channels:channels.map(function(channel,j){return _objectSpread({},channel,{},nextImageMetaAndLayers[layerIndex].channels?nextImageMetaAndLayers[layerIndex].channels[j]:[]);}),modelMatrix:(_nextImageMetaAndLaye3=nextImageMetaAndLayers[layerIndex])===null||_nextImageMetaAndLaye3===void 0?void 0:(_nextImageMetaAndLaye4=_nextImageMetaAndLaye3.metadata)===null||_nextImageMetaAndLaye4===void 0?void 0:(_nextImageMetaAndLaye5=_nextImageMetaAndLaye4.transform)===null||_nextImageMetaAndLaye5===void 0?void 0:_nextImageMetaAndLaye5.matrix,transparentColor:layerIndex>0?[0,0,0]:null}));});autoImageLayerDefPromises.push(autoImageLayerDefPromise);}else{// The renderLayers parameter is a list of layer names to show by default.\nglobalIndicesOfRenderLayers=rasterRenderLayers.map(function(imageName){return rasterLayers.findIndex(function(image){return image.name===imageName;});});_loop=function _loop(_i){var layerIndex=globalIndicesOfRenderLayers[_i];var loader=nextImageLoaders[layerIndex];var autoImageLayerDefPromise=initializeLayerChannels(loader)// eslint-disable-next-line no-loop-func\n.then(function(channels){var _nextImageMetaAndLaye6,_nextImageMetaAndLaye7,_nextImageMetaAndLaye8,_nextImageMetaAndLaye9,_nextImageMetaAndLaye10;return Promise.resolve(_objectSpread({type:((_nextImageMetaAndLaye6=nextImageMetaAndLayers[layerIndex])===null||_nextImageMetaAndLaye6===void 0?void 0:(_nextImageMetaAndLaye7=_nextImageMetaAndLaye6.metadata)===null||_nextImageMetaAndLaye7===void 0?void 0:_nextImageMetaAndLaye7.isBitmask)?'bitmask':'raster',index:layerIndex},DEFAULT_RASTER_LAYER_PROPS,{channels:channels.map(function(channel,j){return _objectSpread({},channel,{},nextImageMetaAndLayers[layerIndex].channels?nextImageMetaAndLayers[layerIndex].channels[j]:[]);}),domainType:'Min/Max',modelMatrix:(_nextImageMetaAndLaye8=nextImageMetaAndLayers[layerIndex])===null||_nextImageMetaAndLaye8===void 0?void 0:(_nextImageMetaAndLaye9=_nextImageMetaAndLaye8.metadata)===null||_nextImageMetaAndLaye9===void 0?void 0:(_nextImageMetaAndLaye10=_nextImageMetaAndLaye9.transform)===null||_nextImageMetaAndLaye10===void 0?void 0:_nextImageMetaAndLaye10.matrix,transparentColor:_i>0?[0,0,0]:null}));});autoImageLayerDefPromises.push(autoImageLayerDefPromise);};for(_i=0;_i<globalIndicesOfRenderLayers.length;_i++){_loop(_i);}}_context2.next=11;return Promise.all(autoImageLayerDefPromises);case 11:autoImageLayerDefs=_context2.sent;return _context2.abrupt(\"return\",[autoImageLayerDefs,nextImageLoaders,nextImageMetaAndLayers]);case 13:case\"end\":return _context2.stop();}}},_callee2);}));return _initializeRasterLayersAndChannels.apply(this,arguments);}export function makeSpatialSubtitle(_ref){var observationsCount=_ref.observationsCount,observationsLabel=_ref.observationsLabel,observationsPluralLabel=_ref.observationsPluralLabel,subobservationsCount=_ref.subobservationsCount,subobservationsLabel=_ref.subobservationsLabel,subobservationsPluralLabel=_ref.subobservationsPluralLabel,locationsCount=_ref.locationsCount;var parts=[];if(subobservationsCount>0){var part=\"\".concat(subobservationsCount,\" \").concat(pluralize(subobservationsLabel,subobservationsPluralLabel,subobservationsCount));if(locationsCount>0){part+=\" at \".concat(shortNumber(locationsCount),\" locations\");}parts.push(part);}if(observationsCount>0){parts.push(\"\".concat(observationsCount,\" \").concat(pluralize(observationsLabel,observationsPluralLabel,observationsCount)));}return parts.join(', ');}export function getInitialSpatialTargets(_ref2){var width=_ref2.width,height=_ref2.height,cells=_ref2.cells,imageLayerLoaders=_ref2.imageLayerLoaders,useRaster=_ref2.useRaster,use3d=_ref2.use3d;var initialTargetX=-Infinity;var initialTargetY=-Infinity;var initialTargetZ=-Infinity;var initialZoom=-Infinity;// Some backoff from completely filling the screen.\nvar zoomBackoff=use3d?1.5:0.1;var cellValues=Object.values(cells);if(imageLayerLoaders.length>0&&useRaster){for(var i=0;i<imageLayerLoaders.length;i+=1){var viewSize={height:height,width:width};var _getDefaultInitialVie=getDefaultInitialViewState(imageLayerLoaders[i].data,viewSize,zoomBackoff,use3d),target=_getDefaultInitialVie.target,newViewStateZoom=_getDefaultInitialVie.zoom;if(target[0]>initialTargetX){// eslint-disable-next-line prefer-destructuring\ninitialTargetX=target[0];initialZoom=newViewStateZoom;}if(target[1]>initialTargetY){// eslint-disable-next-line prefer-destructuring\ninitialTargetY=target[1];initialZoom=newViewStateZoom;}if(target[2]>initialTargetZ){// eslint-disable-next-line prefer-destructuring\ninitialTargetZ=target[2];initialZoom=newViewStateZoom;}else{initialTargetZ=null;}}}else if(cellValues.length>0// Only use cellValues in quadtree calculation if there is\n// centroid data in the cells (i.e not just ids).\n&&cellValues[0].xy&&!useRaster){var cellCoordinates=cellValues.map(function(c){return c.xy;});var xExtent=extent(cellCoordinates,function(c){return c[0];});var yExtent=extent(cellCoordinates,function(c){return c[1];});var xRange=xExtent[1]-xExtent[0];var yRange=yExtent[1]-yExtent[0];var getViewExtentFromPolygonExtents=function getViewExtentFromPolygonExtents(extents){return[Math.min.apply(Math,_toConsumableArray(extents.map(function(i){return i[0];}))),Math.max.apply(Math,_toConsumableArray(extents.map(function(i){return i[1];})))];};if(xRange===0){// The fall back is the cells' polygon coordinates, if the original range\n// is 0 i.e the centroids are all on the same axis.\nvar polygonExtentsX=cellValues.map(function(cell){return extent(cell.poly,function(i){return i[0];});});xExtent=getViewExtentFromPolygonExtents(polygonExtentsX);xRange=xExtent[1]-xExtent[0];}if(yRange===0){// The fall back is the first cells' polygon coordinates, if the original range\n// is 0 i.e the centroids are all on the same axis.\nvar polygonExtentsY=cellValues.map(function(cell){return extent(cell.poly,function(i){return i[1];});});yExtent=getViewExtentFromPolygonExtents(polygonExtentsY);yRange=yExtent[1]-yExtent[0];}initialTargetX=xExtent[0]+xRange/2;initialTargetY=yExtent[0]+yRange/2;initialTargetZ=null;initialZoom=Math.log2(Math.min(width/xRange,height/yRange))-zoomBackoff;}else{return{initialTargetX:null,initialTargetY:null,initialTargetZ:null,initialZoom:null};}return{initialTargetX:initialTargetX,initialTargetY:initialTargetY,initialZoom:initialZoom,initialTargetZ:initialTargetZ};}/**\n * Make a subtitle for the spatial component.\n * @param {object} data PixelSource | PixelSource[]\n * @returns {Array} [Layer, PixelSource | PixelSource[]] tuple.\n */export function getLayerLoaderTuple(data,use3d){var loader=Array.isArray(data)&&data.length>1||!Array.isArray(data)?data:data[0];if(use3d){return[VolumeLayer,Array.isArray(loader)?loader:[loader]];}var Layer=Array.isArray(data)&&data.length>1?MultiscaleImageLayer:ImageLayer;return[Layer,loader];}export function renderSubBitmaskLayers(props){var _props$tile=props.tile,_props$tile$bbox=_props$tile.bbox,left=_props$tile$bbox.left,top=_props$tile$bbox.top,right=_props$tile$bbox.right,bottom=_props$tile$bbox.bottom,x=_props$tile.x,y=_props$tile.y,z=_props$tile.z;var data=props.data,id=props.id,loader=props.loader;// Only render in positive coorinate system\nif([left,bottom,right,top].some(function(v){return v<0;})||!data){return null;}var base=loader[0];var _loader$0$shape$slice=loader[0].shape.slice(-2),_loader$0$shape$slice2=_slicedToArray(_loader$0$shape$slice,2),height=_loader$0$shape$slice2[0],width=_loader$0$shape$slice2[1];// Tiles are exactly fitted to have height and width such that their bounds\n// match that of the actual image (not some padded version).\n// Thus the right/bottom given by deck.gl are incorrect since\n// they assume tiles are of uniform sizes, which is not the case for us.\nvar bounds=[left,data.height<base.tileSize?height:bottom,data.width<base.tileSize?width:right,top];return new BitmaskLayer(props,{channelData:data,// Uncomment to help debugging - shades the tile being hovered over.\n// autoHighlight: true,\n// highlightColor: [80, 80, 80, 50],\n// Shared props with BitmapLayer:\nbounds:bounds,id:\"sub-layer-\".concat(bounds,\"-\").concat(id),tileId:{x:x,y:y,z:z}});}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/spatial/utils.js"],"names":["shortNumber","isEqual","getDefaultInitialViewState","MultiscaleImageLayer","ImageLayer","VolumeLayer","extent","Matrix4","divide","compare","unit","pluralize","getSourceFromLoader","isRgb","VIEWER_PALETTE","GLOBAL_LABELS","DEFAULT_RASTER_LAYER_PROPS","DEFAULT_LAYER_TYPE_ORDERING","BitmaskLayer","getMultiSelectionStats","square","x","y","r","sortLayers","layers","sort","a","b","indexOf","type","getDefaultGlobalSelection","source","globalIndices","labels","filter","dim","includes","selection","forEach","Math","floor","shape","buildDefaultSelection","globalSelection","firstNonGlobalDimension","i","min","push","isInterleaved","lastDimSize","length","initializeLayerChannels","loader","use3d","result","defaultSelection","c","data","selections","stats","domains","colors","sliders","domain","slider","channel","color","visible","getMetaWithTransformMatrices","imageMeta","imageLoaders","sources","map","meta","metadata","transform","matrix","scale","translate","some","Boolean","every","physicalSizes","minPhysicalSize","reduce","acc","hasZPhyscialSize","z","size","sizes","replace","undefined","imageMetaWithTransform","j","k","newMeta","toArray","initializeRasterLayersAndChannels","rasterLayers","rasterRenderLayers","usePhysicalSizeScaling","nextImageLoaders","nextImageMetaAndLayers","autoImageLayerDefPromises","Promise","all","layer","loaderCreator","loaders","layerIndex","autoImageLayerDefPromise","then","channels","resolve","isBitmask","index","modelMatrix","transparentColor","globalIndicesOfRenderLayers","imageName","findIndex","image","name","domainType","autoImageLayerDefs","makeSpatialSubtitle","observationsCount","observationsLabel","observationsPluralLabel","subobservationsCount","subobservationsLabel","subobservationsPluralLabel","locationsCount","parts","part","join","getInitialSpatialTargets","width","height","cells","imageLayerLoaders","useRaster","initialTargetX","Infinity","initialTargetY","initialTargetZ","initialZoom","zoomBackoff","cellValues","Object","values","viewSize","target","newViewStateZoom","zoom","xy","cellCoordinates","xExtent","yExtent","xRange","yRange","getViewExtentFromPolygonExtents","extents","max","polygonExtentsX","cell","poly","polygonExtentsY","log2","getLayerLoaderTuple","Array","isArray","Layer","renderSubBitmaskLayers","props","tile","bbox","left","top","right","bottom","id","v","base","slice","bounds","tileSize","channelData","tileId"],"mappings":"slCAAA,gCACA,MAAOA,CAAAA,WAAP,KAAwB,cAAxB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,OACEC,0BADF,CAEEC,oBAFF,CAGEC,UAHF,CAIEC,WAJF,KAKO,eALP,CAMA,OAASC,MAAT,KAAuB,UAAvB,CACA,OAASC,OAAT,KAAwB,SAAxB,CACA,OAASC,MAAT,CAAiBC,OAAjB,CAA0BC,IAA1B,KAAsC,QAAtC,CACA,OAASC,SAAT,CAAoBC,mBAApB,CAAyCC,KAAzC,KAAsD,aAAtD,CACA,OAASC,cAAT,KAA+B,UAA/B,CACA,OACEC,aADF,CAEEC,0BAFF,CAGEC,2BAHF,KAIO,aAJP,CAKA,MAAOC,CAAAA,YAAP,KAAyB,2BAAzB,CACA,OAASC,sBAAT,KAAuC,2BAAvC,CAEA,MAAO,SAASC,CAAAA,MAAT,CAAgBC,CAAhB,CAAmBC,CAAnB,CAAsBC,CAAtB,CAAyB,CAC9B,MAAO,CAAC,CAACF,CAAD,CAAIC,CAAC,CAAGC,CAAR,CAAD,CAAa,CAACF,CAAC,CAAGE,CAAL,CAAQD,CAAR,CAAb,CAAyB,CAACD,CAAD,CAAIC,CAAC,CAAGC,CAAR,CAAzB,CAAqC,CAACF,CAAC,CAAGE,CAAL,CAAQD,CAAR,CAArC,CAAP,CACD,CAED;;;;;;;;;GAUA,MAAO,SAASE,CAAAA,UAAT,CAAoBC,MAApB,CAA4B,CACjC,MAAOA,CAAAA,MAAM,CAACC,IAAP,CAAY,SAACC,CAAD,CAAIC,CAAJ,QACjBX,CAAAA,2BAA2B,CAACY,OAA5B,CAAoCF,CAAC,CAACG,IAAtC,EAA8Cb,2BAA2B,CAACY,OAA5B,CAAoCD,CAAC,CAACE,IAAtC,CAD7B,EAAZ,CAAP,CAGD,CAED;;;;GAKA,QAASC,CAAAA,yBAAT,CAAmCC,MAAnC,CAA2C,CACzC,GAAMC,CAAAA,aAAa,CAAGD,MAAM,CAACE,MAAP,CACnBC,MADmB,CACZ,SAAAC,GAAG,QAAIrB,CAAAA,aAAa,CAACsB,QAAd,CAAuBD,GAAvB,CAAJ,EADS,CAAtB,CAEA,GAAME,CAAAA,SAAS,CAAG,EAAlB,CACAL,aAAa,CAACM,OAAd,CAAsB,SAACH,GAAD,CAAS,CAC7BE,SAAS,CAACF,GAAD,CAAT,CAAiBI,IAAI,CAACC,KAAL,CACf,CAACT,MAAM,CAACU,KAAP,CAAaV,MAAM,CAACE,MAAP,CAAcL,OAAd,CAAsBO,GAAtB,CAAb,GAA4C,CAA7C,EAAkD,CADnC,CAAjB,CAGD,CAJD,EAKA,MAAOE,CAAAA,SAAP,CACD,CAED;;;;;GAMA,QAASK,CAAAA,qBAAT,CAA+BX,MAA/B,CAAuC,CACrC,GAAMM,CAAAA,SAAS,CAAG,EAAlB,CACA,GAAMM,CAAAA,eAAe,CAAGb,yBAAyB,CAACC,MAAD,CAAjD,CACA;AACA,GAAMa,CAAAA,uBAAuB,CAAGb,MAAM,CAACE,MAAP,CAAcC,MAAd,CAC9B,SAAAC,GAAG,QAAI,CAACrB,aAAa,CAACsB,QAAd,CAAuBD,GAAvB,CAAD,EACFJ,MAAM,CAACU,KAAP,CAAaV,MAAM,CAACE,MAAP,CAAcL,OAAd,CAAsBO,GAAtB,CAAb,CADF,EAD2B,EAG9B,CAH8B,CAAhC,CAIA,IAAK,GAAIU,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGN,IAAI,CAACO,GAAL,CAAS,CAAT,CAAYf,MAAM,CAACU,KAAP,CAC9BV,MAAM,CAACE,MAAP,CAAcL,OAAd,CAAsBgB,uBAAtB,CAD8B,CAAZ,CAApB,CAEIC,CAAC,EAAI,CAFT,CAEY,CACVR,SAAS,CAACU,IAAV,kCAEKH,uBAFL,CAE+BC,CAF/B,EAGOF,eAHP,GAMD,CACD,MAAON,CAAAA,SAAP,CACD,CAED;;GAGA,MAAO,SAASW,CAAAA,aAAT,CAAuBP,KAAvB,CAA8B,CACnC,GAAMQ,CAAAA,WAAW,CAAGR,KAAK,CAACA,KAAK,CAACS,MAAN,CAAe,CAAhB,CAAzB,CACA,MAAOD,CAAAA,WAAW,GAAK,CAAhB,EAAqBA,WAAW,GAAK,CAA5C,CACD,CAED;;;;;;GAOA,eAAsBE,CAAAA,uBAAtB,gE,qHAAO,iBAAuCC,MAAvC,CAA+CC,KAA/C,kLACCC,MADD,CACU,EADV,CAECvB,MAFD,CAEUpB,mBAAmB,CAACyC,MAAD,CAF7B,CAGL;AACIG,gBAJC,CAIkBb,qBAAqB,CAACX,MAAD,CAJvC,CAKLwB,gBAAgB,CAAGP,aAAa,CAACjB,MAAM,CAACU,KAAR,CAAb,CACf,kBAAMc,gBAAgB,CAAC,CAAD,CAAtB,EAA2BC,CAAC,CAAE,CAA9B,GADe,CACsBD,gBADzC,CALK,sBAOerC,CAAAA,sBAAsB,CAAC,CACzCkC,MAAM,CAAEA,MAAM,CAACK,IAD0B,CACpBC,UAAU,CAAEH,gBADQ,CACUF,KAAK,CAALA,KADV,CAAD,CAPrC,QAOCM,KAPD,eAWCC,OAXD,CAWWhD,KAAK,CAACwC,MAAD,CAAL,CACZ,CAAC,CAAC,CAAD,CAAI,GAAJ,CAAD,CAAW,CAAC,CAAD,CAAI,GAAJ,CAAX,CAAqB,CAAC,CAAD,CAAI,GAAJ,CAArB,CADY,CAEZO,KAAK,CAACC,OAbL,CAcCC,MAdD,CAcUjD,KAAK,CAACwC,MAAD,CAAL,CACX,CAAC,CAAC,GAAD,CAAM,CAAN,CAAS,CAAT,CAAD,CAAc,CAAC,CAAD,CAAI,GAAJ,CAAS,CAAT,CAAd,CAA2B,CAAC,CAAD,CAAI,CAAJ,CAAO,GAAP,CAA3B,CADW,CAEX,IAhBC,CAiBCU,OAjBD,CAiBWlD,KAAK,CAACwC,MAAD,CAAL,CACZ,CAAC,CAAC,CAAD,CAAI,GAAJ,CAAD,CAAW,CAAC,CAAD,CAAI,GAAJ,CAAX,CAAqB,CAAC,CAAD,CAAI,GAAJ,CAArB,CADY,CAEZO,KAAK,CAACG,OAnBL,CAqBLP,gBAAgB,CAACjB,OAAjB,CAAyB,SAACD,SAAD,CAAYQ,CAAZ,CAAkB,CACzC,GAAMkB,CAAAA,MAAM,CAAGH,OAAO,CAACf,CAAD,CAAtB,CACA,GAAMmB,CAAAA,MAAM,CAAGF,OAAO,CAACjB,CAAD,CAAtB,CACA,GAAMoB,CAAAA,OAAO,CAAG,CACd5B,SAAS,CAATA,SADc,CAEd;AACA6B,KAAK,CAAEL,MAAM,CAAGA,MAAM,CAAChB,CAAD,CAAT,CACTU,gBAAgB,CAACL,MAAjB,GAA4B,CAA5B,CACErC,cAAc,CAACgC,CAAD,CADhB,CACsB,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CALZ,CAMdsB,OAAO,CAAE,IANK,CAOdH,MAAM,CAAEA,MAAM,EAAID,MAPJ,CAAhB,CASAT,MAAM,CAACP,IAAP,CAAYkB,OAAZ,EACD,CAbD,EArBK,gCAmCEX,MAnCF,yD,0DAsCP,QAASc,CAAAA,4BAAT,CAAsCC,SAAtC,CAAiDC,YAAjD,CAA+D,CAC7D;AACA,GAAMC,CAAAA,OAAO,CAAGD,YAAY,CAACE,GAAb,CAAiB,SAAApB,MAAM,QAAIzC,CAAAA,mBAAmB,CAACyC,MAAD,CAAvB,EAAvB,CAAhB,CACA,GACEiB,SAAS,CAACG,GAAV,CAAc,SAAAC,IAAI,6HAAI,CAAAA,IAAI,OAAJ,EAAAA,IAAI,SAAJ,wBAAAA,IAAI,CAAEC,QAAN,+EAAgBC,SAAhB,sEAA2BC,MAA3B,IACjBH,IADiB,SACjBA,IADiB,kCACjBA,IAAI,CAAEC,QADW,iEACjB,gBAAgBC,SADC,gDACjB,sBAA2BE,KADV,IAEjBJ,IAFiB,SAEjBA,IAFiB,kCAEjBA,IAAI,CAAEC,QAFW,iEAEjB,gBAAgBC,SAFC,gDAEjB,sBAA2BG,SAFV,CAAJ,EAAlB,EAE2CC,IAF3C,CAEgDC,OAFhD,GAGGT,OAAO,CAACU,KAAR,CACD,SAAAlD,MAAM,mFAAI,gBAACA,MAAM,CAAC0C,IAAR,8DAAC,aAAaS,aAAd,gDAAC,sBAA4B9D,CAA7B,GAAkC,iBAACW,MAAM,CAAC0C,IAAR,+DAAC,cAAaS,aAAd,gDAAC,sBAA4B7D,CAA7B,CAAtC,EADL,CAJL,CAOE,CACA,MAAOgD,CAAAA,SAAP,CACD,CACD;AACA,GAAMc,CAAAA,eAAe,CAAGZ,OAAO,CAACa,MAAR,CAAe,SAACC,GAAD,CAAMtD,MAAN,CAAiB,wHACtD,GAAMuD,CAAAA,gBAAgB,gBAAGvD,MAAM,CAAC0C,IAAV,+DAAG,cAAaS,aAAhB,wEAAG,sBAA4BK,CAA/B,iDAAG,uBAA+BC,IAAxD,CACA,GAAMC,CAAAA,KAAK,CAAG,CACZhF,IAAI,CAAC,yBAAGsB,MAAM,CAAC0C,IAAV,wCAAG,cAAaS,aAAb,CAA2B9D,CAA3B,CAA6BoE,IAAhC,4BAAwCzD,MAAM,CAAC0C,IAA/C,wCAAwC,cAAaS,aAAb,CAA2B9D,CAA3B,CAA6BX,IAArE,EAA4EiF,OAA5E,CAAoF,GAApF,CAAyF,GAAzF,CAAD,CADQ,CAEZjF,IAAI,CAAC,yBAAGsB,MAAM,CAAC0C,IAAV,wCAAG,cAAaS,aAAb,CAA2B7D,CAA3B,CAA6BmE,IAAhC,4BAAwCzD,MAAM,CAAC0C,IAA/C,wCAAwC,cAAaS,aAAb,CAA2B7D,CAA3B,CAA6BZ,IAArE,EAA4EiF,OAA5E,CAAoF,GAApF,CAAyF,GAAzF,CAAD,CAFQ,CAAd,CAIA,GAAIJ,gBAAJ,CAAsB,iCACpBG,KAAK,CAAC1C,IAAN,CAAWtC,IAAI,CAAC,yBAAGsB,MAAM,CAAC0C,IAAV,wCAAG,cAAaS,aAAb,CAA2BK,CAA3B,CAA6BC,IAAhC,4BAAwCzD,MAAM,CAAC0C,IAA/C,wCAAwC,cAAaS,aAAb,CAA2BK,CAA3B,CAA6B9E,IAArE,EAA4EiF,OAA5E,CAAoF,GAApF,CAAyF,GAAzF,CAAD,CAAf,EACD,CACDL,GAAG,CAAC,CAAD,CAAH,CAAUA,GAAG,CAAC,CAAD,CAAH,GAAWM,SAAX,EAAwBnF,OAAO,CAACiF,KAAK,CAAC,CAAD,CAAN,CAAWJ,GAAG,CAAC,CAAD,CAAd,CAAP,GAA8B,CAAC,CAAxD,CAA6DI,KAAK,CAAC,CAAD,CAAlE,CAAwEJ,GAAG,CAAC,CAAD,CAApF,CACAA,GAAG,CAAC,CAAD,CAAH,CAAUA,GAAG,CAAC,CAAD,CAAH,GAAWM,SAAX,EAAwBnF,OAAO,CAACiF,KAAK,CAAC,CAAD,CAAN,CAAWJ,GAAG,CAAC,CAAD,CAAd,CAAP,GAA8B,CAAC,CAAxD,CAA6DI,KAAK,CAAC,CAAD,CAAlE,CAAwEJ,GAAG,CAAC,CAAD,CAApF,CACAA,GAAG,CAAC,CAAD,CAAH,CAAUA,GAAG,CAAC,CAAD,CAAH,GAAWM,SAAX,EAAwBnF,OAAO,CAACiF,KAAK,CAAC,CAAD,CAAN,CAAWJ,GAAG,CAAC,CAAD,CAAd,CAAP,GAA8B,CAAC,CAAxD,CAA6DI,KAAK,CAAC,CAAD,CAAlE,CAAwEJ,GAAG,CAAC,CAAD,CAApF,CACA,MAAOA,CAAAA,GAAP,CACD,CAbuB,CAarB,EAbqB,CAAxB,CAcA,GAAMO,CAAAA,sBAAsB,CAAGvB,SAAS,CAACG,GAAV,CAAc,SAACC,IAAD,CAAOoB,CAAP,CAAa,6HACxD,GAAM9D,CAAAA,MAAM,CAAGwC,OAAO,CAACsB,CAAD,CAAtB,CACA,GAAMP,CAAAA,gBAAgB,iBAAGvD,MAAM,CAAC0C,IAAV,gEAAG,eAAaS,aAAhB,wEAAG,sBAA4BK,CAA/B,iDAAG,uBAA+BC,IAAxD,CACA,GAAMC,CAAAA,KAAK,CAAG,CACZhF,IAAI,CAAC,0BAAGsB,MAAM,CAAC0C,IAAV,yCAAG,eAAaS,aAAb,CAA2B9D,CAA3B,CAA6BoE,IAAhC,6BAAwCzD,MAAM,CAAC0C,IAA/C,yCAAwC,eAAaS,aAAb,CAA2B9D,CAA3B,CAA6BX,IAArE,EAA4EiF,OAA5E,CAAoF,GAApF,CAAyF,GAAzF,CAAD,CADQ,CAEZjF,IAAI,CAAC,0BAAGsB,MAAM,CAAC0C,IAAV,yCAAG,eAAaS,aAAb,CAA2B7D,CAA3B,CAA6BmE,IAAhC,6BAAwCzD,MAAM,CAAC0C,IAA/C,yCAAwC,eAAaS,aAAb,CAA2B7D,CAA3B,CAA6BZ,IAArE,EAA4EiF,OAA5E,CAAoF,GAApF,CAAyF,GAAzF,CAAD,CAFQ,CAAd,CAIA,GAAIJ,gBAAJ,CAAsB,mCACpBG,KAAK,CAAC1C,IAAN,CAAWtC,IAAI,CAAC,0BAAGsB,MAAM,CAAC0C,IAAV,yCAAG,eAAaS,aAAb,CAA2BK,CAA3B,CAA6BC,IAAhC,6BAAwCzD,MAAM,CAAC0C,IAA/C,yCAAwC,eAAaS,aAAb,CAA2BK,CAA3B,CAA6B9E,IAArE,EAA4EiF,OAA5E,CAAoF,GAApF,CAAyF,GAAzF,CAAD,CAAf,EACD,CACD;AACA,GAAMb,CAAAA,KAAK,CAAGY,KAAK,CAACjB,GAAN,CAAU,SAAC3B,CAAD,CAAIiD,CAAJ,QAAUvF,CAAAA,MAAM,CAACsC,CAAD,CAAIsC,eAAe,CAACW,CAAD,CAAnB,CAAhB,EAAV,CAAd,CACA;AACA,GAAI,CAACjB,KAAK,CAAC,CAAD,CAAV,CAAe,CACbA,KAAK,CAAC,CAAD,CAAL,CAAW,CAAX,CACD,CACD;AACA,GAAI7E,OAAO,CAAC6E,KAAD,CAAQ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAR,CAAX,CAA+B,CAC7B,MAAOJ,CAAAA,IAAP,CACD,CACD;AACA,GAAMG,CAAAA,MAAM,CAAG,GAAItE,CAAAA,OAAJ,GAAcuE,KAAd,oBAAwBA,KAAxB,EAAf,CACA,GAAMkB,CAAAA,OAAO,kBAAQtB,IAAR,CAAb,CACAsB,OAAO,CAACrB,QAAR,kBACKqB,OAAO,CAACrB,QADb,EAEE;AACAC,SAAS,CAAE,CAAEC,MAAM,CAAEA,MAAM,CAACoB,OAAP,EAAV,CAHb,GAKA,MAAOD,CAAAA,OAAP,CACD,CA7B8B,CAA/B,CA8BA,MAAOH,CAAAA,sBAAP,CACD,CAED;;;;;;;;;GAUA,eAAsBK,CAAAA,iCAAtB,+EAuEA;;;;;;;;;;;;4IAvEO,kBACLC,YADK,CAELC,kBAFK,CAGLC,sBAHK,uTAKCC,gBALD,CAKoB,EALpB,CAMDC,sBANC,CAMwB,EANxB,CAOCC,yBAPD,CAO6B,EAP7B,CASL;AACA;AAVK,uBAWiBC,CAAAA,OAAO,CAACC,GAAR,CAAYP,YAAY,CAAC1B,GAAb,CAAiB,SAAAkC,KAAK,QAAIA,CAAAA,KAAK,CAACC,aAAN,EAAJ,EAAtB,CAAZ,CAXjB,QAWCC,OAXD,gBAaL,IAAS/D,CAAT,CAAa,CAAb,CAAgBA,CAAC,CAAGqD,YAAY,CAAChD,MAAjC,CAAyCL,CAAC,EAA1C,CAA8C,CACtC6D,KADsC,CAC9BR,YAAY,CAACrD,CAAD,CADkB,CAEtCO,MAFsC,CAE7BwD,OAAO,CAAC/D,CAAD,CAFsB,CAG5CwD,gBAAgB,CAACxD,CAAD,CAAhB,CAAsBO,MAAtB,CACAkD,sBAAsB,CAACzD,CAAD,CAAtB,CAA4B6D,KAA5B,CACD,CACD,GAAIN,sBAAJ,CAA4B,CAC1BE,sBAAsB,CAAGlC,4BAA4B,CAACkC,sBAAD,CAAyBD,gBAAzB,CAArD,CACD,CACD;AACA,GAAI,CAACF,kBAAL,CAAyB,CACvB;AACMU,UAFiB,CAEJtE,IAAI,CAACC,KAAL,CAAW0D,YAAY,CAAChD,MAAb,CAAsB,CAAjC,CAFI,CAGjBE,OAHiB,CAGRiD,gBAAgB,CAACQ,UAAD,CAHR,CAIjBC,wBAJiB,CAIU3D,uBAAuB,CAACC,OAAD,CAAvB,CAC9B2D,IAD8B,CACzB,SAAAC,QAAQ,8HAAIR,CAAAA,OAAO,CAACS,OAAR,gBAChBpF,IAAI,CAAE,wBAAAyE,sBAAsB,CAACO,UAAD,CAAtB,8FAAoCnC,QAApC,wEAA8CwC,SAA9C,EAA0D,SAA1D,CAAsE,QAD5D,CAEhBC,KAAK,CAAEN,UAFS,EAGb9F,0BAHa,EAIhBiG,QAAQ,CAAEA,QAAQ,CAACxC,GAAT,CAAa,SAACP,OAAD,CAAU4B,CAAV,0BAClB5B,OADkB,IAEjBqC,sBAAsB,CAACO,UAAD,CAAtB,CAAmCG,QAAnC,CACAV,sBAAsB,CAACO,UAAD,CAAtB,CAAmCG,QAAnC,CAA4CnB,CAA5C,CADA,CACiD,EAHhC,GAAb,CAJM,CAShBuB,WAAW,yBAAEd,sBAAsB,CAACO,UAAD,CAAxB,yEAAE,uBAAoCnC,QAAtC,yEAAE,uBAA8CC,SAAhD,iDAAE,uBAAyDC,MATtD,CAUhByC,gBAAgB,CAAER,UAAU,CAAG,CAAb,CAAiB,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAjB,CAA6B,IAV/B,GAAJ,EADiB,CAJV,CAiBvBN,yBAAyB,CAACxD,IAA1B,CAA+B+D,wBAA/B,EACD,CAlBD,IAkBO,CACL;AACMQ,2BAFD,CAE+BnB,kBAAkB,CACnD3B,GADiC,CAC7B,SAAA+C,SAAS,QAAIrB,CAAAA,YAAY,CAACsB,SAAb,CAAuB,SAAAC,KAAK,QAAIA,CAAAA,KAAK,CAACC,IAAN,GAAeH,SAAnB,EAA5B,CAAJ,EADoB,CAF/B,sBAII1E,EAJJ,EAKH,GAAMgE,CAAAA,UAAU,CAAGS,2BAA2B,CAACzE,EAAD,CAA9C,CACA,GAAMO,CAAAA,MAAM,CAAGiD,gBAAgB,CAACQ,UAAD,CAA/B,CACA,GAAMC,CAAAA,wBAAwB,CAAG3D,uBAAuB,CAACC,MAAD,CACtD;AAD+B,CAE9B2D,IAF8B,CAEzB,SAAAC,QAAQ,gIAAIR,CAAAA,OAAO,CAACS,OAAR,gBAChBpF,IAAI,CAAE,yBAAAyE,sBAAsB,CAACO,UAAD,CAAtB,gGAAoCnC,QAApC,wEAA8CwC,SAA9C,EAA0D,SAA1D,CAAsE,QAD5D,CAEhBC,KAAK,CAAEN,UAFS,EAGb9F,0BAHa,EAIhBiG,QAAQ,CAAEA,QAAQ,CAACxC,GAAT,CAAa,SAACP,OAAD,CAAU4B,CAAV,0BAClB5B,OADkB,IAEjBqC,sBAAsB,CAACO,UAAD,CAAtB,CAAmCG,QAAnC,CACAV,sBAAsB,CAACO,UAAD,CAAtB,CAAmCG,QAAnC,CAA4CnB,CAA5C,CADA,CACiD,EAHhC,GAAb,CAJM,CAShB8B,UAAU,CAAE,SATI,CAUhBP,WAAW,yBAAEd,sBAAsB,CAACO,UAAD,CAAxB,yEAAE,uBAAoCnC,QAAtC,0EAAE,uBAA8CC,SAAhD,kDAAE,wBAAyDC,MAVtD,CAWhByC,gBAAgB,CAAExE,EAAC,CAAG,CAAJ,CAAQ,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAR,CAAoB,IAXtB,GAAJ,EAFiB,CAAjC,CAeA0D,yBAAyB,CAACxD,IAA1B,CAA+B+D,wBAA/B,EAtBG,EAIL,IAASjE,EAAT,CAAa,CAAb,CAAgBA,EAAC,CAAGyE,2BAA2B,CAACpE,MAAhD,CAAwDL,EAAC,EAAzD,CAA6D,OAApDA,EAAoD,EAmB5D,CACF,CAjEI,wBAmE4B2D,CAAAA,OAAO,CAACC,GAAR,CAAYF,yBAAZ,CAnE5B,SAmECqB,kBAnED,iDAoEE,CAACA,kBAAD,CAAqBvB,gBAArB,CAAuCC,sBAAvC,CApEF,2D,oEAoFP,MAAO,SAASuB,CAAAA,mBAAT,MAIJ,IAHDC,CAAAA,iBAGC,MAHDA,iBAGC,CAHkBC,iBAGlB,MAHkBA,iBAGlB,CAHqCC,uBAGrC,MAHqCA,uBAGrC,CAFDC,oBAEC,MAFDA,oBAEC,CAFqBC,oBAErB,MAFqBA,oBAErB,CAF2CC,0BAE3C,MAF2CA,0BAE3C,CADDC,cACC,MADDA,cACC,CACD,GAAMC,CAAAA,KAAK,CAAG,EAAd,CACA,GAAIJ,oBAAoB,CAAG,CAA3B,CAA8B,CAC5B,GAAIK,CAAAA,IAAI,WAAML,oBAAN,aAA8BvH,SAAS,CAACwH,oBAAD,CAAuBC,0BAAvB,CAAmDF,oBAAnD,CAAvC,CAAR,CACA,GAAIG,cAAc,CAAG,CAArB,CAAwB,CACtBE,IAAI,gBAAWvI,WAAW,CAACqI,cAAD,CAAtB,cAAJ,CACD,CACDC,KAAK,CAACtF,IAAN,CAAWuF,IAAX,EACD,CACD,GAAIR,iBAAiB,CAAG,CAAxB,CAA2B,CACzBO,KAAK,CAACtF,IAAN,WAAc+E,iBAAd,aAAmCpH,SAAS,CAACqH,iBAAD,CAAoBC,uBAApB,CAA6CF,iBAA7C,CAA5C,GACD,CACD,MAAOO,CAAAA,KAAK,CAACE,IAAN,CAAW,IAAX,CAAP,CACD,CAED,MAAO,SAASC,CAAAA,wBAAT,OAOJ,IANDC,CAAAA,KAMC,OANDA,KAMC,CALDC,MAKC,OALDA,MAKC,CAJDC,KAIC,OAJDA,KAIC,CAHDC,iBAGC,OAHDA,iBAGC,CAFDC,SAEC,OAFDA,SAEC,CADDxF,KACC,OADDA,KACC,CACD,GAAIyF,CAAAA,cAAc,CAAG,CAACC,QAAtB,CACA,GAAIC,CAAAA,cAAc,CAAG,CAACD,QAAtB,CACA,GAAIE,CAAAA,cAAc,CAAG,CAACF,QAAtB,CACA,GAAIG,CAAAA,WAAW,CAAG,CAACH,QAAnB,CACA;AACA,GAAMI,CAAAA,WAAW,CAAG9F,KAAK,CAAG,GAAH,CAAS,GAAlC,CACA,GAAM+F,CAAAA,UAAU,CAAGC,MAAM,CAACC,MAAP,CAAcX,KAAd,CAAnB,CACA,GAAIC,iBAAiB,CAAC1F,MAAlB,CAA2B,CAA3B,EAAgC2F,SAApC,CAA+C,CAC7C,IAAK,GAAIhG,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG+F,iBAAiB,CAAC1F,MAAtC,CAA8CL,CAAC,EAAI,CAAnD,CAAsD,CACpD,GAAM0G,CAAAA,QAAQ,CAAG,CAAEb,MAAM,CAANA,MAAF,CAAUD,KAAK,CAALA,KAAV,CAAjB,CADoD,0BAETxI,0BAA0B,CACnE2I,iBAAiB,CAAC/F,CAAD,CAAjB,CAAqBY,IAD8C,CAEnE8F,QAFmE,CAGnEJ,WAHmE,CAInE9F,KAJmE,CAFjB,CAE5CmG,MAF4C,uBAE5CA,MAF4C,CAE9BC,gBAF8B,uBAEpCC,IAFoC,CAQpD,GAAIF,MAAM,CAAC,CAAD,CAAN,CAAYV,cAAhB,CAAgC,CAC9B;AACAA,cAAc,CAAGU,MAAM,CAAC,CAAD,CAAvB,CACAN,WAAW,CAAGO,gBAAd,CACD,CACD,GAAID,MAAM,CAAC,CAAD,CAAN,CAAYR,cAAhB,CAAgC,CAC9B;AACAA,cAAc,CAAGQ,MAAM,CAAC,CAAD,CAAvB,CACAN,WAAW,CAAGO,gBAAd,CACD,CACD,GAAID,MAAM,CAAC,CAAD,CAAN,CAAYP,cAAhB,CAAgC,CAC9B;AACAA,cAAc,CAAGO,MAAM,CAAC,CAAD,CAAvB,CACAN,WAAW,CAAGO,gBAAd,CACD,CAJD,IAIO,CACLR,cAAc,CAAG,IAAjB,CACD,CACF,CACF,CA3BD,IA2BO,IAAIG,UAAU,CAAClG,MAAX,CAAoB,CAC7B;AACA;AAFS,EAGNkG,UAAU,CAAC,CAAD,CAAV,CAAcO,EAHR,EAIN,CAACd,SAJC,CAIU,CACf,GAAMe,CAAAA,eAAe,CAAGR,UAAU,CAAC5E,GAAX,CAAe,SAAAhB,CAAC,QAAIA,CAAAA,CAAC,CAACmG,EAAN,EAAhB,CAAxB,CACA,GAAIE,CAAAA,OAAO,CAAGxJ,MAAM,CAACuJ,eAAD,CAAkB,SAAApG,CAAC,QAAIA,CAAAA,CAAC,CAAC,CAAD,CAAL,EAAnB,CAApB,CACA,GAAIsG,CAAAA,OAAO,CAAGzJ,MAAM,CAACuJ,eAAD,CAAkB,SAAApG,CAAC,QAAIA,CAAAA,CAAC,CAAC,CAAD,CAAL,EAAnB,CAApB,CACA,GAAIuG,CAAAA,MAAM,CAAGF,OAAO,CAAC,CAAD,CAAP,CAAaA,OAAO,CAAC,CAAD,CAAjC,CACA,GAAIG,CAAAA,MAAM,CAAGF,OAAO,CAAC,CAAD,CAAP,CAAaA,OAAO,CAAC,CAAD,CAAjC,CACA,GAAMG,CAAAA,+BAA+B,CAAG,QAAlCA,CAAAA,+BAAkC,CAAAC,OAAO,QAAI,CACjD3H,IAAI,CAACO,GAAL,OAAAP,IAAI,oBAAQ2H,OAAO,CAAC1F,GAAR,CAAY,SAAA3B,CAAC,QAAIA,CAAAA,CAAC,CAAC,CAAD,CAAL,EAAb,CAAR,EAD6C,CAEjDN,IAAI,CAAC4H,GAAL,OAAA5H,IAAI,oBAAQ2H,OAAO,CAAC1F,GAAR,CAAY,SAAA3B,CAAC,QAAIA,CAAAA,CAAC,CAAC,CAAD,CAAL,EAAb,CAAR,EAF6C,CAAJ,EAA/C,CAIA,GAAIkH,MAAM,GAAK,CAAf,CAAkB,CAChB;AACA;AACA,GAAMK,CAAAA,eAAe,CAAGhB,UAAU,CAAC5E,GAAX,CAAe,SAAA6F,IAAI,QAAIhK,CAAAA,MAAM,CAACgK,IAAI,CAACC,IAAN,CAAY,SAAAzH,CAAC,QAAIA,CAAAA,CAAC,CAAC,CAAD,CAAL,EAAb,CAAV,EAAnB,CAAxB,CACAgH,OAAO,CAAGI,+BAA+B,CAACG,eAAD,CAAzC,CACAL,MAAM,CAAGF,OAAO,CAAC,CAAD,CAAP,CAAaA,OAAO,CAAC,CAAD,CAA7B,CACD,CACD,GAAIG,MAAM,GAAK,CAAf,CAAkB,CAChB;AACA;AACA,GAAMO,CAAAA,eAAe,CAAGnB,UAAU,CAAC5E,GAAX,CAAe,SAAA6F,IAAI,QAAIhK,CAAAA,MAAM,CAACgK,IAAI,CAACC,IAAN,CAAY,SAAAzH,CAAC,QAAIA,CAAAA,CAAC,CAAC,CAAD,CAAL,EAAb,CAAV,EAAnB,CAAxB,CACAiH,OAAO,CAAGG,+BAA+B,CAACM,eAAD,CAAzC,CACAP,MAAM,CAAGF,OAAO,CAAC,CAAD,CAAP,CAAaA,OAAO,CAAC,CAAD,CAA7B,CACD,CACDhB,cAAc,CAAGe,OAAO,CAAC,CAAD,CAAP,CAAaE,MAAM,CAAG,CAAvC,CACAf,cAAc,CAAGc,OAAO,CAAC,CAAD,CAAP,CAAaE,MAAM,CAAG,CAAvC,CACAf,cAAc,CAAG,IAAjB,CACAC,WAAW,CAAG3G,IAAI,CAACiI,IAAL,CAAUjI,IAAI,CAACO,GAAL,CAAS2F,KAAK,CAAGsB,MAAjB,CAAyBrB,MAAM,CAAGsB,MAAlC,CAAV,EAAuDb,WAArE,CACD,CAhCM,IAgCA,CACL,MAAO,CACLL,cAAc,CAAE,IADX,CACiBE,cAAc,CAAE,IADjC,CACuCC,cAAc,CAAE,IADvD,CAC6DC,WAAW,CAAE,IAD1E,CAAP,CAGD,CACD,MAAO,CACLJ,cAAc,CAAdA,cADK,CACWE,cAAc,CAAdA,cADX,CAC2BE,WAAW,CAAXA,WAD3B,CACwCD,cAAc,CAAdA,cADxC,CAAP,CAGD,CAED;;;;GAKA,MAAO,SAASwB,CAAAA,mBAAT,CAA6BhH,IAA7B,CAAmCJ,KAAnC,CAA0C,CAC/C,GAAMD,CAAAA,MAAM,CAAKsH,KAAK,CAACC,OAAN,CAAclH,IAAd,GAAuBA,IAAI,CAACP,MAAL,CAAc,CAAtC,EAA4C,CAACwH,KAAK,CAACC,OAAN,CAAclH,IAAd,CAA9C,CACXA,IADW,CACJA,IAAI,CAAC,CAAD,CADf,CAEA,GAAIJ,KAAJ,CAAW,CACT,MAAO,CAACjD,WAAD,CAAcsK,KAAK,CAACC,OAAN,CAAcvH,MAAd,EAAwBA,MAAxB,CAAiC,CAACA,MAAD,CAA/C,CAAP,CACD,CACD,GAAMwH,CAAAA,KAAK,CAAIF,KAAK,CAACC,OAAN,CAAclH,IAAd,GAAuBA,IAAI,CAACP,MAAL,CAAc,CAAtC,CAA2ChD,oBAA3C,CAAkEC,UAAhF,CACA,MAAO,CAACyK,KAAD,CAAQxH,MAAR,CAAP,CACD,CAGD,MAAO,SAASyH,CAAAA,sBAAT,CAAgCC,KAAhC,CAAuC,iBAQxCA,KAAK,CAACC,IARkC,8BAE1CC,IAF0C,CAGxCC,IAHwC,kBAGxCA,IAHwC,CAGlCC,GAHkC,kBAGlCA,GAHkC,CAG7BC,KAH6B,kBAG7BA,KAH6B,CAGtBC,MAHsB,kBAGtBA,MAHsB,CAK1ChK,CAL0C,aAK1CA,CAL0C,CAM1CC,CAN0C,aAM1CA,CAN0C,CAO1CkE,CAP0C,aAO1CA,CAP0C,IAU1C9B,CAAAA,IAV0C,CAWxCqH,KAXwC,CAU1CrH,IAV0C,CAUpC4H,EAVoC,CAWxCP,KAXwC,CAUpCO,EAVoC,CAUhCjI,MAVgC,CAWxC0H,KAXwC,CAUhC1H,MAVgC,CAY5C;AACA,GAAI,CAAC6H,IAAD,CAAOG,MAAP,CAAeD,KAAf,CAAsBD,GAAtB,EAA2BnG,IAA3B,CAAgC,SAAAuG,CAAC,QAAIA,CAAAA,CAAC,CAAG,CAAR,EAAjC,GAA+C,CAAC7H,IAApD,CAA0D,CACxD,MAAO,KAAP,CACD,CACD,GAAM8H,CAAAA,IAAI,CAAGnI,MAAM,CAAC,CAAD,CAAnB,CAhB4C,0BAiBpBA,MAAM,CAAC,CAAD,CAAN,CAAUX,KAAV,CAAgB+I,KAAhB,CAAsB,CAAC,CAAvB,CAjBoB,gEAiBrC9C,MAjBqC,2BAiB7BD,KAjB6B,2BAkB5C;AACA;AACA;AACA;AACA,GAAMgD,CAAAA,MAAM,CAAG,CACbR,IADa,CAEbxH,IAAI,CAACiF,MAAL,CAAc6C,IAAI,CAACG,QAAnB,CAA8BhD,MAA9B,CAAuC0C,MAF1B,CAGb3H,IAAI,CAACgF,KAAL,CAAa8C,IAAI,CAACG,QAAlB,CAA6BjD,KAA7B,CAAqC0C,KAHxB,CAIbD,GAJa,CAAf,CAMA,MAAO,IAAIjK,CAAAA,YAAJ,CAAiB6J,KAAjB,CAAwB,CAC7Ba,WAAW,CAAElI,IADgB,CAE7B;AACA;AACA;AACA;AACAgI,MAAM,CAANA,MAN6B,CAO7BJ,EAAE,qBAAeI,MAAf,aAAyBJ,EAAzB,CAP2B,CAQ7BO,MAAM,CAAE,CAAExK,CAAC,CAADA,CAAF,CAAKC,CAAC,CAADA,CAAL,CAAQkE,CAAC,CAADA,CAAR,CARqB,CAAxB,CAAP,CAUD","sourcesContent":["/* eslint-disable no-plusplus */\nimport shortNumber from 'short-number';\nimport isEqual from 'lodash/isEqual';\nimport {\n  getDefaultInitialViewState,\n  MultiscaleImageLayer,\n  ImageLayer,\n  VolumeLayer,\n} from '@hms-dbmi/viv';\nimport { extent } from 'd3-array';\nimport { Matrix4 } from 'math.gl';\nimport { divide, compare, unit } from 'mathjs';\nimport { pluralize, getSourceFromLoader, isRgb } from '../../utils';\nimport { VIEWER_PALETTE } from '../utils';\nimport {\n  GLOBAL_LABELS,\n  DEFAULT_RASTER_LAYER_PROPS,\n  DEFAULT_LAYER_TYPE_ORDERING,\n} from './constants';\nimport BitmaskLayer from '../../layers/BitmaskLayer';\nimport { getMultiSelectionStats } from '../layer-controller/utils';\n\nexport function square(x, y, r) {\n  return [[x, y + r], [x + r, y], [x, y - r], [x - r, y]];\n}\n\n/**\n * Sort spatial layer definition array,\n * to keep the ordering in the layer controller\n * consistent.\n * Intended to be used with auto-initialized layer\n * definition arrays only, as a pre-defined layer array\n * should not be re-ordered.\n * @param {object[]} layers Array of layer definition objects.\n * Object must have a .type property.\n */\nexport function sortLayers(layers) {\n  return layers.sort((a, b) => (\n    DEFAULT_LAYER_TYPE_ORDERING.indexOf(a.type) - DEFAULT_LAYER_TYPE_ORDERING.indexOf(b.type)\n  ));\n}\n\n/**\n * Return the midpoint of the global dimensions.\n * @param {object} source PixelSource object from Viv\n * @returns {object} The selection.\n */\nfunction getDefaultGlobalSelection(source) {\n  const globalIndices = source.labels\n    .filter(dim => GLOBAL_LABELS.includes(dim));\n  const selection = {};\n  globalIndices.forEach((dim) => {\n    selection[dim] = Math.floor(\n      (source.shape[source.labels.indexOf(dim)] || 0) / 2,\n    );\n  });\n  return selection;\n}\n\n/**\n * Create a default selection using the midpoint of the available global dimensions,\n * and then the first four available selections from the first selectable channel.\n * @param {object} source PixelSource object from Viv\n * @returns {object} The selection.\n */\nfunction buildDefaultSelection(source) {\n  const selection = [];\n  const globalSelection = getDefaultGlobalSelection(source);\n  // First non-global dimension with some sort of selectable values\n  const firstNonGlobalDimension = source.labels.filter(\n    dim => !GLOBAL_LABELS.includes(dim)\n      && source.shape[source.labels.indexOf(dim)],\n  )[0];\n  for (let i = 0; i < Math.min(4, source.shape[\n    source.labels.indexOf(firstNonGlobalDimension)\n  ]); i += 1) {\n    selection.push(\n      {\n        [firstNonGlobalDimension]: i,\n        ...globalSelection,\n      },\n    );\n  }\n  return selection;\n}\n\n/**\n * @param {Array.<number>} shape loader shape\n */\nexport function isInterleaved(shape) {\n  const lastDimSize = shape[shape.length - 1];\n  return lastDimSize === 3 || lastDimSize === 4;\n}\n\n/**\n * Initialize the channel selections for an individual layer.\n * @param {object} loader A viv loader instance with channel names appended by Vitessce loaders\n * of the form { data: (PixelSource[]|PixelSource), metadata: Object, channels }\n * @returns {object[]} An array of selected channels with default\n * domain/slider settings.\n */\nexport async function initializeLayerChannels(loader, use3d) {\n  const result = [];\n  const source = getSourceFromLoader(loader);\n  // Add channel automatically as the first avaialable value for each dimension.\n  let defaultSelection = buildDefaultSelection(source);\n  defaultSelection = isInterleaved(source.shape)\n    ? [{ ...defaultSelection[0], c: 0 }] : defaultSelection;\n  const stats = await getMultiSelectionStats({\n    loader: loader.data, selections: defaultSelection, use3d,\n  });\n\n  const domains = isRgb(loader)\n    ? [[0, 255], [0, 255], [0, 255]]\n    : stats.domains;\n  const colors = isRgb(loader)\n    ? [[255, 0, 0], [0, 255, 0], [0, 0, 255]]\n    : null;\n  const sliders = isRgb(loader)\n    ? [[0, 255], [0, 255], [0, 255]]\n    : stats.sliders;\n\n  defaultSelection.forEach((selection, i) => {\n    const domain = domains[i];\n    const slider = sliders[i];\n    const channel = {\n      selection,\n      // eslint-disable-next-line no-nested-ternary\n      color: colors ? colors[i]\n        : defaultSelection.length !== 1\n          ? VIEWER_PALETTE[i] : [255, 255, 255],\n      visible: true,\n      slider: slider || domain,\n    };\n    result.push(channel);\n  });\n  return result;\n}\n\nfunction getMetaWithTransformMatrices(imageMeta, imageLoaders) {\n  // Do not fill in transformation matrices if any of the layers specify one.\n  const sources = imageLoaders.map(loader => getSourceFromLoader(loader));\n  if (\n    imageMeta.map(meta => meta?.metadata?.transform?.matrix\n      || meta?.metadata?.transform?.scale\n      || meta?.metadata?.transform?.translate).some(Boolean)\n    || sources.every(\n      source => !source.meta?.physicalSizes?.x || !source.meta?.physicalSizes?.y,\n    )\n  ) {\n    return imageMeta;\n  }\n  // Get the minimum physical among all the current images.\n  const minPhysicalSize = sources.reduce((acc, source) => {\n    const hasZPhyscialSize = source.meta?.physicalSizes?.z?.size;\n    const sizes = [\n      unit(`${source.meta?.physicalSizes.x.size} ${source.meta?.physicalSizes.x.unit}`.replace('µ', 'u')),\n      unit(`${source.meta?.physicalSizes.y.size} ${source.meta?.physicalSizes.y.unit}`.replace('µ', 'u')),\n    ];\n    if (hasZPhyscialSize) {\n      sizes.push(unit(`${source.meta?.physicalSizes.z.size} ${source.meta?.physicalSizes.z.unit}`.replace('µ', 'u')));\n    }\n    acc[0] = (acc[0] === undefined || compare(sizes[0], acc[0]) === -1) ? sizes[0] : acc[0];\n    acc[1] = (acc[1] === undefined || compare(sizes[1], acc[1]) === -1) ? sizes[1] : acc[1];\n    acc[2] = (acc[2] === undefined || compare(sizes[2], acc[2]) === -1) ? sizes[2] : acc[2];\n    return acc;\n  }, []);\n  const imageMetaWithTransform = imageMeta.map((meta, j) => {\n    const source = sources[j];\n    const hasZPhyscialSize = source.meta?.physicalSizes?.z?.size;\n    const sizes = [\n      unit(`${source.meta?.physicalSizes.x.size} ${source.meta?.physicalSizes.x.unit}`.replace('µ', 'u')),\n      unit(`${source.meta?.physicalSizes.y.size} ${source.meta?.physicalSizes.y.unit}`.replace('µ', 'u')),\n    ];\n    if (hasZPhyscialSize) {\n      sizes.push(unit(`${source.meta?.physicalSizes.z.size} ${source.meta?.physicalSizes.z.unit}`.replace('µ', 'u')));\n    }\n    // Find the ratio of the sizes to get the scaling factor.\n    const scale = sizes.map((i, k) => divide(i, minPhysicalSize[k]));\n    // Add in z dimension needed for Matrix4 scale API.\n    if (!scale[2]) {\n      scale[2] = 1;\n    }\n    // no need to store/use identity scaling\n    if (isEqual(scale, [1, 1, 1])) {\n      return meta;\n    }\n    // Make sure to scale the z direction by one.\n    const matrix = new Matrix4().scale([...scale]);\n    const newMeta = { ...meta };\n    newMeta.metadata = {\n      ...newMeta.metadata,\n      // We don't want to store matrix objects in the view config.\n      transform: { matrix: matrix.toArray() },\n    };\n    return newMeta;\n  });\n  return imageMetaWithTransform;\n}\n\n/**\n * Given a set of image layer loader creator functions,\n * create loader objects for an initial layer or set of layers,\n * which will be selected based on default values predefined in\n * the image data file or otherwise by a heuristic\n * (the midpoint of the layers array).\n * @param {object[]} rasterLayers A list of layer metadata objects with\n * shape { name, type, url, createLoader }.\n * @param {(string[]|null)} rasterRenderLayers A list of default raster layers. Optional.\n */\nexport async function initializeRasterLayersAndChannels(\n  rasterLayers,\n  rasterRenderLayers,\n  usePhysicalSizeScaling,\n) {\n  const nextImageLoaders = [];\n  let nextImageMetaAndLayers = [];\n  const autoImageLayerDefPromises = [];\n\n  // Start all loader creators immediately.\n  // Reference: https://eslint.org/docs/rules/no-await-in-loop\n  const loaders = await Promise.all(rasterLayers.map(layer => layer.loaderCreator()));\n\n  for (let i = 0; i < rasterLayers.length; i++) {\n    const layer = rasterLayers[i];\n    const loader = loaders[i];\n    nextImageLoaders[i] = loader;\n    nextImageMetaAndLayers[i] = layer;\n  }\n  if (usePhysicalSizeScaling) {\n    nextImageMetaAndLayers = getMetaWithTransformMatrices(nextImageMetaAndLayers, nextImageLoaders);\n  }\n  // No layers were pre-defined so set up the default image layers.\n  if (!rasterRenderLayers) {\n    // Midpoint of images list as default image to show.\n    const layerIndex = Math.floor(rasterLayers.length / 2);\n    const loader = nextImageLoaders[layerIndex];\n    const autoImageLayerDefPromise = initializeLayerChannels(loader)\n      .then(channels => Promise.resolve({\n        type: nextImageMetaAndLayers[layerIndex]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n        index: layerIndex,\n        ...DEFAULT_RASTER_LAYER_PROPS,\n        channels: channels.map((channel, j) => ({\n          ...channel,\n          ...(nextImageMetaAndLayers[layerIndex].channels\n            ? nextImageMetaAndLayers[layerIndex].channels[j] : []),\n        })),\n        modelMatrix: nextImageMetaAndLayers[layerIndex]?.metadata?.transform?.matrix,\n        transparentColor: layerIndex > 0 ? [0, 0, 0] : null,\n      }));\n    autoImageLayerDefPromises.push(autoImageLayerDefPromise);\n  } else {\n    // The renderLayers parameter is a list of layer names to show by default.\n    const globalIndicesOfRenderLayers = rasterRenderLayers\n      .map(imageName => rasterLayers.findIndex(image => image.name === imageName));\n    for (let i = 0; i < globalIndicesOfRenderLayers.length; i++) {\n      const layerIndex = globalIndicesOfRenderLayers[i];\n      const loader = nextImageLoaders[layerIndex];\n      const autoImageLayerDefPromise = initializeLayerChannels(loader)\n        // eslint-disable-next-line no-loop-func\n        .then(channels => Promise.resolve({\n          type: nextImageMetaAndLayers[layerIndex]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n          index: layerIndex,\n          ...DEFAULT_RASTER_LAYER_PROPS,\n          channels: channels.map((channel, j) => ({\n            ...channel,\n            ...(nextImageMetaAndLayers[layerIndex].channels\n              ? nextImageMetaAndLayers[layerIndex].channels[j] : []),\n          })),\n          domainType: 'Min/Max',\n          modelMatrix: nextImageMetaAndLayers[layerIndex]?.metadata?.transform?.matrix,\n          transparentColor: i > 0 ? [0, 0, 0] : null,\n        }));\n      autoImageLayerDefPromises.push(autoImageLayerDefPromise);\n    }\n  }\n\n  const autoImageLayerDefs = await Promise.all(autoImageLayerDefPromises);\n  return [autoImageLayerDefs, nextImageLoaders, nextImageMetaAndLayers];\n}\n\n/**\n * Make a subtitle for the spatial component.\n * @param {object} params\n * @param {number} params.observationsCount\n * @param {string} params.observationsLabel\n * @param {string} params.observationsPluralLabel\n * @param {number} params.subobservationsCount\n * @param {string} params.subobservationsLabel\n * @param {string} params.subobservationsPluralLabel\n * @param {number} params.locationsCount\n * @returns {string} The subtitle string,\n * with info about items with zero counts omitted.\n */\nexport function makeSpatialSubtitle({\n  observationsCount, observationsLabel, observationsPluralLabel,\n  subobservationsCount, subobservationsLabel, subobservationsPluralLabel,\n  locationsCount,\n}) {\n  const parts = [];\n  if (subobservationsCount > 0) {\n    let part = `${subobservationsCount} ${pluralize(subobservationsLabel, subobservationsPluralLabel, subobservationsCount)}`;\n    if (locationsCount > 0) {\n      part += ` at ${shortNumber(locationsCount)} locations`;\n    }\n    parts.push(part);\n  }\n  if (observationsCount > 0) {\n    parts.push(`${observationsCount} ${pluralize(observationsLabel, observationsPluralLabel, observationsCount)}`);\n  }\n  return parts.join(', ');\n}\n\nexport function getInitialSpatialTargets({\n  width,\n  height,\n  cells,\n  imageLayerLoaders,\n  useRaster,\n  use3d,\n}) {\n  let initialTargetX = -Infinity;\n  let initialTargetY = -Infinity;\n  let initialTargetZ = -Infinity;\n  let initialZoom = -Infinity;\n  // Some backoff from completely filling the screen.\n  const zoomBackoff = use3d ? 1.5 : 0.1;\n  const cellValues = Object.values(cells);\n  if (imageLayerLoaders.length > 0 && useRaster) {\n    for (let i = 0; i < imageLayerLoaders.length; i += 1) {\n      const viewSize = { height, width };\n      const { target, zoom: newViewStateZoom } = getDefaultInitialViewState(\n        imageLayerLoaders[i].data,\n        viewSize,\n        zoomBackoff,\n        use3d,\n      );\n      if (target[0] > initialTargetX) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetX = target[0];\n        initialZoom = newViewStateZoom;\n      }\n      if (target[1] > initialTargetY) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetY = target[1];\n        initialZoom = newViewStateZoom;\n      }\n      if (target[2] > initialTargetZ) {\n        // eslint-disable-next-line prefer-destructuring\n        initialTargetZ = target[2];\n        initialZoom = newViewStateZoom;\n      } else {\n        initialTargetZ = null;\n      }\n    }\n  } else if (cellValues.length > 0\n    // Only use cellValues in quadtree calculation if there is\n    // centroid data in the cells (i.e not just ids).\n    && cellValues[0].xy\n    && !useRaster) {\n    const cellCoordinates = cellValues.map(c => c.xy);\n    let xExtent = extent(cellCoordinates, c => c[0]);\n    let yExtent = extent(cellCoordinates, c => c[1]);\n    let xRange = xExtent[1] - xExtent[0];\n    let yRange = yExtent[1] - yExtent[0];\n    const getViewExtentFromPolygonExtents = extents => [\n      Math.min(...extents.map(i => i[0])),\n      Math.max(...extents.map(i => i[1])),\n    ];\n    if (xRange === 0) {\n      // The fall back is the cells' polygon coordinates, if the original range\n      // is 0 i.e the centroids are all on the same axis.\n      const polygonExtentsX = cellValues.map(cell => extent(cell.poly, i => i[0]));\n      xExtent = getViewExtentFromPolygonExtents(polygonExtentsX);\n      xRange = xExtent[1] - xExtent[0];\n    }\n    if (yRange === 0) {\n      // The fall back is the first cells' polygon coordinates, if the original range\n      // is 0 i.e the centroids are all on the same axis.\n      const polygonExtentsY = cellValues.map(cell => extent(cell.poly, i => i[1]));\n      yExtent = getViewExtentFromPolygonExtents(polygonExtentsY);\n      yRange = yExtent[1] - yExtent[0];\n    }\n    initialTargetX = xExtent[0] + xRange / 2;\n    initialTargetY = yExtent[0] + yRange / 2;\n    initialTargetZ = null;\n    initialZoom = Math.log2(Math.min(width / xRange, height / yRange)) - zoomBackoff;\n  } else {\n    return {\n      initialTargetX: null, initialTargetY: null, initialTargetZ: null, initialZoom: null,\n    };\n  }\n  return {\n    initialTargetX, initialTargetY, initialZoom, initialTargetZ,\n  };\n}\n\n/**\n * Make a subtitle for the spatial component.\n * @param {object} data PixelSource | PixelSource[]\n * @returns {Array} [Layer, PixelSource | PixelSource[]] tuple.\n */\nexport function getLayerLoaderTuple(data, use3d) {\n  const loader = ((Array.isArray(data) && data.length > 1) || !Array.isArray(data))\n    ? data : data[0];\n  if (use3d) {\n    return [VolumeLayer, Array.isArray(loader) ? loader : [loader]];\n  }\n  const Layer = (Array.isArray(data) && data.length > 1) ? MultiscaleImageLayer : ImageLayer;\n  return [Layer, loader];\n}\n\n\nexport function renderSubBitmaskLayers(props) {\n  const {\n    bbox: {\n      left, top, right, bottom,\n    },\n    x,\n    y,\n    z,\n  } = props.tile;\n  const {\n    data, id, loader,\n  } = props;\n  // Only render in positive coorinate system\n  if ([left, bottom, right, top].some(v => v < 0) || !data) {\n    return null;\n  }\n  const base = loader[0];\n  const [height, width] = loader[0].shape.slice(-2);\n  // Tiles are exactly fitted to have height and width such that their bounds\n  // match that of the actual image (not some padded version).\n  // Thus the right/bottom given by deck.gl are incorrect since\n  // they assume tiles are of uniform sizes, which is not the case for us.\n  const bounds = [\n    left,\n    data.height < base.tileSize ? height : bottom,\n    data.width < base.tileSize ? width : right,\n    top,\n  ];\n  return new BitmaskLayer(props, {\n    channelData: data,\n    // Uncomment to help debugging - shades the tile being hovered over.\n    // autoHighlight: true,\n    // highlightColor: [80, 80, 80, 50],\n    // Shared props with BitmapLayer:\n    bounds,\n    id: `sub-layer-${bounds}-${id}`,\n    tileId: { x, y, z },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}