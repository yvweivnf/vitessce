{"ast":null,"code":"import { VERSION } from './lib/utils/version';\nimport { parseNPY } from './lib/parsers/parse-npy';\nconst NPY_MAGIC_NUMBER = new Uint8Array([147, 78, 85, 77, 80, 89]);\nexport const NPYWorkerLoader = {\n  name: 'NPY',\n  id: 'npy',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['npy'],\n  mimeTypes: [],\n  tests: [NPY_MAGIC_NUMBER.buffer],\n  options: {\n    npy: {}\n  }\n};\nexport const NPYLoader = { ...NPYWorkerLoader,\n  parseSync: parseNPY,\n  parse: async (arrayBuffer, options) => parseNPY(arrayBuffer, options)\n};\nexport const _TypecheckNPYWorkerLoader = NPYWorkerLoader;\nexport const _TypecheckNPYLoader = NPYLoader;","map":{"version":3,"sources":["../../src/npy-loader.ts"],"names":["NPY_MAGIC_NUMBER","NPYWorkerLoader","name","id","module","version","worker","extensions","mimeTypes","tests","options","npy","NPYLoader","parseSync","parse","parseNPY","_TypecheckNPYWorkerLoader","_TypecheckNPYLoader"],"mappings":"AACA,SAAA,OAAA,QAAA,qBAAA;AACA,SAAA,QAAA,QAAA,yBAAA;AAGA,MAAMA,gBAAgB,GAAG,IAAA,UAAA,CAAe,CAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAxC,EAAwC,CAAf,CAAzB;AAKA,OAAO,MAAMC,eAAe,GAAG;AAC7BC,EAAAA,IAAI,EADyB,KAAA;AAE7BC,EAAAA,EAAE,EAF2B,KAAA;AAG7BC,EAAAA,MAAM,EAHuB,UAAA;AAI7BC,EAAAA,OAAO,EAJsB,OAAA;AAK7BC,EAAAA,MAAM,EALuB,IAAA;AAM7BC,EAAAA,UAAU,EAAE,CANiB,KAMjB,CANiB;AAO7BC,EAAAA,SAAS,EAPoB,EAAA;AAQ7BC,EAAAA,KAAK,EAAE,CAACT,gBAAgB,CARK,MAQtB,CARsB;AAS7BU,EAAAA,OAAO,EAAE;AACPC,IAAAA,GAAG,EAAE;AADE;AAToB,CAAxB;AAiBP,OAAO,MAAMC,SAAS,GAAG,EACvB,GADuB,eAAA;AAEvBC,EAAAA,SAAS,EAFc,QAAA;AAGvBC,EAAAA,KAAK,EAAE,OAAA,WAAA,EAAA,OAAA,KAA6DC,QAAQ,CAAA,WAAA,EAAA,OAAA;AAHrD,CAAlB;AAOP,OAAO,MAAMC,yBAAiC,GAAvC,eAAA;AACP,OAAO,MAAMC,mBAAqC,GAA3C,SAAA","sourcesContent":["import type {Loader, LoaderWithParser, LoaderOptions} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport {parseNPY} from './lib/parsers/parse-npy';\n\n// \\x93NUMPY\nconst NPY_MAGIC_NUMBER = new Uint8Array([147, 78, 85, 77, 80, 89]);\n\n/**\n * Worker loader for numpy \"tiles\"\n */\nexport const NPYWorkerLoader = {\n  name: 'NPY',\n  id: 'npy',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['npy'],\n  mimeTypes: [],\n  tests: [NPY_MAGIC_NUMBER.buffer],\n  options: {\n    npy: {}\n  }\n};\n\n/**\n * Loader for numpy \"tiles\"\n */\nexport const NPYLoader = {\n  ...NPYWorkerLoader,\n  parseSync: parseNPY,\n  parse: async (arrayBuffer: ArrayBuffer, options?: LoaderOptions) => parseNPY(arrayBuffer, options)\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckNPYWorkerLoader: Loader = NPYWorkerLoader;\nexport const _TypecheckNPYLoader: LoaderWithParser = NPYLoader;\n"]},"metadata":{},"sourceType":"module"}