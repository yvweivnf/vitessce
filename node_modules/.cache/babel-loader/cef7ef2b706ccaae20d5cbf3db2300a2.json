{"ast":null,"code":"import _assertThisInitialized from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _Symbol$toStringTag, _Symbol$toStringTag2, _Symbol$toStringTag3, _Symbol$toStringTag4, _Symbol$toStringTag5, _Symbol$toStringTag6, _Symbol$toStringTag7, _Symbol$toStringTag8;\n\nimport { Type } from './enum';\nexport { Type } from './enum';\nexport var DataType = /*#__PURE__*/function () {\n  function DataType() {\n    _classCallCheck(this, DataType);\n  }\n\n  _createClass(DataType, [{\n    key: \"compareTo\",\n    value: function compareTo(other) {\n      return this === other;\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.NONE;\n    }\n  }], [{\n    key: \"isNull\",\n    value: function isNull(x) {\n      return x && x.typeId === Type.Null;\n    }\n  }, {\n    key: \"isInt\",\n    value: function isInt(x) {\n      return x && x.typeId === Type.Int;\n    }\n  }, {\n    key: \"isFloat\",\n    value: function isFloat(x) {\n      return x && x.typeId === Type.Float;\n    }\n  }, {\n    key: \"isBinary\",\n    value: function isBinary(x) {\n      return x && x.typeId === Type.Binary;\n    }\n  }, {\n    key: \"isUtf8\",\n    value: function isUtf8(x) {\n      return x && x.typeId === Type.Utf8;\n    }\n  }, {\n    key: \"isBool\",\n    value: function isBool(x) {\n      return x && x.typeId === Type.Bool;\n    }\n  }, {\n    key: \"isDecimal\",\n    value: function isDecimal(x) {\n      return x && x.typeId === Type.Decimal;\n    }\n  }, {\n    key: \"isDate\",\n    value: function isDate(x) {\n      return x && x.typeId === Type.Date;\n    }\n  }, {\n    key: \"isTime\",\n    value: function isTime(x) {\n      return x && x.typeId === Type.Time;\n    }\n  }, {\n    key: \"isTimestamp\",\n    value: function isTimestamp(x) {\n      return x && x.typeId === Type.Timestamp;\n    }\n  }, {\n    key: \"isInterval\",\n    value: function isInterval(x) {\n      return x && x.typeId === Type.Interval;\n    }\n  }, {\n    key: \"isList\",\n    value: function isList(x) {\n      return x && x.typeId === Type.List;\n    }\n  }, {\n    key: \"isStruct\",\n    value: function isStruct(x) {\n      return x && x.typeId === Type.Struct;\n    }\n  }, {\n    key: \"isUnion\",\n    value: function isUnion(x) {\n      return x && x.typeId === Type.Union;\n    }\n  }, {\n    key: \"isFixedSizeBinary\",\n    value: function isFixedSizeBinary(x) {\n      return x && x.typeId === Type.FixedSizeBinary;\n    }\n  }, {\n    key: \"isFixedSizeList\",\n    value: function isFixedSizeList(x) {\n      return x && x.typeId === Type.FixedSizeList;\n    }\n  }, {\n    key: \"isMap\",\n    value: function isMap(x) {\n      return x && x.typeId === Type.Map;\n    }\n  }, {\n    key: \"isDictionary\",\n    value: function isDictionary(x) {\n      return x && x.typeId === Type.Dictionary;\n    }\n  }]);\n\n  return DataType;\n}();\nexport var Null = /*#__PURE__*/function (_DataType) {\n  _inherits(Null, _DataType);\n\n  var _super = _createSuper(Null);\n\n  function Null() {\n    _classCallCheck(this, Null);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Null, [{\n    key: \"toString\",\n    value: function toString() {\n      return 'Null';\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Null;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Null';\n    }\n  }]);\n\n  return Null;\n}(DataType);\nexport var Bool = /*#__PURE__*/function (_DataType2) {\n  _inherits(Bool, _DataType2);\n\n  var _super2 = _createSuper(Bool);\n\n  function Bool() {\n    _classCallCheck(this, Bool);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Bool, [{\n    key: \"toString\",\n    value: function toString() {\n      return 'Bool';\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Bool;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Bool';\n    }\n  }]);\n\n  return Bool;\n}(DataType);\n_Symbol$toStringTag = Symbol.toStringTag;\nexport var Int = /*#__PURE__*/function (_DataType3) {\n  _inherits(Int, _DataType3);\n\n  var _super3 = _createSuper(Int);\n\n  function Int(isSigned, bitWidth) {\n    var _this;\n\n    _classCallCheck(this, Int);\n\n    _this = _super3.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"isSigned\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"bitWidth\", void 0);\n\n    _this.isSigned = isSigned;\n    _this.bitWidth = bitWidth;\n    return _this;\n  }\n\n  _createClass(Int, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.isSigned ? 'I' : 'Ui', \"nt\").concat(this.bitWidth);\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Int;\n    }\n  }, {\n    key: _Symbol$toStringTag,\n    get: function get() {\n      return 'Int';\n    }\n  }]);\n\n  return Int;\n}(DataType);\nexport var Int8 = /*#__PURE__*/function (_Int) {\n  _inherits(Int8, _Int);\n\n  var _super4 = _createSuper(Int8);\n\n  function Int8() {\n    _classCallCheck(this, Int8);\n\n    return _super4.call(this, true, 8);\n  }\n\n  return Int8;\n}(Int);\nexport var Int16 = /*#__PURE__*/function (_Int2) {\n  _inherits(Int16, _Int2);\n\n  var _super5 = _createSuper(Int16);\n\n  function Int16() {\n    _classCallCheck(this, Int16);\n\n    return _super5.call(this, true, 16);\n  }\n\n  return Int16;\n}(Int);\nexport var Int32 = /*#__PURE__*/function (_Int3) {\n  _inherits(Int32, _Int3);\n\n  var _super6 = _createSuper(Int32);\n\n  function Int32() {\n    _classCallCheck(this, Int32);\n\n    return _super6.call(this, true, 32);\n  }\n\n  return Int32;\n}(Int);\nexport var Int64 = /*#__PURE__*/function (_Int4) {\n  _inherits(Int64, _Int4);\n\n  var _super7 = _createSuper(Int64);\n\n  function Int64() {\n    _classCallCheck(this, Int64);\n\n    return _super7.call(this, true, 64);\n  }\n\n  return Int64;\n}(Int);\nexport var Uint8 = /*#__PURE__*/function (_Int5) {\n  _inherits(Uint8, _Int5);\n\n  var _super8 = _createSuper(Uint8);\n\n  function Uint8() {\n    _classCallCheck(this, Uint8);\n\n    return _super8.call(this, false, 8);\n  }\n\n  return Uint8;\n}(Int);\nexport var Uint16 = /*#__PURE__*/function (_Int6) {\n  _inherits(Uint16, _Int6);\n\n  var _super9 = _createSuper(Uint16);\n\n  function Uint16() {\n    _classCallCheck(this, Uint16);\n\n    return _super9.call(this, false, 16);\n  }\n\n  return Uint16;\n}(Int);\nexport var Uint32 = /*#__PURE__*/function (_Int7) {\n  _inherits(Uint32, _Int7);\n\n  var _super10 = _createSuper(Uint32);\n\n  function Uint32() {\n    _classCallCheck(this, Uint32);\n\n    return _super10.call(this, false, 32);\n  }\n\n  return Uint32;\n}(Int);\nexport var Uint64 = /*#__PURE__*/function (_Int8) {\n  _inherits(Uint64, _Int8);\n\n  var _super11 = _createSuper(Uint64);\n\n  function Uint64() {\n    _classCallCheck(this, Uint64);\n\n    return _super11.call(this, false, 64);\n  }\n\n  return Uint64;\n}(Int);\nvar Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n_Symbol$toStringTag2 = Symbol.toStringTag;\nexport var Float = /*#__PURE__*/function (_DataType4) {\n  _inherits(Float, _DataType4);\n\n  var _super12 = _createSuper(Float);\n\n  function Float(precision) {\n    var _this2;\n\n    _classCallCheck(this, Float);\n\n    _this2 = _super12.call(this);\n\n    _defineProperty(_assertThisInitialized(_this2), \"precision\", void 0);\n\n    _this2.precision = precision;\n    return _this2;\n  }\n\n  _createClass(Float, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Float\".concat(this.precision);\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Float;\n    }\n  }, {\n    key: _Symbol$toStringTag2,\n    get: function get() {\n      return 'Float';\n    }\n  }]);\n\n  return Float;\n}(DataType);\nexport var Float16 = /*#__PURE__*/function (_Float) {\n  _inherits(Float16, _Float);\n\n  var _super13 = _createSuper(Float16);\n\n  function Float16() {\n    _classCallCheck(this, Float16);\n\n    return _super13.call(this, Precision.HALF);\n  }\n\n  return Float16;\n}(Float);\nexport var Float32 = /*#__PURE__*/function (_Float2) {\n  _inherits(Float32, _Float2);\n\n  var _super14 = _createSuper(Float32);\n\n  function Float32() {\n    _classCallCheck(this, Float32);\n\n    return _super14.call(this, Precision.SINGLE);\n  }\n\n  return Float32;\n}(Float);\nexport var Float64 = /*#__PURE__*/function (_Float3) {\n  _inherits(Float64, _Float3);\n\n  var _super15 = _createSuper(Float64);\n\n  function Float64() {\n    _classCallCheck(this, Float64);\n\n    return _super15.call(this, Precision.DOUBLE);\n  }\n\n  return Float64;\n}(Float);\nexport var Binary = /*#__PURE__*/function (_DataType5) {\n  _inherits(Binary, _DataType5);\n\n  var _super16 = _createSuper(Binary);\n\n  function Binary() {\n    _classCallCheck(this, Binary);\n\n    return _super16.call(this);\n  }\n\n  _createClass(Binary, [{\n    key: \"toString\",\n    value: function toString() {\n      return 'Binary';\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Binary;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Binary';\n    }\n  }]);\n\n  return Binary;\n}(DataType);\nexport var Utf8 = /*#__PURE__*/function (_DataType6) {\n  _inherits(Utf8, _DataType6);\n\n  var _super17 = _createSuper(Utf8);\n\n  function Utf8() {\n    _classCallCheck(this, Utf8);\n\n    return _super17.apply(this, arguments);\n  }\n\n  _createClass(Utf8, [{\n    key: \"toString\",\n    value: function toString() {\n      return 'Utf8';\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Utf8;\n    }\n  }, {\n    key: Symbol.toStringTag,\n    get: function get() {\n      return 'Utf8';\n    }\n  }]);\n\n  return Utf8;\n}(DataType);\nvar DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n_Symbol$toStringTag3 = Symbol.toStringTag;\nexport var Date = /*#__PURE__*/function (_DataType7) {\n  _inherits(Date, _DataType7);\n\n  var _super18 = _createSuper(Date);\n\n  function Date(unit) {\n    var _this3;\n\n    _classCallCheck(this, Date);\n\n    _this3 = _super18.call(this);\n\n    _defineProperty(_assertThisInitialized(_this3), \"unit\", void 0);\n\n    _this3.unit = unit;\n    return _this3;\n  }\n\n  _createClass(Date, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Date\".concat((this.unit + 1) * 32, \"<\").concat(DateUnit[this.unit], \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Date;\n    }\n  }, {\n    key: _Symbol$toStringTag3,\n    get: function get() {\n      return 'Date';\n    }\n  }]);\n\n  return Date;\n}(DataType);\nexport var DateDay = /*#__PURE__*/function (_Date) {\n  _inherits(DateDay, _Date);\n\n  var _super19 = _createSuper(DateDay);\n\n  function DateDay() {\n    _classCallCheck(this, DateDay);\n\n    return _super19.call(this, DateUnit.DAY);\n  }\n\n  return DateDay;\n}(Date);\nexport var DateMillisecond = /*#__PURE__*/function (_Date2) {\n  _inherits(DateMillisecond, _Date2);\n\n  var _super20 = _createSuper(DateMillisecond);\n\n  function DateMillisecond() {\n    _classCallCheck(this, DateMillisecond);\n\n    return _super20.call(this, DateUnit.MILLISECOND);\n  }\n\n  return DateMillisecond;\n}(Date);\nvar TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n_Symbol$toStringTag4 = Symbol.toStringTag;\nexport var Time = /*#__PURE__*/function (_DataType8) {\n  _inherits(Time, _DataType8);\n\n  var _super21 = _createSuper(Time);\n\n  function Time(unit, bitWidth) {\n    var _this4;\n\n    _classCallCheck(this, Time);\n\n    _this4 = _super21.call(this);\n\n    _defineProperty(_assertThisInitialized(_this4), \"unit\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this4), \"bitWidth\", void 0);\n\n    _this4.unit = unit;\n    _this4.bitWidth = bitWidth;\n    return _this4;\n  }\n\n  _createClass(Time, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Time\".concat(this.bitWidth, \"<\").concat(TimeUnit[this.unit], \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Time;\n    }\n  }, {\n    key: _Symbol$toStringTag4,\n    get: function get() {\n      return 'Time';\n    }\n  }]);\n\n  return Time;\n}(DataType);\nexport var TimeSecond = /*#__PURE__*/function (_Time) {\n  _inherits(TimeSecond, _Time);\n\n  var _super22 = _createSuper(TimeSecond);\n\n  function TimeSecond() {\n    _classCallCheck(this, TimeSecond);\n\n    return _super22.call(this, TimeUnit.SECOND, 32);\n  }\n\n  return TimeSecond;\n}(Time);\nexport var TimeMillisecond = /*#__PURE__*/function (_Time2) {\n  _inherits(TimeMillisecond, _Time2);\n\n  var _super23 = _createSuper(TimeMillisecond);\n\n  function TimeMillisecond() {\n    _classCallCheck(this, TimeMillisecond);\n\n    return _super23.call(this, TimeUnit.MILLISECOND, 32);\n  }\n\n  return TimeMillisecond;\n}(Time);\n_Symbol$toStringTag5 = Symbol.toStringTag;\nexport var Timestamp = /*#__PURE__*/function (_DataType9) {\n  _inherits(Timestamp, _DataType9);\n\n  var _super24 = _createSuper(Timestamp);\n\n  function Timestamp(unit) {\n    var _this5;\n\n    var timezone = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    _classCallCheck(this, Timestamp);\n\n    _this5 = _super24.call(this);\n\n    _defineProperty(_assertThisInitialized(_this5), \"unit\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this5), \"timezone\", void 0);\n\n    _this5.unit = unit;\n    _this5.timezone = timezone;\n    return _this5;\n  }\n\n  _createClass(Timestamp, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Timestamp<\".concat(TimeUnit[this.unit]).concat(this.timezone ? \", \".concat(this.timezone) : '', \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Timestamp;\n    }\n  }, {\n    key: _Symbol$toStringTag5,\n    get: function get() {\n      return 'Timestamp';\n    }\n  }]);\n\n  return Timestamp;\n}(DataType);\nexport var TimestampSecond = /*#__PURE__*/function (_Timestamp) {\n  _inherits(TimestampSecond, _Timestamp);\n\n  var _super25 = _createSuper(TimestampSecond);\n\n  function TimestampSecond() {\n    var timezone = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, TimestampSecond);\n\n    return _super25.call(this, TimeUnit.SECOND, timezone);\n  }\n\n  return TimestampSecond;\n}(Timestamp);\nexport var TimestampMillisecond = /*#__PURE__*/function (_Timestamp2) {\n  _inherits(TimestampMillisecond, _Timestamp2);\n\n  var _super26 = _createSuper(TimestampMillisecond);\n\n  function TimestampMillisecond() {\n    var timezone = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, TimestampMillisecond);\n\n    return _super26.call(this, TimeUnit.MILLISECOND, timezone);\n  }\n\n  return TimestampMillisecond;\n}(Timestamp);\nexport var TimestampMicrosecond = /*#__PURE__*/function (_Timestamp3) {\n  _inherits(TimestampMicrosecond, _Timestamp3);\n\n  var _super27 = _createSuper(TimestampMicrosecond);\n\n  function TimestampMicrosecond() {\n    var timezone = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, TimestampMicrosecond);\n\n    return _super27.call(this, TimeUnit.MICROSECOND, timezone);\n  }\n\n  return TimestampMicrosecond;\n}(Timestamp);\nexport var TimestampNanosecond = /*#__PURE__*/function (_Timestamp4) {\n  _inherits(TimestampNanosecond, _Timestamp4);\n\n  var _super28 = _createSuper(TimestampNanosecond);\n\n  function TimestampNanosecond() {\n    var timezone = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, TimestampNanosecond);\n\n    return _super28.call(this, TimeUnit.NANOSECOND, timezone);\n  }\n\n  return TimestampNanosecond;\n}(Timestamp);\nvar IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n_Symbol$toStringTag6 = Symbol.toStringTag;\nexport var Interval = /*#__PURE__*/function (_DataType10) {\n  _inherits(Interval, _DataType10);\n\n  var _super29 = _createSuper(Interval);\n\n  function Interval(unit) {\n    var _this6;\n\n    _classCallCheck(this, Interval);\n\n    _this6 = _super29.call(this);\n\n    _defineProperty(_assertThisInitialized(_this6), \"unit\", void 0);\n\n    _this6.unit = unit;\n    return _this6;\n  }\n\n  _createClass(Interval, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Interval<\".concat(IntervalUnit[this.unit], \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Interval;\n    }\n  }, {\n    key: _Symbol$toStringTag6,\n    get: function get() {\n      return 'Interval';\n    }\n  }]);\n\n  return Interval;\n}(DataType);\nexport var IntervalDayTime = /*#__PURE__*/function (_Interval) {\n  _inherits(IntervalDayTime, _Interval);\n\n  var _super30 = _createSuper(IntervalDayTime);\n\n  function IntervalDayTime() {\n    _classCallCheck(this, IntervalDayTime);\n\n    return _super30.call(this, IntervalUnit.DAY_TIME);\n  }\n\n  return IntervalDayTime;\n}(Interval);\nexport var IntervalYearMonth = /*#__PURE__*/function (_Interval2) {\n  _inherits(IntervalYearMonth, _Interval2);\n\n  var _super31 = _createSuper(IntervalYearMonth);\n\n  function IntervalYearMonth() {\n    _classCallCheck(this, IntervalYearMonth);\n\n    return _super31.call(this, IntervalUnit.YEAR_MONTH);\n  }\n\n  return IntervalYearMonth;\n}(Interval);\n_Symbol$toStringTag7 = Symbol.toStringTag;\nexport var FixedSizeList = /*#__PURE__*/function (_DataType11) {\n  _inherits(FixedSizeList, _DataType11);\n\n  var _super32 = _createSuper(FixedSizeList);\n\n  function FixedSizeList(listSize, child) {\n    var _this7;\n\n    _classCallCheck(this, FixedSizeList);\n\n    _this7 = _super32.call(this);\n\n    _defineProperty(_assertThisInitialized(_this7), \"listSize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this7), \"children\", void 0);\n\n    _this7.listSize = listSize;\n    _this7.children = [child];\n    return _this7;\n  }\n\n  _createClass(FixedSizeList, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"FixedSizeList[\".concat(this.listSize, \"]<\").concat(this.valueType, \">\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.FixedSizeList;\n    }\n  }, {\n    key: \"valueType\",\n    get: function get() {\n      return this.children[0].type;\n    }\n  }, {\n    key: \"valueField\",\n    get: function get() {\n      return this.children[0];\n    }\n  }, {\n    key: _Symbol$toStringTag7,\n    get: function get() {\n      return 'FixedSizeList';\n    }\n  }]);\n\n  return FixedSizeList;\n}(DataType);\n_Symbol$toStringTag8 = Symbol.toStringTag;\nexport var Struct = /*#__PURE__*/function (_DataType12) {\n  _inherits(Struct, _DataType12);\n\n  var _super33 = _createSuper(Struct);\n\n  function Struct(children) {\n    var _this8;\n\n    _classCallCheck(this, Struct);\n\n    _this8 = _super33.call(this);\n\n    _defineProperty(_assertThisInitialized(_this8), \"children\", void 0);\n\n    _this8.children = children;\n    return _this8;\n  }\n\n  _createClass(Struct, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"Struct<{\".concat(this.children.map(function (f) {\n        return \"\".concat(f.name, \":\").concat(f.type);\n      }).join(', '), \"}>\");\n    }\n  }, {\n    key: \"typeId\",\n    get: function get() {\n      return Type.Struct;\n    }\n  }, {\n    key: _Symbol$toStringTag8,\n    get: function get() {\n      return 'Struct';\n    }\n  }]);\n\n  return Struct;\n}(DataType);","map":{"version":3,"sources":["../../../../../src/lib/schema/impl/type.ts"],"names":["x","Type","Symbol","toStringTag","constructor","Precision","HALF","SINGLE","DOUBLE","DateUnit","DAY","MILLISECOND","TimeUnit","SECOND","MICROSECOND","NANOSECOND","timezone","IntervalUnit","DAY_TIME","YEAR_MONTH","f"],"mappings":"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","sourcesContent":["// This code is adapted from ArrowJS https://github.com/apache/arrow\n// under Apache license http://www.apache.org/licenses/LICENSE-2.0\n\nimport {Type} from './enum';\n\nimport Field from './field';\n\nexport {Type} from './enum';\n\nexport type TypedIntArray =\n  | Int8Array\n  | Uint8Array\n  | Int16Array\n  | Uint16Array\n  | Int32Array\n  | Uint32Array\n  | Int32Array\n  | Uint32Array\n  | Uint8ClampedArray;\n\nexport type TypedFloatArray = Float32Array | Float64Array;\n\nexport type TypedArray = TypedIntArray | TypedFloatArray;\n\nexport type AnyArrayType = Array<any> | TypedIntArray | TypedFloatArray;\n\nexport class DataType {\n  static isNull(x: any): boolean {\n    return x && x.typeId === Type.Null;\n  }\n  static isInt(x: any): boolean {\n    return x && x.typeId === Type.Int;\n  }\n  static isFloat(x: any): boolean {\n    return x && x.typeId === Type.Float;\n  }\n  static isBinary(x: any): boolean {\n    return x && x.typeId === Type.Binary;\n  }\n  static isUtf8(x: any): boolean {\n    return x && x.typeId === Type.Utf8;\n  }\n  static isBool(x: any): boolean {\n    return x && x.typeId === Type.Bool;\n  }\n  static isDecimal(x: any): boolean {\n    return x && x.typeId === Type.Decimal;\n  }\n  static isDate(x: any): boolean {\n    return x && x.typeId === Type.Date;\n  }\n  static isTime(x: any): boolean {\n    return x && x.typeId === Type.Time;\n  }\n  static isTimestamp(x: any): boolean {\n    return x && x.typeId === Type.Timestamp;\n  }\n  static isInterval(x: any): boolean {\n    return x && x.typeId === Type.Interval;\n  }\n  static isList(x: any): boolean {\n    return x && x.typeId === Type.List;\n  }\n  static isStruct(x: any): boolean {\n    return x && x.typeId === Type.Struct;\n  }\n  static isUnion(x: any): boolean {\n    return x && x.typeId === Type.Union;\n  }\n  static isFixedSizeBinary(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeBinary;\n  }\n  static isFixedSizeList(x: any): boolean {\n    return x && x.typeId === Type.FixedSizeList;\n  }\n  static isMap(x: any): boolean {\n    return x && x.typeId === Type.Map;\n  }\n  static isDictionary(x: any): boolean {\n    return x && x.typeId === Type.Dictionary;\n  }\n\n  get typeId(): Type {\n    return Type.NONE;\n  }\n\n  // get ArrayType(): AnyArrayType {\n  //   return Int8Array;\n  // }\n\n  // get ArrayType() { return Array; }\n  compareTo(other: DataType): boolean {\n    // TODO\n    return this === other; // comparer.visit(this, other);\n  }\n}\n\n// NULL\n\nexport class Null extends DataType {\n  get typeId(): Type {\n    return Type.Null;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Null';\n  }\n  toString(): string {\n    return 'Null';\n  }\n}\n\n// BOOLEANS\n\nexport class Bool extends DataType {\n  get typeId(): Type {\n    return Type.Bool;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Bool';\n  }\n  toString(): string {\n    return 'Bool';\n  }\n}\n\n// INTS\n\nexport class Int extends DataType {\n  readonly isSigned: boolean;\n  readonly bitWidth: number;\n  constructor(isSigned, bitWidth) {\n    super();\n    this.isSigned = isSigned;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Int;\n  }\n  // get ArrayType() {\n  //   switch (this.bitWidth) {\n  //     case 8:\n  //       return this.isSigned ? Int8Array : Uint8Array;\n  //     case 16:\n  //       return this.isSigned ? Int16Array : Uint16Array;\n  //     case 32:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     case 64:\n  //       return this.isSigned ? Int32Array : Uint32Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Int';\n  }\n  toString(): string {\n    return `${this.isSigned ? 'I' : 'Ui'}nt${this.bitWidth}`;\n  }\n}\n\nexport class Int8 extends Int {\n  constructor() {\n    super(true, 8);\n  }\n}\nexport class Int16 extends Int {\n  constructor() {\n    super(true, 16);\n  }\n}\nexport class Int32 extends Int {\n  constructor() {\n    super(true, 32);\n  }\n}\nexport class Int64 extends Int {\n  constructor() {\n    super(true, 64);\n  }\n}\nexport class Uint8 extends Int {\n  constructor() {\n    super(false, 8);\n  }\n}\nexport class Uint16 extends Int {\n  constructor() {\n    super(false, 16);\n  }\n}\nexport class Uint32 extends Int {\n  constructor() {\n    super(false, 32);\n  }\n}\nexport class Uint64 extends Int {\n  constructor() {\n    super(false, 64);\n  }\n}\n\n// FLOATS\n\nconst Precision = {\n  HALF: 16,\n  SINGLE: 32,\n  DOUBLE: 64\n};\n\nexport class Float extends DataType {\n  readonly precision: number;\n  constructor(precision) {\n    super();\n    this.precision = precision;\n  }\n  get typeId(): Type {\n    return Type.Float;\n  }\n  // get ArrayType() {\n  //   switch (this.precision) {\n  //     case Precision.HALF:\n  //       return Uint16Array;\n  //     case Precision.SINGLE:\n  //       return Float32Array;\n  //     case Precision.DOUBLE:\n  //       return Float64Array;\n  //     default:\n  //       throw new Error(`Unrecognized ${this[Symbol.toStringTag]} type`);\n  //   }\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Float';\n  }\n  toString(): string {\n    return `Float${this.precision}`;\n  }\n}\n\nexport class Float16 extends Float {\n  constructor() {\n    super(Precision.HALF);\n  }\n}\nexport class Float32 extends Float {\n  constructor() {\n    super(Precision.SINGLE);\n  }\n}\nexport class Float64 extends Float {\n  constructor() {\n    super(Precision.DOUBLE);\n  }\n}\n\nexport class Binary extends DataType {\n  constructor() {\n    super();\n  }\n  get typeId() {\n    return Type.Binary;\n  }\n  toString() {\n    return 'Binary';\n  }\n  get [Symbol.toStringTag]() {\n    return 'Binary';\n  }\n}\n\n// STRINGS\n\nexport class Utf8 extends DataType {\n  get typeId(): Type {\n    return Type.Utf8;\n  }\n  // get ArrayType() {\n  //   return Uint8Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Utf8';\n  }\n  toString(): string {\n    return 'Utf8';\n  }\n}\n\n// DATES, TIMES AND INTERVALS\n\nconst DateUnit = {\n  DAY: 0,\n  MILLISECOND: 1\n};\n\nexport class Date extends DataType {\n  readonly unit: number;\n  constructor(unit) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Date;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Date';\n  }\n  toString(): string {\n    return `Date${(this.unit + 1) * 32}<${DateUnit[this.unit]}>`;\n  }\n}\n\nexport class DateDay extends Date {\n  constructor() {\n    super(DateUnit.DAY);\n  }\n}\nexport class DateMillisecond extends Date {\n  constructor() {\n    super(DateUnit.MILLISECOND);\n  }\n}\n\nconst TimeUnit = {\n  SECOND: 1,\n  MILLISECOND: 1e3,\n  MICROSECOND: 1e6,\n  NANOSECOND: 1e9\n};\n\nexport class Time extends DataType {\n  readonly unit: any;\n  readonly bitWidth: number;\n\n  constructor(unit: any, bitWidth: number) {\n    super();\n    this.unit = unit;\n    this.bitWidth = bitWidth;\n  }\n  get typeId(): Type {\n    return Type.Time;\n  }\n  toString(): string {\n    return `Time${this.bitWidth}<${TimeUnit[this.unit]}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Time';\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n}\n\nexport class TimeSecond extends Time {\n  constructor() {\n    super(TimeUnit.SECOND, 32);\n  }\n}\nexport class TimeMillisecond extends Time {\n  constructor() {\n    super(TimeUnit.MILLISECOND, 32);\n  }\n}\n// export class TimeMicrosecond extends Time { constructor() { super(TimeUnit.MICROSECOND, 64); } }\n// export class TimeNanosecond extends Time { constructor() { super(TimeUnit.NANOSECOND, 64); } }\n\nexport class Timestamp extends DataType {\n  readonly unit: any;\n  readonly timezone: any;\n\n  constructor(unit: any, timezone = null) {\n    super();\n    this.unit = unit;\n    this.timezone = timezone;\n  }\n  get typeId(): Type {\n    return Type.Timestamp;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Timestamp';\n  }\n  toString(): string {\n    return `Timestamp<${TimeUnit[this.unit]}${this.timezone ? `, ${this.timezone}` : ''}>`;\n  }\n}\n\nexport class TimestampSecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.SECOND, timezone);\n  }\n}\nexport class TimestampMillisecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MILLISECOND, timezone);\n  }\n}\nexport class TimestampMicrosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.MICROSECOND, timezone);\n  }\n}\nexport class TimestampNanosecond extends Timestamp {\n  constructor(timezone = null) {\n    super(TimeUnit.NANOSECOND, timezone);\n  }\n}\n\nconst IntervalUnit = {\n  DAY_TIME: 0,\n  YEAR_MONTH: 1\n};\n\nexport class Interval extends DataType {\n  readonly unit: number;\n  constructor(unit: number) {\n    super();\n    this.unit = unit;\n  }\n  get typeId(): Type {\n    return Type.Interval;\n  }\n  // get ArrayType() {\n  //   return Int32Array;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'Interval';\n  }\n  toString(): string {\n    return `Interval<${IntervalUnit[this.unit]}>`;\n  }\n}\n\nexport class IntervalDayTime extends Interval {\n  constructor() {\n    super(IntervalUnit.DAY_TIME);\n  }\n}\nexport class IntervalYearMonth extends Interval {\n  constructor() {\n    super(IntervalUnit.YEAR_MONTH);\n  }\n}\n\nexport class FixedSizeList extends DataType {\n  readonly listSize: number;\n  readonly children: Field[];\n\n  constructor(listSize: number, child: Field) {\n    super();\n    this.listSize = listSize;\n    this.children = [child];\n  }\n  get typeId(): Type {\n    return Type.FixedSizeList;\n  }\n  get valueType() {\n    return this.children[0].type;\n  }\n  get valueField() {\n    return this.children[0];\n  }\n  // get ArrayType() {\n  //   return this.valueType.ArrayType;\n  // }\n  get [Symbol.toStringTag](): string {\n    return 'FixedSizeList';\n  }\n  toString(): string {\n    return `FixedSizeList[${this.listSize}]<${this.valueType}>`;\n  }\n}\n\nexport class Struct extends DataType {\n  public readonly children: Field[];\n\n  constructor(children: Field[]) {\n    super();\n    this.children = children;\n  }\n\n  public get typeId() {\n    return Type.Struct;\n  }\n  public toString() {\n    return `Struct<{${this.children.map((f) => `${f.name}:${f.type}`).join(', ')}}>`;\n  }\n  get [Symbol.toStringTag](): string {\n    return 'Struct';\n  }\n}\n"]},"metadata":{},"sourceType":"module"}