{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _wrapNativeSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/wrapNativeSuper\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _Symbol$asyncIterator;\n\nvar ArrayQueue = /*#__PURE__*/function (_Array) {\n  _inherits(ArrayQueue, _Array);\n\n  var _super = _createSuper(ArrayQueue);\n\n  function ArrayQueue() {\n    _classCallCheck(this, ArrayQueue);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ArrayQueue, [{\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      return this.push(value);\n    }\n  }, {\n    key: \"dequeue\",\n    value: function dequeue() {\n      return this.shift();\n    }\n  }]);\n\n  return ArrayQueue;\n}( /*#__PURE__*/_wrapNativeSuper(Array));\n\n_Symbol$asyncIterator = Symbol.asyncIterator;\n\nvar AsyncQueue = /*#__PURE__*/function () {\n  function AsyncQueue() {\n    _classCallCheck(this, AsyncQueue);\n\n    _defineProperty(this, \"_values\", void 0);\n\n    _defineProperty(this, \"_settlers\", void 0);\n\n    _defineProperty(this, \"_closed\", void 0);\n\n    this._values = new ArrayQueue();\n    this._settlers = new ArrayQueue();\n    this._closed = false;\n  }\n\n  _createClass(AsyncQueue, [{\n    key: \"close\",\n    value: function close() {\n      while (this._settlers.length > 0) {\n        this._settlers.dequeue().resolve({\n          done: true\n        });\n      }\n\n      this._closed = true;\n    }\n  }, {\n    key: _Symbol$asyncIterator,\n    value: function value() {\n      return this;\n    }\n  }, {\n    key: \"enqueue\",\n    value: function enqueue(value) {\n      if (this._closed) {\n        throw new Error('Closed');\n      }\n\n      if (this._settlers.length > 0) {\n        if (this._values.length > 0) {\n          throw new Error('Illegal internal state');\n        }\n\n        var settler = this._settlers.dequeue();\n\n        if (value instanceof Error) {\n          settler.reject(value);\n        } else {\n          settler.resolve({\n            value: value\n          });\n        }\n      } else {\n        this._values.enqueue(value);\n      }\n    }\n  }, {\n    key: \"next\",\n    value: function next() {\n      var _this = this;\n\n      if (this._values.length > 0) {\n        var value = this._values.dequeue();\n\n        if (value instanceof Error) {\n          return Promise.reject(value);\n        }\n\n        return Promise.resolve({\n          value: value\n        });\n      }\n\n      if (this._closed) {\n        if (this._settlers.length > 0) {\n          throw new Error('Illegal internal state');\n        }\n\n        return Promise.resolve({\n          done: true\n        });\n      }\n\n      return new Promise(function (resolve, reject) {\n        _this._settlers.enqueue({\n          resolve: resolve,\n          reject: reject\n        });\n      });\n    }\n  }]);\n\n  return AsyncQueue;\n}();\n\nexport { AsyncQueue as default };\nexport function takeAsync(_x) {\n  return _takeAsync.apply(this, arguments);\n}\n\nfunction _takeAsync() {\n  _takeAsync = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(asyncIterable) {\n    var count,\n        result,\n        iterator,\n        _yield$iterator$next,\n        value,\n        done,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            count = _args.length > 1 && _args[1] !== undefined ? _args[1] : Infinity;\n            result = [];\n            iterator = asyncIterable[Symbol.asyncIterator]();\n\n          case 3:\n            if (!(result.length < count)) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 6;\n            return iterator.next();\n\n          case 6:\n            _yield$iterator$next = _context.sent;\n            value = _yield$iterator$next.value;\n            done = _yield$iterator$next.done;\n\n            if (!done) {\n              _context.next = 11;\n              break;\n            }\n\n            return _context.abrupt(\"break\", 14);\n\n          case 11:\n            result.push(value);\n            _context.next = 3;\n            break;\n\n          case 14:\n            return _context.abrupt(\"return\", result);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _takeAsync.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../../src/lib/utils/async-queue.ts"],"names":["constructor","done","Symbol","asyncIterator","settler","value","Promise","resolve","reject","count","result","iterator","asyncIterable"],"mappings":"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","sourcesContent":["// From https://github.com/rauschma/async-iter-demo/tree/master/src under MIT license\n// http://2ality.com/2016/10/asynchronous-iteration.html\n\nclass ArrayQueue<T> extends Array<T> {\n  enqueue(value: T) {\n    // Add at the end\n    return this.push(value);\n  }\n  dequeue(): T {\n    // Remove first element\n    return this.shift() as T;\n  }\n}\n\nexport default class AsyncQueue<T> {\n  private _values: ArrayQueue<T | Error>;\n  private _settlers: ArrayQueue<{resolve: (value: any) => void; reject: (reason?: any) => void}>;\n  private _closed: boolean;\n\n  constructor() {\n    // enqueues > dequeues\n    this._values = new ArrayQueue<T>();\n    // dequeues > enqueues\n    this._settlers = new ArrayQueue<{\n      resolve: (value: any) => void;\n      reject: (reason?: any) => void;\n    }>();\n    this._closed = false;\n  }\n\n  close(): void {\n    while (this._settlers.length > 0) {\n      this._settlers.dequeue().resolve({done: true});\n    }\n    this._closed = true;\n  }\n\n  [Symbol.asyncIterator](): AsyncIterator<T> {\n    return this;\n  }\n\n  enqueue(value: T | Error): void {\n    if (this._closed) {\n      throw new Error('Closed');\n    }\n\n    if (this._settlers.length > 0) {\n      if (this._values.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      const settler = this._settlers.dequeue();\n      if (value instanceof Error) {\n        settler.reject(value);\n      } else {\n        settler.resolve({value});\n      }\n    } else {\n      this._values.enqueue(value);\n    }\n  }\n\n  /**\n   * @returns a Promise for an IteratorResult\n   */\n  next(): Promise<any> {\n    if (this._values.length > 0) {\n      const value = this._values.dequeue();\n      if (value instanceof Error) {\n        return Promise.reject(value);\n      }\n      return Promise.resolve({value});\n    }\n\n    if (this._closed) {\n      if (this._settlers.length > 0) {\n        throw new Error('Illegal internal state');\n      }\n      return Promise.resolve({done: true});\n    }\n    // Wait for new values to be enqueued\n    return new Promise((resolve, reject) => {\n      this._settlers.enqueue({resolve, reject});\n    });\n  }\n}\n\n/**\n * @returns a Promise for an Array with the elements in `asyncIterable`\n */\nexport async function takeAsync(\n  asyncIterable: AsyncIterable<any>,\n  count = Infinity\n): Promise<any[]> {\n  const result: Array<any> = [];\n  const iterator = asyncIterable[Symbol.asyncIterator]();\n  while (result.length < count) {\n    const {value, done} = await iterator.next();\n    if (done) {\n      break;\n    }\n    result.push(value);\n  }\n  return result;\n}\n"]},"metadata":{},"sourceType":"module"}