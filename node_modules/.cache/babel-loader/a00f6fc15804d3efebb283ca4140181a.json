{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { getFloat16 as _getFloat } from '@petamoriken/float16';\n\nvar DataView64 = /*#__PURE__*/function () {\n  function DataView64(arrayBuffer) {\n    _classCallCheck(this, DataView64);\n\n    this._dataView = new DataView(arrayBuffer);\n  }\n\n  _createClass(DataView64, [{\n    key: \"getUint64\",\n    value: function getUint64(offset, littleEndian) {\n      var left = this.getUint32(offset, littleEndian);\n      var right = this.getUint32(offset + 4, littleEndian);\n      var combined;\n\n      if (littleEndian) {\n        combined = left + Math.pow(2, 32) * right;\n\n        if (!Number.isSafeInteger(combined)) {\n          throw new Error(\"\".concat(combined, \" exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues\"));\n        }\n\n        return combined;\n      }\n\n      combined = Math.pow(2, 32) * left + right;\n\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\"\".concat(combined, \" exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues\"));\n      }\n\n      return combined;\n    } // adapted from https://stackoverflow.com/a/55338384/8060591\n\n  }, {\n    key: \"getInt64\",\n    value: function getInt64(offset, littleEndian) {\n      var value = 0;\n      var isNegative = (this._dataView.getUint8(offset + (littleEndian ? 7 : 0)) & 0x80) > 0;\n      var carrying = true;\n\n      for (var i = 0; i < 8; i++) {\n        var byte = this._dataView.getUint8(offset + (littleEndian ? i : 7 - i));\n\n        if (isNegative) {\n          if (carrying) {\n            if (byte !== 0x00) {\n              byte = ~(byte - 1) & 0xff;\n              carrying = false;\n            }\n          } else {\n            byte = ~byte & 0xff;\n          }\n        }\n\n        value += byte * Math.pow(256, i);\n      }\n\n      if (isNegative) {\n        value = -value;\n      }\n\n      return value;\n    }\n  }, {\n    key: \"getUint8\",\n    value: function getUint8(offset, littleEndian) {\n      return this._dataView.getUint8(offset, littleEndian);\n    }\n  }, {\n    key: \"getInt8\",\n    value: function getInt8(offset, littleEndian) {\n      return this._dataView.getInt8(offset, littleEndian);\n    }\n  }, {\n    key: \"getUint16\",\n    value: function getUint16(offset, littleEndian) {\n      return this._dataView.getUint16(offset, littleEndian);\n    }\n  }, {\n    key: \"getInt16\",\n    value: function getInt16(offset, littleEndian) {\n      return this._dataView.getInt16(offset, littleEndian);\n    }\n  }, {\n    key: \"getUint32\",\n    value: function getUint32(offset, littleEndian) {\n      return this._dataView.getUint32(offset, littleEndian);\n    }\n  }, {\n    key: \"getInt32\",\n    value: function getInt32(offset, littleEndian) {\n      return this._dataView.getInt32(offset, littleEndian);\n    }\n  }, {\n    key: \"getFloat16\",\n    value: function getFloat16(offset, littleEndian) {\n      return _getFloat(this._dataView, littleEndian);\n    }\n  }, {\n    key: \"getFloat32\",\n    value: function getFloat32(offset, littleEndian) {\n      return this._dataView.getFloat32(offset, littleEndian);\n    }\n  }, {\n    key: \"getFloat64\",\n    value: function getFloat64(offset, littleEndian) {\n      return this._dataView.getFloat64(offset, littleEndian);\n    }\n  }, {\n    key: \"buffer\",\n    get: function get() {\n      return this._dataView.buffer;\n    }\n  }]);\n\n  return DataView64;\n}();\n\nexport { DataView64 as default };","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/geotiff/src/dataview64.js"],"names":["getFloat16","DataView64","arrayBuffer","_dataView","DataView","offset","littleEndian","left","getUint32","right","combined","Number","isSafeInteger","Error","value","isNegative","getUint8","carrying","i","byte","getInt8","getUint16","getInt16","getInt32","getFloat32","getFloat64","buffer"],"mappings":"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","sourcesContent":["import { getFloat16 } from '@petamoriken/float16';\n\nexport default class DataView64 {\n  constructor(arrayBuffer) {\n    this._dataView = new DataView(arrayBuffer);\n  }\n\n  get buffer() {\n    return this._dataView.buffer;\n  }\n\n  getUint64(offset, littleEndian) {\n    const left = this.getUint32(offset, littleEndian);\n    const right = this.getUint32(offset + 4, littleEndian);\n    let combined;\n    if (littleEndian) {\n      combined = left + 2 ** 32 * right;\n      if (!Number.isSafeInteger(combined)) {\n        throw new Error(\n          `${combined} exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues`\n        );\n      }\n      return combined;\n    }\n    combined = 2 ** 32 * left + right;\n    if (!Number.isSafeInteger(combined)) {\n      throw new Error(\n        `${combined} exceeds MAX_SAFE_INTEGER. Precision may be lost. Please report if you get this message to https://github.com/geotiffjs/geotiff.js/issues`\n      );\n    }\n\n    return combined;\n  }\n\n  // adapted from https://stackoverflow.com/a/55338384/8060591\n  getInt64(offset, littleEndian) {\n    let value = 0;\n    const isNegative =\n      (this._dataView.getUint8(offset + (littleEndian ? 7 : 0)) & 0x80) > 0;\n    let carrying = true;\n    for (let i = 0; i < 8; i++) {\n      let byte = this._dataView.getUint8(offset + (littleEndian ? i : 7 - i));\n      if (isNegative) {\n        if (carrying) {\n          if (byte !== 0x00) {\n            byte = ~(byte - 1) & 0xff;\n            carrying = false;\n          }\n        } else {\n          byte = ~byte & 0xff;\n        }\n      }\n      value += byte * 256 ** i;\n    }\n    if (isNegative) {\n      value = -value;\n    }\n    return value;\n  }\n\n  getUint8(offset, littleEndian) {\n    return this._dataView.getUint8(offset, littleEndian);\n  }\n\n  getInt8(offset, littleEndian) {\n    return this._dataView.getInt8(offset, littleEndian);\n  }\n\n  getUint16(offset, littleEndian) {\n    return this._dataView.getUint16(offset, littleEndian);\n  }\n\n  getInt16(offset, littleEndian) {\n    return this._dataView.getInt16(offset, littleEndian);\n  }\n\n  getUint32(offset, littleEndian) {\n    return this._dataView.getUint32(offset, littleEndian);\n  }\n\n  getInt32(offset, littleEndian) {\n    return this._dataView.getInt32(offset, littleEndian);\n  }\n\n  getFloat16(offset, littleEndian) {\n    return getFloat16(this._dataView, littleEndian);\n  }\n\n  getFloat32(offset, littleEndian) {\n    return this._dataView.getFloat32(offset, littleEndian);\n  }\n\n  getFloat64(offset, littleEndian) {\n    return this._dataView.getFloat64(offset, littleEndian);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}