{"ast":null,"code":"import { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { Split } from '../split';\n\nfunction isFalseOrNull(v) {\n  return v === false || v === null;\n}\n\nconst AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({\n  disable: 1,\n  gridScale: 1,\n  scale: 1\n}, COMMON_AXIS_PROPERTIES_INDEX), {\n  labelExpr: 1,\n  encode: 1\n});\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport class AxisComponent extends Split {\n  constructor(explicit = {}, implicit = {}, mainExtracted = false) {\n    super();\n    this.explicit = explicit;\n    this.implicit = implicit;\n    this.mainExtracted = mainExtracted;\n  }\n\n  clone() {\n    return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n  }\n\n  hasAxisPart(part) {\n    // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n    if (part === 'axis') {\n      // always has the axis container part\n      return true;\n    }\n\n    if (part === 'grid' || part === 'title') {\n      return !!this.get(part);\n    } // Other parts are enabled by default, so they should not be false or null.\n\n\n    return !isFalseOrNull(this.get(part));\n  }\n\n  hasOrientSignalRef() {\n    return isSignalRef(this.explicit.orient);\n  }\n\n}","map":{"version":3,"sources":["../../../../src/compile/axis/component.ts"],"names":[],"mappings":"AACA,SAIE,4BAJF,QAMO,YANP;AAQA,SAAQ,SAAR,EAAyB,IAAzB,QAAoC,YAApC;AACA,SAAQ,WAAR,QAA0B,mBAA1B;AACA,SAAQ,KAAR,QAAoB,UAApB;;AAEA,SAAS,aAAT,CAAuB,CAAvB,EAA6B;AAC3B,SAAO,CAAC,KAAK,KAAN,IAAe,CAAC,KAAK,IAA5B;AACD;;AASD,MAAM,+BAA+B,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACnC,EAAA,OAAO,EAAE,CAD0B;AAEnC,EAAA,SAAS,EAAE,CAFwB;AAGnC,EAAA,KAAK,EAAE;AAH4B,CAAA,EAIhC,4BAJgC,CAAA,EAIJ;AAC/B,EAAA,SAAS,EAAE,CADoB;AAE/B,EAAA,MAAM,EAAE;AAFuB,CAJI,CAArC;AASA,OAAO,MAAM,yBAAyB,GAAG,IAAI,CAAC,+BAAD,CAAtC;AAEP,OAAM,MAAO,aAAP,SAA6B,KAA7B,CAAsD;AAC1D,EAAA,WAAA,CACkB,QAAA,GAAwC,EAD1D,EAEkB,QAAA,GAAwC,EAF1D,EAGS,aAAA,GAAgB,KAHzB,EAG8B;AAE5B;AAJgB,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACT,SAAA,aAAA,GAAA,aAAA;AAGR;;AAEM,EAAA,KAAK,GAAA;AACV,WAAO,IAAI,aAAJ,CAAkB,SAAS,CAAC,KAAK,QAAN,CAA3B,EAA4C,SAAS,CAAC,KAAK,QAAN,CAArD,EAAsE,KAAK,aAA3E,CAAP;AACD;;AAEM,EAAA,WAAW,CAAC,IAAD,EAAe;AAC/B;AAEA,QAAI,IAAI,KAAK,MAAb,EAAqB;AACnB;AACA,aAAO,IAAP;AACD;;AAED,QAAI,IAAI,KAAK,MAAT,IAAmB,IAAI,KAAK,OAAhC,EAAyC;AACvC,aAAO,CAAC,CAAC,KAAK,GAAL,CAAS,IAAT,CAAT;AACD,KAV8B,CAW/B;;;AACA,WAAO,CAAC,aAAa,CAAC,KAAK,GAAL,CAAS,IAAT,CAAD,CAArB;AACD;;AAEM,EAAA,kBAAkB,GAAA;AACvB,WAAO,WAAW,CAAC,KAAK,QAAL,CAAc,MAAf,CAAlB;AACD;;AA9ByD","sourceRoot":"","sourcesContent":["import { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { Split } from '../split';\nfunction isFalseOrNull(v) {\n    return v === false || v === null;\n}\nconst AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({ disable: 1, gridScale: 1, scale: 1 }, COMMON_AXIS_PROPERTIES_INDEX), { labelExpr: 1, encode: 1 });\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport class AxisComponent extends Split {\n    constructor(explicit = {}, implicit = {}, mainExtracted = false) {\n        super();\n        this.explicit = explicit;\n        this.implicit = implicit;\n        this.mainExtracted = mainExtracted;\n    }\n    clone() {\n        return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n    }\n    hasAxisPart(part) {\n        // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n        if (part === 'axis') {\n            // always has the axis container part\n            return true;\n        }\n        if (part === 'grid' || part === 'title') {\n            return !!this.get(part);\n        }\n        // Other parts are enabled by default, so they should not be false or null.\n        return !isFalseOrNull(this.get(part));\n    }\n    hasOrientSignalRef() {\n        return isSignalRef(this.explicit.orient);\n    }\n}\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}