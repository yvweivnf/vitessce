{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DrawPointMode = void 0;\n\nvar _geojsonEditMode = require(\"./geojson-edit-mode\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar DrawPointMode = /*#__PURE__*/function (_GeoJsonEditMode) {\n  _inherits(DrawPointMode, _GeoJsonEditMode);\n\n  var _super = _createSuper(DrawPointMode);\n\n  function DrawPointMode() {\n    _classCallCheck(this, DrawPointMode);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DrawPointMode, [{\n    key: \"createTentativeFeature\",\n    value: function createTentativeFeature(props) {\n      var lastPointerMoveEvent = props.lastPointerMoveEvent;\n      var lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n      return {\n        type: 'Feature',\n        properties: {\n          guideType: 'tentative'\n        },\n        geometry: {\n          type: 'Point',\n          coordinates: lastCoords[0]\n        }\n      };\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(_ref, props) {\n      var mapCoords = _ref.mapCoords;\n      var geometry = {\n        type: 'Point',\n        coordinates: mapCoords\n      }; // @ts-ignore\n\n      props.onEdit(this.getAddFeatureAction(geometry, props.data));\n    }\n  }, {\n    key: \"handlePointerMove\",\n    value: function handlePointerMove(event, props) {\n      props.onUpdateCursor('cell');\n\n      _get(_getPrototypeOf(DrawPointMode.prototype), \"handlePointerMove\", this).call(this, event, props);\n    }\n  }]);\n\n  return DrawPointMode;\n}(_geojsonEditMode.GeoJsonEditMode);\n\nexports.DrawPointMode = DrawPointMode;","map":{"version":3,"sources":["../../src/lib/draw-point-mode.ts"],"names":["DrawPointMode","GeoJsonEditMode","props","lastPointerMoveEvent","lastCoords","type","properties","guideType","geometry","coordinates","mapCoords","event"],"mappings":";;;;;;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,a;;;;;;;;;;;;;2CACYE,K,EAAuD;AAAA,UACpEC,oBADoE,GAC3CD,KAD2C,CAAA,oBAAA;AAE5E,UAAME,UAAU,GAAGD,oBAAoB,GAAG,CAACA,oBAAoB,CAAxB,SAAG,CAAH,GAAvC,EAAA;AAEA,aAAO;AACLE,QAAAA,IAAI,EADC,SAAA;AAELC,QAAAA,UAAU,EAAE;AACVC,UAAAA,SAAS,EAAE;AADD,SAFP;AAKLC,QAAAA,QAAQ,EAAE;AACRH,UAAAA,IAAI,EADI,OAAA;AAERI,UAAAA,WAAW,EAAEL,UAAU,CAAA,CAAA;AAFf;AALL,OAAP;AAUD;;;sCAEsCF,K,EAA2C;AAAA,UAApEQ,SAAoE,GAAA,IAAA,CAApEA,SAAoE;AAChF,UAAMF,QAAQ,GAAG;AACfH,QAAAA,IAAI,EADW,OAAA;AAEfI,QAAAA,WAAW,EAAEC;AAFE,OAAjB,CADgF,CAKhF;;AACAR,MAAAA,KAAK,CAALA,MAAAA,CAAa,KAAA,mBAAA,CAAA,QAAA,EAAmCA,KAAK,CAArDA,IAAa,CAAbA;AACD;;;sCAEiBS,K,EAAyBT,K,EAAqC;AAC9EA,MAAAA,KAAK,CAALA,cAAAA,CAAAA,MAAAA;;AACA,MAAA,IAAA,CAAA,eAAA,CAAA,aAAA,CAAA,SAAA,CAAA,EAAA,mBAAA,EAAA,IAAA,CAAA,CAAA,IAAA,CAAA,IAAA,EAAA,KAAA,EAAA,KAAA;AACD;;;;EA7BgCD,gBAAAA,CAAAA,e","sourcesContent":["import { ClickEvent, PointerMoveEvent, ModeProps, TentativeFeature } from '../types';\nimport { FeatureCollection } from '../geojson-types';\nimport { GeoJsonEditMode } from './geojson-edit-mode';\n\nexport class DrawPointMode extends GeoJsonEditMode {\n  createTentativeFeature(props: ModeProps<FeatureCollection>): TentativeFeature {\n    const { lastPointerMoveEvent } = props;\n    const lastCoords = lastPointerMoveEvent ? [lastPointerMoveEvent.mapCoords] : [];\n\n    return {\n      type: 'Feature',\n      properties: {\n        guideType: 'tentative',\n      },\n      geometry: {\n        type: 'Point',\n        coordinates: lastCoords[0],\n      },\n    };\n  }\n\n  handleClick({ mapCoords }: ClickEvent, props: ModeProps<FeatureCollection>): void {\n    const geometry = {\n      type: 'Point',\n      coordinates: mapCoords,\n    };\n    // @ts-ignore\n    props.onEdit(this.getAddFeatureAction(geometry, props.data));\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    props.onUpdateCursor('cell');\n    super.handlePointerMove(event, props);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}