{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\tooltip\\\\Tooltip2D.js\";\nimport React from 'react';\nimport Tooltip from './Tooltip';\n/**\n * A tooltip component that also incorporates a crosshair element.\n * @param {object} props\n * @param {string} props.parentUuid A unique identifier corresponding to the plot\n * with which this scatterplot is associated.\n * @param {string} props.sourceUuid A unique identifier corresponding to the plot\n * from which this tooltip originated.\n * @param {number} props.x The x coordinate for the tooltip.\n * @param {number} props.y The y coordinate for the tooltip.\n * @param {number} props.parentWidth The width of the parent plot container element.\n * @param {number} props.parentHeight The height of the parent plot container element.\n * @param {React.Component} props.children The tooltip contents as a react component.\n */\n\nexport default function Tooltip2D(props) {\n  const {\n    parentUuid,\n    sourceUuid,\n    x,\n    y,\n    parentWidth,\n    parentHeight,\n    children\n  } = props; // Check if out of bounds.\n\n  if (x < 0 || x > parentWidth || y < 0 || y > parentHeight) {\n    return null;\n  } // Show tooltip or crosshair?\n\n\n  const isTooltipVisible = parentUuid === sourceUuid;\n  const crosshairWidth = 1;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, isTooltipVisible ? /*#__PURE__*/React.createElement(Tooltip, {\n    x: x,\n    y: y,\n    parentWidth: parentWidth,\n    parentHeight: parentHeight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, children) : /*#__PURE__*/React.createElement(React.Fragment, null, x !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cell-emphasis-crosshair\",\n    style: {\n      left: `${x - crosshairWidth / 2}px`,\n      top: 0,\n      width: `${crosshairWidth}px`,\n      height: `${parentHeight}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }) : null, y !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cell-emphasis-crosshair\",\n    style: {\n      left: 0,\n      top: `${y - crosshairWidth / 2}px`,\n      width: `${parentWidth}px`,\n      height: `${crosshairWidth}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }) : null));\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/tooltip/Tooltip2D.js"],"names":["React","Tooltip","Tooltip2D","props","parentUuid","sourceUuid","x","y","parentWidth","parentHeight","children","isTooltipVisible","crosshairWidth","left","top","width","height"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AAEA;;;;;;;;;;;;;;AAaA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AACvC,QAAM;AACJC,IAAAA,UADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,CAHI;AAIJC,IAAAA,CAJI;AAKJC,IAAAA,WALI;AAMJC,IAAAA,YANI;AAOJC,IAAAA;AAPI,MAQFP,KARJ,CADuC,CAUvC;;AACA,MAAIG,CAAC,GAAG,CAAJ,IAASA,CAAC,GAAGE,WAAb,IAA4BD,CAAC,GAAG,CAAhC,IAAqCA,CAAC,GAAGE,YAA7C,EAA2D;AACzD,WAAO,IAAP;AACD,GAbsC,CAcvC;;;AACA,QAAME,gBAAgB,GAAIP,UAAU,KAAKC,UAAzC;AACA,QAAMO,cAAc,GAAG,CAAvB;AACA,sBACE,0CACGD,gBAAgB,gBACf,oBAAC,OAAD;AACE,IAAA,CAAC,EAAEL,CADL;AAEE,IAAA,CAAC,EAAEC,CAFL;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,YAAY,EAAEC,YAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGC,QANH,CADe,gBAUf,0CACGJ,CAAC,KAAK,IAAN,gBACC;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,KAAK,EAAE;AACLO,MAAAA,IAAI,EAAG,GAAEP,CAAC,GAAGM,cAAc,GAAG,CAAE,IAD3B;AAELE,MAAAA,GAAG,EAAE,CAFA;AAGLC,MAAAA,KAAK,EAAG,GAAEH,cAAe,IAHpB;AAILI,MAAAA,MAAM,EAAG,GAAEP,YAAa;AAJnB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAUG,IAXN,EAYGF,CAAC,KAAK,IAAN,gBACC;AACE,IAAA,SAAS,EAAC,yBADZ;AAEE,IAAA,KAAK,EAAE;AACLM,MAAAA,IAAI,EAAE,CADD;AAELC,MAAAA,GAAG,EAAG,GAAEP,CAAC,GAAGK,cAAc,GAAG,CAAE,IAF1B;AAGLG,MAAAA,KAAK,EAAG,GAAEP,WAAY,IAHjB;AAILQ,MAAAA,MAAM,EAAG,GAAEJ,cAAe;AAJrB,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,GAUG,IAtBN,CAXJ,CADF;AAuCD","sourcesContent":["import React from 'react';\nimport Tooltip from './Tooltip';\n\n/**\n * A tooltip component that also incorporates a crosshair element.\n * @param {object} props\n * @param {string} props.parentUuid A unique identifier corresponding to the plot\n * with which this scatterplot is associated.\n * @param {string} props.sourceUuid A unique identifier corresponding to the plot\n * from which this tooltip originated.\n * @param {number} props.x The x coordinate for the tooltip.\n * @param {number} props.y The y coordinate for the tooltip.\n * @param {number} props.parentWidth The width of the parent plot container element.\n * @param {number} props.parentHeight The height of the parent plot container element.\n * @param {React.Component} props.children The tooltip contents as a react component.\n */\nexport default function Tooltip2D(props) {\n  const {\n    parentUuid,\n    sourceUuid,\n    x,\n    y,\n    parentWidth,\n    parentHeight,\n    children,\n  } = props;\n  // Check if out of bounds.\n  if (x < 0 || x > parentWidth || y < 0 || y > parentHeight) {\n    return null;\n  }\n  // Show tooltip or crosshair?\n  const isTooltipVisible = (parentUuid === sourceUuid);\n  const crosshairWidth = 1;\n  return (\n    <>\n      {isTooltipVisible ? (\n        <Tooltip\n          x={x}\n          y={y}\n          parentWidth={parentWidth}\n          parentHeight={parentHeight}\n        >\n          {children}\n        </Tooltip>\n      ) : (\n        <>\n          {x !== null ? (\n            <div\n              className=\"cell-emphasis-crosshair\"\n              style={{\n                left: `${x - crosshairWidth / 2}px`,\n                top: 0,\n                width: `${crosshairWidth}px`,\n                height: `${parentHeight}px`,\n              }}\n            />\n          ) : null}\n          {y !== null ? (\n            <div\n              className=\"cell-emphasis-crosshair\"\n              style={{\n                left: 0,\n                top: `${y - crosshairWidth / 2}px`,\n                width: `${parentWidth}px`,\n                height: `${crosshairWidth}px`,\n              }}\n            />\n          ) : null}\n        </>\n      )}\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}