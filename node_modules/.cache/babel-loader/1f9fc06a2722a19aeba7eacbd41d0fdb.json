{"ast":null,"code":"import { isBrowser } from '@probe.gl/env';\nexport let COLOR;\n\n(function (COLOR) {\n  COLOR[COLOR[\"BLACK\"] = 30] = \"BLACK\";\n  COLOR[COLOR[\"RED\"] = 31] = \"RED\";\n  COLOR[COLOR[\"GREEN\"] = 32] = \"GREEN\";\n  COLOR[COLOR[\"YELLOW\"] = 33] = \"YELLOW\";\n  COLOR[COLOR[\"BLUE\"] = 34] = \"BLUE\";\n  COLOR[COLOR[\"MAGENTA\"] = 35] = \"MAGENTA\";\n  COLOR[COLOR[\"CYAN\"] = 36] = \"CYAN\";\n  COLOR[COLOR[\"WHITE\"] = 37] = \"WHITE\";\n  COLOR[COLOR[\"BRIGHT_BLACK\"] = 90] = \"BRIGHT_BLACK\";\n  COLOR[COLOR[\"BRIGHT_RED\"] = 91] = \"BRIGHT_RED\";\n  COLOR[COLOR[\"BRIGHT_GREEN\"] = 92] = \"BRIGHT_GREEN\";\n  COLOR[COLOR[\"BRIGHT_YELLOW\"] = 93] = \"BRIGHT_YELLOW\";\n  COLOR[COLOR[\"BRIGHT_BLUE\"] = 94] = \"BRIGHT_BLUE\";\n  COLOR[COLOR[\"BRIGHT_MAGENTA\"] = 95] = \"BRIGHT_MAGENTA\";\n  COLOR[COLOR[\"BRIGHT_CYAN\"] = 96] = \"BRIGHT_CYAN\";\n  COLOR[COLOR[\"BRIGHT_WHITE\"] = 97] = \"BRIGHT_WHITE\";\n})(COLOR || (COLOR = {}));\n\nfunction getColor(color) {\n  return typeof color === 'string' ? COLOR[color.toUpperCase()] || COLOR.WHITE : color;\n}\n\nexport function addColor(string, color, background) {\n  if (!isBrowser && typeof string === 'string') {\n    if (color) {\n      color = getColor(color);\n      string = \"\\x1B[\".concat(color, \"m\").concat(string, \"\\x1B[39m\");\n    }\n\n    if (background) {\n      color = getColor(background);\n      string = \"\\x1B[\".concat(background + 10, \"m\").concat(string, \"\\x1B[49m\");\n    }\n  }\n\n  return string;\n}","map":{"version":3,"sources":["../../../src/utils/color.ts"],"names":["COLOR","color","getColor","string","background"],"mappings":"AAAA,SAAA,SAAA,QAAA,eAAA;AAEA,OAAA,IAAA,KAAA;;WAAYA,K;AAAAA,EAAAA,K,CAAAA,K,SAAAA,G,GAAAA,G,OAAAA;AAAAA,EAAAA,K,CAAAA,K,OAAAA,G,GAAAA,G,KAAAA;AAAAA,EAAAA,K,CAAAA,K,SAAAA,G,GAAAA,G,OAAAA;AAAAA,EAAAA,K,CAAAA,K,UAAAA,G,GAAAA,G,QAAAA;AAAAA,EAAAA,K,CAAAA,K,QAAAA,G,GAAAA,G,MAAAA;AAAAA,EAAAA,K,CAAAA,K,WAAAA,G,GAAAA,G,SAAAA;AAAAA,EAAAA,K,CAAAA,K,QAAAA,G,GAAAA,G,MAAAA;AAAAA,EAAAA,K,CAAAA,K,SAAAA,G,GAAAA,G,OAAAA;AAAAA,EAAAA,K,CAAAA,K,gBAAAA,G,GAAAA,G,cAAAA;AAAAA,EAAAA,K,CAAAA,K,cAAAA,G,GAAAA,G,YAAAA;AAAAA,EAAAA,K,CAAAA,K,gBAAAA,G,GAAAA,G,cAAAA;AAAAA,EAAAA,K,CAAAA,K,iBAAAA,G,GAAAA,G,eAAAA;AAAAA,EAAAA,K,CAAAA,K,eAAAA,G,GAAAA,G,aAAAA;AAAAA,EAAAA,K,CAAAA,K,kBAAAA,G,GAAAA,G,gBAAAA;AAAAA,EAAAA,K,CAAAA,K,eAAAA,G,GAAAA,G,aAAAA;AAAAA,EAAAA,K,CAAAA,K,gBAAAA,G,GAAAA,G,cAAAA;GAAAA,K,KAAAA,K;;AAoBZ,SAAA,QAAA,CAAA,KAAA,EAAiC;AAC/B,SAAO,OAAA,KAAA,KAAA,QAAA,GAA4BA,KAAK,CAACC,KAAK,CAAXD,WAAMC,EAAD,CAALD,IAA8BA,KAAK,CAA/D,KAAA,GAAP,KAAA;AACD;;AAED,OAAO,SAAA,QAAA,CAAA,MAAA,EAAA,KAAA,EAAA,UAAA,EAAsD;AAC3D,MAAI,CAAA,SAAA,IAAc,OAAA,MAAA,KAAlB,QAAA,EAA8C;AAC5C,QAAA,KAAA,EAAW;AACTC,MAAAA,KAAK,GAAGC,QAAQ,CAAhBD,KAAgB,CAAhBA;AACAE,MAAAA,MAAM,GAAA,QAAA,MAAA,CAAA,KAAA,EAAA,GAAA,EAAA,MAAA,CAAA,MAAA,EAANA,UAAM,CAANA;AACD;;AACD,QAAA,UAAA,EAAgB;AAEdF,MAAAA,KAAK,GAAGC,QAAQ,CAAhBD,UAAgB,CAAhBA;AACAE,MAAAA,MAAM,GAAA,QAAA,MAAA,CAAaC,UAAU,GAAvB,EAAA,EAAA,GAAA,EAAA,MAAA,CAAA,MAAA,EAAND,UAAM,CAANA;AACD;AACF;;AACD,SAAA,MAAA;AACD","sourcesContent":["import {isBrowser} from '@probe.gl/env';\n\nexport enum COLOR {\n  BLACK = 30,\n  RED = 31,\n  GREEN = 32,\n  YELLOW = 33,\n  BLUE = 34,\n  MAGENTA = 35,\n  CYAN = 36,\n  WHITE = 37,\n\n  BRIGHT_BLACK = 90,\n  BRIGHT_RED = 91,\n  BRIGHT_GREEN = 92,\n  BRIGHT_YELLOW = 93,\n  BRIGHT_BLUE = 94,\n  BRIGHT_MAGENTA = 95,\n  BRIGHT_CYAN = 96,\n  BRIGHT_WHITE = 97\n}\n\nfunction getColor(color): number {\n  return typeof color === 'string' ? COLOR[color.toUpperCase()] || COLOR.WHITE : color;\n}\n\nexport function addColor(string, color, background?): string {\n  if (!isBrowser && typeof string === 'string') {\n    if (color) {\n      color = getColor(color);\n      string = `\\u001b[${color}m${string}\\u001b[39m`;\n    }\n    if (background) {\n      // background colors values are +10\n      color = getColor(background);\n      string = `\\u001b[${background + 10}m${string}\\u001b[49m`;\n    }\n  }\n  return string;\n}\n"]},"metadata":{},"sourceType":"module"}