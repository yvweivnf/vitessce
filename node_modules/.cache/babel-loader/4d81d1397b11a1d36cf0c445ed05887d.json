{"ast":null,"code":"import { isString } from 'vega-util';\nimport { fieldFilterExpression, isSelectionPredicate } from '../predicate';\nimport { logicalExpr } from '../util';\nimport { parseSelectionPredicate } from './selection/parse';\n/**\n * Converts a predicate into an expression.\n */\n// model is only used for selection filters.\n\nexport function expression(model, filterOp, node) {\n  return logicalExpr(filterOp, function (predicate) {\n    if (isString(predicate)) {\n      return predicate;\n    } else if (isSelectionPredicate(predicate)) {\n      return parseSelectionPredicate(model, predicate, node);\n    } else {\n      // Filter Object\n      return fieldFilterExpression(predicate);\n    }\n  });\n}","map":{"version":3,"sources":["../../../src/compile/predicate.ts"],"names":[],"mappings":"AAAA,SAAQ,QAAR,QAAuB,WAAvB;AAEA,SAAQ,qBAAR,EAA+B,oBAA/B,QAAqE,cAArE;AACA,SAAQ,WAAR,QAA0B,SAA1B;AAGA,SAAQ,uBAAR,QAAsC,mBAAtC;AAEA;;;AAGA;;AACA,OAAM,SAAU,UAAV,CAAqB,KAArB,EAAmC,QAAnC,EAA4E,IAA5E,EAA+F;AACnG,SAAO,WAAW,CAAC,QAAD,EAAW,UAAC,SAAD,EAAyB;AACpD,QAAI,QAAQ,CAAC,SAAD,CAAZ,EAAyB;AACvB,aAAO,SAAP;AACD,KAFD,MAEO,IAAI,oBAAoB,CAAC,SAAD,CAAxB,EAAqC;AAC1C,aAAO,uBAAuB,CAAC,KAAD,EAAQ,SAAR,EAAmB,IAAnB,CAA9B;AACD,KAFM,MAEA;AACL;AACA,aAAO,qBAAqB,CAAC,SAAD,CAA5B;AACD;AACF,GATiB,CAAlB;AAUD","sourceRoot":"","sourcesContent":["import { isString } from 'vega-util';\nimport { fieldFilterExpression, isSelectionPredicate } from '../predicate';\nimport { logicalExpr } from '../util';\nimport { parseSelectionPredicate } from './selection/parse';\n/**\n * Converts a predicate into an expression.\n */\n// model is only used for selection filters.\nexport function expression(model, filterOp, node) {\n    return logicalExpr(filterOp, (predicate) => {\n        if (isString(predicate)) {\n            return predicate;\n        }\n        else if (isSelectionPredicate(predicate)) {\n            return parseSelectionPredicate(model, predicate, node);\n        }\n        else {\n            // Filter Object\n            return fieldFilterExpression(predicate);\n        }\n    });\n}\n//# sourceMappingURL=predicate.js.map"]},"metadata":{},"sourceType":"module"}