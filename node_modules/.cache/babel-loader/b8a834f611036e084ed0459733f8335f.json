{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import every from'lodash/every';import{SelectableTable}from'../selectable-table/index';export default function Genes(props){var hasColorEncoding=props.hasColorEncoding,_props$geneList=props.geneList,geneList=_props$geneList===void 0?[]:_props$geneList,_props$geneSelection=props.geneSelection,geneSelection=_props$geneSelection===void 0?[]:_props$geneSelection,_props$geneFilter=props.geneFilter,geneFilter=_props$geneFilter===void 0?null:_props$geneFilter,setGeneSelection=props.setGeneSelection,enableMultiSelect=props.enableMultiSelect;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchTerm=_useState2[0],setSearchTerm=_useState2[1];var _useState3=useState(geneList),_useState4=_slicedToArray(_useState3,2),searchResults=_useState4[0],setSearchResults=_useState4[1];useEffect(function(){var results=geneList.filter(function(gene){return gene.toLowerCase().includes(searchTerm.toLowerCase());});setSearchResults(results);},[searchTerm,geneList]);function onChange(selection){if(setGeneSelection&&selection){if(Array.isArray(selection)){if(selection.length>0&&every(selection,function(s){return s.name;})){setGeneSelection(selection.map(function(s){return s.name;}));}else{setGeneSelection(null);}}else if(selection.name){setGeneSelection([selection.name]);setSearchTerm(selection.name);}}}var data=searchResults.filter(function(gene){return geneFilter?geneFilter.includes(gene):true;}).sort(function(a,b){return a.localeCompare(b);}).map(function(gene){return{name:gene,value:geneSelection?geneSelection.includes(gene):false};});var handleChange=function handleChange(event){setSearchTerm(event.target.value);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"input\",{className:\"search-bar\",type:\"text\",placeholder:\"Search\",value:searchTerm,onChange:handleChange}),/*#__PURE__*/React.createElement(SelectableTable,{columns:['name'],data:data,hasColorEncoding:hasColorEncoding,idKey:\"name\",valueKey:\"value\",onChange:onChange,allowMultiple:enableMultiSelect,allowUncheck:enableMultiSelect,showTableHead:false}));}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/genes/Genes.js"],"names":["React","useEffect","useState","every","SelectableTable","Genes","props","hasColorEncoding","geneList","geneSelection","geneFilter","setGeneSelection","enableMultiSelect","searchTerm","setSearchTerm","searchResults","setSearchResults","results","filter","gene","toLowerCase","includes","onChange","selection","Array","isArray","length","s","name","map","data","sort","a","b","localeCompare","value","handleChange","event","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport every from 'lodash/every';\nimport { SelectableTable } from '../selectable-table/index';\n\nexport default function Genes(props) {\n  const {\n    hasColorEncoding,\n    geneList = [],\n    geneSelection = [],\n    geneFilter = null,\n    setGeneSelection,\n    enableMultiSelect,\n  } = props;\n\n  const [searchTerm, setSearchTerm] = useState('');\n  const [searchResults, setSearchResults] = useState(geneList);\n\n  useEffect(() => {\n    const results = geneList\n      .filter(gene => gene.toLowerCase().includes(searchTerm.toLowerCase()));\n    setSearchResults(results);\n  }, [searchTerm, geneList]);\n\n  function onChange(selection) {\n    if (setGeneSelection && selection) {\n      if (Array.isArray(selection)) {\n        if (selection.length > 0 && every(selection, s => s.name)) {\n          setGeneSelection(selection.map(s => s.name));\n        } else {\n          setGeneSelection(null);\n        }\n      } else if (selection.name) {\n        setGeneSelection([selection.name]);\n        setSearchTerm(selection.name);\n      }\n    }\n  }\n\n  const data = searchResults\n    .filter(gene => (geneFilter ? geneFilter.includes(gene) : true))\n    .sort((a, b) => a.localeCompare(b))\n    .map(\n      gene => ({ name: gene, value: (geneSelection ? geneSelection.includes(gene) : false) }),\n    );\n\n  const handleChange = (event) => {\n    setSearchTerm(event.target.value);\n  };\n\n  return (\n    <>\n      <input\n        className=\"search-bar\"\n        type=\"text\"\n        placeholder=\"Search\"\n        value={searchTerm}\n        onChange={handleChange}\n      />\n      <SelectableTable\n        columns={['name']}\n        data={data}\n        hasColorEncoding={hasColorEncoding}\n        idKey=\"name\"\n        valueKey=\"value\"\n        onChange={onChange}\n        allowMultiple={enableMultiSelect}\n        allowUncheck={enableMultiSelect}\n        showTableHead={false}\n      />\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}