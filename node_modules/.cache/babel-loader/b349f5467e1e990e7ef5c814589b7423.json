{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport { PathLayer } from '@deck.gl/layers';\nvar defaultProps = {\n  fadeTrail: true,\n  trailLength: {\n    type: 'number',\n    value: 120,\n    min: 0\n  },\n  currentTime: {\n    type: 'number',\n    value: 0,\n    min: 0\n  },\n  getTimestamps: {\n    type: 'accessor',\n    value: null\n  }\n};\n\nvar TripsLayer = /*#__PURE__*/function (_PathLayer) {\n  _inherits(TripsLayer, _PathLayer);\n\n  var _super = _createSuper(TripsLayer);\n\n  function TripsLayer() {\n    _classCallCheck(this, TripsLayer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TripsLayer, [{\n    key: \"getShaders\",\n    value: function getShaders() {\n      var shaders = _get(_getPrototypeOf(TripsLayer.prototype), \"getShaders\", this).call(this);\n\n      shaders.inject = {\n        'vs:#decl': \"uniform float trailLength;\\nattribute float instanceTimestamps;\\nattribute float instanceNextTimestamps;\\nvarying float vTime;\\n\",\n        'vs:#main-end': \"vTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\\n\",\n        'fs:#decl': \"uniform bool fadeTrail;\\nuniform float trailLength;\\nuniform float currentTime;\\nvarying float vTime;\\n\",\n        'fs:#main-start': \"if(vTime > currentTime || (fadeTrail && (vTime < currentTime - trailLength))) {\\n  discard;\\n}\\n\",\n        'fs:DECKGL_FILTER_COLOR': \"if(fadeTrail) {\\n  color.a *= 1.0 - (currentTime - vTime) / trailLength;\\n}\\n\"\n      };\n      return shaders;\n    }\n  }, {\n    key: \"initializeState\",\n    value: function initializeState(params) {\n      _get(_getPrototypeOf(TripsLayer.prototype), \"initializeState\", this).call(this, params);\n\n      var attributeManager = this.getAttributeManager();\n      attributeManager.addInstanced({\n        timestamps: {\n          size: 1,\n          accessor: 'getTimestamps',\n          shaderAttributes: {\n            instanceTimestamps: {\n              vertexOffset: 0\n            },\n            instanceNextTimestamps: {\n              vertexOffset: 1\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(params) {\n      var _this$props = this.props,\n          fadeTrail = _this$props.fadeTrail,\n          trailLength = _this$props.trailLength,\n          currentTime = _this$props.currentTime;\n      params.uniforms = _objectSpread({}, params.uniforms, {\n        fadeTrail: fadeTrail,\n        trailLength: trailLength,\n        currentTime: currentTime\n      });\n\n      _get(_getPrototypeOf(TripsLayer.prototype), \"draw\", this).call(this, params);\n    }\n  }]);\n\n  return TripsLayer;\n}(PathLayer);\n\nexport { TripsLayer as default };\nTripsLayer.layerName = 'TripsLayer';\nTripsLayer.defaultProps = defaultProps;","map":{"version":3,"sources":["../../../src/trips-layer/trips-layer.js"],"names":["defaultProps","fadeTrail","trailLength","type","value","min","currentTime","getTimestamps","shaders","attributeManager","timestamps","size","accessor","shaderAttributes","instanceTimestamps","vertexOffset","instanceNextTimestamps","params","TripsLayer"],"mappings":";;;;;;;AAoBA,SAAA,SAAA,QAAA,iBAAA;AAEA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,SAAS,EADU,IAAA;AAEnBC,EAAAA,WAAW,EAAE;AAACC,IAAAA,IAAI,EAAL,QAAA;AAAiBC,IAAAA,KAAK,EAAtB,GAAA;AAA6BC,IAAAA,GAAG,EAAE;AAAlC,GAFM;AAGnBC,EAAAA,WAAW,EAAE;AAACH,IAAAA,IAAI,EAAL,QAAA;AAAiBC,IAAAA,KAAK,EAAtB,CAAA;AAA2BC,IAAAA,GAAG,EAAE;AAAhC,GAHM;AAInBE,EAAAA,aAAa,EAAE;AAACJ,IAAAA,IAAI,EAAL,UAAA;AAAmBC,IAAAA,KAAK,EAAE;AAA1B;AAJI,CAArB;;IAOe,U;;;;;;;;;;;;;iCACA;AACX,UAAMI,OAAN,6EAAA;;AACAA,MAAAA,OAAO,CAAPA,MAAAA,GAAiB;AACf,oBADe,kIAAA;AAQf,wBARe,+GAAA;AAWf,oBAXe,yGAAA;AAkBf,0BAlBe,kGAAA;AAwBf,kCAAA;AAxBe,OAAjBA;AA8BA,aAAA,OAAA;AACD;;;oCAEc,M,EAAS;AACtB,sFAAA,MAAA;;AAEA,UAAMC,gBAAgB,GAAG,KAAzB,mBAAyB,EAAzB;AACAA,MAAAA,gBAAgB,CAAhBA,YAAAA,CAA8B;AAC5BC,QAAAA,UAAU,EAAE;AACVC,UAAAA,IAAI,EADM,CAAA;AAEVC,UAAAA,QAAQ,EAFE,eAAA;AAGVC,UAAAA,gBAAgB,EAAE;AAChBC,YAAAA,kBAAkB,EAAE;AAClBC,cAAAA,YAAY,EAAE;AADI,aADJ;AAIhBC,YAAAA,sBAAsB,EAAE;AACtBD,cAAAA,YAAY,EAAE;AADQ;AAJR;AAHR;AADgB,OAA9BN;AAcD;;;yBAEG,M,EAAS;AAAA,wBACmC,KAA9C,KADW;AAAA,UACL,SADK,eACL,SADK;AAAA,UACL,WADK,eACL,WADK;AAAA,UACoBH,WADpB,eACoBA,WADpB;AAGXW,MAAAA,MAAM,CAANA,QAAAA,qBACKA,MAAM,CADO,QAAlBA;AAEEhB,QAAAA,SAFgB,EAEhBA,SAFFgB;AAGEf,QAAAA,WAHgB,EAGhBA,WAHFe;AAIEX,QAAAA,WAAAA,EAAAA;AAJFW;;AAOA,2EAAA,MAAA;AACD;;;;EAnEY,S;;SAAA,U;AAsEfC,UAAU,CAAVA,SAAAA,GAAAA,YAAAA;AACAA,UAAU,CAAVA,YAAAA,GAAAA,YAAAA","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {PathLayer} from '@deck.gl/layers';\n\nconst defaultProps = {\n  fadeTrail: true,\n  trailLength: {type: 'number', value: 120, min: 0},\n  currentTime: {type: 'number', value: 0, min: 0},\n  getTimestamps: {type: 'accessor', value: null}\n};\n\nexport default class TripsLayer extends PathLayer {\n  getShaders() {\n    const shaders = super.getShaders();\n    shaders.inject = {\n      'vs:#decl': `\\\nuniform float trailLength;\nattribute float instanceTimestamps;\nattribute float instanceNextTimestamps;\nvarying float vTime;\n`,\n      // Timestamp of the vertex\n      'vs:#main-end': `\\\nvTime = instanceTimestamps + (instanceNextTimestamps - instanceTimestamps) * vPathPosition.y / vPathLength;\n`,\n      'fs:#decl': `\\\nuniform bool fadeTrail;\nuniform float trailLength;\nuniform float currentTime;\nvarying float vTime;\n`,\n      // Drop the segments outside of the time window\n      'fs:#main-start': `\\\nif(vTime > currentTime || (fadeTrail && (vTime < currentTime - trailLength))) {\n  discard;\n}\n`,\n      // Fade the color (currentTime - 100%, end of trail - 0%)\n      'fs:DECKGL_FILTER_COLOR': `\\\nif(fadeTrail) {\n  color.a *= 1.0 - (currentTime - vTime) / trailLength;\n}\n`\n    };\n    return shaders;\n  }\n\n  initializeState(params) {\n    super.initializeState(params);\n\n    const attributeManager = this.getAttributeManager();\n    attributeManager.addInstanced({\n      timestamps: {\n        size: 1,\n        accessor: 'getTimestamps',\n        shaderAttributes: {\n          instanceTimestamps: {\n            vertexOffset: 0\n          },\n          instanceNextTimestamps: {\n            vertexOffset: 1\n          }\n        }\n      }\n    });\n  }\n\n  draw(params) {\n    const {fadeTrail, trailLength, currentTime} = this.props;\n\n    params.uniforms = {\n      ...params.uniforms,\n      fadeTrail,\n      trailLength,\n      currentTime\n    };\n\n    super.draw(params);\n  }\n}\n\nTripsLayer.layerName = 'TripsLayer';\nTripsLayer.defaultProps = defaultProps;\n"]},"metadata":{},"sourceType":"module"}