{"ast":null,"code":"import { window, process, isBrowser } from '@probe.gl/env';\nexport function getHiResTimestamp() {\n  let timestamp;\n\n  if (isBrowser && 'performance' in window) {\n    var _window$performance, _window$performance$n;\n\n    timestamp = window === null || window === void 0 ? void 0 : (_window$performance = window.performance) === null || _window$performance === void 0 ? void 0 : (_window$performance$n = _window$performance.now) === null || _window$performance$n === void 0 ? void 0 : _window$performance$n.call(_window$performance);\n  } else if ('hrtime' in process) {\n    var _process$hrtime;\n\n    const timeParts = process === null || process === void 0 ? void 0 : (_process$hrtime = process.hrtime) === null || _process$hrtime === void 0 ? void 0 : _process$hrtime.call(process);\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}","map":{"version":3,"sources":["../../../src/utils/hi-res-timestamp.ts"],"names":["isBrowser","timestamp","window","timeParts","process","Date"],"mappings":"AAEA,SAAA,MAAA,EAAA,OAAA,EAAA,SAAA,QAAA,eAAA;AAGA,OAAO,SAAA,iBAAA,GAA6B;AAClC,MAAA,SAAA;;AACA,MAAIA,SAAS,IAAI,iBAAjB,MAAA,EAA0C;AAAA,QAAA,mBAAA,EAAA,qBAAA;;AACxCC,IAAAA,SAAS,GAAGC,MAAH,KAAA,IAAGA,IAAAA,MAAH,KAAA,KAAA,CAAGA,GAAH,KAAA,CAAGA,GAAH,CAAA,mBAAA,GAAGA,MAAM,CAAT,WAAA,MAAA,IAAA,IAAA,mBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,CAAA,qBAAA,GAAGA,mBAAAA,CAAH,GAAA,MAAA,IAAA,IAAA,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,qBAAAA,CAAAA,IAAAA,CAAZD,mBAAYC,CAAZD;AADF,GAAA,MAEO,IAAI,YAAJ,OAAA,EAAyB;AAAA,QAAA,eAAA;;AAE9B,UAAME,SAAS,GAAGC,OAAH,KAAA,IAAGA,IAAAA,OAAH,KAAA,KAAA,CAAGA,GAAH,KAAA,CAAGA,GAAH,CAAA,eAAA,GAAGA,OAAO,CAAV,MAAA,MAAA,IAAA,IAAA,eAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAGA,eAAAA,CAAAA,IAAAA,CAAlB,OAAkBA,CAAlB;AACAH,IAAAA,SAAS,GAAGE,SAAS,CAATA,CAAS,CAATA,GAAAA,IAAAA,GAAsBA,SAAS,CAATA,CAAS,CAATA,GAAlCF,GAAAA;AAHK,GAAA,MAIA;AACLA,IAAAA,SAAS,GAAGI,IAAI,CAAhBJ,GAAYI,EAAZJ;AACD;;AAED,SAAA,SAAA;AACD","sourcesContent":["// probe.gl, MIT license\n\nimport {window, process, isBrowser} from '@probe.gl/env';\n\n/** Get best timer available. */\nexport function getHiResTimestamp() {\n  let timestamp;\n  if (isBrowser && 'performance' in window) {\n    timestamp = window?.performance?.now?.();\n  } else if ('hrtime' in process) {\n    // @ts-ignore\n    const timeParts = process?.hrtime?.();\n    timestamp = timeParts[0] * 1000 + timeParts[1] / 1e6;\n  } else {\n    timestamp = Date.now();\n  }\n\n  return timestamp;\n}\n"]},"metadata":{},"sourceType":"module"}