{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport { createElement } from 'react';\nimport { View } from '@deck.gl/core';\nimport { inheritsFrom } from './inherits-from';\nimport evaluateChildren from './evaluate-children';\nexport default function positionChildrenUnderViews(_ref) {\n  var children = _ref.children,\n      deck = _ref.deck,\n      ContextProvider = _ref.ContextProvider;\n\n  var _ref2 = deck || {},\n      viewManager = _ref2.viewManager;\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  var views = {};\n  var defaultViewId = viewManager.views[0].id;\n\n  var _iterator = _createForOfIteratorHelper(children),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var child = _step.value;\n      var viewId = defaultViewId;\n      var viewChildren = child;\n\n      if (inheritsFrom(child.type, View)) {\n        viewId = child.props.id || defaultViewId;\n        viewChildren = child.props.children;\n      }\n\n      var viewport = viewManager.getViewport(viewId);\n      var viewState = viewManager.getViewState(viewId);\n\n      if (viewport) {\n        var x = viewport.x,\n            y = viewport.y,\n            width = viewport.width,\n            height = viewport.height;\n        viewChildren = evaluateChildren(viewChildren, {\n          x: x,\n          y: y,\n          width: width,\n          height: height,\n          viewport: viewport,\n          viewState: viewState\n        });\n\n        if (!views[viewId]) {\n          views[viewId] = {\n            viewport: viewport,\n            children: []\n          };\n        }\n\n        views[viewId].children.push(viewChildren);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return Object.keys(views).map(function (viewId) {\n    var _views$viewId = views[viewId],\n        viewport = _views$viewId.viewport,\n        viewChildren = _views$viewId.children;\n    var x = viewport.x,\n        y = viewport.y,\n        width = viewport.width,\n        height = viewport.height;\n    var style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width: width,\n      height: height\n    };\n    var key = \"view-\".concat(viewId);\n    var viewElement = createElement.apply(void 0, ['div', {\n      key: key,\n      id: key,\n      style: style\n    }].concat(_toConsumableArray(viewChildren)));\n\n    if (ContextProvider) {\n      var contextValue = {\n        viewport: viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: function onViewStateChange(params) {\n          params.viewId = viewId;\n\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {\n        key: key,\n        value: contextValue\n      }, viewElement);\n    }\n\n    return viewElement;\n  });\n}","map":{"version":3,"sources":["../../../src/utils/position-children-under-views.js"],"names":["ContextProvider","viewManager","deck","views","defaultViewId","viewId","viewChildren","inheritsFrom","child","viewport","viewState","height","evaluateChildren","x","y","width","children","style","position","left","top","key","viewElement","createElement","id","contextValue","container","eventManager","onViewStateChange","params","value"],"mappings":";;AAAA,SAAA,aAAA,QAAA,OAAA;AACA,SAAA,IAAA,QAAA,eAAA;AACA,SAAA,YAAA,QAAA,iBAAA;AACA,OAAA,gBAAA,MAAA,qBAAA;AAIA,eAAe,SAAA,0BAAA,CAAA,IAAA,EAAuE;AAAA,MAAnC,QAAmC,GAAA,IAAA,CAAnC,QAAmC;AAAA,MAAnC,IAAmC,GAAA,IAAA,CAAnC,IAAmC;AAAA,MAAlBA,eAAkB,GAAA,IAAA,CAAlBA,eAAkB;;AAAA,cAC9DE,IAAI,IAA1B,EADoF;AAAA,MAC7ED,WAD6E,SAC7EA,WAD6E;;AAGpF,MAAI,CAAA,WAAA,IAAgB,CAACA,WAAW,CAAXA,KAAAA,CAArB,MAAA,EAA+C;AAC7C,WAAA,EAAA;AACD;;AAED,MAAME,KAAK,GAAX,EAAA;AACA,MAAMC,aAAa,GAAGH,WAAW,CAAXA,KAAAA,CAAAA,CAAAA,EAAtB,EAAA;;AARoF,6CAWpF,QAXoF;AAAA;;AAAA;AAWpF,wDAA8B;AAAA,UAA9B,KAA8B;AAE5B,UAAII,MAAM,GAAV,aAAA;AACA,UAAIC,YAAY,GAAhB,KAAA;;AAEA,UAAIC,YAAY,CAACC,KAAK,CAAN,IAAA,EAAhB,IAAgB,CAAhB,EAAoC;AAClCH,QAAAA,MAAM,GAAGG,KAAK,CAALA,KAAAA,CAAAA,EAAAA,IAATH,aAAAA;AACAC,QAAAA,YAAY,GAAGE,KAAK,CAALA,KAAAA,CAAfF,QAAAA;AACD;;AAED,UAAMG,QAAQ,GAAGR,WAAW,CAAXA,WAAAA,CAAjB,MAAiBA,CAAjB;AACA,UAAMS,SAAS,GAAGT,WAAW,CAAXA,YAAAA,CAAlB,MAAkBA,CAAlB;;AAGA,UAAA,QAAA,EAAc;AAAA,YACN,CADM,GACZ,QADY,CACN,CADM;AAAA,YACN,CADM,GACZ,QADY,CACN,CADM;AAAA,YACN,KADM,GACZ,QADY,CACN,KADM;AAAA,YACQU,MADR,GACZ,QADY,CACQA,MADR;AAGZL,QAAAA,YAAY,GAAGM,gBAAgB,CAAA,YAAA,EAAe;AAC5CC,UAAAA,CAD4C,EAC5CA,CAD4C;AAE5CC,UAAAA,CAF4C,EAE5CA,CAF4C;AAG5CC,UAAAA,KAH4C,EAG5CA,KAH4C;AAI5CJ,UAAAA,MAJ4C,EAI5CA,MAJ4C;AAK5CF,UAAAA,QAL4C,EAK5CA,QAL4C;AAM5CC,UAAAA,SAAAA,EAAAA;AAN4C,SAAf,CAA/BJ;;AASA,YAAI,CAACH,KAAK,CAAV,MAAU,CAAV,EAAoB;AAClBA,UAAAA,KAAK,CAALA,MAAK,CAALA,GAAgB;AACdM,YAAAA,QADc,EACdA,QADc;AAEdO,YAAAA,QAAQ,EAAE;AAFI,WAAhBb;AAID;;AACDA,QAAAA,KAAK,CAALA,MAAK,CAALA,CAAAA,QAAAA,CAAAA,IAAAA,CAAAA,YAAAA;AACD;AACF;AA7CmF;AAAA;AAAA;AAAA;AAAA;;AAgDpF,SAAO,MAAM,CAAN,IAAA,CAAA,KAAA,EAAA,GAAA,CAAuBE,UAAAA,MAAM,EAAI;AAAA,wBACKF,KAAK,CAAhD,MAAgD,CADV;AAAA,QAChC,QADgC,iBAChC,QADgC;AAAA,QACXG,YADW,iBACrBU,QADqB;AAAA,QAEhC,CAFgC,GAEtC,QAFsC,CAEhC,CAFgC;AAAA,QAEhC,CAFgC,GAEtC,QAFsC,CAEhC,CAFgC;AAAA,QAEhC,KAFgC,GAEtC,QAFsC,CAEhC,KAFgC;AAAA,QAElBL,MAFkB,GAEtC,QAFsC,CAElBA,MAFkB;AAGtC,QAAMM,KAAK,GAAG;AACZC,MAAAA,QAAQ,EADI,UAAA;AAEZC,MAAAA,IAAI,EAFQ,CAAA;AAGZC,MAAAA,GAAG,EAHS,CAAA;AAIZL,MAAAA,KAJY,EAIZA,KAJY;AAKZJ,MAAAA,MAAAA,EAAAA;AALY,KAAd;AAQA,QAAMU,GAAG,GAAA,QAAA,MAAA,CAAT,MAAS,CAAT;AAGA,QAAMC,WAAW,GAAGC,aAAa,MAAbA,UAAa,KAAbA,EAAqB;AAACF,MAAAA,GAAD,EAACA,GAAD;AAAMG,MAAAA,EAAE,EAAR,GAAA;AAAeP,MAAAA,KAAAA,EAAAA;AAAf,KAArBM,4BAApB,YAAoBA,GAApB;;AAEA,QAAA,eAAA,EAAqB;AACnB,UAAME,YAAY,GAAG;AACnBhB,QAAAA,QADmB,EACnBA,QADmB;AAEnBiB,QAAAA,SAAS,EAAExB,IAAI,CAAJA,MAAAA,CAFQ,YAAA;AAGnByB,QAAAA,YAAY,EAAEzB,IAAI,CAHC,YAAA;AAInB0B,QAAAA,iBAAiB,EAAEC,2BAAAA,MAAM,EAAI;AAC3BA,UAAAA,MAAM,CAANA,MAAAA,GAAAA,MAAAA;;AACA3B,UAAAA,IAAI,CAAJA,kBAAAA,CAAAA,MAAAA;AACD;AAPkB,OAArB;AASA,aAAOqB,aAAa,CAAA,eAAA,EAAkB;AAACF,QAAAA,GAAD,EAACA,GAAD;AAAMS,QAAAA,KAAK,EAAEL;AAAb,OAAlB,EAApB,WAAoB,CAApB;AACD;;AAED,WAAA,WAAA;AA7BF,GAAO,CAAP;AA+BD","sourcesContent":["import {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren from './evaluate-children';\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews({children, deck, ContextProvider}) {\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views = {};\n  const defaultViewId = viewManager.views[0].id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId);\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    if (ContextProvider) {\n      const contextValue = {\n        viewport,\n        container: deck.canvas.offsetParent,\n        eventManager: deck.eventManager,\n        onViewStateChange: params => {\n          params.viewId = viewId;\n          deck._onViewStateChange(params);\n        }\n      };\n      return createElement(ContextProvider, {key, value: contextValue}, viewElement);\n    }\n\n    return viewElement;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}