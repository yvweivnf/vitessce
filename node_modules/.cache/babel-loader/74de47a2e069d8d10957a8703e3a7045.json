{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { isBrowser, assert, resolvePath } from '@loaders.gl/loader-utils';\nimport { fs, toBuffer } from '@loaders.gl/loader-utils';\nexport function writeFile(_x, _x2, _x3) {\n  return _writeFile.apply(this, arguments);\n}\n\nfunction _writeFile() {\n  _writeFile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(filePath, arrayBufferOrString, options) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            filePath = resolvePath(filePath);\n\n            if (isBrowser) {\n              _context.next = 4;\n              break;\n            }\n\n            _context.next = 4;\n            return fs.writeFile(filePath, toBuffer(arrayBufferOrString), {\n              flag: 'w'\n            });\n\n          case 4:\n            assert(false);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _writeFile.apply(this, arguments);\n}\n\nexport function writeFileSync(filePath, arrayBufferOrString, options) {\n  filePath = resolvePath(filePath);\n\n  if (!isBrowser) {\n    fs.writeFileSync(filePath, toBuffer(arrayBufferOrString), {\n      flag: 'w'\n    });\n  }\n\n  assert(false);\n}","map":{"version":3,"sources":["../../../../src/lib/fetch/write-file.ts"],"names":["filePath","resolvePath","toBuffer","flag","assert","fs"],"mappings":";;AACA,SAAA,SAAA,EAAA,MAAA,EAAA,WAAA,QAAA,0BAAA;AACA,SAAA,EAAA,EAAA,QAAA,QAAA,0BAAA;AAEA,gBAAO,SAAP;AAAA;AAAA;;;wEAAO,iBAAA,QAAA,EAAA,mBAAA,EAAA,OAAA;AAAA;AAAA;AAAA;AAAA;AAKLA,YAAAA,QAAQ,GAAGC,WAAW,CAAtBD,QAAsB,CAAtBA;;AALK,gBAML,SANK;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAOG,EAAE,CAAF,SAAA,CAAA,QAAA,EAAuBE,QAAQ,CAA/B,mBAA+B,CAA/B,EAAsD;AAACC,cAAAA,IAAI,EAAE;AAAP,aAAtD,CAPH;;AAAA;AASLC,YAAAA,MAAM,CAANA,KAAM,CAANA;;AATK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAYP,OAAO,SAAA,aAAA,CAAA,QAAA,EAAA,mBAAA,EAAA,OAAA,EAIC;AACNJ,EAAAA,QAAQ,GAAGC,WAAW,CAAtBD,QAAsB,CAAtBA;;AACA,MAAI,CAAJ,SAAA,EAAgB;AACdK,IAAAA,EAAE,CAAFA,aAAAA,CAAAA,QAAAA,EAA2BH,QAAQ,CAAnCG,mBAAmC,CAAnCA,EAA0D;AAACF,MAAAA,IAAI,EAAE;AAAP,KAA1DE;AACD;;AACDD,EAAAA,MAAM,CAANA,KAAM,CAANA;AACD","sourcesContent":["// file write\nimport {isBrowser, assert, resolvePath} from '@loaders.gl/loader-utils';\nimport {fs, toBuffer} from '@loaders.gl/loader-utils';\n\nexport async function writeFile(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): Promise<void> {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    await fs.writeFile(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n\nexport function writeFileSync(\n  filePath: string,\n  arrayBufferOrString: ArrayBuffer | string,\n  options?\n): void {\n  filePath = resolvePath(filePath);\n  if (!isBrowser) {\n    fs.writeFileSync(filePath, toBuffer(arrayBufferOrString), {flag: 'w'});\n  }\n  assert(false);\n}\n"]},"metadata":{},"sourceType":"module"}