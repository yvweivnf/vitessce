{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useMemo}from'react';import ScatterplotSubscriber,{SCATTERPLOT_DATA_TYPES}from'../scatterplot/ScatterplotSubscriber';import{useLoaders,useCoordination}from'../../app/state/hooks';import{useReady,useUrls}from'../hooks';import{useCellsData}from'../data-hooks';import{COMPONENT_COORDINATION_TYPES}from'../../app/state/coordination';import EmbeddingScatterplotOptions from'./EmbeddingScatterplotOptions';import{Component}from'../../app/constants';/**\n   * A subscriber component for the cell mapping scatterplot.\n   * @param {object} props\n   * @param {number} props.uuid The unique identifier for this component.\n   * @param {string} props.theme The current theme name.\n   * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n   * scopes.\n   * @param {boolean} props.disableTooltip Should the tooltip be disabled?\n   * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n   * to call when the component has been removed from the grid.\n   * @param {string} props.title An override value for the component title.\n   * @param {number} props.averageFillDensity Override the average fill density calculation\n   * when using dynamic opacity mode.\n   * @param {boolean} props.enableEmbeddingTypeSelection Should\n   * the dropdown to select an embedding type be displayed? By default, false.\n   */export default function EmbeddingScatterplotSubscriber(props){var coordinationScopes=props.coordinationScopes,titleOverride=props.title,_props$enableEmbeddin=props.enableEmbeddingTypeSelection,enableEmbeddingTypeSelection=_props$enableEmbeddin===void 0?true:_props$enableEmbeddin;// Get \"props\" from the coordination space.\nvar _useCoordination=useCoordination(COMPONENT_COORDINATION_TYPES[Component.SCATTERPLOT],coordinationScopes),_useCoordination2=_slicedToArray(_useCoordination,2),_useCoordination2$=_useCoordination2[0],dataset=_useCoordination2$.dataset,embeddingType=_useCoordination2$.embeddingType,setEmbeddingType=_useCoordination2[1].setEmbeddingType;// Get data from loaders using the data hooks.\nvar _useUrls=useUrls(),_useUrls2=_slicedToArray(_useUrls,3),urls=_useUrls2[0],addUrl=_useUrls2[1],resetUrls=_useUrls2[2];var loaders=useLoaders();var _useReady=useReady(SCATTERPLOT_DATA_TYPES),_useReady2=_slicedToArray(_useReady,4),isReady=_useReady2[0],setItemIsReady=_useReady2[1],setItemIsNotReady=_useReady2[2],resetReadyItems=_useReady2[3];var cellsData=useCellsData(loaders,dataset,setItemIsReady,addUrl,true);var availableEmbeddingTypes=useMemo(function(){var cellObjs=Object.values((cellsData===null||cellsData===void 0?void 0:cellsData[0])||{});if(cellObjs.length!==0){return Object.keys(cellObjs[0].mappings);}return null;},[cellsData]);var customOptions=/*#__PURE__*/React.createElement(EmbeddingScatterplotOptions,{mappingSelectEnabled:enableEmbeddingTypeSelection&&(availableEmbeddingTypes===null||availableEmbeddingTypes===void 0?void 0:availableEmbeddingTypes.length)>1,mappings:availableEmbeddingTypes,selectedMapping:embeddingType,setSelectedMapping:setEmbeddingType});var defaultTitle=embeddingType?\"Scatterplot (\".concat(embeddingType,\")\"):'Scatterplot';var title=titleOverride||defaultTitle;return/*#__PURE__*/React.createElement(ScatterplotSubscriber,Object.assign({},props,{loaders:loaders,cellsData:cellsData,useReadyData:[isReady,setItemIsReady,setItemIsNotReady,resetReadyItems],urlsData:[urls,addUrl,resetUrls],title:title,mapping:embeddingType,customOptions:customOptions,hideTools:!embeddingType,cellsEmptyMessage:\"Select an embedding type in the plot settings.\"}));}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/embedding-scatterplot/EmbeddingScatterplotSubscriber.js"],"names":["React","useMemo","ScatterplotSubscriber","SCATTERPLOT_DATA_TYPES","useLoaders","useCoordination","useReady","useUrls","useCellsData","COMPONENT_COORDINATION_TYPES","EmbeddingScatterplotOptions","Component","EmbeddingScatterplotSubscriber","props","coordinationScopes","titleOverride","title","enableEmbeddingTypeSelection","SCATTERPLOT","dataset","embeddingType","setEmbeddingType","urls","addUrl","resetUrls","loaders","isReady","setItemIsReady","setItemIsNotReady","resetReadyItems","cellsData","availableEmbeddingTypes","cellObjs","Object","values","length","keys","mappings","customOptions","defaultTitle"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react';\nimport ScatterplotSubscriber, {\n  SCATTERPLOT_DATA_TYPES,\n} from '../scatterplot/ScatterplotSubscriber';\nimport {\n  useLoaders,\n  useCoordination,\n} from '../../app/state/hooks';\nimport { useReady, useUrls } from '../hooks';\nimport { useCellsData } from '../data-hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport EmbeddingScatterplotOptions from './EmbeddingScatterplotOptions';\nimport { Component } from '../../app/constants';\n\n/**\n   * A subscriber component for the cell mapping scatterplot.\n   * @param {object} props\n   * @param {number} props.uuid The unique identifier for this component.\n   * @param {string} props.theme The current theme name.\n   * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n   * scopes.\n   * @param {boolean} props.disableTooltip Should the tooltip be disabled?\n   * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n   * to call when the component has been removed from the grid.\n   * @param {string} props.title An override value for the component title.\n   * @param {number} props.averageFillDensity Override the average fill density calculation\n   * when using dynamic opacity mode.\n   * @param {boolean} props.enableEmbeddingTypeSelection Should\n   * the dropdown to select an embedding type be displayed? By default, false.\n   */\nexport default function EmbeddingScatterplotSubscriber(props) {\n  const {\n    coordinationScopes,\n    title: titleOverride,\n    enableEmbeddingTypeSelection = true,\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [\n    { dataset, embeddingType },\n    { setEmbeddingType },\n  ] = useCoordination(\n    COMPONENT_COORDINATION_TYPES[Component.SCATTERPLOT],\n    coordinationScopes,\n  );\n\n  // Get data from loaders using the data hooks.\n  const [urls, addUrl, resetUrls] = useUrls();\n  const loaders = useLoaders();\n  const [isReady, setItemIsReady, setItemIsNotReady, resetReadyItems] = useReady(\n    SCATTERPLOT_DATA_TYPES,\n  );\n  const cellsData = useCellsData(loaders, dataset, setItemIsReady, addUrl, true);\n\n  const availableEmbeddingTypes = useMemo(() => {\n    const cellObjs = Object.values(cellsData?.[0] || {});\n    if (cellObjs.length !== 0) {\n      return Object.keys(cellObjs[0].mappings);\n    }\n    return null;\n  }, [cellsData]);\n\n  const customOptions = (\n    <EmbeddingScatterplotOptions\n      mappingSelectEnabled={enableEmbeddingTypeSelection && availableEmbeddingTypes?.length > 1}\n      mappings={availableEmbeddingTypes}\n      selectedMapping={embeddingType}\n      setSelectedMapping={setEmbeddingType}\n    />\n  );\n\n  const defaultTitle = embeddingType ? `Scatterplot (${embeddingType})` : 'Scatterplot';\n  const title = titleOverride || defaultTitle;\n\n  return (\n    <ScatterplotSubscriber\n      {...props}\n      loaders={loaders}\n      cellsData={cellsData}\n      useReadyData={[isReady, setItemIsReady, setItemIsNotReady, resetReadyItems]}\n      urlsData={[urls, addUrl, resetUrls]}\n      title={title}\n      mapping={embeddingType}\n      customOptions={customOptions}\n      hideTools={!embeddingType}\n      cellsEmptyMessage=\"Select an embedding type in the plot settings.\"\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}