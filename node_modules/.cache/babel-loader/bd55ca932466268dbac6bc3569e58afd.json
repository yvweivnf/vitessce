{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { deepEqual } from '../utils/deep-equal';\nimport { default as LightingEffect } from '../effects/lighting/lighting-effect';\nvar DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\nvar EffectManager = /*#__PURE__*/function () {\n  function EffectManager() {\n    _classCallCheck(this, EffectManager);\n\n    this.effects = [];\n    this._internalEffects = [];\n    this._needsRedraw = 'Initial render';\n    this.setEffects();\n  }\n\n  _createClass(EffectManager, [{\n    key: \"setProps\",\n    value: function setProps(props) {\n      if ('effects' in props) {\n        if (props.effects.length !== this.effects.length || !deepEqual(props.effects, this.effects)) {\n          this.setEffects(props.effects);\n          this._needsRedraw = 'effects changed';\n        }\n      }\n    }\n  }, {\n    key: \"needsRedraw\",\n    value: function needsRedraw() {\n      var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n        clearRedrawFlags: false\n      };\n      var redraw = this._needsRedraw;\n\n      if (opts.clearRedrawFlags) {\n        this._needsRedraw = false;\n      }\n\n      return redraw;\n    }\n  }, {\n    key: \"getEffects\",\n    value: function getEffects() {\n      return this._internalEffects;\n    }\n  }, {\n    key: \"finalize\",\n    value: function finalize() {\n      this.cleanup();\n    }\n  }, {\n    key: \"setEffects\",\n    value: function setEffects() {\n      var effects = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      this.cleanup();\n      this.effects = effects;\n\n      this._createInternalEffects();\n    }\n  }, {\n    key: \"cleanup\",\n    value: function cleanup() {\n      var _iterator = _createForOfIteratorHelper(this.effects),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var effect = _step.value;\n          effect.cleanup();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var _iterator2 = _createForOfIteratorHelper(this._internalEffects),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var _effect = _step2.value;\n\n          _effect.cleanup();\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      this.effects.length = 0;\n      this._internalEffects.length = 0;\n    }\n  }, {\n    key: \"_createInternalEffects\",\n    value: function _createInternalEffects() {\n      this._internalEffects = this.effects.slice();\n\n      if (!this.effects.some(function (effect) {\n        return effect instanceof LightingEffect;\n      })) {\n        this._internalEffects.push(DEFAULT_LIGHTING_EFFECT);\n      }\n    }\n  }]);\n\n  return EffectManager;\n}();\n\nexport { EffectManager as default };","map":{"version":3,"sources":["../../../src/lib/effect-manager.js"],"names":["default","DEFAULT_LIGHTING_EFFECT","constructor","props","deepEqual","opts","clearRedrawFlags","redraw","effects","effect"],"mappings":";;;AAAA,SAAA,SAAA,QAAA,qBAAA;AACA,SAAQA,OAAO,IAAf,cAAA,QAAA,qCAAA;AAEA,IAAMC,uBAAuB,GAAG,IAAhC,cAAgC,EAAhC;;IAEe,a;AACbC,2BAAc;AAAA;;AACZ,SAAA,OAAA,GAAA,EAAA;AACA,SAAA,gBAAA,GAAA,EAAA;AACA,SAAA,YAAA,GAAA,gBAAA;AACA,SAAA,UAAA;AACD;;;;6BAEO,K,EAAQ;AACd,UAAI,aAAJ,KAAA,EAAwB;AACtB,YAAIC,KAAK,CAALA,OAAAA,CAAAA,MAAAA,KAAyB,KAAA,OAAA,CAAzBA,MAAAA,IAAgD,CAACC,SAAS,CAACD,KAAK,CAAN,OAAA,EAAgB,KAA9E,OAA8D,CAA9D,EAA6F;AAC3F,eAAA,UAAA,CAAgBA,KAAK,CAArB,OAAA;AACA,eAAA,YAAA,GAAA,iBAAA;AACD;AACF;AACF;;;kCAE6C;AAAA,UAAlCE,IAAkC,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAA3B;AAACC,QAAAA,gBAAgB,EAAE;AAAnB,OAA2B;AAC5C,UAAMC,MAAM,GAAG,KAAf,YAAA;;AACA,UAAIF,IAAI,CAAR,gBAAA,EAA2B;AACzB,aAAA,YAAA,GAAA,KAAA;AACD;;AACD,aAAA,MAAA;AACD;;;iCAEY;AACX,aAAO,KAAP,gBAAA;AACD;;;+BAEU;AACT,WAAA,OAAA;AACD;;;iCAGwB;AAAA,UAAdG,OAAc,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AACvB,WAAA,OAAA;AACA,WAAA,OAAA,GAAA,OAAA;;AACA,WAAA,sBAAA;AACD;;;8BAES;AAAA,iDACa,KAArB,OADQ;AAAA;;AAAA;AACR,4DAAmC;AAAA,cAAnC,MAAmC;AACjCC,UAAAA,MAAM,CAANA,OAAAA;AACD;AAHO;AAAA;AAAA;AAAA;AAAA;;AAAA,kDAKa,KAArB,gBALQ;AAAA;;AAAA;AAKR,+DAA4C;AAAA,cAA5C,OAA4C;;AAC1CA,UAAAA,OAAM,CAANA,OAAAA;AACD;AAPO;AAAA;AAAA;AAAA;AAAA;;AAQR,WAAA,OAAA,CAAA,MAAA,GAAA,CAAA;AACA,WAAA,gBAAA,CAAA,MAAA,GAAA,CAAA;AACD;;;6CAEwB;AACvB,WAAA,gBAAA,GAAwB,KAAA,OAAA,CAAxB,KAAwB,EAAxB;;AACA,UAAI,CAAC,KAAA,OAAA,CAAA,IAAA,CAAkBA,UAAAA,MAAM;AAAA,eAAIA,MAAM,YAAvC,cAA6B;AAAA,OAAxB,CAAL,EAAoE;AAClE,aAAA,gBAAA,CAAA,IAAA,CAAA,uBAAA;AACD;AACF;;;;;;SAzDY,a","sourcesContent":["import {deepEqual} from '../utils/deep-equal';\nimport {default as LightingEffect} from '../effects/lighting/lighting-effect';\n\nconst DEFAULT_LIGHTING_EFFECT = new LightingEffect();\n\nexport default class EffectManager {\n  constructor() {\n    this.effects = [];\n    this._internalEffects = [];\n    this._needsRedraw = 'Initial render';\n    this.setEffects();\n  }\n\n  setProps(props) {\n    if ('effects' in props) {\n      if (props.effects.length !== this.effects.length || !deepEqual(props.effects, this.effects)) {\n        this.setEffects(props.effects);\n        this._needsRedraw = 'effects changed';\n      }\n    }\n  }\n\n  needsRedraw(opts = {clearRedrawFlags: false}) {\n    const redraw = this._needsRedraw;\n    if (opts.clearRedrawFlags) {\n      this._needsRedraw = false;\n    }\n    return redraw;\n  }\n\n  getEffects() {\n    return this._internalEffects;\n  }\n\n  finalize() {\n    this.cleanup();\n  }\n\n  // Private\n  setEffects(effects = []) {\n    this.cleanup();\n    this.effects = effects;\n    this._createInternalEffects();\n  }\n\n  cleanup() {\n    for (const effect of this.effects) {\n      effect.cleanup();\n    }\n\n    for (const effect of this._internalEffects) {\n      effect.cleanup();\n    }\n    this.effects.length = 0;\n    this._internalEffects.length = 0;\n  }\n\n  _createInternalEffects() {\n    this._internalEffects = this.effects.slice();\n    if (!this.effects.some(effect => effect instanceof LightingEffect)) {\n      this._internalEffects.push(DEFAULT_LIGHTING_EFFECT);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}