{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\sets\\\\Tree.js\";\nimport React from 'react';\nimport RcTree from 'rc-tree';\nimport classNames from 'classnames';\n/**\n * A helper component around the rc-tree\n * library's tree component, to set\n * default props.\n */\n\nconst Tree = React.forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    showIcon,\n    blockNode,\n    children,\n    checkable\n  } = props;\n  return /*#__PURE__*/React.createElement(RcTree, Object.assign({\n    itemHeight: 32,\n    ref: ref\n  }, props, {\n    className: classNames(className, {\n      [`${prefixCls}-icon-hide`]: !showIcon,\n      [`${prefixCls}-block-node`]: blockNode\n    }),\n    checkable: checkable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `${prefixCls}-checkbox-inner`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 30\n      }\n    }) : checkable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }), children);\n});\nTree.defaultProps = {\n  virtual: false,\n  checkable: false,\n  showIcon: false,\n  blockNode: true,\n  prefixCls: 'rc-tree'\n};\nexport default Tree;","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/sets/Tree.js"],"names":["React","RcTree","classNames","Tree","forwardRef","props","ref","prefixCls","className","showIcon","blockNode","children","checkable","defaultProps","virtual"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,SAAnB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA;;;;;;AAKA,MAAMC,IAAI,GAAGH,KAAK,CAACI,UAAN,CAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC5C,QAAM;AACJC,IAAAA,SADI;AAEJC,IAAAA,SAFI;AAGJC,IAAAA,QAHI;AAIJC,IAAAA,SAJI;AAKJC,IAAAA,QALI;AAMJC,IAAAA;AANI,MAOFP,KAPJ;AAQA,sBACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE,EADd;AAEE,IAAA,GAAG,EAAEC;AAFP,KAGMD,KAHN;AAIE,IAAA,SAAS,EAAEH,UAAU,CAACM,SAAD,EAAY;AAC/B,OAAE,GAAED,SAAU,YAAd,GAA4B,CAACE,QADE;AAE/B,OAAE,GAAEF,SAAU,aAAd,GAA6BG;AAFE,KAAZ,CAJvB;AAQE,IAAA,SAAS,EAAEE,SAAS,gBAAG;AAAM,MAAA,SAAS,EAAG,GAAEL,SAAU,iBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAwDK,SAR9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAUGD,QAVH,CADF;AAcD,CAvBY,CAAb;AAyBAR,IAAI,CAACU,YAAL,GAAoB;AAClBC,EAAAA,OAAO,EAAE,KADS;AAElBF,EAAAA,SAAS,EAAE,KAFO;AAGlBH,EAAAA,QAAQ,EAAE,KAHQ;AAIlBC,EAAAA,SAAS,EAAE,IAJO;AAKlBH,EAAAA,SAAS,EAAE;AALO,CAApB;AAQA,eAAeJ,IAAf","sourcesContent":["import React from 'react';\nimport RcTree from 'rc-tree';\nimport classNames from 'classnames';\n\n/**\n * A helper component around the rc-tree\n * library's tree component, to set\n * default props.\n */\nconst Tree = React.forwardRef((props, ref) => {\n  const {\n    prefixCls,\n    className,\n    showIcon,\n    blockNode,\n    children,\n    checkable,\n  } = props;\n  return (\n    <RcTree\n      itemHeight={32}\n      ref={ref}\n      {...props}\n      className={classNames(className, {\n        [`${prefixCls}-icon-hide`]: !showIcon,\n        [`${prefixCls}-block-node`]: blockNode,\n      })}\n      checkable={checkable ? <span className={`${prefixCls}-checkbox-inner`} /> : checkable}\n    >\n      {children}\n    </RcTree>\n  );\n});\n\nTree.defaultProps = {\n  virtual: false,\n  checkable: false,\n  showIcon: false,\n  blockNode: true,\n  prefixCls: 'rc-tree',\n};\n\nexport default Tree;\n"]},"metadata":{},"sourceType":"module"}