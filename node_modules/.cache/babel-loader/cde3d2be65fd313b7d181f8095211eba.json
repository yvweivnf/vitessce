{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{useCoordination,useWarning}from'../../app/state/hooks';import{COMPONENT_COORDINATION_TYPES}from'../../app/state/coordination';import TitleInfo from'../TitleInfo';import Status from'./Status';/**\n * A subscriber component for the status component,\n * which renders hovered cell/gene/molecule information\n * as well as schema validation and data loading errors.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */export default function StatusSubscriber(props){var coordinationScopes=props.coordinationScopes,removeGridComponent=props.removeGridComponent,theme=props.theme,_props$title=props.title,title=_props$title===void 0?'Status':_props$title;// Get \"props\" from the coordination space.\nvar _useCoordination=useCoordination(COMPONENT_COORDINATION_TYPES.status,coordinationScopes),_useCoordination2=_slicedToArray(_useCoordination,1),_useCoordination2$=_useCoordination2[0],cellHighlight=_useCoordination2$.obsHighlight,geneHighlight=_useCoordination2$.featureHighlight,moleculeHighlight=_useCoordination2$.moleculeHighlight;var warn=useWarning();var infos=[].concat(_toConsumableArray(cellHighlight?[\"Hovered cell \".concat(cellHighlight)]:[]),_toConsumableArray(geneHighlight?[\"Hovered gene \".concat(geneHighlight)]:[]),_toConsumableArray(moleculeHighlight?[\"Hovered gene \".concat(moleculeHighlight)]:[]));var info=infos.join('; ');return/*#__PURE__*/React.createElement(TitleInfo,{title:title,theme:theme,removeGridComponent:removeGridComponent,isScroll:true,isReady:true},/*#__PURE__*/React.createElement(Status,{warn:warn,info:info}));}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/status/StatusSubscriber.js"],"names":["React","useCoordination","useWarning","COMPONENT_COORDINATION_TYPES","TitleInfo","Status","StatusSubscriber","props","coordinationScopes","removeGridComponent","theme","title","status","cellHighlight","obsHighlight","geneHighlight","featureHighlight","moleculeHighlight","warn","infos","info","join"],"mappings":"wXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,eAAT,CAA0BC,UAA1B,KAA4C,uBAA5C,CACA,OAASC,4BAAT,KAA6C,8BAA7C,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CAEA;;;;;;;;;;;GAYA,cAAe,SAASC,CAAAA,gBAAT,CAA0BC,KAA1B,CAAiC,IAE5CC,CAAAA,kBAF4C,CAM1CD,KAN0C,CAE5CC,kBAF4C,CAG5CC,mBAH4C,CAM1CF,KAN0C,CAG5CE,mBAH4C,CAI5CC,KAJ4C,CAM1CH,KAN0C,CAI5CG,KAJ4C,cAM1CH,KAN0C,CAK5CI,KAL4C,CAK5CA,KAL4C,uBAKpC,QALoC,cAQ9C;AAR8C,qBAazCV,eAAe,CAACE,4BAA4B,CAACS,MAA9B,CAAsCJ,kBAAtC,CAb0B,8FAU9BK,aAV8B,oBAU5CC,YAV4C,CAW1BC,aAX0B,oBAW5CC,gBAX4C,CAY5CC,iBAZ4C,oBAY5CA,iBAZ4C,CAe9C,GAAMC,CAAAA,IAAI,CAAGhB,UAAU,EAAvB,CAEA,GAAMiB,CAAAA,KAAK,8BACLN,aAAa,CACb,wBAAiBA,aAAjB,EADa,CAEb,EAHK,qBAKLE,aAAa,CACb,wBAAiBA,aAAjB,EADa,CAEb,EAPK,qBASLE,iBAAiB,CACjB,wBAAiBA,iBAAjB,EADiB,CAEjB,EAXK,EAAX,CAcA,GAAMG,CAAAA,IAAI,CAAGD,KAAK,CAACE,IAAN,CAAW,IAAX,CAAb,CAEA,mBACE,oBAAC,SAAD,EACE,KAAK,CAAEV,KADT,CAEE,KAAK,CAAED,KAFT,CAGE,mBAAmB,CAAED,mBAHvB,CAIE,QAAQ,KAJV,CAKE,OAAO,KALT,eAOE,oBAAC,MAAD,EAAQ,IAAI,CAAES,IAAd,CAAoB,IAAI,CAAEE,IAA1B,EAPF,CADF,CAWD","sourcesContent":["import React from 'react';\nimport { useCoordination, useWarning } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport TitleInfo from '../TitleInfo';\nimport Status from './Status';\n\n/**\n * A subscriber component for the status component,\n * which renders hovered cell/gene/molecule information\n * as well as schema validation and data loading errors.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n */\nexport default function StatusSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Status',\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [{\n    obsHighlight: cellHighlight,\n    featureHighlight: geneHighlight,\n    moleculeHighlight,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.status, coordinationScopes);\n\n  const warn = useWarning();\n\n  const infos = [\n    ...(cellHighlight\n      ? [`Hovered cell ${cellHighlight}`]\n      : []\n    ),\n    ...(geneHighlight\n      ? [`Hovered gene ${geneHighlight}`]\n      : []\n    ),\n    ...(moleculeHighlight\n      ? [`Hovered gene ${moleculeHighlight}`]\n      : []\n    ),\n  ];\n  const info = infos.join('; ');\n\n  return (\n    <TitleInfo\n      title={title}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isScroll\n      isReady\n    >\n      <Status warn={warn} info={info} />\n    </TitleInfo>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}