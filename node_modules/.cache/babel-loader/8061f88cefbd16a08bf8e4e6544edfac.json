{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { VERSION, isBrowser } from '../utils/globals';\nimport LocalStorage from '../utils/local-storage';\nimport { formatImage, formatTime, leftPad } from '../utils/formatters';\nimport { addColor } from '../utils/color';\nimport { autobind } from '../utils/autobind';\nimport _assert from '../utils/assert';\nimport getHiResTimestamp from '../utils/hi-res-timestamp';\nvar originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\nvar DEFAULT_SETTINGS = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {}\n\nvar cache = {};\nvar ONCE = {\n  once: true\n};\n\nfunction getTableHeader(table) {\n  for (var key in table) {\n    for (var title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n\n  return 'empty';\n}\n\nvar Log = /*#__PURE__*/function () {\n  function Log() {\n    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      id: ''\n    },\n        id = _ref.id;\n\n    _classCallCheck(this, Log);\n\n    this.id = id;\n    this.VERSION = VERSION;\n    this._startTs = getHiResTimestamp();\n    this._deltaTs = getHiResTimestamp();\n    this.LOG_THROTTLE_TIMEOUT = 0;\n    this._storage = new LocalStorage(\"__probe-\".concat(this.id, \"__\"), DEFAULT_SETTINGS);\n    this.userData = {};\n    this.timeStamp(\"\".concat(this.id, \" started\"));\n    autobind(this);\n    Object.seal(this);\n  }\n\n  _createClass(Log, [{\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this._storage.config.enabled;\n    }\n  }, {\n    key: \"getLevel\",\n    value: function getLevel() {\n      return this._storage.config.level;\n    }\n  }, {\n    key: \"getTotal\",\n    value: function getTotal() {\n      return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n    }\n  }, {\n    key: \"getDelta\",\n    value: function getDelta() {\n      return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n    }\n  }, {\n    key: \"getPriority\",\n    value: function getPriority() {\n      return this.level;\n    }\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n      this._storage.updateConfiguration({\n        enabled: enabled\n      });\n\n      return this;\n    }\n  }, {\n    key: \"setLevel\",\n    value: function setLevel(level) {\n      this._storage.updateConfiguration({\n        level: level\n      });\n\n      return this;\n    }\n  }, {\n    key: \"assert\",\n    value: function assert(condition, message) {\n      _assert(condition, message);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn(message) {\n      return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n    }\n  }, {\n    key: \"error\",\n    value: function error(message) {\n      return this._getLogFunction(0, message, originalConsole.error, arguments);\n    }\n  }, {\n    key: \"deprecated\",\n    value: function deprecated(oldUsage, newUsage) {\n      return this.warn(\"`\".concat(oldUsage, \"` is deprecated and will be removed in a later version. Use `\").concat(newUsage, \"` instead\"));\n    }\n  }, {\n    key: \"removed\",\n    value: function removed(oldUsage, newUsage) {\n      return this.error(\"`\".concat(oldUsage, \"` has been removed. Use `\").concat(newUsage, \"` instead\"));\n    }\n  }, {\n    key: \"probe\",\n    value: function probe(logLevel, message) {\n      return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n        time: true,\n        once: true\n      });\n    }\n  }, {\n    key: \"log\",\n    value: function log(logLevel, message) {\n      return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n    }\n  }, {\n    key: \"info\",\n    value: function info(logLevel, message) {\n      return this._getLogFunction(logLevel, message, console.info, arguments);\n    }\n  }, {\n    key: \"once\",\n    value: function once(logLevel, message) {\n      return this._getLogFunction(logLevel, message, originalConsole.debug || originalConsole.info, arguments, ONCE);\n    }\n  }, {\n    key: \"table\",\n    value: function table(logLevel, _table, columns) {\n      if (_table) {\n        return this._getLogFunction(logLevel, _table, console.table || noop, columns && [columns], {\n          tag: getTableHeader(_table)\n        });\n      }\n\n      return noop;\n    }\n  }, {\n    key: \"image\",\n    value: function image(_ref2) {\n      var logLevel = _ref2.logLevel,\n          priority = _ref2.priority,\n          _image = _ref2.image,\n          _ref2$message = _ref2.message,\n          message = _ref2$message === void 0 ? '' : _ref2$message,\n          _ref2$scale = _ref2.scale,\n          scale = _ref2$scale === void 0 ? 1 : _ref2$scale;\n\n      if (!this._shouldLog(logLevel || priority)) {\n        return noop;\n      }\n\n      return isBrowser ? logImageInBrowser({\n        image: _image,\n        message: message,\n        scale: scale\n      }) : logImageInNode({\n        image: _image,\n        message: message,\n        scale: scale\n      });\n    }\n  }, {\n    key: \"settings\",\n    value: function settings() {\n      if (console.table) {\n        console.table(this._storage.config);\n      } else {\n        console.log(this._storage.config);\n      }\n    }\n  }, {\n    key: \"get\",\n    value: function get(setting) {\n      return this._storage.config[setting];\n    }\n  }, {\n    key: \"set\",\n    value: function set(setting, value) {\n      this._storage.updateConfiguration(_defineProperty({}, setting, value));\n    }\n  }, {\n    key: \"time\",\n    value: function time(logLevel, message) {\n      return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n    }\n  }, {\n    key: \"timeEnd\",\n    value: function timeEnd(logLevel, message) {\n      return this._getLogFunction(logLevel, message, console.timeEnd ? console.timeEnd : console.info);\n    }\n  }, {\n    key: \"timeStamp\",\n    value: function timeStamp(logLevel, message) {\n      return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n    }\n  }, {\n    key: \"group\",\n    value: function group(logLevel, message) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n        collapsed: false\n      };\n      opts = normalizeArguments({\n        logLevel: logLevel,\n        message: message,\n        opts: opts\n      });\n      var _opts = opts,\n          collapsed = _opts.collapsed;\n      opts.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n      return this._getLogFunction(opts);\n    }\n  }, {\n    key: \"groupCollapsed\",\n    value: function groupCollapsed(logLevel, message) {\n      var opts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      return this.group(logLevel, message, Object.assign({}, opts, {\n        collapsed: true\n      }));\n    }\n  }, {\n    key: \"groupEnd\",\n    value: function groupEnd(logLevel) {\n      return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n    }\n  }, {\n    key: \"withGroup\",\n    value: function withGroup(logLevel, message, func) {\n      this.group(logLevel, message)();\n\n      try {\n        func();\n      } finally {\n        this.groupEnd(logLevel)();\n      }\n    }\n  }, {\n    key: \"trace\",\n    value: function trace() {\n      if (console.trace) {\n        console.trace();\n      }\n    }\n  }, {\n    key: \"_shouldLog\",\n    value: function _shouldLog(logLevel) {\n      return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n    }\n  }, {\n    key: \"_getLogFunction\",\n    value: function _getLogFunction(logLevel, message, method) {\n      var args = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n      var opts = arguments.length > 4 ? arguments[4] : undefined;\n\n      if (this._shouldLog(logLevel)) {\n        var _method;\n\n        opts = normalizeArguments({\n          logLevel: logLevel,\n          message: message,\n          args: args,\n          opts: opts\n        });\n        method = method || opts.method;\n\n        _assert(method);\n\n        opts.total = this.getTotal();\n        opts.delta = this.getDelta();\n        this._deltaTs = getHiResTimestamp();\n        var tag = opts.tag || opts.message;\n\n        if (opts.once) {\n          if (!cache[tag]) {\n            cache[tag] = getHiResTimestamp();\n          } else {\n            return noop;\n          }\n        }\n\n        message = decorateMessage(this.id, opts.message, opts);\n        return (_method = method).bind.apply(_method, [console, message].concat(_toConsumableArray(opts.args)));\n      }\n\n      return noop;\n    }\n  }, {\n    key: \"level\",\n    set: function set(newLevel) {\n      this.setLevel(newLevel);\n    },\n    get: function get() {\n      return this.getLevel();\n    }\n  }, {\n    key: \"priority\",\n    set: function set(newPriority) {\n      this.level = newPriority;\n    },\n    get: function get() {\n      return this.level;\n    }\n  }]);\n\n  return Log;\n}();\n\nexport { Log as default };\nLog.VERSION = VERSION;\n\nfunction normalizeLogLevel(logLevel) {\n  if (!logLevel) {\n    return 0;\n  }\n\n  var resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n\n  _assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n\n  return resolvedLevel;\n}\n\nexport function normalizeArguments(opts) {\n  var logLevel = opts.logLevel,\n      message = opts.message;\n  opts.logLevel = normalizeLogLevel(logLevel);\n  var args = opts.args ? Array.from(opts.args) : [];\n\n  while (args.length && args.shift() !== message) {}\n\n  opts.args = args;\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n\n  var messageType = typeof opts.message;\n\n  _assert(messageType === 'string' || messageType === 'object');\n\n  return Object.assign(opts, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    var time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? \"\".concat(id, \": \").concat(time, \"  \").concat(message) : \"\".concat(id, \": \").concat(message);\n    message = addColor(message, opts.color, opts.background);\n  }\n\n  return message;\n}\n\nfunction logImageInNode(_ref3) {\n  var image = _ref3.image,\n      _ref3$message = _ref3.message,\n      message = _ref3$message === void 0 ? '' : _ref3$message,\n      _ref3$scale = _ref3.scale,\n      scale = _ref3$scale === void 0 ? 1 : _ref3$scale;\n  var asciify = null;\n\n  try {\n    asciify = module.require('asciify-image');\n  } catch (error) {}\n\n  if (asciify) {\n    return function () {\n      return asciify(image, {\n        fit: 'box',\n        width: \"\".concat(Math.round(80 * scale), \"%\")\n      }).then(function (data) {\n        return console.log(data);\n      });\n    };\n  }\n\n  return noop;\n}\n\nfunction logImageInBrowser(_ref4) {\n  var image = _ref4.image,\n      _ref4$message = _ref4.message,\n      message = _ref4$message === void 0 ? '' : _ref4$message,\n      _ref4$scale = _ref4.scale,\n      scale = _ref4$scale === void 0 ? 1 : _ref4$scale;\n\n  if (typeof image === 'string') {\n    var img = new Image();\n\n    img.onload = function () {\n      var _console;\n\n      var args = formatImage(img, message, scale);\n\n      (_console = console).log.apply(_console, _toConsumableArray(args));\n    };\n\n    img.src = image;\n    return noop;\n  }\n\n  var element = image.nodeName || '';\n\n  if (element.toLowerCase() === 'img') {\n    var _console2;\n\n    (_console2 = console).log.apply(_console2, _toConsumableArray(formatImage(image, message, scale)));\n\n    return noop;\n  }\n\n  if (element.toLowerCase() === 'canvas') {\n    var _img = new Image();\n\n    _img.onload = function () {\n      var _console3;\n\n      return (_console3 = console).log.apply(_console3, _toConsumableArray(formatImage(_img, message, scale)));\n    };\n\n    _img.src = image.toDataURL();\n    return noop;\n  }\n\n  return noop;\n}","map":{"version":3,"sources":["../../../src/lib/log.js"],"names":["originalConsole","debug","isBrowser","console","log","info","warn","error","DEFAULT_SETTINGS","enabled","level","cache","ONCE","once","table","title","constructor","id","getHiResTimestamp","autobind","Object","Number","assert","time","columns","tag","getTableHeader","message","scale","logLevel","logImageInBrowser","image","logImageInNode","value","opts","collapsed","normalizeArguments","func","normalizeLogLevel","args","method","decorateMessage","Log","resolvedLevel","Array","messageType","leftPad","formatTime","addColor","asciify","module","fit","width","Math","data","img","formatImage","element"],"mappings":"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","sourcesContent":["// Copyright (c) 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n/* eslint-disable no-console */\nimport {VERSION, isBrowser} from '../utils/globals';\nimport LocalStorage from '../utils/local-storage';\nimport {formatImage, formatTime, leftPad} from '../utils/formatters';\nimport {addColor} from '../utils/color';\nimport {autobind} from '../utils/autobind';\nimport assert from '../utils/assert';\nimport getHiResTimestamp from '../utils/hi-res-timestamp';\n\n/* eslint-disable no-console */\n\n// Instrumentation in other packages may override console methods, so preserve them here\nconst originalConsole = {\n  debug: isBrowser ? console.debug || console.log : console.log,\n  log: console.log,\n  info: console.info,\n  warn: console.warn,\n  error: console.error\n};\n\nconst DEFAULT_SETTINGS = {\n  enabled: true,\n  level: 0\n};\n\nfunction noop() {}\n\nconst cache = {};\nconst ONCE = {once: true};\n\n/*\nfunction throttle(tag, timeout) {\n  const prevTime = cache[tag];\n  const time = Date.now();\n  if (!prevTime || (time - prevTime > timeout)) {\n    cache[tag] = time;\n    return true;\n  }\n  return false;\n}\n\n// Assertions don't generate standard exceptions and don't print nicely\nfunction checkForAssertionErrors(args) {\n  const isAssertion =\n    args &&\n    args.length > 0 &&\n    typeof args[0] === 'object' &&\n    args[0] !== null &&\n    args[0].name === 'AssertionError';\n\n  if (isAssertion) {\n    args = Array.prototype.slice.call(args);\n    args.unshift(`assert(${args[0].message})`);\n  }\n  return args;\n}\n*/\n\nfunction getTableHeader(table) {\n  for (const key in table) {\n    for (const title in table[key]) {\n      return title || 'untitled';\n    }\n  }\n  return 'empty';\n}\n\n// A console wrapper\n\nexport default class Log {\n  constructor({id} = {id: ''}) {\n    this.id = id;\n    this.VERSION = VERSION;\n    this._startTs = getHiResTimestamp();\n    this._deltaTs = getHiResTimestamp();\n    // TODO - fix support from throttling groups\n    this.LOG_THROTTLE_TIMEOUT = 0; // Time before throttled messages are logged again\n    this._storage = new LocalStorage(`__probe-${this.id}__`, DEFAULT_SETTINGS);\n    this.userData = {};\n\n    this.timeStamp(`${this.id} started`);\n\n    autobind(this);\n    Object.seal(this);\n  }\n\n  set level(newLevel) {\n    this.setLevel(newLevel);\n  }\n\n  get level() {\n    return this.getLevel();\n  }\n\n  isEnabled() {\n    return this._storage.config.enabled;\n  }\n\n  getLevel() {\n    return this._storage.config.level;\n  }\n\n  // @return {Number} milliseconds, with fractions\n  getTotal() {\n    return Number((getHiResTimestamp() - this._startTs).toPrecision(10));\n  }\n\n  // @return {Number} milliseconds, with fractions\n  getDelta() {\n    return Number((getHiResTimestamp() - this._deltaTs).toPrecision(10));\n  }\n\n  // Deprecated\n  set priority(newPriority) {\n    this.level = newPriority;\n  }\n\n  get priority() {\n    return this.level;\n  }\n\n  getPriority() {\n    return this.level;\n  }\n\n  // Configure\n\n  enable(enabled = true) {\n    this._storage.updateConfiguration({enabled});\n    return this;\n  }\n\n  setLevel(level) {\n    this._storage.updateConfiguration({level});\n    return this;\n  }\n\n  // Unconditional logging\n\n  assert(condition, message) {\n    assert(condition, message);\n  }\n\n  // Warn, but only once, no console flooding\n  warn(message) {\n    // @ts-ignore\n    return this._getLogFunction(0, message, originalConsole.warn, arguments, ONCE);\n  }\n\n  // Print an error\n  error(message) {\n    // @ts-ignore\n    return this._getLogFunction(0, message, originalConsole.error, arguments);\n  }\n\n  deprecated(oldUsage, newUsage) {\n    return this.warn(`\\`${oldUsage}\\` is deprecated and will be removed \\\nin a later version. Use \\`${newUsage}\\` instead`);\n  }\n\n  removed(oldUsage, newUsage) {\n    return this.error(`\\`${oldUsage}\\` has been removed. Use \\`${newUsage}\\` instead`);\n  }\n\n  // Conditional logging\n\n  // Log to a group\n  probe(logLevel, message) {\n    // @ts-ignore\n    return this._getLogFunction(logLevel, message, originalConsole.log, arguments, {\n      time: true,\n      once: true\n    });\n  }\n\n  // Log a debug message\n  log(logLevel, message) {\n    // @ts-ignore\n    return this._getLogFunction(logLevel, message, originalConsole.debug, arguments);\n  }\n\n  // Log a normal message\n  info(logLevel, message) {\n    // @ts-ignore\n    return this._getLogFunction(logLevel, message, console.info, arguments);\n  }\n\n  // Log a normal message, but only once, no console flooding\n  once(logLevel, message) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      originalConsole.debug || originalConsole.info,\n      // @ts-ignore\n      arguments,\n      ONCE\n    );\n  }\n\n  // Logs an object as a table\n  table(logLevel, table, columns) {\n    if (table) {\n      return this._getLogFunction(logLevel, table, console.table || noop, columns && [columns], {\n        tag: getTableHeader(table)\n      });\n    }\n    return noop;\n  }\n\n  // logs an image under Chrome\n  image({logLevel, priority, image, message = '', scale = 1}) {\n    if (!this._shouldLog(logLevel || priority)) {\n      return noop;\n    }\n    return isBrowser\n      ? logImageInBrowser({image, message, scale})\n      : logImageInNode({image, message, scale});\n  }\n\n  // Logs the current settings as a table\n  settings() {\n    if (console.table) {\n      console.table(this._storage.config);\n    } else {\n      console.log(this._storage.config);\n    }\n  }\n\n  // logs the current status of the setting\n  get(setting) {\n    return this._storage.config[setting];\n  }\n\n  // update the status of the setting\n  set(setting, value) {\n    this._storage.updateConfiguration({[setting]: value});\n  }\n\n  time(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.time ? console.time : console.info);\n  }\n\n  timeEnd(logLevel, message) {\n    return this._getLogFunction(\n      logLevel,\n      message,\n      console.timeEnd ? console.timeEnd : console.info\n    );\n  }\n\n  timeStamp(logLevel, message) {\n    return this._getLogFunction(logLevel, message, console.timeStamp || noop);\n  }\n\n  group(logLevel, message, opts = {collapsed: false}) {\n    opts = normalizeArguments({logLevel, message, opts});\n    const {collapsed} = opts;\n    opts.method = (collapsed ? console.groupCollapsed : console.group) || console.info;\n\n    return this._getLogFunction(opts);\n  }\n\n  groupCollapsed(logLevel, message, opts = {}) {\n    return this.group(logLevel, message, Object.assign({}, opts, {collapsed: true}));\n  }\n\n  groupEnd(logLevel) {\n    return this._getLogFunction(logLevel, '', console.groupEnd || noop);\n  }\n\n  // EXPERIMENTAL\n\n  withGroup(logLevel, message, func) {\n    this.group(logLevel, message)();\n\n    try {\n      func();\n    } finally {\n      this.groupEnd(logLevel)();\n    }\n  }\n\n  trace() {\n    if (console.trace) {\n      console.trace();\n    }\n  }\n\n  // PRIVATE METHODS\n\n  _shouldLog(logLevel) {\n    return this.isEnabled() && this.getLevel() >= normalizeLogLevel(logLevel);\n  }\n\n  _getLogFunction(logLevel, message, method, args = [], opts) {\n    if (this._shouldLog(logLevel)) {\n      // normalized opts + timings\n      opts = normalizeArguments({logLevel, message, args, opts});\n      method = method || opts.method;\n      assert(method);\n\n      opts.total = this.getTotal();\n      opts.delta = this.getDelta();\n      // reset delta timer\n      this._deltaTs = getHiResTimestamp();\n\n      const tag = opts.tag || opts.message;\n\n      if (opts.once) {\n        if (!cache[tag]) {\n          cache[tag] = getHiResTimestamp();\n        } else {\n          return noop;\n        }\n      }\n\n      // TODO - Make throttling work with groups\n      // if (opts.nothrottle || !throttle(tag, this.LOG_THROTTLE_TIMEOUT)) {\n      //   return noop;\n      // }\n\n      message = decorateMessage(this.id, opts.message, opts);\n\n      // Bind console function so that it can be called after being returned\n      return method.bind(console, message, ...opts.args);\n    }\n    return noop;\n  }\n}\n\nLog.VERSION = VERSION;\n\n// Get logLevel from first argument:\n// - log(logLevel, message, args) => logLevel\n// - log(message, args) => 0\n// - log({logLevel, ...}, message, args) => logLevel\n// - log({logLevel, message, args}) => logLevel\nfunction normalizeLogLevel(logLevel) {\n  if (!logLevel) {\n    return 0;\n  }\n  let resolvedLevel;\n\n  switch (typeof logLevel) {\n    case 'number':\n      resolvedLevel = logLevel;\n      break;\n\n    case 'object':\n      // Backward compatibility\n      // TODO - deprecate `priority`\n      resolvedLevel = logLevel.logLevel || logLevel.priority || 0;\n      break;\n\n    default:\n      return 0;\n  }\n  // 'log level must be a number'\n  assert(Number.isFinite(resolvedLevel) && resolvedLevel >= 0);\n\n  return resolvedLevel;\n}\n\n// \"Normalizes\" the various argument patterns into an object with known types\n// - log(logLevel, message, args) => {logLevel, message, args}\n// - log(message, args) => {logLevel: 0, message, args}\n// - log({logLevel, ...}, message, args) => {logLevel, message, args}\n// - log({logLevel, message, args}) => {logLevel, message, args}\nexport function normalizeArguments(opts) {\n  const {logLevel, message} = opts;\n  opts.logLevel = normalizeLogLevel(logLevel);\n  // We use `arguments` instead of rest parameters (...args) because IE\n  // does not support the syntax. Rest parameters is transpiled to code with\n  // perf impact. Doing it here instead avoids constructing args when logging is\n  // disabled.\n  // TODO - remove when/if IE support is dropped\n  const args = opts.args ? Array.from(opts.args) : [];\n  /* eslint-disable no-empty */\n  // args should only contain arguments that appear after `message`\n  while (args.length && args.shift() !== message) {}\n  /* eslint-enable no-empty */\n  opts.args = args;\n\n  switch (typeof logLevel) {\n    case 'string':\n    case 'function':\n      if (message !== undefined) {\n        args.unshift(message);\n      }\n      opts.message = logLevel;\n      break;\n\n    case 'object':\n      Object.assign(opts, logLevel);\n      break;\n\n    default:\n  }\n\n  // Resolve functions into strings by calling them\n  if (typeof opts.message === 'function') {\n    opts.message = opts.message();\n  }\n  const messageType = typeof opts.message;\n  // 'log message must be a string' or object\n  assert(messageType === 'string' || messageType === 'object');\n\n  // original opts + normalized opts + opts arg + fixed up message\n  return Object.assign(opts, opts.opts);\n}\n\nfunction decorateMessage(id, message, opts) {\n  if (typeof message === 'string') {\n    const time = opts.time ? leftPad(formatTime(opts.total)) : '';\n    message = opts.time ? `${id}: ${time}  ${message}` : `${id}: ${message}`;\n    message = addColor(message, opts.color, opts.background);\n  }\n  return message;\n}\n\n// Use the asciify module to log an image under node.js\nfunction logImageInNode({image, message = '', scale = 1}) {\n  // Note: Runtime load of the \"asciify-image\" module, avoids including in browser bundles\n  let asciify = null;\n  try {\n    asciify = module.require('asciify-image');\n  } catch (error) {\n    // asciify not installed, silently ignore\n  }\n  if (asciify) {\n    return () =>\n      asciify(image, {fit: 'box', width: `${Math.round(80 * scale)}%`}).then(data =>\n        console.log(data)\n      );\n  }\n  return noop;\n}\n\nfunction logImageInBrowser({image, message = '', scale = 1}) {\n  if (typeof image === 'string') {\n    const img = new Image();\n    img.onload = () => {\n      const args = formatImage(img, message, scale);\n      console.log(...args);\n    };\n    img.src = image;\n    return noop;\n  }\n  const element = image.nodeName || '';\n  if (element.toLowerCase() === 'img') {\n    console.log(...formatImage(image, message, scale));\n    return noop;\n  }\n  if (element.toLowerCase() === 'canvas') {\n    const img = new Image();\n    img.onload = () => console.log(...formatImage(img, message, scale));\n    img.src = image.toDataURL();\n    return noop;\n  }\n  return noop;\n}\n"]},"metadata":{},"sourceType":"module"}