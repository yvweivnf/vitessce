{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import Slider from'@material-ui/core/Slider';import{registerPluginCoordinationType,registerPluginViewType}from'../../app/plugins';import{CoordinationType}from'../../app/constants';// For plugin views to use:\nimport TitleInfo from'../../components/TitleInfo';import{useCoordination}from'../../app/state/hooks';function MyPluginSlider(props){var myCustomCoordinationType=props.myCustomCoordinationType,setMyCustomCoordinationType=props.setMyCustomCoordinationType;function handleChange(event,newValue){setMyCustomCoordinationType(newValue);}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Slider,{value:myCustomCoordinationType,onChange:handleChange,min:0.0,max:1.0,step:0.005}));}function MyPluginSliderSubscriber(props){var coordinationScopes=props.coordinationScopes,removeGridComponent=props.removeGridComponent,theme=props.theme,_props$title=props.title,title=_props$title===void 0?'My plugin slider':_props$title;// Get \"props\" from the coordination space.\nvar _useCoordination=useCoordination([CoordinationType.DATASET,'myCustomCoordinationType'],coordinationScopes),_useCoordination2=_slicedToArray(_useCoordination,2),myCustomCoordinationType=_useCoordination2[0].myCustomCoordinationType,setMyCustomCoordinationType=_useCoordination2[1].setMyCustomCoordinationType;return/*#__PURE__*/React.createElement(TitleInfo,{title:title,theme:theme,removeGridComponent:removeGridComponent,isReady:true},/*#__PURE__*/React.createElement(MyPluginSlider,{myCustomCoordinationType:myCustomCoordinationType,setMyCustomCoordinationType:setMyCustomCoordinationType}));}registerPluginCoordinationType('myCustomCoordinationType',0.75);// Register the plugin view type.\nregisterPluginViewType('myCustomSlider',MyPluginSliderSubscriber,[CoordinationType.DATASET,'myCustomCoordinationType']);// Use the plugin view in the configuration.\nexport var pluginCoordinationType={name:'Test plugin views and coordination types',version:'1.0.9',description:'Demonstration of a plugin coordination type implementation. The left sliders should be coordinated, while the right sliders are independent.',public:false,datasets:[{uid:'plugin-test-dataset',name:'Plugin test dataset',files:[]}],initStrategy:'auto',coordinationSpace:{myCustomCoordinationType:{A:0.5,B:0.25,C:undefined}},layout:[{component:'description',props:{title:'Description'},x:0,y:0,w:2,h:2},{component:'myCustomSlider',coordinationScopes:{myCustomCoordinationType:'A'},x:2,y:0,w:2,h:1},{component:'myCustomSlider',coordinationScopes:{myCustomCoordinationType:'A'},x:2,y:1,w:2,h:1},{component:'myCustomSlider',coordinationScopes:{myCustomCoordinationType:'B'},x:4,y:0,w:2,h:1},{component:'myCustomSlider',x:4,y:1,w:2,h:1}]};","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/demo/view-configs/plugin-coordination-type.js"],"names":["React","Slider","registerPluginCoordinationType","registerPluginViewType","CoordinationType","TitleInfo","useCoordination","MyPluginSlider","props","myCustomCoordinationType","setMyCustomCoordinationType","handleChange","event","newValue","MyPluginSliderSubscriber","coordinationScopes","removeGridComponent","theme","title","DATASET","pluginCoordinationType","name","version","description","public","datasets","uid","files","initStrategy","coordinationSpace","A","B","C","undefined","layout","component","x","y","w","h"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport {\n  registerPluginCoordinationType,\n  registerPluginViewType,\n} from '../../app/plugins';\nimport {\n  CoordinationType,\n} from '../../app/constants';\n// For plugin views to use:\nimport TitleInfo from '../../components/TitleInfo';\nimport {\n  useCoordination,\n} from '../../app/state/hooks';\n\nfunction MyPluginSlider(props) {\n  const {\n    myCustomCoordinationType,\n    setMyCustomCoordinationType,\n  } = props;\n\n  function handleChange(event, newValue) {\n    setMyCustomCoordinationType(newValue);\n  }\n\n  return (\n    <div>\n      <Slider\n        value={myCustomCoordinationType}\n        onChange={handleChange}\n        min={0.0}\n        max={1.0}\n        step={0.005}\n      />\n    </div>\n  );\n}\n\nfunction MyPluginSliderSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'My plugin slider',\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [{\n    myCustomCoordinationType,\n  }, {\n    setMyCustomCoordinationType,\n  }] = useCoordination(\n    [\n      CoordinationType.DATASET,\n      'myCustomCoordinationType',\n    ],\n    coordinationScopes,\n  );\n\n  return (\n    <TitleInfo\n      title={title}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isReady\n    >\n      <MyPluginSlider\n        myCustomCoordinationType={myCustomCoordinationType}\n        setMyCustomCoordinationType={setMyCustomCoordinationType}\n      />\n    </TitleInfo>\n  );\n}\n\nregisterPluginCoordinationType(\n  'myCustomCoordinationType',\n  0.75,\n);\n\n// Register the plugin view type.\nregisterPluginViewType(\n  'myCustomSlider',\n  MyPluginSliderSubscriber,\n  [\n    CoordinationType.DATASET,\n    'myCustomCoordinationType',\n  ],\n);\n\n// Use the plugin view in the configuration.\nexport const pluginCoordinationType = {\n  name: 'Test plugin views and coordination types',\n  version: '1.0.9',\n  description: 'Demonstration of a plugin coordination type implementation. The left sliders should be coordinated, while the right sliders are independent.',\n  public: false,\n  datasets: [\n    {\n      uid: 'plugin-test-dataset',\n      name: 'Plugin test dataset',\n      files: [],\n    },\n  ],\n  initStrategy: 'auto',\n  coordinationSpace: {\n    myCustomCoordinationType: {\n      A: 0.5,\n      B: 0.25,\n      C: undefined,\n    },\n  },\n  layout: [\n    {\n      component: 'description',\n      props: {\n        title: 'Description',\n      },\n      x: 0,\n      y: 0,\n      w: 2,\n      h: 2,\n    },\n    {\n      component: 'myCustomSlider',\n      coordinationScopes: {\n        myCustomCoordinationType: 'A',\n      },\n      x: 2,\n      y: 0,\n      w: 2,\n      h: 1,\n    },\n    {\n      component: 'myCustomSlider',\n      coordinationScopes: {\n        myCustomCoordinationType: 'A',\n      },\n      x: 2,\n      y: 1,\n      w: 2,\n      h: 1,\n    },\n    {\n      component: 'myCustomSlider',\n      coordinationScopes: {\n        myCustomCoordinationType: 'B',\n      },\n      x: 4,\n      y: 0,\n      w: 2,\n      h: 1,\n    },\n    {\n      component: 'myCustomSlider',\n      x: 4,\n      y: 1,\n      w: 2,\n      h: 1,\n    },\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}