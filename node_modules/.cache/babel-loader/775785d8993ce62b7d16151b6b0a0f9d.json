{"ast":null,"code":"import uuidv4 from 'uuid/v4';\n/**\n * A loader ancestor class containing a default constructor\n * and a stub for the required load() method.\n */\n\nexport default class AbstractLoader {\n  constructor({\n    type,\n    url,\n    requestInit,\n    options\n  }) {\n    this.type = type;\n    this.url = url;\n    this.requestInit = requestInit;\n    this.options = options;\n    this.subscriptions = {};\n  } // eslint-disable-next-line class-methods-use-this\n\n\n  load() {\n    throw new Error('The load() method has not been implemented.');\n  }\n\n  subscribe(subscriber) {\n    const token = uuidv4();\n    this.subscriptions[token] = subscriber;\n    return token;\n  }\n\n  unsubscribe(token) {\n    delete this.subscriptions[token];\n  }\n\n  publish(data) {\n    Object.values(this.subscriptions).forEach(subscriber => {\n      subscriber(data);\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/loaders/AbstractLoader.js"],"names":["uuidv4","AbstractLoader","constructor","type","url","requestInit","options","subscriptions","load","Error","subscribe","subscriber","token","unsubscribe","publish","data","Object","values","forEach"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,SAAnB;AAEA;;;;;AAIA,eAAe,MAAMC,cAAN,CAAqB;AAClCC,EAAAA,WAAW,CAAC;AACVC,IAAAA,IADU;AACJC,IAAAA,GADI;AACCC,IAAAA,WADD;AACcC,IAAAA;AADd,GAAD,EAER;AACD,SAAKH,IAAL,GAAYA,IAAZ;AACA,SAAKC,GAAL,GAAWA,GAAX;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,OAAL,GAAeA,OAAf;AAEA,SAAKC,aAAL,GAAqB,EAArB;AACD,GAViC,CAYlC;;;AACAC,EAAAA,IAAI,GAAG;AACL,UAAM,IAAIC,KAAJ,CAAU,6CAAV,CAAN;AACD;;AAEDC,EAAAA,SAAS,CAACC,UAAD,EAAa;AACpB,UAAMC,KAAK,GAAGZ,MAAM,EAApB;AACA,SAAKO,aAAL,CAAmBK,KAAnB,IAA4BD,UAA5B;AACA,WAAOC,KAAP;AACD;;AAEDC,EAAAA,WAAW,CAACD,KAAD,EAAQ;AACjB,WAAO,KAAKL,aAAL,CAAmBK,KAAnB,CAAP;AACD;;AAEDE,EAAAA,OAAO,CAACC,IAAD,EAAO;AACZC,IAAAA,MAAM,CAACC,MAAP,CAAc,KAAKV,aAAnB,EAAkCW,OAAlC,CAA2CP,UAAD,IAAgB;AACxDA,MAAAA,UAAU,CAACI,IAAD,CAAV;AACD,KAFD;AAGD;;AA/BiC","sourcesContent":["import uuidv4 from 'uuid/v4';\n\n/**\n * A loader ancestor class containing a default constructor\n * and a stub for the required load() method.\n */\nexport default class AbstractLoader {\n  constructor({\n    type, url, requestInit, options,\n  }) {\n    this.type = type;\n    this.url = url;\n    this.requestInit = requestInit;\n    this.options = options;\n\n    this.subscriptions = {};\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  load() {\n    throw new Error('The load() method has not been implemented.');\n  }\n\n  subscribe(subscriber) {\n    const token = uuidv4();\n    this.subscriptions[token] = subscriber;\n    return token;\n  }\n\n  unsubscribe(token) {\n    delete this.subscriptions[token];\n  }\n\n  publish(data) {\n    Object.values(this.subscriptions).forEach((subscriber) => {\n      subscriber(data);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}