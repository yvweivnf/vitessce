{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { ChildProcessProxy } from '@loaders.gl/worker-utils';\nexport function encodeImageURLToCompressedTextureURL(_x, _x2, _x3) {\n  return _encodeImageURLToCompressedTextureURL.apply(this, arguments);\n}\n\nfunction _encodeImageURLToCompressedTextureURL() {\n  _encodeImageURLToCompressedTextureURL = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(inputUrl, outputUrl, options) {\n    var args, childProcess;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            args = ['texture-compressor', '--type', 's3tc', '--compression', 'DXT1', '--quality', 'normal', '--input', inputUrl, '--output', outputUrl];\n            childProcess = new ChildProcessProxy();\n            _context.next = 4;\n            return childProcess.start({\n              command: 'npx',\n              arguments: args,\n              spawn: options\n            });\n\n          case 4:\n            return _context.abrupt(\"return\", outputUrl);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _encodeImageURLToCompressedTextureURL.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../../src/lib/encoders/encode-texture.ts"],"names":["args","childProcess","command","arguments","spawn","options"],"mappings":";;AAAA,SAAA,iBAAA,QAAA,0BAAA;AAKA,gBAAO,oCAAP;AAAA;AAAA;;;mGAAO,iBAAA,QAAA,EAAA,SAAA,EAAA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMCA,YAAAA,IAND,GAMQ,CAAA,oBAAA,EAAA,QAAA,EAAA,MAAA,EAAA,eAAA,EAAA,MAAA,EAAA,WAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,UAAA,EAAb,SAAa,CANR;AAeCC,YAAAA,YAfD,GAegB,IAArB,iBAAqB,EAfhB;AAAA;AAAA,mBAgBC,YAAY,CAAZ,KAAA,CAAmB;AACvBC,cAAAA,OAAO,EADgB,KAAA;AAEvBC,cAAAA,SAAS,EAFc,IAAA;AAGvBC,cAAAA,KAAK,EAAEC;AAHgB,aAAnB,CAhBD;;AAAA;AAAA,6CAqBL,SArBK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {ChildProcessProxy} from '@loaders.gl/worker-utils';\n\n/*\n * @see https://github.com/TimvanScherpenzeel/texture-compressor\n */\nexport async function encodeImageURLToCompressedTextureURL(\n  inputUrl: string,\n  outputUrl: string,\n  options?: {cwd?: string}\n): Promise<string> {\n  // prettier-ignore\n  const args = [\n    // Note: our actual executable is `npx`, so `texture-compressor` is an argument\n    'texture-compressor',\n    '--type', 's3tc',\n    '--compression', 'DXT1',\n    '--quality', 'normal',\n    '--input', inputUrl,\n    '--output', outputUrl\n  ];\n  const childProcess = new ChildProcessProxy();\n  await childProcess.start({\n    command: 'npx',\n    arguments: args,\n    spawn: options\n  });\n  return outputUrl;\n}\n"]},"metadata":{},"sourceType":"module"}