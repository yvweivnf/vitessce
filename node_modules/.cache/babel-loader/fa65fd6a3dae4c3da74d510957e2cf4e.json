{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import Paper from'@material-ui/core/Paper';import Popper from'@material-ui/core/Popper';import{useVitessceContainer}from'../hooks';import{styles}from'./styles';export default function Tooltip(props){var x=props.x,y=props.y,parentWidth=props.parentWidth,parentHeight=props.parentHeight,children=props.children;var ref=useRef();var classes=styles();var _useState=useState('start'),_useState2=_slicedToArray(_useState,2),placementX=_useState2[0],setPlacementX=_useState2[1];var _useState3=useState('bottom'),_useState4=_slicedToArray(_useState3,2),placementY=_useState4[0],setPlacementY=_useState4[1];var getTooltipContainer=useVitessceContainer(ref);// Do collision detection based on the bounds of the tooltip ancestor element.\nuseEffect(function(){if(ref&&ref.current){var flipX=x>parentWidth/2;var flipY=y>parentHeight/2;setPlacementX(flipX?'end':'start');setPlacementY(flipY?'top':'bottom');ref.current.style.left=\"\".concat(x+(flipX?-20:5),\"px\");ref.current.style.top=\"\".concat(y+(flipY?-20:5),\"px\");}},[x,y,parentWidth,parentHeight]);return/*#__PURE__*/React.createElement(\"div\",{ref:ref,className:classes.tooltipAnchor},ref&&ref.current?/*#__PURE__*/React.createElement(Popper,{open:true,anchorEl:ref.current,container:getTooltipContainer,transition:true,placement:\"\".concat(placementY,\"-\").concat(placementX)},/*#__PURE__*/React.createElement(Paper,{elevation:4,className:classes.tooltipContent},children)):null);}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/tooltip/Tooltip.js"],"names":["React","useEffect","useRef","useState","Paper","Popper","useVitessceContainer","styles","Tooltip","props","x","y","parentWidth","parentHeight","children","ref","classes","placementX","setPlacementX","placementY","setPlacementY","getTooltipContainer","current","flipX","flipY","style","left","top","tooltipAnchor","tooltipContent"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAASC,oBAAT,KAAqC,UAArC,CACA,OAASC,MAAT,KAAuB,UAAvB,CAEA,cAAe,SAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,IAEnCC,CAAAA,CAFmC,CAOjCD,KAPiC,CAEnCC,CAFmC,CAGnCC,CAHmC,CAOjCF,KAPiC,CAGnCE,CAHmC,CAInCC,WAJmC,CAOjCH,KAPiC,CAInCG,WAJmC,CAKnCC,YALmC,CAOjCJ,KAPiC,CAKnCI,YALmC,CAMnCC,QANmC,CAOjCL,KAPiC,CAMnCK,QANmC,CAQrC,GAAMC,CAAAA,GAAG,CAAGb,MAAM,EAAlB,CACA,GAAMc,CAAAA,OAAO,CAAGT,MAAM,EAAtB,CATqC,cAUDJ,QAAQ,CAAC,OAAD,CAVP,wCAU9Bc,UAV8B,eAUlBC,aAVkB,8BAWDf,QAAQ,CAAC,QAAD,CAXP,yCAW9BgB,UAX8B,eAWlBC,aAXkB,eAarC,GAAMC,CAAAA,mBAAmB,CAAGf,oBAAoB,CAACS,GAAD,CAAhD,CAEA;AACAd,SAAS,CAAC,UAAM,CACd,GAAIc,GAAG,EAAIA,GAAG,CAACO,OAAf,CAAwB,CACtB,GAAMC,CAAAA,KAAK,CAAIb,CAAC,CAAGE,WAAW,CAAG,CAAjC,CACA,GAAMY,CAAAA,KAAK,CAAIb,CAAC,CAAGE,YAAY,CAAG,CAAlC,CACAK,aAAa,CAACK,KAAK,CAAG,KAAH,CAAW,OAAjB,CAAb,CACAH,aAAa,CAACI,KAAK,CAAG,KAAH,CAAW,QAAjB,CAAb,CACAT,GAAG,CAACO,OAAJ,CAAYG,KAAZ,CAAkBC,IAAlB,WAA4BhB,CAAC,EAAIa,KAAK,CAAG,CAAC,EAAJ,CAAS,CAAlB,CAA7B,OACAR,GAAG,CAACO,OAAJ,CAAYG,KAAZ,CAAkBE,GAAlB,WAA2BhB,CAAC,EAAIa,KAAK,CAAG,CAAC,EAAJ,CAAS,CAAlB,CAA5B,OACD,CACF,CATQ,CASN,CAACd,CAAD,CAAIC,CAAJ,CAAOC,WAAP,CAAoBC,YAApB,CATM,CAAT,CAWA,mBACE,2BACE,GAAG,CAAEE,GADP,CAEE,SAAS,CAAEC,OAAO,CAACY,aAFrB,EAIGb,GAAG,EAAIA,GAAG,CAACO,OAAX,cACC,oBAAC,MAAD,EACE,IAAI,KADN,CAEE,QAAQ,CAAEP,GAAG,CAACO,OAFhB,CAGE,SAAS,CAAED,mBAHb,CAIE,UAAU,KAJZ,CAKE,SAAS,WAAKF,UAAL,aAAmBF,UAAnB,CALX,eAOE,oBAAC,KAAD,EAAO,SAAS,CAAE,CAAlB,CAAqB,SAAS,CAAED,OAAO,CAACa,cAAxC,EACGf,QADH,CAPF,CADD,CAYG,IAhBN,CADF,CAoBD","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Popper from '@material-ui/core/Popper';\nimport { useVitessceContainer } from '../hooks';\nimport { styles } from './styles';\n\nexport default function Tooltip(props) {\n  const {\n    x,\n    y,\n    parentWidth,\n    parentHeight,\n    children,\n  } = props;\n  const ref = useRef();\n  const classes = styles();\n  const [placementX, setPlacementX] = useState('start');\n  const [placementY, setPlacementY] = useState('bottom');\n\n  const getTooltipContainer = useVitessceContainer(ref);\n\n  // Do collision detection based on the bounds of the tooltip ancestor element.\n  useEffect(() => {\n    if (ref && ref.current) {\n      const flipX = (x > parentWidth / 2);\n      const flipY = (y > parentHeight / 2);\n      setPlacementX(flipX ? 'end' : 'start');\n      setPlacementY(flipY ? 'top' : 'bottom');\n      ref.current.style.left = `${x + (flipX ? -20 : 5)}px`;\n      ref.current.style.top = `${y + (flipY ? -20 : 5)}px`;\n    }\n  }, [x, y, parentWidth, parentHeight]);\n\n  return (\n    <div\n      ref={ref}\n      className={classes.tooltipAnchor}\n    >\n      {ref && ref.current ? (\n        <Popper\n          open\n          anchorEl={ref.current}\n          container={getTooltipContainer}\n          transition\n          placement={`${placementY}-${placementX}`}\n        >\n          <Paper elevation={4} className={classes.tooltipContent}>\n            {children}\n          </Paper>\n        </Popper>\n      ) : null}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}