{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _layers = require(\"@nebula.gl/layers\");\n\nvar _constants = require(\"@luma.gl/constants\");\n\nvar _style = require(\"../style\");\n\nvar _nebulaLayer = _interopRequireDefault(require(\"../nebula-layer\"));\n\nvar _utils = require(\"../utils\");\n\nvar _deckCache = _interopRequireDefault(require(\"../deck-renderer/deck-cache\"));\n\nvar _NEBULA_TO_DECK_DIREC;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar NEBULA_TO_DECK_DIRECTIONS = (_NEBULA_TO_DECK_DIREC = {}, _defineProperty(_NEBULA_TO_DECK_DIREC, _style.ArrowStyles.NONE, {\n  forward: false,\n  backward: false\n}), _defineProperty(_NEBULA_TO_DECK_DIREC, _style.ArrowStyles.FORWARD, {\n  forward: true,\n  backward: false\n}), _defineProperty(_NEBULA_TO_DECK_DIREC, _style.ArrowStyles.BACKWARD, {\n  forward: false,\n  backward: true\n}), _defineProperty(_NEBULA_TO_DECK_DIREC, _style.ArrowStyles.BOTH, {\n  forward: true,\n  backward: true\n}), _NEBULA_TO_DECK_DIREC);\n\nvar SegmentsLayer = /*#__PURE__*/function (_NebulaLayer) {\n  _inherits(SegmentsLayer, _NebulaLayer);\n\n  var _super = _createSuper(SegmentsLayer);\n\n  function SegmentsLayer(config) {\n    var _this;\n\n    _classCallCheck(this, SegmentsLayer);\n\n    _this = _super.call(this, config);\n\n    _defineProperty(_assertThisInitialized(_this), \"deckCache\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"noBlend\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"highlightColor\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"arrowSize\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"rounded\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dashed\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"markerLayerProps\", void 0);\n\n    _this.deckCache = new _deckCache[\"default\"](config.getData, function (data) {\n      return config.toNebulaFeature(data);\n    });\n    _this.enableSelection = true;\n    var _config$enablePicking = config.enablePicking,\n        enablePicking = _config$enablePicking === void 0 ? true : _config$enablePicking,\n        _config$noBlend = config.noBlend,\n        noBlend = _config$noBlend === void 0 ? false : _config$noBlend,\n        _config$rounded = config.rounded,\n        rounded = _config$rounded === void 0 ? true : _config$rounded,\n        _config$dashed = config.dashed,\n        dashed = _config$dashed === void 0 ? false : _config$dashed,\n        _config$markerLayerPr = config.markerLayerProps,\n        markerLayerProps = _config$markerLayerPr === void 0 ? null : _config$markerLayerPr;\n    Object.assign(_assertThisInitialized(_this), {\n      enablePicking: enablePicking,\n      noBlend: noBlend,\n      rounded: rounded,\n      dashed: dashed,\n      markerLayerProps: markerLayerProps\n    });\n    return _this;\n  }\n\n  _createClass(SegmentsLayer, [{\n    key: \"getMouseOverSegment\",\n    value: function getMouseOverSegment() {\n      // TODO: remove references\n      return null;\n    }\n  }, {\n    key: \"_calcMarkerPercentages\",\n    value: function _calcMarkerPercentages(nf) {\n      var arrowPercentages = nf.style.arrowPercentages;\n\n      if (arrowPercentages) {\n        return arrowPercentages;\n      }\n\n      var arrowStyle = nf.style.arrowStyle || _style.DEFAULT_STYLE.arrowStyle;\n      if (arrowStyle === _style.ArrowStyles.NONE) return [];\n      var arrowCount = Math.min(nf.style.arrowCount || _style.DEFAULT_STYLE.arrowCount, _style.MAX_ARROWS);\n      return [[0.5], [0.33, 0.66], [0.25, 0.5, 0.75]][arrowCount - 1];\n    }\n  }, {\n    key: \"_getHighlightedObjectIndex\",\n    value: function _getHighlightedObjectIndex(_ref) {\n      var nebula = _ref.nebula;\n      var deckglMouseOverInfo = nebula.deckglMouseOverInfo;\n\n      if (deckglMouseOverInfo) {\n        var originalLayer = deckglMouseOverInfo.originalLayer,\n            index = deckglMouseOverInfo.index;\n\n        if (originalLayer === this) {\n          return index;\n        }\n      } // no object\n\n\n      return -1;\n    }\n  }, {\n    key: \"render\",\n    value: function render(_ref2) {\n      var nebula = _ref2.nebula;\n      var defaultColor = [0x0, 0x0, 0x0, 0xff];\n      var _this$deckCache = this.deckCache,\n          objects = _this$deckCache.objects,\n          updateTrigger = _this$deckCache.updateTrigger;\n      return new _layers.PathMarkerLayer({\n        id: \"segments-\".concat(this.id),\n        data: objects,\n        opacity: 1,\n        // @ts-ignore\n        fp64: false,\n        rounded: this.rounded,\n        pickable: true,\n        sizeScale: this.arrowSize || 6,\n        parameters: {\n          depthTest: false,\n          blend: !this.noBlend,\n          blendEquation: _constants.GL.MAX\n        },\n        getPath: function getPath(nf) {\n          return nf.geoJson.geometry.coordinates;\n        },\n        // @ts-ignore\n        getColor: function getColor(nf) {\n          return (0, _utils.toDeckColor)(nf.style.lineColor, defaultColor);\n        },\n        getWidth: function getWidth(nf) {\n          return nf.style.lineWidthMeters || 1;\n        },\n        getZLevel: function getZLevel(nf) {\n          return nf.style.zLevel * 255;\n        },\n        getDirection: function getDirection(nf) {\n          return NEBULA_TO_DECK_DIRECTIONS[nf.style.arrowStyle];\n        },\n        // @ts-ignore\n        getMarkerColor: function getMarkerColor(nf) {\n          return (0, _utils.toDeckColor)(nf.style.arrowColor, defaultColor);\n        },\n        getMarkerPercentages: this._calcMarkerPercentages,\n        updateTriggers: {\n          all: updateTrigger\n        },\n        highlightedObjectIndex: this._getHighlightedObjectIndex({\n          nebula: nebula\n        }),\n        highlightColor: (0, _utils.toDeckColor)(this.highlightColor),\n        dashJustified: this.dashed,\n        getDashArray: this.dashed ? function (nf) {\n          return nf.style.dashArray;\n        } : null,\n        markerLayerProps: this.markerLayerProps || _layers.PathMarkerLayer.defaultProps.markerLayerProps,\n        nebulaLayer: this\n      });\n    }\n  }]);\n\n  return SegmentsLayer;\n}(_nebulaLayer[\"default\"]);\n\nexports[\"default\"] = SegmentsLayer;","map":{"version":3,"sources":["../../../src/lib/layers/segments-layer.ts"],"names":["NEBULA_TO_DECK_DIRECTIONS","ArrowStyles","forward","backward","SegmentsLayer","NebulaLayer","DeckCache","config","enablePicking","noBlend","rounded","dashed","markerLayerProps","Object","nf","arrowPercentages","arrowStyle","DEFAULT_STYLE","arrowCount","Math","MAX_ARROWS","nebula","deckglMouseOverInfo","originalLayer","index","defaultColor","objects","updateTrigger","PathMarkerLayer","id","data","opacity","fp64","pickable","sizeScale","parameters","depthTest","blend","blendEquation","GL","MAX","getPath","getColor","getWidth","getZLevel","getDirection","getMarkerColor","getMarkerPercentages","updateTriggers","all","highlightedObjectIndex","highlightColor","dashJustified","getDashArray","nebulaLayer"],"mappings":"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","sourcesContent":["import { PathMarkerLayer } from '@nebula.gl/layers';\nimport { GL } from '@luma.gl/constants';\n\nimport { ArrowStyles, DEFAULT_STYLE, MAX_ARROWS } from '../style';\nimport NebulaLayer from '../nebula-layer';\nimport { toDeckColor } from '../utils';\nimport DeckCache from '../deck-renderer/deck-cache';\n\nconst NEBULA_TO_DECK_DIRECTIONS = {\n  [ArrowStyles.NONE]: { forward: false, backward: false },\n  [ArrowStyles.FORWARD]: { forward: true, backward: false },\n  [ArrowStyles.BACKWARD]: { forward: false, backward: true },\n  [ArrowStyles.BOTH]: { forward: true, backward: true },\n};\n\nexport default class SegmentsLayer extends NebulaLayer {\n  deckCache: DeckCache<any, any>;\n  noBlend: boolean;\n  highlightColor: [number, number, number, number];\n  arrowSize: number;\n  rounded: boolean;\n  dashed: boolean;\n  markerLayerProps: Record<string, any> | null | undefined;\n\n  constructor(config: Record<string, any>) {\n    super(config);\n    this.deckCache = new DeckCache(config.getData, (data) => config.toNebulaFeature(data));\n    this.enableSelection = true;\n    const {\n      enablePicking = true,\n      noBlend = false,\n      rounded = true,\n      dashed = false,\n      markerLayerProps = null,\n    } = config;\n    Object.assign(this, { enablePicking, noBlend, rounded, dashed, markerLayerProps });\n  }\n\n  getMouseOverSegment(): any {\n    // TODO: remove references\n    return null;\n  }\n\n  _calcMarkerPercentages(nf: Record<string, any>): number[] {\n    const { arrowPercentages } = nf.style;\n    if (arrowPercentages) {\n      return arrowPercentages;\n    }\n\n    const arrowStyle = nf.style.arrowStyle || DEFAULT_STYLE.arrowStyle;\n    if (arrowStyle === ArrowStyles.NONE) return [];\n\n    const arrowCount = Math.min(nf.style.arrowCount || DEFAULT_STYLE.arrowCount, MAX_ARROWS);\n    return [[0.5], [0.33, 0.66], [0.25, 0.5, 0.75]][arrowCount - 1];\n  }\n\n  _getHighlightedObjectIndex({ nebula }: Record<string, any>): number {\n    const { deckglMouseOverInfo } = nebula;\n    if (deckglMouseOverInfo) {\n      const { originalLayer, index } = deckglMouseOverInfo;\n      if (originalLayer === this) {\n        return index;\n      }\n    }\n\n    // no object\n    return -1;\n  }\n\n  render({ nebula }: Record<string, any>) {\n    const defaultColor = [0x0, 0x0, 0x0, 0xff];\n    const { objects, updateTrigger } = this.deckCache;\n\n    return new PathMarkerLayer({\n      id: `segments-${this.id}`,\n      data: objects,\n      opacity: 1,\n      // @ts-ignore\n      fp64: false,\n      rounded: this.rounded,\n      pickable: true,\n      sizeScale: this.arrowSize || 6,\n      parameters: {\n        depthTest: false,\n        blend: !this.noBlend,\n        blendEquation: GL.MAX,\n      },\n      getPath: (nf: any) => nf.geoJson.geometry.coordinates,\n      // @ts-ignore\n      getColor: (nf: any) => toDeckColor(nf.style.lineColor, defaultColor),\n      getWidth: (nf: any) => nf.style.lineWidthMeters || 1,\n      getZLevel: (nf: any) => nf.style.zLevel * 255,\n      getDirection: (nf: any) => NEBULA_TO_DECK_DIRECTIONS[nf.style.arrowStyle],\n      // @ts-ignore\n      getMarkerColor: (nf: any) => toDeckColor(nf.style.arrowColor, defaultColor),\n      getMarkerPercentages: this._calcMarkerPercentages,\n      updateTriggers: { all: updateTrigger },\n\n      highlightedObjectIndex: this._getHighlightedObjectIndex({ nebula }),\n      highlightColor: toDeckColor(this.highlightColor),\n\n      dashJustified: this.dashed,\n      getDashArray: this.dashed ? (nf) => nf.style.dashArray : null,\n      markerLayerProps:\n        this.markerLayerProps ||\n        (PathMarkerLayer as Record<string, any>).defaultProps.markerLayerProps,\n\n      nebulaLayer: this,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"script"}