{"ast":null,"code":"import { normalizeLogicalComposition } from './logical';\nimport { normalizePredicate } from './predicate';\nexport function isFilter(t) {\n  return 'filter' in t;\n}\nexport function isImputeSequence(t) {\n  return (t === null || t === void 0 ? void 0 : t['stop']) !== undefined;\n}\nexport function isLookup(t) {\n  return 'lookup' in t;\n}\nexport function isLookupData(from) {\n  return 'data' in from;\n}\nexport function isLookupSelection(from) {\n  return 'param' in from;\n}\nexport function isPivot(t) {\n  return 'pivot' in t;\n}\nexport function isDensity(t) {\n  return 'density' in t;\n}\nexport function isQuantile(t) {\n  return 'quantile' in t;\n}\nexport function isRegression(t) {\n  return 'regression' in t;\n}\nexport function isLoess(t) {\n  return 'loess' in t;\n}\nexport function isSample(t) {\n  return 'sample' in t;\n}\nexport function isWindow(t) {\n  return 'window' in t;\n}\nexport function isJoinAggregate(t) {\n  return 'joinaggregate' in t;\n}\nexport function isFlatten(t) {\n  return 'flatten' in t;\n}\nexport function isCalculate(t) {\n  return 'calculate' in t;\n}\nexport function isBin(t) {\n  return 'bin' in t;\n}\nexport function isImpute(t) {\n  return 'impute' in t;\n}\nexport function isTimeUnit(t) {\n  return 'timeUnit' in t;\n}\nexport function isAggregate(t) {\n  return 'aggregate' in t;\n}\nexport function isStack(t) {\n  return 'stack' in t;\n}\nexport function isFold(t) {\n  return 'fold' in t;\n}\nexport function normalizeTransform(transform) {\n  return transform.map(t => {\n    if (isFilter(t)) {\n      return {\n        filter: normalizeLogicalComposition(t.filter, normalizePredicate)\n      };\n    }\n\n    return t;\n  });\n}","map":{"version":3,"sources":["../../src/transform.ts"],"names":[],"mappings":"AAKA,SAA4B,2BAA5B,QAA8D,WAA9D;AAEA,SAAQ,kBAAR,QAA4C,aAA5C;AA6BA,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA+B;AACnC,SAAO,YAAY,CAAnB;AACD;AA8ND,OAAM,SAAU,gBAAV,CAA2B,CAA3B,EAAgE;AACpE,SAAO,CAAA,CAAC,KAAA,IAAD,IAAA,CAAC,KAAA,KAAA,CAAD,GAAC,KAAA,CAAD,GAAA,CAAC,CAAG,MAAH,CAAD,MAAgB,SAAvB;AACD;AAyGD,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA+B;AACnC,SAAO,YAAY,CAAnB;AACD;AAED,OAAM,SAAU,YAAV,CAAuB,IAAvB,EAAyD;AAC7D,SAAO,UAAU,IAAjB;AACD;AAED,OAAM,SAAU,iBAAV,CAA4B,IAA5B,EAA8D;AAClE,SAAO,WAAW,IAAlB;AACD;AA6CD,OAAM,SAAU,OAAV,CAAkB,CAAlB,EAA8B;AAClC,SAAO,WAAW,CAAlB;AACD;AAgED,OAAM,SAAU,SAAV,CAAoB,CAApB,EAAgC;AACpC,SAAO,aAAa,CAApB;AACD;AA+BD,OAAM,SAAU,UAAV,CAAqB,CAArB,EAAiC;AACrC,SAAO,cAAc,CAArB;AACD;AAsDD,OAAM,SAAU,YAAV,CAAuB,CAAvB,EAAmC;AACvC,SAAO,gBAAgB,CAAvB;AACD;AAiCD,OAAM,SAAU,OAAV,CAAkB,CAAlB,EAA8B;AAClC,SAAO,WAAW,CAAlB;AACD;AAED,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA+B;AACnC,SAAO,YAAY,CAAnB;AACD;AAED,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA+B;AACnC,SAAO,YAAY,CAAnB;AACD;AAED,OAAM,SAAU,eAAV,CAA0B,CAA1B,EAAsC;AAC1C,SAAO,mBAAmB,CAA1B;AACD;AAED,OAAM,SAAU,SAAV,CAAoB,CAApB,EAAgC;AACpC,SAAO,aAAa,CAApB;AACD;AACD,OAAM,SAAU,WAAV,CAAsB,CAAtB,EAAkC;AACtC,SAAO,eAAe,CAAtB;AACD;AAED,OAAM,SAAU,KAAV,CAAgB,CAAhB,EAA4B;AAChC,SAAO,SAAS,CAAhB;AACD;AAED,OAAM,SAAU,QAAV,CAAmB,CAAnB,EAA+B;AACnC,SAAO,YAAY,CAAnB;AACD;AAED,OAAM,SAAU,UAAV,CAAqB,CAArB,EAAiC;AACrC,SAAO,cAAc,CAArB;AACD;AAED,OAAM,SAAU,WAAV,CAAsB,CAAtB,EAAkC;AACtC,SAAO,eAAe,CAAtB;AACD;AAED,OAAM,SAAU,OAAV,CAAkB,CAAlB,EAA8B;AAClC,SAAO,WAAW,CAAlB;AACD;AAED,OAAM,SAAU,MAAV,CAAiB,CAAjB,EAA6B;AACjC,SAAO,UAAU,CAAjB;AACD;AAsBD,OAAM,SAAU,kBAAV,CAA6B,SAA7B,EAAmD;AACvD,SAAO,SAAS,CAAC,GAAV,CAAc,CAAC,IAAG;AACvB,QAAI,QAAQ,CAAC,CAAD,CAAZ,EAAiB;AACf,aAAO;AACL,QAAA,MAAM,EAAE,2BAA2B,CAAC,CAAC,CAAC,MAAH,EAAW,kBAAX;AAD9B,OAAP;AAGD;;AACD,WAAO,CAAP;AACD,GAPM,CAAP;AAQD","sourceRoot":"","sourcesContent":["import { normalizeLogicalComposition } from './logical';\nimport { normalizePredicate } from './predicate';\nexport function isFilter(t) {\n    return 'filter' in t;\n}\nexport function isImputeSequence(t) {\n    return (t === null || t === void 0 ? void 0 : t['stop']) !== undefined;\n}\nexport function isLookup(t) {\n    return 'lookup' in t;\n}\nexport function isLookupData(from) {\n    return 'data' in from;\n}\nexport function isLookupSelection(from) {\n    return 'param' in from;\n}\nexport function isPivot(t) {\n    return 'pivot' in t;\n}\nexport function isDensity(t) {\n    return 'density' in t;\n}\nexport function isQuantile(t) {\n    return 'quantile' in t;\n}\nexport function isRegression(t) {\n    return 'regression' in t;\n}\nexport function isLoess(t) {\n    return 'loess' in t;\n}\nexport function isSample(t) {\n    return 'sample' in t;\n}\nexport function isWindow(t) {\n    return 'window' in t;\n}\nexport function isJoinAggregate(t) {\n    return 'joinaggregate' in t;\n}\nexport function isFlatten(t) {\n    return 'flatten' in t;\n}\nexport function isCalculate(t) {\n    return 'calculate' in t;\n}\nexport function isBin(t) {\n    return 'bin' in t;\n}\nexport function isImpute(t) {\n    return 'impute' in t;\n}\nexport function isTimeUnit(t) {\n    return 'timeUnit' in t;\n}\nexport function isAggregate(t) {\n    return 'aggregate' in t;\n}\nexport function isStack(t) {\n    return 'stack' in t;\n}\nexport function isFold(t) {\n    return 'fold' in t;\n}\nexport function normalizeTransform(transform) {\n    return transform.map(t => {\n        if (isFilter(t)) {\n            return {\n                filter: normalizeLogicalComposition(t.filter, normalizePredicate)\n            };\n        }\n        return t;\n    });\n}\n//# sourceMappingURL=transform.js.map"]},"metadata":{},"sourceType":"module"}