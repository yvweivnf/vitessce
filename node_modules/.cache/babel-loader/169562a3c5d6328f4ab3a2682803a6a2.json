{"ast":null,"code":"// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\nmodule.exports = function pointInPolygonNested(point, vs, start, end) {\n  var x = point[0],\n      y = point[1];\n  var inside = false;\n  if (start === undefined) start = 0;\n  if (end === undefined) end = vs.length;\n  var len = end - start;\n\n  for (var i = 0, j = len - 1; i < len; j = i++) {\n    var xi = vs[i + start][0],\n        yi = vs[i + start][1];\n    var xj = vs[j + start][0],\n        yj = vs[j + start][1];\n    var intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n};","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/point-in-polygon/nested.js"],"names":["module","exports","pointInPolygonNested","point","vs","start","end","x","y","inside","undefined","length","len","i","j","xi","yi","xj","yj","intersect"],"mappings":"AAAA;AACA;AAEAA,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA+BC,KAA/B,EAAsCC,EAAtC,EAA0CC,KAA1C,EAAiDC,GAAjD,EAAsD;AACnE,MAAIC,CAAC,GAAGJ,KAAK,CAAC,CAAD,CAAb;AAAA,MAAkBK,CAAC,GAAGL,KAAK,CAAC,CAAD,CAA3B;AACA,MAAIM,MAAM,GAAG,KAAb;AACA,MAAIJ,KAAK,KAAKK,SAAd,EAAyBL,KAAK,GAAG,CAAR;AACzB,MAAIC,GAAG,KAAKI,SAAZ,EAAuBJ,GAAG,GAAGF,EAAE,CAACO,MAAT;AACvB,MAAIC,GAAG,GAAGN,GAAG,GAAGD,KAAhB;;AACA,OAAK,IAAIQ,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,GAAG,GAAG,CAA1B,EAA6BC,CAAC,GAAGD,GAAjC,EAAsCE,CAAC,GAAGD,CAAC,EAA3C,EAA+C;AAC3C,QAAIE,EAAE,GAAGX,EAAE,CAACS,CAAC,GAACR,KAAH,CAAF,CAAY,CAAZ,CAAT;AAAA,QAAyBW,EAAE,GAAGZ,EAAE,CAACS,CAAC,GAACR,KAAH,CAAF,CAAY,CAAZ,CAA9B;AACA,QAAIY,EAAE,GAAGb,EAAE,CAACU,CAAC,GAACT,KAAH,CAAF,CAAY,CAAZ,CAAT;AAAA,QAAyBa,EAAE,GAAGd,EAAE,CAACU,CAAC,GAACT,KAAH,CAAF,CAAY,CAAZ,CAA9B;AACA,QAAIc,SAAS,GAAKH,EAAE,GAAGR,CAAN,KAAcU,EAAE,GAAGV,CAApB,IACRD,CAAC,GAAG,CAACU,EAAE,GAAGF,EAAN,KAAaP,CAAC,GAAGQ,EAAjB,KAAwBE,EAAE,GAAGF,EAA7B,IAAmCD,EAD/C;AAEA,QAAII,SAAJ,EAAeV,MAAM,GAAG,CAACA,MAAV;AAClB;;AACD,SAAOA,MAAP;AACH,CAdD","sourcesContent":["// ray-casting algorithm based on\n// https://wrf.ecse.rpi.edu/Research/Short_Notes/pnpoly.html\n\nmodule.exports = function pointInPolygonNested (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = end - start;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[i+start][0], yi = vs[i+start][1];\n        var xj = vs[j+start][0], yj = vs[j+start][1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n"]},"metadata":{},"sourceType":"script"}