{"ast":null,"code":"/**\n *\n * Reference: https://github.com/visgl/deck.gl/blob/8.4-release/modules/layers/src/scatterplot-layer/scatterplot-layer-vertex.glsl.js\n * Reference: https://observablehq.com/@rreusser/selecting-the-right-opacity-for-2d-point-clouds\n * Reference: https://github.com/flekschas/regl-scatterplot/blob/5e3b03e/src/point.vs\n */var vs=\"\\nvec4 plasma (float x_1648624884) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.050980392156862744,0.03137254901960784,0.5294117647058824,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.29411764705882354,0.011764705882352941,0.6313725490196078,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.49019607843137253,0.011764705882352941,0.6588235294117647,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.6588235294117647,0.13333333333333333,0.5882352941176471,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.796078431372549,0.27450980392156865,0.4745098039215686,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8980392156862745,0.4196078431372549,0.36470588235294116,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.9725490196078431,0.5803921568627451,0.2549019607843137,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.9921568627450981,0.7647058823529411,0.1568627450980392,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9411764705882353,0.9764705882352941,0.12941176470588237,1);\\n  float a0 = smoothstep(e0,e1,x_1648624884);\\n  float a1 = smoothstep(e1,e2,x_1648624884);\\n  float a2 = smoothstep(e2,e3,x_1648624884);\\n  float a3 = smoothstep(e3,e4,x_1648624884);\\n  float a4 = smoothstep(e4,e5,x_1648624884);\\n  float a5 = smoothstep(e5,e6,x_1648624884);\\n  float a6 = smoothstep(e6,e7,x_1648624884);\\n  float a7 = smoothstep(e7,e8,x_1648624884);\\n  return max(mix(v0,v1,a0)*step(e0,x_1648624884)*step(x_1648624884,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_1648624884)*step(x_1648624884,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_1648624884)*step(x_1648624884,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_1648624884)*step(x_1648624884,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_1648624884)*step(x_1648624884,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_1648624884)*step(x_1648624884,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_1648624884)*step(x_1648624884,e7),mix(v7,v8,a7)*step(e7,x_1648624884)*step(x_1648624884,e8)\\n  )))))));\\n}\\n\\nvec4 viridis (float x_686877309) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.26666666666666666,0.00392156862745098,0.32941176470588235,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.2784313725490196,0.17254901960784313,0.47843137254901963,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.23137254901960785,0.3176470588235294,0.5450980392156862,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.17254901960784313,0.44313725490196076,0.5568627450980392,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.12941176470588237,0.5647058823529412,0.5529411764705883,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.15294117647058825,0.6784313725490196,0.5058823529411764,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.3607843137254902,0.7843137254901961,0.38823529411764707,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.6666666666666666,0.8627450980392157,0.19607843137254902,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9921568627450981,0.9058823529411765,0.1450980392156863,1);\\n  float a0 = smoothstep(e0,e1,x_686877309);\\n  float a1 = smoothstep(e1,e2,x_686877309);\\n  float a2 = smoothstep(e2,e3,x_686877309);\\n  float a3 = smoothstep(e3,e4,x_686877309);\\n  float a4 = smoothstep(e4,e5,x_686877309);\\n  float a5 = smoothstep(e5,e6,x_686877309);\\n  float a6 = smoothstep(e6,e7,x_686877309);\\n  float a7 = smoothstep(e7,e8,x_686877309);\\n  return max(mix(v0,v1,a0)*step(e0,x_686877309)*step(x_686877309,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_686877309)*step(x_686877309,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_686877309)*step(x_686877309,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_686877309)*step(x_686877309,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_686877309)*step(x_686877309,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_686877309)*step(x_686877309,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_686877309)*step(x_686877309,e7),mix(v7,v8,a7)*step(e7,x_686877309)*step(x_686877309,e8)\\n  )))))));\\n}\\n\\nvec4 greys (float x_3692066534) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_3692066534);\\n  return mix(v0,v1,a0)*step(e0,x_3692066534)*step(x_3692066534,e1);\\n}\\n\\nvec4 magma (float x_652973032) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.01568627450980392,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.10980392156862745,0.06274509803921569,0.26666666666666666,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.30980392156862746,0.07058823529411765,0.4823529411764706,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.5058823529411764,0.1450980392156863,0.5058823529411764,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.7098039215686275,0.21176470588235294,0.47843137254901963,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8980392156862745,0.3137254901960784,0.39215686274509803,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.984313725490196,0.5294117647058824,0.3803921568627451,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.996078431372549,0.7607843137254902,0.5294117647058824,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9882352941176471,0.9921568627450981,0.7490196078431373,1);\\n  float a0 = smoothstep(e0,e1,x_652973032);\\n  float a1 = smoothstep(e1,e2,x_652973032);\\n  float a2 = smoothstep(e2,e3,x_652973032);\\n  float a3 = smoothstep(e3,e4,x_652973032);\\n  float a4 = smoothstep(e4,e5,x_652973032);\\n  float a5 = smoothstep(e5,e6,x_652973032);\\n  float a6 = smoothstep(e6,e7,x_652973032);\\n  float a7 = smoothstep(e7,e8,x_652973032);\\n  return max(mix(v0,v1,a0)*step(e0,x_652973032)*step(x_652973032,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_652973032)*step(x_652973032,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_652973032)*step(x_652973032,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_652973032)*step(x_652973032,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_652973032)*step(x_652973032,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_652973032)*step(x_652973032,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_652973032)*step(x_652973032,e7),mix(v7,v8,a7)*step(e7,x_652973032)*step(x_652973032,e8)\\n  )))))));\\n}\\n\\nvec4 jet (float x_799389509) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.5137254901960784,1);\\n  const float e1 = 0.125;\\n  const vec4 v1 = vec4(0,0.23529411764705882,0.6666666666666666,1);\\n  const float e2 = 0.375;\\n  const vec4 v2 = vec4(0.0196078431372549,1,1,1);\\n  const float e3 = 0.625;\\n  const vec4 v3 = vec4(1,1,0,1);\\n  const float e4 = 0.875;\\n  const vec4 v4 = vec4(0.9803921568627451,0,0,1);\\n  const float e5 = 1.0;\\n  const vec4 v5 = vec4(0.5019607843137255,0,0,1);\\n  float a0 = smoothstep(e0,e1,x_799389509);\\n  float a1 = smoothstep(e1,e2,x_799389509);\\n  float a2 = smoothstep(e2,e3,x_799389509);\\n  float a3 = smoothstep(e3,e4,x_799389509);\\n  float a4 = smoothstep(e4,e5,x_799389509);\\n  return max(mix(v0,v1,a0)*step(e0,x_799389509)*step(x_799389509,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_799389509)*step(x_799389509,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_799389509)*step(x_799389509,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_799389509)*step(x_799389509,e4),mix(v4,v5,a4)*step(e4,x_799389509)*step(x_799389509,e5)\\n  ))));\\n}\\n\\nvec4 bone (float x_1404936397) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.376;\\n  const vec4 v1 = vec4(0.32941176470588235,0.32941176470588235,0.4549019607843137,1);\\n  const float e2 = 0.753;\\n  const vec4 v2 = vec4(0.6627450980392157,0.7843137254901961,0.7843137254901961,1);\\n  const float e3 = 1.0;\\n  const vec4 v3 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_1404936397);\\n  float a1 = smoothstep(e1,e2,x_1404936397);\\n  float a2 = smoothstep(e2,e3,x_1404936397);\\n  return max(mix(v0,v1,a0)*step(e0,x_1404936397)*step(x_1404936397,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_1404936397)*step(x_1404936397,e2),mix(v2,v3,a2)*step(e2,x_1404936397)*step(x_1404936397,e3)\\n  ));\\n}\\n\\nvec4 copper (float x_41650866) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.804;\\n  const vec4 v1 = vec4(1,0.6274509803921569,0.4,1);\\n  const float e2 = 1.0;\\n  const vec4 v2 = vec4(1,0.7803921568627451,0.4980392156862745,1);\\n  float a0 = smoothstep(e0,e1,x_41650866);\\n  float a1 = smoothstep(e1,e2,x_41650866);\\n  return max(mix(v0,v1,a0)*step(e0,x_41650866)*step(x_41650866,e1),mix(v1,v2,a1)*step(e1,x_41650866)*step(x_41650866,e2)\\n  );\\n}\\n\\nvec4 density (float x_681601952) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.21176470588235294,0.054901960784313725,0.1411764705882353,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.34901960784313724,0.09019607843137255,0.3137254901960784,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.43137254901960786,0.17647058823529413,0.5176470588235295,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.47058823529411764,0.30196078431372547,0.6980392156862745,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.47058823529411764,0.44313725490196076,0.8352941176470589,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.45098039215686275,0.592156862745098,0.8941176470588236,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.5254901960784314,0.7254901960784313,0.8901960784313725,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.6941176470588235,0.8392156862745098,0.8901960784313725,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9019607843137255,0.9450980392156862,0.9450980392156862,1);\\n  float a0 = smoothstep(e0,e1,x_681601952);\\n  float a1 = smoothstep(e1,e2,x_681601952);\\n  float a2 = smoothstep(e2,e3,x_681601952);\\n  float a3 = smoothstep(e3,e4,x_681601952);\\n  float a4 = smoothstep(e4,e5,x_681601952);\\n  float a5 = smoothstep(e5,e6,x_681601952);\\n  float a6 = smoothstep(e6,e7,x_681601952);\\n  float a7 = smoothstep(e7,e8,x_681601952);\\n  return max(mix(v0,v1,a0)*step(e0,x_681601952)*step(x_681601952,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_681601952)*step(x_681601952,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_681601952)*step(x_681601952,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_681601952)*step(x_681601952,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_681601952)*step(x_681601952,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_681601952)*step(x_681601952,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_681601952)*step(x_681601952,e7),mix(v7,v8,a7)*step(e7,x_681601952)*step(x_681601952,e8)\\n  )))))));\\n}\\n\\nvec4 inferno (float x_902288871) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0.01568627450980392,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.12156862745098039,0.047058823529411764,0.2823529411764706,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.3333333333333333,0.058823529411764705,0.42745098039215684,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.5333333333333333,0.13333333333333333,0.41568627450980394,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0.7294117647058823,0.21176470588235294,0.3333333333333333,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0.8901960784313725,0.34901960784313724,0.2,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0.9764705882352941,0.5490196078431373,0.0392156862745098,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.9764705882352941,0.788235294117647,0.19607843137254902,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.9882352941176471,1,0.6431372549019608,1);\\n  float a0 = smoothstep(e0,e1,x_902288871);\\n  float a1 = smoothstep(e1,e2,x_902288871);\\n  float a2 = smoothstep(e2,e3,x_902288871);\\n  float a3 = smoothstep(e3,e4,x_902288871);\\n  float a4 = smoothstep(e4,e5,x_902288871);\\n  float a5 = smoothstep(e5,e6,x_902288871);\\n  float a6 = smoothstep(e6,e7,x_902288871);\\n  float a7 = smoothstep(e7,e8,x_902288871);\\n  return max(mix(v0,v1,a0)*step(e0,x_902288871)*step(x_902288871,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_902288871)*step(x_902288871,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_902288871)*step(x_902288871,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_902288871)*step(x_902288871,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_902288871)*step(x_902288871,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_902288871)*step(x_902288871,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_902288871)*step(x_902288871,e7),mix(v7,v8,a7)*step(e7,x_902288871)*step(x_902288871,e8)\\n  )))))));\\n}\\n\\nvec4 cool (float x_2444426143) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0.49019607843137253,0,0.7019607843137254,1);\\n  const float e1 = 0.13;\\n  const vec4 v1 = vec4(0.4549019607843137,0,0.8549019607843137,1);\\n  const float e2 = 0.25;\\n  const vec4 v2 = vec4(0.3843137254901961,0.2901960784313726,0.9294117647058824,1);\\n  const float e3 = 0.38;\\n  const vec4 v3 = vec4(0.26666666666666666,0.5725490196078431,0.9058823529411765,1);\\n  const float e4 = 0.5;\\n  const vec4 v4 = vec4(0,0.8,0.7725490196078432,1);\\n  const float e5 = 0.63;\\n  const vec4 v5 = vec4(0,0.9686274509803922,0.5725490196078431,1);\\n  const float e6 = 0.75;\\n  const vec4 v6 = vec4(0,1,0.34509803921568627,1);\\n  const float e7 = 0.88;\\n  const vec4 v7 = vec4(0.1568627450980392,1,0.03137254901960784,1);\\n  const float e8 = 1.0;\\n  const vec4 v8 = vec4(0.5764705882352941,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_2444426143);\\n  float a1 = smoothstep(e1,e2,x_2444426143);\\n  float a2 = smoothstep(e2,e3,x_2444426143);\\n  float a3 = smoothstep(e3,e4,x_2444426143);\\n  float a4 = smoothstep(e4,e5,x_2444426143);\\n  float a5 = smoothstep(e5,e6,x_2444426143);\\n  float a6 = smoothstep(e6,e7,x_2444426143);\\n  float a7 = smoothstep(e7,e8,x_2444426143);\\n  return max(mix(v0,v1,a0)*step(e0,x_2444426143)*step(x_2444426143,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_2444426143)*step(x_2444426143,e2),\\n    max(mix(v2,v3,a2)*step(e2,x_2444426143)*step(x_2444426143,e3),\\n    max(mix(v3,v4,a3)*step(e3,x_2444426143)*step(x_2444426143,e4),\\n    max(mix(v4,v5,a4)*step(e4,x_2444426143)*step(x_2444426143,e5),\\n    max(mix(v5,v6,a5)*step(e5,x_2444426143)*step(x_2444426143,e6),\\n    max(mix(v6,v7,a6)*step(e6,x_2444426143)*step(x_2444426143,e7),mix(v7,v8,a7)*step(e7,x_2444426143)*step(x_2444426143,e8)\\n  )))))));\\n}\\n\\nvec4 hot (float x_1123650753) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,0,1);\\n  const float e1 = 0.3;\\n  const vec4 v1 = vec4(0.9019607843137255,0,0,1);\\n  const float e2 = 0.6;\\n  const vec4 v2 = vec4(1,0.8235294117647058,0,1);\\n  const float e3 = 1.0;\\n  const vec4 v3 = vec4(1,1,1,1);\\n  float a0 = smoothstep(e0,e1,x_1123650753);\\n  float a1 = smoothstep(e1,e2,x_1123650753);\\n  float a2 = smoothstep(e2,e3,x_1123650753);\\n  return max(mix(v0,v1,a0)*step(e0,x_1123650753)*step(x_1123650753,e1),\\n    max(mix(v1,v2,a1)*step(e1,x_1123650753)*step(x_1123650753,e2),mix(v2,v3,a2)*step(e2,x_1123650753)*step(x_1123650753,e3)\\n  ));\\n}\\n\\nvec4 spring (float x_3460271019) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(1,0,1,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_3460271019);\\n  return mix(v0,v1,a0)*step(e0,x_3460271019)*step(x_3460271019,e1);\\n}\\n\\nvec4 summer (float x_1787574999) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0.5019607843137255,0.4,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0.4,1);\\n  float a0 = smoothstep(e0,e1,x_1787574999);\\n  return mix(v0,v1,a0)*step(e0,x_1787574999)*step(x_1787574999,e1);\\n}\\n\\nvec4 autumn (float x_204634793) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(1,0,0,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(1,1,0,1);\\n  float a0 = smoothstep(e0,e1,x_204634793);\\n  return mix(v0,v1,a0)*step(e0,x_204634793)*step(x_204634793,e1);\\n}\\n\\nvec4 winter (float x_4071283602) {\\n  const float e0 = 0.0;\\n  const vec4 v0 = vec4(0,0,1,1);\\n  const float e1 = 1.0;\\n  const vec4 v1 = vec4(0,1,0.5019607843137255,1);\\n  float a0 = smoothstep(e0,e1,x_4071283602);\\n  return mix(v0,v1,a0)*step(e0,x_4071283602)*step(x_4071283602,e1);\\n}\\n\\n// Custom attributes for Vitessce:\\nattribute float expressionValue;\\n\\n// Custom uniforms for Vitessce:\\nuniform vec2 uColorScaleRange;\\nuniform bool uIsExpressionMode;\\n\\n\";var inject={'vs:DECKGL_FILTER_COLOR':\"\\n    if(uIsExpressionMode) {\\n      float normalizedExpressionValue = expressionValue / 255.0;\\n      float scaledExpressionValue = (normalizedExpressionValue - uColorScaleRange[0]) / max(0.005, (uColorScaleRange[1] - uColorScaleRange[0]));\\n      color.rgb = COLORMAP_FUNC(clamp(scaledExpressionValue, 0.0, 1.0)).rgb;\\n    }\\n  \"};export default{name:'scaled-expression',vs:vs,inject:inject};","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/layer-extensions/ScaledExpressionExtension/shader-module.js"],"names":["vs","inject","name"],"mappings":"AAEA;;;;;GAMA,GAAMA,CAAAA,EAAE,ojfAAR,CA0BA,GAAMC,CAAAA,MAAM,CAAG,CACb,qWADa,CAAf,CAUA,cAAe,CACbC,IAAI,CAAE,mBADO,CAEbF,EAAE,CAAFA,EAFa,CAGbC,MAAM,CAANA,MAHa,CAAf","sourcesContent":["import glsl from 'glslify';\n\n/**\n *\n * Reference: https://github.com/visgl/deck.gl/blob/8.4-release/modules/layers/src/scatterplot-layer/scatterplot-layer-vertex.glsl.js\n * Reference: https://observablehq.com/@rreusser/selecting-the-right-opacity-for-2d-point-clouds\n * Reference: https://github.com/flekschas/regl-scatterplot/blob/5e3b03e/src/point.vs\n */\nconst vs = glsl`\n#pragma glslify: plasma = require(\"glsl-colormap/plasma\")\n#pragma glslify: viridis = require(\"glsl-colormap/viridis\")\n#pragma glslify: greys = require(\"glsl-colormap/greys\")\n#pragma glslify: magma = require(\"glsl-colormap/magma\")\n#pragma glslify: jet = require(\"glsl-colormap/jet\")\n#pragma glslify: bone = require(\"glsl-colormap/bone\")\n#pragma glslify: copper = require(\"glsl-colormap/copper\")\n#pragma glslify: density = require(\"glsl-colormap/density\")\n#pragma glslify: inferno = require(\"glsl-colormap/inferno\")\n#pragma glslify: cool = require(\"glsl-colormap/cool\")\n#pragma glslify: hot = require(\"glsl-colormap/hot\")\n#pragma glslify: spring = require(\"glsl-colormap/spring\")\n#pragma glslify: summer = require(\"glsl-colormap/summer\")\n#pragma glslify: autumn = require(\"glsl-colormap/autumn\")\n#pragma glslify: winter = require(\"glsl-colormap/winter\")\n\n// Custom attributes for Vitessce:\nattribute float expressionValue;\n\n// Custom uniforms for Vitessce:\nuniform vec2 uColorScaleRange;\nuniform bool uIsExpressionMode;\n\n`;\n\nconst inject = {\n  'vs:DECKGL_FILTER_COLOR': `\n    if(uIsExpressionMode) {\n      float normalizedExpressionValue = expressionValue / 255.0;\n      float scaledExpressionValue = (normalizedExpressionValue - uColorScaleRange[0]) / max(0.005, (uColorScaleRange[1] - uColorScaleRange[0]));\n      color.rgb = COLORMAP_FUNC(clamp(scaledExpressionValue, 0.0, 1.0)).rgb;\n    }\n  `,\n};\n\nexport default {\n  name: 'scaled-expression',\n  vs,\n  inject,\n};\n"]},"metadata":{},"sourceType":"module"}