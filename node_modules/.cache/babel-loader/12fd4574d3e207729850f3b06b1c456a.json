{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _core = require(\"@luma.gl/core\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar Arrow2DGeometry = /*#__PURE__*/function (_Geometry) {\n  _inherits(Arrow2DGeometry, _Geometry);\n\n  var _super = _createSuper(Arrow2DGeometry);\n\n  function Arrow2DGeometry() {\n    var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Arrow2DGeometry);\n\n    return _super.call(this, Object.assign({}, opts, {\n      attributes: getArrowAttributes(opts)\n    }));\n  }\n\n  return Arrow2DGeometry;\n}(_core.Geometry);\n\nexports[\"default\"] = Arrow2DGeometry;\n\nfunction getArrowAttributes(_ref) {\n  var _ref$length = _ref.length,\n      length = _ref$length === void 0 ? 1 : _ref$length,\n      _ref$headSize = _ref.headSize,\n      headSize = _ref$headSize === void 0 ? 0.2 : _ref$headSize,\n      _ref$tailWidth = _ref.tailWidth,\n      tailWidth = _ref$tailWidth === void 0 ? 0.05 : _ref$tailWidth,\n      _ref$tailStart = _ref.tailStart,\n      tailStart = _ref$tailStart === void 0 ? 0.05 : _ref$tailStart;\n  var texCoords = [// HEAD\n  0.5, 1.0, 0, 0.5 - headSize / 2, 1.0 - headSize, 0, 0.5 + headSize / 2, 1.0 - headSize, 0, 0.5 - tailWidth / 2, tailStart, 0, 0.5 + tailWidth / 2, 1.0 - headSize, 0, 0.5 + tailWidth / 2, tailStart, 0, 0.5 - tailWidth / 2, tailStart, 0, 0.5 - tailWidth / 2, 1.0 - headSize, 0, 0.5 + tailWidth / 2, 1.0 - headSize, 0];\n  var normals = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1]; // Center and scale\n\n  var positions = new Array(texCoords.length);\n\n  for (var i = 0; i < texCoords.length / 3; i++) {\n    var i3 = i * 3;\n    positions[i3 + 0] = (texCoords[i3 + 0] - 0.5) * length;\n    positions[i3 + 1] = (texCoords[i3 + 1] - 0.5) * length;\n    positions[i3 + 2] = 0;\n  }\n\n  return {\n    positions: new Float32Array(positions),\n    normals: new Float32Array(normals),\n    texCoords: new Float32Array(texCoords)\n  };\n}","map":{"version":3,"sources":["../../../src/layers/path-marker-layer/arrow-2d-geometry.ts"],"names":["Arrow2DGeometry","Geometry","opts","attributes","getArrowAttributes","length","headSize","tailWidth","tailStart","texCoords","normals","positions","i","i3"],"mappings":"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","sourcesContent":["import { Geometry } from '@luma.gl/core';\n\nexport default class Arrow2DGeometry extends Geometry {\n  constructor(opts = {}) {\n    super(\n      Object.assign({}, opts, {\n        attributes: getArrowAttributes(opts),\n      })\n    );\n  }\n}\n\nfunction getArrowAttributes({ length = 1, headSize = 0.2, tailWidth = 0.05, tailStart = 0.05 }) {\n  const texCoords = [\n    // HEAD\n    0.5,\n    1.0,\n    0,\n    0.5 - headSize / 2,\n    1.0 - headSize,\n    0,\n    0.5 + headSize / 2,\n    1.0 - headSize,\n    0,\n    0.5 - tailWidth / 2,\n    tailStart,\n    0,\n    0.5 + tailWidth / 2,\n    1.0 - headSize,\n    0,\n    0.5 + tailWidth / 2,\n    tailStart,\n    0,\n    0.5 - tailWidth / 2,\n    tailStart,\n    0,\n    0.5 - tailWidth / 2,\n    1.0 - headSize,\n    0,\n    0.5 + tailWidth / 2,\n    1.0 - headSize,\n    0,\n  ];\n\n  const normals = [0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1];\n\n  // Center and scale\n  const positions = new Array(texCoords.length);\n  for (let i = 0; i < texCoords.length / 3; i++) {\n    const i3 = i * 3;\n    positions[i3 + 0] = (texCoords[i3 + 0] - 0.5) * length;\n    positions[i3 + 1] = (texCoords[i3 + 1] - 0.5) * length;\n    positions[i3 + 2] = 0;\n  }\n  return {\n    positions: new Float32Array(positions),\n    normals: new Float32Array(normals),\n    texCoords: new Float32Array(texCoords),\n  };\n}\n"]},"metadata":{},"sourceType":"script"}