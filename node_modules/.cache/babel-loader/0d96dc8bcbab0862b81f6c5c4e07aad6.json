{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\shared-plot-options\\\\CellColorEncodingOption.js\";\nimport React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport OptionSelect from './OptionSelect';\nimport { useStyles } from './styles';\nexport default function CellColorEncodingOption(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding\n  } = props;\n  const classes = useStyles();\n  const observationsLabelNice = capitalize(observationsLabel);\n\n  function handleColorEncodingChange(event) {\n    setCellColorEncoding(event.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    htmlFor: \"cell-color-encoding-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, observationsLabelNice, \" Color Encoding\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(OptionSelect, {\n    className: classes.select,\n    value: cellColorEncoding,\n    onChange: handleColorEncodingChange,\n    inputProps: {\n      id: 'cell-color-encoding-select'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"cellSetSelection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, \"Cell Sets\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"geneSelection\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Gene Expression\"))));\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/shared-plot-options/CellColorEncodingOption.js"],"names":["React","TableCell","TableRow","capitalize","OptionSelect","useStyles","CellColorEncodingOption","props","observationsLabel","cellColorEncoding","setCellColorEncoding","classes","observationsLabelNice","handleColorEncodingChange","event","target","value","labelCell","inputCell","select","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA,eAAe,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AACrD,QAAM;AACJC,IAAAA,iBADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA;AAHI,MAIFH,KAJJ;AAMA,QAAMI,OAAO,GAAGN,SAAS,EAAzB;AAEA,QAAMO,qBAAqB,GAAGT,UAAU,CAACK,iBAAD,CAAxC;;AAEA,WAASK,yBAAT,CAAmCC,KAAnC,EAA0C;AACxCJ,IAAAA,oBAAoB,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAApB;AACD;;AAED,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEL,OAAO,CAACM,SAA9B;AAAyC,IAAA,OAAO,EAAC,4BAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,qBADH,oBADF,eAIE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAED,OAAO,CAACO,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AACE,IAAA,SAAS,EAAEP,OAAO,CAACQ,MADrB;AAEE,IAAA,KAAK,EAAEV,iBAFT;AAGE,IAAA,QAAQ,EAAEI,yBAHZ;AAIE,IAAA,UAAU,EAAE;AACVO,MAAAA,EAAE,EAAE;AADM,KAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAQ,IAAA,KAAK,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBARF,eASE;AAAQ,IAAA,KAAK,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATF,CADF,CAJF,CADF;AAoBD","sourcesContent":["import React from 'react';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport OptionSelect from './OptionSelect';\nimport { useStyles } from './styles';\n\nexport default function CellColorEncodingOption(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding,\n  } = props;\n\n  const classes = useStyles();\n\n  const observationsLabelNice = capitalize(observationsLabel);\n\n  function handleColorEncodingChange(event) {\n    setCellColorEncoding(event.target.value);\n  }\n\n  return (\n    <TableRow>\n      <TableCell className={classes.labelCell} htmlFor=\"cell-color-encoding-select\">\n        {observationsLabelNice} Color Encoding\n      </TableCell>\n      <TableCell className={classes.inputCell}>\n        <OptionSelect\n          className={classes.select}\n          value={cellColorEncoding}\n          onChange={handleColorEncodingChange}\n          inputProps={{\n            id: 'cell-color-encoding-select',\n          }}\n        >\n          <option value=\"cellSetSelection\">Cell Sets</option>\n          <option value=\"geneSelection\">Gene Expression</option>\n        </OptionSelect>\n      </TableCell>\n    </TableRow>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}