{"ast":null,"code":"import { getChannelStats } from '@hms-dbmi/viv';\nimport { Matrix4 } from 'math.gl';\n\nasync function getSingleSelectionStats2D({\n  loader,\n  selection\n}) {\n  const data = Array.isArray(loader) ? loader[loader.length - 1] : loader;\n  const raster = await data.getRaster({\n    selection\n  });\n  const selectionStats = getChannelStats(raster.data);\n  const {\n    domain,\n    contrastLimits: slider\n  } = selectionStats;\n  return {\n    domain,\n    slider\n  };\n}\n\nasync function getSingleSelectionStats3D({\n  loader,\n  selection\n}) {\n  const lowResSource = loader[loader.length - 1];\n  const {\n    shape,\n    labels\n  } = lowResSource; // eslint-disable-next-line no-bitwise\n\n  const sizeZ = shape[labels.indexOf('z')] >> loader.length - 1;\n  const raster0 = await lowResSource.getRaster({\n    selection: { ...selection,\n      z: 0\n    }\n  });\n  const rasterMid = await lowResSource.getRaster({\n    selection: { ...selection,\n      z: Math.floor(sizeZ / 2)\n    }\n  });\n  const rasterTop = await lowResSource.getRaster({\n    selection: { ...selection,\n      z: Math.max(0, sizeZ - 1)\n    }\n  });\n  const stats0 = getChannelStats(raster0.data);\n  const statsMid = getChannelStats(rasterMid.data);\n  const statsTop = getChannelStats(rasterTop.data);\n  return {\n    domain: [Math.min(stats0.domain[0], statsMid.domain[0], statsTop.domain[0]), Math.max(stats0.domain[1], statsMid.domain[1], statsTop.domain[1])],\n    slider: [Math.min(stats0.contrastLimits[0], statsMid.contrastLimits[0], statsTop.contrastLimits[0]), Math.max(stats0.contrastLimits[1], statsMid.contrastLimits[1], statsTop.contrastLimits[1])]\n  };\n}\n/**\n * Get bounding cube for a given loader i.e [[0, width], [0, height], [0, depth]]\n * @param {Object} loader PixelSource|PixelSource[]\n * @param {[]} selection Selection for stats.\n * @param {boolean} use3d Whether or not to get 3d stats.\n * @returns {Object} { domains, sliders }\n */\n\n\nexport const getSingleSelectionStats = async ({\n  loader,\n  selection,\n  use3d\n}) => {\n  const getStats = use3d ? getSingleSelectionStats3D : getSingleSelectionStats2D;\n  return getStats({\n    loader,\n    selection\n  });\n};\nexport const getMultiSelectionStats = async ({\n  loader,\n  selections,\n  use3d\n}) => {\n  const stats = await Promise.all(selections.map(selection => getSingleSelectionStats({\n    loader,\n    selection,\n    use3d\n  })));\n  const domains = stats.map(stat => stat.domain);\n  const sliders = stats.map(stat => stat.slider);\n  return {\n    domains,\n    sliders\n  };\n};\n/**\n * Get physical size scaling Matrix4\n * @param {Object} loader PixelSource\n * @returns {Object} matrix\n */\n\nexport function getPhysicalSizeScalingMatrix(loader) {\n  var _loader$meta$physical, _loader$meta;\n\n  const {\n    x,\n    y,\n    z\n  } = (_loader$meta$physical = loader === null || loader === void 0 ? void 0 : (_loader$meta = loader.meta) === null || _loader$meta === void 0 ? void 0 : _loader$meta.physicalSizes) !== null && _loader$meta$physical !== void 0 ? _loader$meta$physical : {};\n\n  if ((x === null || x === void 0 ? void 0 : x.size) && (y === null || y === void 0 ? void 0 : y.size) && (z === null || z === void 0 ? void 0 : z.size)) {\n    const min = Math.min(z.size, x.size, y.size);\n    const ratio = [x.size / min, y.size / min, z.size / min];\n    return new Matrix4().scale(ratio);\n  }\n\n  return new Matrix4().identity();\n}\n/**\n * Get bounding cube for a given loader\n * @param {Object} loader PixelSource|PixelSource[]\n * @returns {Array} [0, width], [0, height], [0, depth]]\n */\n\nexport function getBoundingCube(loader) {\n  const source = Array.isArray(loader) ? loader[0] : loader;\n  const {\n    shape,\n    labels\n  } = source;\n  const physicalSizeScalingMatrix = getPhysicalSizeScalingMatrix(source);\n  const xSlice = [0, physicalSizeScalingMatrix[0] * shape[labels.indexOf('x')]];\n  const ySlice = [0, physicalSizeScalingMatrix[5] * shape[labels.indexOf('y')]];\n  const zSlice = [0, physicalSizeScalingMatrix[10] * shape[labels.indexOf('z')]];\n  return [xSlice, ySlice, zSlice];\n}\nexport function abbreviateNumber(value) {\n  // Return an abbreviated representation of value, in 5 characters or less.\n  const maxLength = 5;\n  let maxNaiveDigits = maxLength;\n  /* eslint-disable no-plusplus */\n\n  if (!Number.isInteger(value)) {\n    --maxNaiveDigits;\n  } // Wasted on \".\"\n\n\n  if (value < 1) {\n    --maxNaiveDigits;\n  } // Wasted on \"0.\"\n\n  /* eslint-disable no-plusplus */\n\n\n  const naive = Intl.NumberFormat('en-US', {\n    maximumSignificantDigits: maxNaiveDigits,\n    useGrouping: false\n  }).format(value);\n  if (naive.length <= maxLength) return naive; // \"e+9\" consumes 3 characters, so if we even had two significant digits,\n  // it would take take us to six characters, including the decimal point.\n\n  return value.toExponential(0);\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/layer-controller/utils.js"],"names":["getChannelStats","Matrix4","getSingleSelectionStats2D","loader","selection","data","Array","isArray","length","raster","getRaster","selectionStats","domain","contrastLimits","slider","getSingleSelectionStats3D","lowResSource","shape","labels","sizeZ","indexOf","raster0","z","rasterMid","Math","floor","rasterTop","max","stats0","statsMid","statsTop","min","getSingleSelectionStats","use3d","getStats","getMultiSelectionStats","selections","stats","Promise","all","map","domains","stat","sliders","getPhysicalSizeScalingMatrix","x","y","meta","physicalSizes","size","ratio","scale","identity","getBoundingCube","source","physicalSizeScalingMatrix","xSlice","ySlice","zSlice","abbreviateNumber","value","maxLength","maxNaiveDigits","Number","isInteger","naive","Intl","NumberFormat","maximumSignificantDigits","useGrouping","format","toExponential"],"mappings":"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","sourcesContent":["import { getChannelStats } from '@hms-dbmi/viv';\nimport { Matrix4 } from 'math.gl';\n\nasync function getSingleSelectionStats2D({ loader, selection }) {\n  const data = Array.isArray(loader) ? loader[loader.length - 1] : loader;\n  const raster = await data.getRaster({ selection });\n  const selectionStats = getChannelStats(raster.data);\n  const { domain, contrastLimits: slider } = selectionStats;\n  return { domain, slider };\n}\n\nasync function getSingleSelectionStats3D({ loader, selection }) {\n  const lowResSource = loader[loader.length - 1];\n  const { shape, labels } = lowResSource;\n  // eslint-disable-next-line no-bitwise\n  const sizeZ = shape[labels.indexOf('z')] >> (loader.length - 1);\n  const raster0 = await lowResSource.getRaster({\n    selection: { ...selection, z: 0 },\n  });\n  const rasterMid = await lowResSource.getRaster({\n    selection: { ...selection, z: Math.floor(sizeZ / 2) },\n  });\n  const rasterTop = await lowResSource.getRaster({\n    selection: { ...selection, z: Math.max(0, sizeZ - 1) },\n  });\n  const stats0 = getChannelStats(raster0.data);\n  const statsMid = getChannelStats(rasterMid.data);\n  const statsTop = getChannelStats(rasterTop.data);\n  return {\n    domain: [\n      Math.min(stats0.domain[0], statsMid.domain[0], statsTop.domain[0]),\n      Math.max(stats0.domain[1], statsMid.domain[1], statsTop.domain[1]),\n    ],\n    slider: [\n      Math.min(\n        stats0.contrastLimits[0],\n        statsMid.contrastLimits[0],\n        statsTop.contrastLimits[0],\n      ),\n      Math.max(\n        stats0.contrastLimits[1],\n        statsMid.contrastLimits[1],\n        statsTop.contrastLimits[1],\n      ),\n    ],\n  };\n}\n\n/**\n * Get bounding cube for a given loader i.e [[0, width], [0, height], [0, depth]]\n * @param {Object} loader PixelSource|PixelSource[]\n * @param {[]} selection Selection for stats.\n * @param {boolean} use3d Whether or not to get 3d stats.\n * @returns {Object} { domains, sliders }\n */\nexport const getSingleSelectionStats = async ({ loader, selection, use3d }) => {\n  const getStats = use3d\n    ? getSingleSelectionStats3D\n    : getSingleSelectionStats2D;\n  return getStats({ loader, selection });\n};\n\nexport const getMultiSelectionStats = async ({ loader, selections, use3d }) => {\n  const stats = await Promise.all(\n    selections.map(selection => getSingleSelectionStats({ loader, selection, use3d })),\n  );\n  const domains = stats.map(stat => stat.domain);\n  const sliders = stats.map(stat => stat.slider);\n  return { domains, sliders };\n};\n\n/**\n * Get physical size scaling Matrix4\n * @param {Object} loader PixelSource\n * @returns {Object} matrix\n */\nexport function getPhysicalSizeScalingMatrix(loader) {\n  const { x, y, z } = loader?.meta?.physicalSizes ?? {};\n  if (x?.size && y?.size && z?.size) {\n    const min = Math.min(z.size, x.size, y.size);\n    const ratio = [x.size / min, y.size / min, z.size / min];\n    return new Matrix4().scale(ratio);\n  }\n  return new Matrix4().identity();\n}\n\n/**\n * Get bounding cube for a given loader\n * @param {Object} loader PixelSource|PixelSource[]\n * @returns {Array} [0, width], [0, height], [0, depth]]\n */\nexport function getBoundingCube(loader) {\n  const source = Array.isArray(loader) ? loader[0] : loader;\n  const { shape, labels } = source;\n  const physicalSizeScalingMatrix = getPhysicalSizeScalingMatrix(source);\n  const xSlice = [0, physicalSizeScalingMatrix[0] * shape[labels.indexOf('x')]];\n  const ySlice = [0, physicalSizeScalingMatrix[5] * shape[labels.indexOf('y')]];\n  const zSlice = [\n    0,\n    physicalSizeScalingMatrix[10] * shape[labels.indexOf('z')],\n  ];\n  return [xSlice, ySlice, zSlice];\n}\n\nexport function abbreviateNumber(value) {\n  // Return an abbreviated representation of value, in 5 characters or less.\n\n  const maxLength = 5;\n  let maxNaiveDigits = maxLength;\n\n  /* eslint-disable no-plusplus */\n  if (!Number.isInteger(value)) {\n    --maxNaiveDigits;\n  } // Wasted on \".\"\n  if (value < 1) {\n    --maxNaiveDigits;\n  } // Wasted on \"0.\"\n  /* eslint-disable no-plusplus */\n\n  const naive = Intl.NumberFormat('en-US', {\n    maximumSignificantDigits: maxNaiveDigits,\n    useGrouping: false,\n  }).format(value);\n  if (naive.length <= maxLength) return naive;\n\n  // \"e+9\" consumes 3 characters, so if we even had two significant digits,\n  // it would take take us to six characters, including the decimal point.\n  return value.toExponential(0);\n}\n"]},"metadata":{},"sourceType":"module"}