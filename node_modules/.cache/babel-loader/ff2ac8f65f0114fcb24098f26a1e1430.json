{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\genes\\\\ExpressionHistogram.js\";\nimport React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES } from '../vega';\n/**\n * Gene expression histogram displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {string[]} props.geneSelection The list of genes\n * currently selected.\n * @param {object[]} props.data The expression data, an array\n * of objects with properties `value` and `gene`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * By default, 50.\n */\n\nexport default function ExpressionHistogram(props) {\n  const {\n    geneSelection,\n    data,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom = 50\n  } = props;\n  const xTitle = geneSelection && geneSelection.length >= 1 ? 'Normalized Expression Value' : 'Total Normalized Transcript Count';\n  const spec = {\n    mark: {\n      type: 'bar'\n    },\n    encoding: {\n      x: {\n        field: 'value',\n        type: 'quantitative',\n        bin: {\n          maxbins: 50\n        },\n        title: xTitle\n      },\n      y: {\n        type: 'quantitative',\n        aggregate: 'count',\n        title: 'Number of Cells'\n      },\n      color: {\n        value: 'gray'\n      }\n    },\n    width: clamp(width - marginRight, 10, Infinity),\n    height: clamp(height - marginBottom, 10, Infinity),\n    config: VEGA_THEMES[theme]\n  };\n  return /*#__PURE__*/React.createElement(VegaPlot, {\n    data: data,\n    spec: spec,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/genes/ExpressionHistogram.js"],"names":["React","clamp","VegaPlot","VEGA_THEMES","ExpressionHistogram","props","geneSelection","data","theme","width","height","marginRight","marginBottom","xTitle","length","spec","mark","type","encoding","x","field","bin","maxbins","title","y","aggregate","color","value","Infinity","config"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,QAAT,EAAmBC,WAAnB,QAAsC,SAAtC;AAEA;;;;;;;;;;;;;;;;;;;AAkBA,eAAe,SAASC,mBAAT,CAA6BC,KAA7B,EAAoC;AACjD,QAAM;AACJC,IAAAA,aADI;AAEJC,IAAAA,IAFI;AAGJC,IAAAA,KAHI;AAIJC,IAAAA,KAJI;AAKJC,IAAAA,MALI;AAMJC,IAAAA,WAAW,GAAG,EANV;AAOJC,IAAAA,YAAY,GAAG;AAPX,MAQFP,KARJ;AAUA,QAAMQ,MAAM,GAAGP,aAAa,IAAIA,aAAa,CAACQ,MAAd,IAAwB,CAAzC,GACX,6BADW,GAEX,mCAFJ;AAIA,QAAMC,IAAI,GAAG;AACXC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE;AAAR,KADK;AAEXC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,CAAC,EAAE;AACDC,QAAAA,KAAK,EAAE,OADN;AAEDH,QAAAA,IAAI,EAAE,cAFL;AAGDI,QAAAA,GAAG,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAHJ;AAIDC,QAAAA,KAAK,EAAEV;AAJN,OADK;AAORW,MAAAA,CAAC,EAAE;AACDP,QAAAA,IAAI,EAAE,cADL;AAEDQ,QAAAA,SAAS,EAAE,OAFV;AAGDF,QAAAA,KAAK,EAAE;AAHN,OAPK;AAYRG,MAAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAZC,KAFC;AAgBXlB,IAAAA,KAAK,EAAER,KAAK,CAACQ,KAAK,GAAGE,WAAT,EAAsB,EAAtB,EAA0BiB,QAA1B,CAhBD;AAiBXlB,IAAAA,MAAM,EAAET,KAAK,CAACS,MAAM,GAAGE,YAAV,EAAwB,EAAxB,EAA4BgB,QAA5B,CAjBF;AAkBXC,IAAAA,MAAM,EAAE1B,WAAW,CAACK,KAAD;AAlBR,GAAb;AAqBA,sBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAED,IADR;AAEE,IAAA,IAAI,EAAEQ,IAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAMD","sourcesContent":["import React from 'react';\nimport clamp from 'lodash/clamp';\nimport { VegaPlot, VEGA_THEMES } from '../vega';\n\n/**\n * Gene expression histogram displayed as a bar chart,\n * implemented with the VegaPlot component.\n * @param {object} props\n * @param {string[]} props.geneSelection The list of genes\n * currently selected.\n * @param {object[]} props.data The expression data, an array\n * of objects with properties `value` and `gene`.\n * @param {string} props.theme The name of the current Vitessce theme.\n * @param {number} props.width The container width.\n * @param {number} props.height The container height.\n * @param {number} props.marginRight The size of the margin\n * on the right side of the plot, to account for the vega menu button.\n * By default, 90.\n * @param {number} props.marginBottom The size of the margin\n * on the bottom of the plot, to account for long x-axis labels.\n * By default, 50.\n */\nexport default function ExpressionHistogram(props) {\n  const {\n    geneSelection,\n    data,\n    theme,\n    width,\n    height,\n    marginRight = 90,\n    marginBottom = 50,\n  } = props;\n\n  const xTitle = geneSelection && geneSelection.length >= 1\n    ? 'Normalized Expression Value'\n    : 'Total Normalized Transcript Count';\n\n  const spec = {\n    mark: { type: 'bar' },\n    encoding: {\n      x: {\n        field: 'value',\n        type: 'quantitative',\n        bin: { maxbins: 50 },\n        title: xTitle,\n      },\n      y: {\n        type: 'quantitative',\n        aggregate: 'count',\n        title: 'Number of Cells',\n      },\n      color: { value: 'gray' },\n    },\n    width: clamp(width - marginRight, 10, Infinity),\n    height: clamp(height - marginBottom, 10, Infinity),\n    config: VEGA_THEMES[theme],\n  };\n\n  return (\n    <VegaPlot\n      data={data}\n      spec={spec}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}