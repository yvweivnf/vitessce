{"ast":null,"code":"/* eslint-disable no-nested-ternary */\n\n/* eslint-disable no-param-reassign */\nimport { treeToCellColorsBySetNames } from './sets/cell-set-utils'; // The functions defined here have been adapted from d3-interpolate,\n// d3-color, and d3-scale-chromatic.\n// Color string \"rgb(r,g,b)\" representations are replaced by color array [r, g, b]\n// representations, to allow them to work nicely with deck.gl,\n// without the need to converting back and forth between string and array formats.\n// Reference: https://github.com/d3/d3-scale-chromatic/blob/431d21da776f97c632f53a855bd822edfbbcd56e/src/diverging/RdBu.js\n// eslint-disable-next-line max-len\n\nconst schemeRdBu = [[103, 0, 31], [178, 24, 43], [214, 96, 77], [244, 165, 130], [253, 219, 199], [247, 247, 247], [209, 229, 240], [146, 197, 222], [67, 147, 195], [33, 102, 172], [5, 48, 97]]; // eslint-disable-next-line max-len\n\nconst schemePlasma = [[13, 8, 135], [16, 7, 136], [19, 7, 137], [22, 7, 138], [25, 6, 140], [27, 6, 141], [29, 6, 142], [32, 6, 143], [34, 6, 144], [36, 6, 145], [38, 5, 145], [40, 5, 146], [42, 5, 147], [44, 5, 148], [46, 5, 149], [47, 5, 150], [49, 5, 151], [51, 5, 151], [53, 4, 152], [55, 4, 153], [56, 4, 154], [58, 4, 154], [60, 4, 155], [62, 4, 156], [63, 4, 156], [65, 4, 157], [67, 3, 158], [68, 3, 158], [70, 3, 159], [72, 3, 159], [73, 3, 160], [75, 3, 161], [76, 2, 161], [78, 2, 162], [80, 2, 162], [81, 2, 163], [83, 2, 163], [85, 2, 164], [86, 1, 164], [88, 1, 164], [89, 1, 165], [91, 1, 165], [92, 1, 166], [94, 1, 166], [96, 1, 166], [97, 0, 167], [99, 0, 167], [100, 0, 167], [102, 0, 167], [103, 0, 168], [105, 0, 168], [106, 0, 168], [108, 0, 168], [110, 0, 168], [111, 0, 168], [113, 0, 168], [114, 1, 168], [116, 1, 168], [117, 1, 168], [119, 1, 168], [120, 1, 168], [122, 2, 168], [123, 2, 168], [125, 3, 168], [126, 3, 168], [128, 4, 168], [129, 4, 167], [131, 5, 167], [132, 5, 167], [134, 6, 166], [135, 7, 166], [136, 8, 166], [138, 9, 165], [139, 10, 165], [141, 11, 165], [142, 12, 164], [143, 13, 164], [145, 14, 163], [146, 15, 163], [148, 16, 162], [149, 17, 161], [150, 19, 161], [152, 20, 160], [153, 21, 159], [154, 22, 159], [156, 23, 158], [157, 24, 157], [158, 25, 157], [160, 26, 156], [161, 27, 155], [162, 29, 154], [163, 30, 154], [165, 31, 153], [166, 32, 152], [167, 33, 151], [168, 34, 150], [170, 35, 149], [171, 36, 148], [172, 38, 148], [173, 39, 147], [174, 40, 146], [176, 41, 145], [177, 42, 144], [178, 43, 143], [179, 44, 142], [180, 46, 141], [181, 47, 140], [182, 48, 139], [183, 49, 138], [184, 50, 137], [186, 51, 136], [187, 52, 136], [188, 53, 135], [189, 55, 134], [190, 56, 133], [191, 57, 132], [192, 58, 131], [193, 59, 130], [194, 60, 129], [195, 61, 128], [196, 62, 127], [197, 64, 126], [198, 65, 125], [199, 66, 124], [200, 67, 123], [201, 68, 122], [202, 69, 122], [203, 70, 121], [204, 71, 120], [204, 73, 119], [205, 74, 118], [206, 75, 117], [207, 76, 116], [208, 77, 115], [209, 78, 114], [210, 79, 113], [211, 81, 113], [212, 82, 112], [213, 83, 111], [213, 84, 110], [214, 85, 109], [215, 86, 108], [216, 87, 107], [217, 88, 106], [218, 90, 106], [218, 91, 105], [219, 92, 104], [220, 93, 103], [221, 94, 102], [222, 95, 101], [222, 97, 100], [223, 98, 99], [224, 99, 99], [225, 100, 98], [226, 101, 97], [226, 102, 96], [227, 104, 95], [228, 105, 94], [229, 106, 93], [229, 107, 93], [230, 108, 92], [231, 110, 91], [231, 111, 90], [232, 112, 89], [233, 113, 88], [233, 114, 87], [234, 116, 87], [235, 117, 86], [235, 118, 85], [236, 119, 84], [237, 121, 83], [237, 122, 82], [238, 123, 81], [239, 124, 81], [239, 126, 80], [240, 127, 79], [240, 128, 78], [241, 129, 77], [241, 131, 76], [242, 132, 75], [243, 133, 75], [243, 135, 74], [244, 136, 73], [244, 137, 72], [245, 139, 71], [245, 140, 70], [246, 141, 69], [246, 143, 68], [247, 144, 68], [247, 145, 67], [247, 147, 66], [248, 148, 65], [248, 149, 64], [249, 151, 63], [249, 152, 62], [249, 154, 62], [250, 155, 61], [250, 156, 60], [250, 158, 59], [251, 159, 58], [251, 161, 57], [251, 162, 56], [252, 163, 56], [252, 165, 55], [252, 166, 54], [252, 168, 53], [252, 169, 52], [253, 171, 51], [253, 172, 51], [253, 174, 50], [253, 175, 49], [253, 177, 48], [253, 178, 47], [253, 180, 47], [253, 181, 46], [254, 183, 45], [254, 184, 44], [254, 186, 44], [254, 187, 43], [254, 189, 42], [254, 190, 42], [254, 192, 41], [253, 194, 41], [253, 195, 40], [253, 197, 39], [253, 198, 39], [253, 200, 39], [253, 202, 38], [253, 203, 38], [252, 205, 37], [252, 206, 37], [252, 208, 37], [252, 210, 37], [251, 211, 36], [251, 213, 36], [251, 215, 36], [250, 216, 36], [250, 218, 36], [249, 220, 36], [249, 221, 37], [248, 223, 37], [248, 225, 37], [247, 226, 37], [247, 228, 37], [246, 230, 38], [246, 232, 38], [245, 233, 38], [245, 235, 39], [244, 237, 39], [243, 238, 39], [243, 240, 39], [242, 242, 39], [241, 244, 38], [241, 245, 37], [240, 247, 36], [240, 249, 33]]; // Reference: https://github.com/d3/d3-interpolate/blob/96d54051d1c2fec55f240edd0ec5401715b10390/src/rgb.js\n\nfunction rgbSpline(spline) {\n  return colors => {\n    const n = colors.length;\n    let r = new Array(n);\n    let g = new Array(n);\n    let b = new Array(n);\n    let i;\n    let color; // eslint-disable-next-line no-plusplus\n\n    for (i = 0; i < n; ++i) {\n      color = [colors[i][0], colors[i][1], colors[i][2]];\n      r[i] = color[0] || 0;\n      g[i] = color[1] || 0;\n      b[i] = color[2] || 0;\n    }\n\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    return t => [r(t), g(t), b(t)];\n  };\n} // Reference: https://github.com/d3/d3-interpolate/blob/594a32af1fe1118812b439012c2cb742e907c0c0/src/basis.js\n\n\nfunction basis(values) {\n  function innerBasis(t1, v0, v1, v2, v3) {\n    const t2 = t1 * t1;\n    const t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;\n  }\n\n  const n = values.length - 1;\n  return t => {\n    const i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n);\n    const v1 = values[i];\n    const v2 = values[i + 1];\n    const v0 = i > 0 ? values[i - 1] : 2 * v1 - v2;\n    const v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return innerBasis((t - i / n) * n, v0, v1, v2, v3);\n  };\n} // Reference: https://github.com/d3/d3-scale-chromatic/blob/ade54c13e8dfdb9807801a794eaec1a37f926b8a/src/ramp.js\n\n\nconst interpolateRgbBasis = rgbSpline(basis);\n\nfunction interpolateSequentialMulti(range) {\n  const n = range.length;\n  return t => range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n}\n\nexport const interpolateRdBu = interpolateRgbBasis(schemeRdBu);\nexport const interpolatePlasma = interpolateSequentialMulti(schemePlasma);\n/**\n * Get a mapping of cell IDs to cell colors based on\n * gene / cell set selection coordination state.\n * @param {object} params\n * @param {object} params.expressionMatrix { rows, cols, matrix }\n * @param {array} params.geneSelection Array of selected gene IDs.\n * @param {object} params.cellSets The cell sets tree.\n * @param {object} params.cellSetSelection Selected cell sets.\n * @param {string} params.cellColorEncoding Which to use for\n * coloring: gene expression or cell sets?\n * @returns {Map} Mapping from cell IDs to [r, g, b] color arrays.\n */\n\nexport function getCellColors(params) {\n  const {\n    cellColorEncoding,\n    expressionData,\n    cellSets,\n    cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs,\n    theme\n  } = params;\n\n  if (cellColorEncoding === 'geneSelection' && expressionData && expressionDataAttrs) {\n    // TODO: allow other color maps.\n    const geneExpColormap = interpolatePlasma;\n    const colors = new Map();\n\n    for (let i = 0; i < expressionData.length; i += 1) {\n      const value = expressionData[i];\n      const cellColor = geneExpColormap(value / 255);\n      colors.set(expressionDataAttrs.rows[i], cellColor);\n    }\n\n    return colors;\n  }\n\n  if (cellColorEncoding === 'cellSetSelection' && cellSetSelection && cellSets) {\n    // Cell sets can potentially lack set colors since the color property\n    // is not a required part of the schema.\n    // The `initializeSets` function fills in any empty colors\n    // with defaults and returns the processed tree object.\n    return treeToCellColorsBySetNames(cellSets, cellSetSelection, cellSetColor, theme);\n  }\n\n  return new Map();\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/interpolate-colors.js"],"names":["treeToCellColorsBySetNames","schemeRdBu","schemePlasma","rgbSpline","spline","colors","n","length","r","Array","g","b","i","color","t","basis","values","innerBasis","t1","v0","v1","v2","v3","t2","t3","Math","floor","interpolateRgbBasis","interpolateSequentialMulti","range","max","min","interpolateRdBu","interpolatePlasma","getCellColors","params","cellColorEncoding","expressionData","cellSets","cellSetSelection","cellSetColor","expressionDataAttrs","theme","geneExpColormap","Map","value","cellColor","set","rows"],"mappings":"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","sourcesContent":["/* eslint-disable no-nested-ternary */\n/* eslint-disable no-param-reassign */\nimport { treeToCellColorsBySetNames } from './sets/cell-set-utils';\n\n// The functions defined here have been adapted from d3-interpolate,\n// d3-color, and d3-scale-chromatic.\n// Color string \"rgb(r,g,b)\" representations are replaced by color array [r, g, b]\n// representations, to allow them to work nicely with deck.gl,\n// without the need to converting back and forth between string and array formats.\n\n// Reference: https://github.com/d3/d3-scale-chromatic/blob/431d21da776f97c632f53a855bd822edfbbcd56e/src/diverging/RdBu.js\n// eslint-disable-next-line max-len\nconst schemeRdBu = [[103, 0, 31], [178, 24, 43], [214, 96, 77], [244, 165, 130], [253, 219, 199], [247, 247, 247], [209, 229, 240], [146, 197, 222], [67, 147, 195], [33, 102, 172], [5, 48, 97]];\n// eslint-disable-next-line max-len\nconst schemePlasma = [[13, 8, 135], [16, 7, 136], [19, 7, 137], [22, 7, 138], [25, 6, 140], [27, 6, 141], [29, 6, 142], [32, 6, 143], [34, 6, 144], [36, 6, 145], [38, 5, 145], [40, 5, 146], [42, 5, 147], [44, 5, 148], [46, 5, 149], [47, 5, 150], [49, 5, 151], [51, 5, 151], [53, 4, 152], [55, 4, 153], [56, 4, 154], [58, 4, 154], [60, 4, 155], [62, 4, 156], [63, 4, 156], [65, 4, 157], [67, 3, 158], [68, 3, 158], [70, 3, 159], [72, 3, 159], [73, 3, 160], [75, 3, 161], [76, 2, 161], [78, 2, 162], [80, 2, 162], [81, 2, 163], [83, 2, 163], [85, 2, 164], [86, 1, 164], [88, 1, 164], [89, 1, 165], [91, 1, 165], [92, 1, 166], [94, 1, 166], [96, 1, 166], [97, 0, 167], [99, 0, 167], [100, 0, 167], [102, 0, 167], [103, 0, 168], [105, 0, 168], [106, 0, 168], [108, 0, 168], [110, 0, 168], [111, 0, 168], [113, 0, 168], [114, 1, 168], [116, 1, 168], [117, 1, 168], [119, 1, 168], [120, 1, 168], [122, 2, 168], [123, 2, 168], [125, 3, 168], [126, 3, 168], [128, 4, 168], [129, 4, 167], [131, 5, 167], [132, 5, 167], [134, 6, 166], [135, 7, 166], [136, 8, 166], [138, 9, 165], [139, 10, 165], [141, 11, 165], [142, 12, 164], [143, 13, 164], [145, 14, 163], [146, 15, 163], [148, 16, 162], [149, 17, 161], [150, 19, 161], [152, 20, 160], [153, 21, 159], [154, 22, 159], [156, 23, 158], [157, 24, 157], [158, 25, 157], [160, 26, 156], [161, 27, 155], [162, 29, 154], [163, 30, 154], [165, 31, 153], [166, 32, 152], [167, 33, 151], [168, 34, 150], [170, 35, 149], [171, 36, 148], [172, 38, 148], [173, 39, 147], [174, 40, 146], [176, 41, 145], [177, 42, 144], [178, 43, 143], [179, 44, 142], [180, 46, 141], [181, 47, 140], [182, 48, 139], [183, 49, 138], [184, 50, 137], [186, 51, 136], [187, 52, 136], [188, 53, 135], [189, 55, 134], [190, 56, 133], [191, 57, 132], [192, 58, 131], [193, 59, 130], [194, 60, 129], [195, 61, 128], [196, 62, 127], [197, 64, 126], [198, 65, 125], [199, 66, 124], [200, 67, 123], [201, 68, 122], [202, 69, 122], [203, 70, 121], [204, 71, 120], [204, 73, 119], [205, 74, 118], [206, 75, 117], [207, 76, 116], [208, 77, 115], [209, 78, 114], [210, 79, 113], [211, 81, 113], [212, 82, 112], [213, 83, 111], [213, 84, 110], [214, 85, 109], [215, 86, 108], [216, 87, 107], [217, 88, 106], [218, 90, 106], [218, 91, 105], [219, 92, 104], [220, 93, 103], [221, 94, 102], [222, 95, 101], [222, 97, 100], [223, 98, 99], [224, 99, 99], [225, 100, 98], [226, 101, 97], [226, 102, 96], [227, 104, 95], [228, 105, 94], [229, 106, 93], [229, 107, 93], [230, 108, 92], [231, 110, 91], [231, 111, 90], [232, 112, 89], [233, 113, 88], [233, 114, 87], [234, 116, 87], [235, 117, 86], [235, 118, 85], [236, 119, 84], [237, 121, 83], [237, 122, 82], [238, 123, 81], [239, 124, 81], [239, 126, 80], [240, 127, 79], [240, 128, 78], [241, 129, 77], [241, 131, 76], [242, 132, 75], [243, 133, 75], [243, 135, 74], [244, 136, 73], [244, 137, 72], [245, 139, 71], [245, 140, 70], [246, 141, 69], [246, 143, 68], [247, 144, 68], [247, 145, 67], [247, 147, 66], [248, 148, 65], [248, 149, 64], [249, 151, 63], [249, 152, 62], [249, 154, 62], [250, 155, 61], [250, 156, 60], [250, 158, 59], [251, 159, 58], [251, 161, 57], [251, 162, 56], [252, 163, 56], [252, 165, 55], [252, 166, 54], [252, 168, 53], [252, 169, 52], [253, 171, 51], [253, 172, 51], [253, 174, 50], [253, 175, 49], [253, 177, 48], [253, 178, 47], [253, 180, 47], [253, 181, 46], [254, 183, 45], [254, 184, 44], [254, 186, 44], [254, 187, 43], [254, 189, 42], [254, 190, 42], [254, 192, 41], [253, 194, 41], [253, 195, 40], [253, 197, 39], [253, 198, 39], [253, 200, 39], [253, 202, 38], [253, 203, 38], [252, 205, 37], [252, 206, 37], [252, 208, 37], [252, 210, 37], [251, 211, 36], [251, 213, 36], [251, 215, 36], [250, 216, 36], [250, 218, 36], [249, 220, 36], [249, 221, 37], [248, 223, 37], [248, 225, 37], [247, 226, 37], [247, 228, 37], [246, 230, 38], [246, 232, 38], [245, 233, 38], [245, 235, 39], [244, 237, 39], [243, 238, 39], [243, 240, 39], [242, 242, 39], [241, 244, 38], [241, 245, 37], [240, 247, 36], [240, 249, 33]];\n\n// Reference: https://github.com/d3/d3-interpolate/blob/96d54051d1c2fec55f240edd0ec5401715b10390/src/rgb.js\nfunction rgbSpline(spline) {\n  return (colors) => {\n    const n = colors.length;\n    let r = new Array(n);\n    let g = new Array(n);\n    let b = new Array(n);\n    let i; let\n      color;\n    // eslint-disable-next-line no-plusplus\n    for (i = 0; i < n; ++i) {\n      color = [colors[i][0], colors[i][1], colors[i][2]];\n      r[i] = color[0] || 0;\n      g[i] = color[1] || 0;\n      b[i] = color[2] || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    return t => [r(t), g(t), b(t)];\n  };\n}\n\n// Reference: https://github.com/d3/d3-interpolate/blob/594a32af1fe1118812b439012c2cb742e907c0c0/src/basis.js\nfunction basis(values) {\n  function innerBasis(t1, v0, v1, v2, v3) {\n    const t2 = t1 * t1; const\n      t3 = t2 * t1;\n    return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n          + (4 - 6 * t2 + 3 * t3) * v1\n          + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n          + t3 * v3) / 6;\n  }\n\n  const n = values.length - 1;\n  return (t) => {\n    const i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n);\n    const v1 = values[i];\n    const v2 = values[i + 1];\n    const v0 = i > 0 ? values[i - 1] : 2 * v1 - v2;\n    const v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return innerBasis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n\n\n// Reference: https://github.com/d3/d3-scale-chromatic/blob/ade54c13e8dfdb9807801a794eaec1a37f926b8a/src/ramp.js\nconst interpolateRgbBasis = rgbSpline(basis);\n\nfunction interpolateSequentialMulti(range) {\n  const n = range.length;\n  return t => range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n}\n\nexport const interpolateRdBu = interpolateRgbBasis(schemeRdBu);\nexport const interpolatePlasma = interpolateSequentialMulti(schemePlasma);\n\n\n/**\n * Get a mapping of cell IDs to cell colors based on\n * gene / cell set selection coordination state.\n * @param {object} params\n * @param {object} params.expressionMatrix { rows, cols, matrix }\n * @param {array} params.geneSelection Array of selected gene IDs.\n * @param {object} params.cellSets The cell sets tree.\n * @param {object} params.cellSetSelection Selected cell sets.\n * @param {string} params.cellColorEncoding Which to use for\n * coloring: gene expression or cell sets?\n * @returns {Map} Mapping from cell IDs to [r, g, b] color arrays.\n */\nexport function getCellColors(params) {\n  const {\n    cellColorEncoding,\n    expressionData,\n    cellSets, cellSetSelection,\n    cellSetColor,\n    expressionDataAttrs,\n    theme,\n  } = params;\n  if (cellColorEncoding === 'geneSelection' && expressionData && expressionDataAttrs) {\n    // TODO: allow other color maps.\n    const geneExpColormap = interpolatePlasma;\n    const colors = new Map();\n    for (let i = 0; i < expressionData.length; i += 1) {\n      const value = expressionData[i];\n      const cellColor = geneExpColormap(value / 255);\n      colors.set(expressionDataAttrs.rows[i], cellColor);\n    }\n    return colors;\n  } if (cellColorEncoding === 'cellSetSelection' && cellSetSelection && cellSets) {\n    // Cell sets can potentially lack set colors since the color property\n    // is not a required part of the schema.\n    // The `initializeSets` function fills in any empty colors\n    // with defaults and returns the processed tree object.\n    return treeToCellColorsBySetNames(cellSets, cellSetSelection, cellSetColor, theme);\n  }\n  return new Map();\n}\n"]},"metadata":{},"sourceType":"module"}