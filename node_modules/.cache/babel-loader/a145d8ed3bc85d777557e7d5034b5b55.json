{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _regeneratorRuntime from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import React from'react';import range from'lodash/range';import{Matrix4}from'math.gl';import Grid from'@material-ui/core/Grid';import Slider from'@material-ui/core/Slider';import InputLabel from'@material-ui/core/InputLabel';import Select from'@material-ui/core/Select';import Checkbox from'@material-ui/core/Checkbox';import{getDefaultInitialViewState}from'@hms-dbmi/viv';import{getBoundingCube,getMultiSelectionStats}from'./utils';import{COLORMAP_OPTIONS,canLoadResolution,formatBytes,getStatsForResolution}from'../utils';import{DEFAULT_RASTER_DOMAIN_TYPE}from'../spatial/constants';import{StyledSelectionSlider,useSelectStyles}from'./styles';var DOMAIN_OPTIONS=['Full','Min/Max'];/**\n * Wrapper for the dropdown that selects a colormap (None, viridis, magma, etc.).\n * @prop {Object} loader Loader object with metadata.\n * @prop {function} handleMultiPropertyChange Function to propgate multiple layer changes at once.\n * This prevents updates from overridding each other.\n * @prop {number} resolution Current 3D resolution.\n * @prop {boolean} disable3d Whether or not to enable 3D selection\n * @prop {function} setRasterLayerCallback Setter for callbacks that fire after raster/volume loads.\n * @prop {function} setAreAllChannelsLoading Setter for whether or not a given channel is loading.\n * @prop {Object} setViewState Setter for the current view state.\n * @prop {number} spatialHeight Height of the spatial component.\n * @prop {number} spatialWidth Width of the spatial component.\n * @prop {object} channels Channels object.\n * @prop {boolean} use3d Whether or not 3D is enabled for this layer.\n */function VolumeDropdown(_ref){var loaderWithMeta=_ref.loader,handleMultiPropertyChange=_ref.handleMultiPropertyChange,currResolution=_ref.resolution,disable3d=_ref.disable3d,setRasterLayerCallback=_ref.setRasterLayerCallback,setAreAllChannelsLoading=_ref.setAreAllChannelsLoading,setViewState=_ref.setViewState,spatialHeight=_ref.spatialHeight,spatialWidth=_ref.spatialWidth,channels=_ref.channels,use3d=_ref.use3d,modelMatrix=_ref.modelMatrix;var classes=useSelectStyles();var selections=channels.map(function(i){return i.selection;});var loader=loaderWithMeta.data;var handleChange=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(val){var shouldUse3D,_getBoundingCube,_getBoundingCube2,xSlice,ySlice,zSlice,propertiesChanged,_yield$getMultiSelect,sliders,defaultViewState,_yield$getMultiSelect2,_sliders,newChannels,_defaultViewState;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:// val is the resolution - null indicates 2D\nshouldUse3D=typeof val==='number';setAreAllChannelsLoading(true);setRasterLayerCallback(function(){setAreAllChannelsLoading(false);setRasterLayerCallback(null);});if(!shouldUse3D){_context.next=18;break;}_getBoundingCube=getBoundingCube(loader),_getBoundingCube2=_slicedToArray(_getBoundingCube,3),xSlice=_getBoundingCube2[0],ySlice=_getBoundingCube2[1],zSlice=_getBoundingCube2[2];propertiesChanged={resolution:val,xSlice:xSlice,ySlice:ySlice,zSlice:zSlice,use3d:shouldUse3D};// Only make the fetch if needed i.e if the 3d was just being turned on.\nif(use3d){_context.next=13;break;}_context.next=9;return getMultiSelectionStats({loader:loader,selections:selections,use3d:shouldUse3D});case 9:_yield$getMultiSelect=_context.sent;sliders=_yield$getMultiSelect.sliders;propertiesChanged.channels=_toConsumableArray(channels);propertiesChanged.channels.forEach(function(ch,i){// eslint-disable-next-line no-param-reassign\nch.slider=sliders[i];});case 13:// Update all properties at once to avoid overriding calls.\nhandleMultiPropertyChange(propertiesChanged);defaultViewState=getDefaultInitialViewState(loader,{height:spatialHeight,width:spatialWidth},1.5,true,new Matrix4(modelMatrix));setViewState(_objectSpread({},defaultViewState,{rotationX:0,rotationOrbit:0}));_context.next=27;break;case 18:_context.next=20;return getMultiSelectionStats({loader:loader,selections:selections,use3d:shouldUse3D});case 20:_yield$getMultiSelect2=_context.sent;_sliders=_yield$getMultiSelect2.sliders;newChannels=_toConsumableArray(channels);newChannels.forEach(function(ch,i){// eslint-disable-next-line no-param-reassign\nch.slider=_sliders[i];});// Update all properties at once to avoid overriding calls.\nhandleMultiPropertyChange({resolution:val,use3d:shouldUse3D,spatialAxisFixed:false,channels:newChannels});_defaultViewState=getDefaultInitialViewState(loader,{height:spatialHeight,width:spatialWidth},0.5,false,new Matrix4(modelMatrix));setViewState(_objectSpread({},_defaultViewState,{rotationX:null,rotationOrbit:null,orbitAxis:null}));case 27:case\"end\":return _context.stop();}}},_callee);}));return function handleChange(_x){return _ref2.apply(this,arguments);};}();var _ref3=Array.isArray(loader)?loader[0]:loader,labels=_ref3.labels,shape=_ref3.shape;var hasZStack=shape[labels.indexOf('z')]>1;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Select,{native:true,value:currResolution,onChange:function onChange(e){return handleChange(e.target.value==='2D'?e.target.value:Number(e.target.value));},classes:{root:classes.selectRoot}},/*#__PURE__*/React.createElement(\"option\",{key:\"2D\",value:\"2D\"},\"2D Visualization\"),Array.from({length:loader.length}).fill(0)// eslint-disable-next-line no-unused-vars\n.map(function(_,resolution){if(loader){if(canLoadResolution(loader,resolution)){var _getStatsForResolutio=getStatsForResolution(loader,resolution),height=_getStatsForResolutio.height,width=_getStatsForResolutio.width,depthDownsampled=_getStatsForResolutio.depthDownsampled,totalBytes=_getStatsForResolutio.totalBytes;return/*#__PURE__*/React.createElement(\"option\",{key:\"(\".concat(height,\", \").concat(width,\", \").concat(depthDownsampled,\")\"),value:resolution,disabled:disable3d||!hasZStack},\"3D: \".concat(resolution,\"x Downsampled, ~\").concat(formatBytes(totalBytes),\" per channel, (\").concat(height,\", \").concat(width,\", \").concat(depthDownsampled,\")\"));}}return null;})));}/**\n * Wrapper for the dropdown that selects a colormap (None, viridis, magma, etc.).\n * @prop {string} value Currently selected value for the colormap.\n * @prop {string} inputId Css id.\n * @prop {function} handleChange Callback for every change in colormap.\n */function ColormapSelect(_ref4){var value=_ref4.value,inputId=_ref4.inputId,handleChange=_ref4.handleChange;var classes=useSelectStyles();return/*#__PURE__*/React.createElement(Select,{native:true,onChange:function onChange(e){return handleChange(e.target.value===''?null:e.target.value);},value:value,inputProps:{name:'colormap',id:inputId},style:{width:'100%'},classes:{root:classes.selectRoot}},/*#__PURE__*/React.createElement(\"option\",{\"aria-label\":\"None\",value:\"\"},\"None\"),COLORMAP_OPTIONS.map(function(name){return/*#__PURE__*/React.createElement(\"option\",{key:name,value:name},name);}));}function TransparentColorCheckbox(_ref5){var value=_ref5.value,handleChange=_ref5.handleChange;return/*#__PURE__*/React.createElement(Checkbox,{style:{float:'left',padding:0},color:\"default\",onChange:function onChange(){if(value){handleChange(null);}else{handleChange([0,0,0]);}},checked:Boolean(value)});}/**\n * Wrapper for the slider that updates opacity.\n * @prop {string} value Currently selected value between 0 and 1.\n * @prop {function} handleChange Callback for every change in opacity.\n */function OpacitySlider(_ref6){var value=_ref6.value,handleChange=_ref6.handleChange;return/*#__PURE__*/React.createElement(Slider,{value:value,onChange:function onChange(e,v){return handleChange(v);},valueLabelDisplay:\"auto\",getAriaLabel:function getAriaLabel(){return'opacity slider';},min:0,max:1,step:0.01,orientation:\"horizontal\",style:{marginTop:'7px'}});}/**\n * Wrapper for the dropdown that chooses the domain type.\n * @prop {string} value Currently selected value (i.e 'Max/Min').\n * @prop {string} inputId Css id.\n * @prop {function} handleChange Callback for every change in domain.\n */function SliderDomainSelector(_ref7){var value=_ref7.value,inputId=_ref7.inputId,handleChange=_ref7.handleChange;var classes=useSelectStyles();return/*#__PURE__*/React.createElement(Select,{native:true,onChange:function onChange(e){return handleChange(e.target.value);},value:value,inputProps:{name:'domain-selector',id:inputId},style:{width:'100%'},classes:{root:classes.selectRoot}},DOMAIN_OPTIONS.map(function(name){return/*#__PURE__*/React.createElement(\"option\",{key:name,value:name},name);}));}/**\n * Wrapper for the slider that chooses global selections (z, t etc.).\n * @prop {string} field The dimension this selects for (z, t etc.).\n * @prop {number} value Currently selected index (1, 4, etc.).\n * @prop {function} handleChange Callback for every change in selection.\n * @prop {function} possibleValues All available values for the field.\n */function GlobalSelectionSlider(_ref8){var field=_ref8.field,value=_ref8.value,handleChange=_ref8.handleChange,possibleValues=_ref8.possibleValues;return/*#__PURE__*/React.createElement(StyledSelectionSlider,{value:value// See https://github.com/hms-dbmi/viv/issues/176 for why\n// we have the two handlers.\n,onChange:function onChange(event,newValue){handleChange({selection:_defineProperty({},field,newValue),event:event});},onChangeCommitted:function onChangeCommitted(event,newValue){handleChange({selection:_defineProperty({},field,newValue),event:event});},valueLabelDisplay:\"auto\",getAriaLabel:function getAriaLabel(){return\"\".concat(field,\" slider\");},marks:possibleValues.map(function(val){return{value:val};}),min:Number(possibleValues[0]),max:Number(possibleValues.slice(-1)),orientation:\"horizontal\",step:null});}/**\n * Wrapper for each of the options to show its name and then its UI component.\n * @prop {string} name Display name for option.\n * @prop {number} opacity Current opacity value.\n * @prop {string} inputId An id for css.\n * @prop {object} children Components to be rendered next to the name (slider, dropdown etc.).\n */function LayerOption(_ref9){var name=_ref9.name,inputId=_ref9.inputId,children=_ref9.children;return/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",alignItems:\"center\",justifyContent:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(InputLabel,{htmlFor:inputId},name,\":\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},children));}/**\n * Gloabl options for all channels (opacity, colormap, etc.).\n * @prop {string} colormap What colormap is currently selected (None, viridis etc.).\n * @prop {number} opacity Current opacity value.\n * @prop {function} handleColormapChange Callback for when colormap changes.\n * @prop {function} handleOpacityChange Callback for when opacity changes.\n * @prop {object} globalControlLabels All available options for global control (z and t).\n * @prop {function} handleGlobalChannelsSelectionChange Callback for global selection changes.\n * @prop {function} handleDomainChange Callback for domain type changes (full or min/max).\n * @prop {array} channels Current channel object for inferring the current global selection.\n * @prop {array} dimensions Currently available dimensions (channel, z, t etc.).\n * @prop {string} domainType One of Max/Min or Full (soon presets as well).\n * @prop {boolean} disableChannelsIfRgbDetected Whether or not we need colormap controllers if RGB.\n */function LayerOptions(_ref10){var colormap=_ref10.colormap,opacity=_ref10.opacity,handleColormapChange=_ref10.handleColormapChange,handleOpacityChange=_ref10.handleOpacityChange,handleTransparentColorChange=_ref10.handleTransparentColorChange,globalControlLabels=_ref10.globalControlLabels,globalLabelValues=_ref10.globalLabelValues,handleGlobalChannelsSelectionChange=_ref10.handleGlobalChannelsSelectionChange,handleSliderChange=_ref10.handleSliderChange,handleDomainChange=_ref10.handleDomainChange,transparentColor=_ref10.transparentColor,channels=_ref10.channels,domainType=_ref10.domainType,disableChannelsIfRgbDetected=_ref10.disableChannelsIfRgbDetected,shouldShowTransparentColor=_ref10.shouldShowTransparentColor,shouldShowDomain=_ref10.shouldShowDomain,shouldShowColormap=_ref10.shouldShowColormap,use3d=_ref10.use3d,loader=_ref10.loader,handleMultiPropertyChange=_ref10.handleMultiPropertyChange,resolution=_ref10.resolution,disable3d=_ref10.disable3d,setRasterLayerCallback=_ref10.setRasterLayerCallback,setAreAllChannelsLoading=_ref10.setAreAllChannelsLoading,setViewState=_ref10.setViewState,spatialHeight=_ref10.spatialHeight,spatialWidth=_ref10.spatialWidth,modelMatrix=_ref10.modelMatrix;var _ref11=Array.isArray(loader.data)?loader.data[0]:loader.data,labels=_ref11.labels,shape=_ref11.shape;var hasDimensionsAndChannels=labels.length>0&&channels.length>0;var hasZStack=shape[labels.indexOf('z')]>1;// Only show volume button if we can actually view resolutions.\nvar hasViewableResolutions=Boolean(Array.from({length:loader.data.length}).filter(function(_,res){return canLoadResolution(loader.data,res);}).length);return/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"column\",style:{width:'100%'}},hasZStack&&!disable3d&&hasViewableResolutions&&/*#__PURE__*/React.createElement(VolumeDropdown,{loader:loader,handleSliderChange:handleSliderChange,handleDomainChange:handleDomainChange,channels:channels,handleMultiPropertyChange:handleMultiPropertyChange,resolution:resolution,disable3d:disable3d,setRasterLayerCallback:setRasterLayerCallback,setAreAllChannelsLoading:setAreAllChannelsLoading,setViewState:setViewState,spatialHeight:spatialHeight,spatialWidth:spatialWidth,use3d:use3d,modelMatrix:modelMatrix}),hasDimensionsAndChannels&&!use3d&&globalControlLabels.map(function(field){return shape[labels.indexOf(field)]>1&&/*#__PURE__*/React.createElement(LayerOption,{name:field,inputId:\"\".concat(field,\"-slider\"),key:field},/*#__PURE__*/React.createElement(GlobalSelectionSlider,{field:field,value:globalLabelValues[field],handleChange:handleGlobalChannelsSelectionChange,possibleValues:range(shape[labels.indexOf(field)])}));}),!disableChannelsIfRgbDetected?/*#__PURE__*/React.createElement(React.Fragment,null,shouldShowColormap&&/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(LayerOption,{name:\"Colormap\",inputId:\"colormap-select\"},/*#__PURE__*/React.createElement(ColormapSelect,{value:colormap||'',inputId:\"colormap-select\",handleChange:handleColormapChange}))),shouldShowDomain&&/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(LayerOption,{name:\"Domain\",inputId:\"domain-selector\"},/*#__PURE__*/React.createElement(SliderDomainSelector,{value:domainType||DEFAULT_RASTER_DOMAIN_TYPE,handleChange:function handleChange(value){handleDomainChange(value);}})))):null,!use3d&&/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(LayerOption,{name:\"Opacity\",inputId:\"opacity-slider\"},/*#__PURE__*/React.createElement(OpacitySlider,{value:opacity,handleChange:handleOpacityChange}))),shouldShowTransparentColor&&!use3d&&/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(LayerOption,{name:\"Zero Transparent\",inputId:\"transparent-color-selector\"},/*#__PURE__*/React.createElement(TransparentColorCheckbox,{value:transparentColor,handleChange:handleTransparentColorChange}))));}export default LayerOptions;","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/layer-controller/LayerOptions.js"],"names":["React","range","Matrix4","Grid","Slider","InputLabel","Select","Checkbox","getDefaultInitialViewState","getBoundingCube","getMultiSelectionStats","COLORMAP_OPTIONS","canLoadResolution","formatBytes","getStatsForResolution","DEFAULT_RASTER_DOMAIN_TYPE","StyledSelectionSlider","useSelectStyles","DOMAIN_OPTIONS","VolumeDropdown","loaderWithMeta","loader","handleMultiPropertyChange","currResolution","resolution","disable3d","setRasterLayerCallback","setAreAllChannelsLoading","setViewState","spatialHeight","spatialWidth","channels","use3d","modelMatrix","classes","selections","map","i","selection","data","handleChange","val","shouldUse3D","xSlice","ySlice","zSlice","propertiesChanged","sliders","forEach","ch","slider","defaultViewState","height","width","rotationX","rotationOrbit","newChannels","spatialAxisFixed","orbitAxis","Array","isArray","labels","shape","hasZStack","indexOf","e","target","value","Number","root","selectRoot","from","length","fill","_","depthDownsampled","totalBytes","ColormapSelect","inputId","name","id","TransparentColorCheckbox","float","padding","Boolean","OpacitySlider","v","marginTop","SliderDomainSelector","GlobalSelectionSlider","field","possibleValues","event","newValue","slice","LayerOption","children","LayerOptions","colormap","opacity","handleColormapChange","handleOpacityChange","handleTransparentColorChange","globalControlLabels","globalLabelValues","handleGlobalChannelsSelectionChange","handleSliderChange","handleDomainChange","transparentColor","domainType","disableChannelsIfRgbDetected","shouldShowTransparentColor","shouldShowDomain","shouldShowColormap","hasDimensionsAndChannels","hasViewableResolutions","filter","res"],"mappings":"slCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,cAAlB,CACA,OAASC,OAAT,KAAwB,SAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,OAASC,0BAAT,KAA2C,eAA3C,CAEA,OACEC,eADF,CACmBC,sBADnB,KAEO,SAFP,CAGA,OACEC,gBADF,CAEEC,iBAFF,CAGEC,WAHF,CAIEC,qBAJF,KAKO,UALP,CAMA,OAASC,0BAAT,KAA2C,sBAA3C,CACA,OAASC,qBAAT,CAAgCC,eAAhC,KAAuD,UAAvD,CAEA,GAAMC,CAAAA,cAAc,CAAG,CAAC,MAAD,CAAS,SAAT,CAAvB,CAEA;;;;;;;;;;;;;;GAeA,QAASC,CAAAA,cAAT,MAaG,IAZOC,CAAAA,cAYP,MAZDC,MAYC,CAXDC,yBAWC,MAXDA,yBAWC,CAVWC,cAUX,MAVDC,UAUC,CATDC,SASC,MATDA,SASC,CARDC,sBAQC,MARDA,sBAQC,CAPDC,wBAOC,MAPDA,wBAOC,CANDC,YAMC,MANDA,YAMC,CALDC,aAKC,MALDA,aAKC,CAJDC,YAIC,MAJDA,YAIC,CAHDC,QAGC,MAHDA,QAGC,CAFDC,KAEC,MAFDA,KAEC,CADDC,WACC,MADDA,WACC,CACD,GAAMC,CAAAA,OAAO,CAAGjB,eAAe,EAA/B,CACA,GAAMkB,CAAAA,UAAU,CAAGJ,QAAQ,CAACK,GAAT,CAAa,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,SAAN,EAAd,CAAnB,CAFC,GAGajB,CAAAA,MAHb,CAGwBD,cAHxB,CAGOmB,IAHP,CAID,GAAMC,CAAAA,YAAY,2FAAG,iBAAOC,GAAP,yTACnB;AACMC,WAFa,CAEC,MAAOD,CAAAA,GAAP,GAAe,QAFhB,CAGnBd,wBAAwB,CAAC,IAAD,CAAxB,CACAD,sBAAsB,CAAC,UAAM,CAC3BC,wBAAwB,CAAC,KAAD,CAAxB,CACAD,sBAAsB,CAAC,IAAD,CAAtB,CACD,CAHqB,CAAtB,CAJmB,IAQfgB,WARe,2CASgBjC,eAAe,CAACY,MAAD,CAT/B,sDASVsB,MATU,sBASFC,MATE,sBASMC,MATN,sBAUXC,iBAVW,CAUS,CACxBtB,UAAU,CAAEiB,GADY,CAExBE,MAAM,CAANA,MAFwB,CAGxBC,MAAM,CAANA,MAHwB,CAIxBC,MAAM,CAANA,MAJwB,CAKxBb,KAAK,CAAEU,WALiB,CAVT,CAiBjB;AAjBiB,GAkBZV,KAlBY,gDAmBWtB,CAAAA,sBAAsB,CAAC,CAC/CW,MAAM,CAANA,MAD+C,CAE/Cc,UAAU,CAAVA,UAF+C,CAG/CH,KAAK,CAAEU,WAHwC,CAAD,CAnBjC,4CAmBPK,OAnBO,uBAmBPA,OAnBO,CAwBfD,iBAAiB,CAACf,QAAlB,oBAAiCA,QAAjC,EACAe,iBAAiB,CAACf,QAAlB,CAA2BiB,OAA3B,CAAmC,SAACC,EAAD,CAAKZ,CAAL,CAAW,CAC5C;AACAY,EAAE,CAACC,MAAH,CAAYH,OAAO,CAACV,CAAD,CAAnB,CACD,CAHD,EAzBe,QA8BjB;AACAf,yBAAyB,CAACwB,iBAAD,CAAzB,CACMK,gBAhCW,CAgCQ3C,0BAA0B,CAACa,MAAD,CACjD,CAAE+B,MAAM,CAAEvB,aAAV,CAAyBwB,KAAK,CAAEvB,YAAhC,CADiD,CACD,GADC,CACI,IADJ,CACU,GAAI5B,CAAAA,OAAJ,CAAY+B,WAAZ,CADV,CAhClC,CAkCjBL,YAAY,kBACPuB,gBADO,EAEVG,SAAS,CAAE,CAFD,CAGVC,aAAa,CAAE,CAHL,GAAZ,CAlCiB,sDAwCS7C,CAAAA,sBAAsB,CAAC,CAC/CW,MAAM,CAANA,MAD+C,CACvCc,UAAU,CAAVA,UADuC,CAC3BH,KAAK,CAAEU,WADoB,CAAD,CAxC/B,8CAwCTK,QAxCS,wBAwCTA,OAxCS,CA2CXS,WA3CW,oBA2COzB,QA3CP,EA4CjByB,WAAW,CAACR,OAAZ,CAAoB,SAACC,EAAD,CAAKZ,CAAL,CAAW,CAC7B;AACAY,EAAE,CAACC,MAAH,CAAYH,QAAO,CAACV,CAAD,CAAnB,CACD,CAHD,EAIA;AACAf,yBAAyB,CAAC,CACxBE,UAAU,CAAEiB,GADY,CAExBT,KAAK,CAAEU,WAFiB,CAGxBe,gBAAgB,CAAE,KAHM,CAIxB1B,QAAQ,CAAEyB,WAJc,CAAD,CAAzB,CAMML,iBAvDW,CAuDQ3C,0BAA0B,CAACa,MAAD,CACjD,CAAE+B,MAAM,CAAEvB,aAAV,CAAyBwB,KAAK,CAAEvB,YAAhC,CADiD,CACD,GADC,CACI,KADJ,CACW,GAAI5B,CAAAA,OAAJ,CAAY+B,WAAZ,CADX,CAvDlC,CAyDjBL,YAAY,kBACPuB,iBADO,EAEVG,SAAS,CAAE,IAFD,CAGVC,aAAa,CAAE,IAHL,CAIVG,SAAS,CAAE,IAJD,GAAZ,CAzDiB,uDAAH,kBAAZlB,CAAAA,YAAY,6CAAlB,CAJC,UAqEyBmB,KAAK,CAACC,OAAN,CAAcvC,MAAd,EAAwBA,MAAM,CAAC,CAAD,CAA9B,CAAoCA,MArE7D,CAqEOwC,MArEP,OAqEOA,MArEP,CAqEeC,KArEf,OAqEeA,KArEf,CAsED,GAAMC,CAAAA,SAAS,CAAGD,KAAK,CAACD,MAAM,CAACG,OAAP,CAAe,GAAf,CAAD,CAAL,CAA6B,CAA/C,CACA,mBACE,qDACE,oBAAC,MAAD,EACE,MAAM,KADR,CAEE,KAAK,CAAEzC,cAFT,CAGE,QAAQ,CAAE,kBAAA0C,CAAC,QAAIzB,CAAAA,YAAY,CACzByB,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,IAAnB,CAA0BF,CAAC,CAACC,MAAF,CAASC,KAAnC,CAA2CC,MAAM,CAACH,CAAC,CAACC,MAAF,CAASC,KAAV,CADxB,CAAhB,EAHb,CAOE,OAAO,CAAE,CAAEE,IAAI,CAAEnC,OAAO,CAACoC,UAAhB,CAPX,eAUI,8BAAQ,GAAG,CAAC,IAAZ,CAAiB,KAAK,CAAC,IAAvB,qBAVJ,CAcGX,KAAK,CAACY,IAAN,CAAW,CAAEC,MAAM,CAAEnD,MAAM,CAACmD,MAAjB,CAAX,EACEC,IADF,CACO,CADP,CAEC;AAFD,CAGErC,GAHF,CAGM,SAACsC,CAAD,CAAIlD,UAAJ,CAAmB,CACtB,GAAIH,MAAJ,CAAY,CACV,GAAIT,iBAAiB,CAACS,MAAD,CAASG,UAAT,CAArB,CAA2C,2BAMrCV,qBAAqB,CAACO,MAAD,CAASG,UAAT,CANgB,CAEvC4B,MAFuC,uBAEvCA,MAFuC,CAGvCC,KAHuC,uBAGvCA,KAHuC,CAIvCsB,gBAJuC,uBAIvCA,gBAJuC,CAKvCC,UALuC,uBAKvCA,UALuC,CAOzC,mBACE,8BACE,GAAG,YAAMxB,MAAN,cAAiBC,KAAjB,cAA2BsB,gBAA3B,KADL,CAEE,KAAK,CAAEnD,UAFT,CAGE,QAAQ,CACNC,SAAS,EACN,CAACsC,SALR,gBAQUvC,UARV,4BAQuCX,WAAW,CAC9C+D,UAD8C,CARlD,2BAUqBxB,MAVrB,cAUgCC,KAVhC,cAU0CsB,gBAV1C,MADF,CAcD,CACF,CACD,MAAO,KAAP,CACD,CA7BF,CAdH,CADF,CADF,CAiDD,CAGD;;;;;GAMA,QAASE,CAAAA,cAAT,OAA0D,IAAhCV,CAAAA,KAAgC,OAAhCA,KAAgC,CAAzBW,OAAyB,OAAzBA,OAAyB,CAAhBtC,YAAgB,OAAhBA,YAAgB,CACxD,GAAMN,CAAAA,OAAO,CAAGjB,eAAe,EAA/B,CACA,mBACE,oBAAC,MAAD,EACE,MAAM,KADR,CAEE,QAAQ,CAAE,kBAAAgD,CAAC,QAAIzB,CAAAA,YAAY,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAT,GAAmB,EAAnB,CAAwB,IAAxB,CAA+BF,CAAC,CAACC,MAAF,CAASC,KAAzC,CAAhB,EAFb,CAGE,KAAK,CAAEA,KAHT,CAIE,UAAU,CAAE,CAAEY,IAAI,CAAE,UAAR,CAAoBC,EAAE,CAAEF,OAAxB,CAJd,CAKE,KAAK,CAAE,CAAEzB,KAAK,CAAE,MAAT,CALT,CAME,OAAO,CAAE,CAAEgB,IAAI,CAAEnC,OAAO,CAACoC,UAAhB,CANX,eAQE,8BAAQ,aAAW,MAAnB,CAA0B,KAAK,CAAC,EAAhC,SARF,CASG3D,gBAAgB,CAACyB,GAAjB,CAAqB,SAAA2C,IAAI,qBACxB,8BAAQ,GAAG,CAAEA,IAAb,CAAmB,KAAK,CAAEA,IAA1B,EACGA,IADH,CADwB,EAAzB,CATH,CADF,CAiBD,CAED,QAASE,CAAAA,wBAAT,OAA2D,IAAvBd,CAAAA,KAAuB,OAAvBA,KAAuB,CAAhB3B,YAAgB,OAAhBA,YAAgB,CACzD,mBACE,oBAAC,QAAD,EACE,KAAK,CAAE,CAAE0C,KAAK,CAAE,MAAT,CAAiBC,OAAO,CAAE,CAA1B,CADT,CAEE,KAAK,CAAC,SAFR,CAGE,QAAQ,CAAE,mBAAM,CACd,GAAIhB,KAAJ,CAAW,CACT3B,YAAY,CAAC,IAAD,CAAZ,CACD,CAFD,IAEO,CACLA,YAAY,CAAC,CAAC,CAAD,CAAI,CAAJ,CAAO,CAAP,CAAD,CAAZ,CACD,CACF,CATH,CAUE,OAAO,CAAE4C,OAAO,CAACjB,KAAD,CAVlB,EADF,CAcD,CAED;;;;GAKA,QAASkB,CAAAA,aAAT,OAAgD,IAAvBlB,CAAAA,KAAuB,OAAvBA,KAAuB,CAAhB3B,YAAgB,OAAhBA,YAAgB,CAC9C,mBACE,oBAAC,MAAD,EACE,KAAK,CAAE2B,KADT,CAEE,QAAQ,CAAE,kBAACF,CAAD,CAAIqB,CAAJ,QAAU9C,CAAAA,YAAY,CAAC8C,CAAD,CAAtB,EAFZ,CAGE,iBAAiB,CAAC,MAHpB,CAIE,YAAY,CAAE,8BAAM,gBAAN,EAJhB,CAKE,GAAG,CAAE,CALP,CAME,GAAG,CAAE,CANP,CAOE,IAAI,CAAE,IAPR,CAQE,WAAW,CAAC,YARd,CASE,KAAK,CAAE,CAAEC,SAAS,CAAE,KAAb,CATT,EADF,CAaD,CAED;;;;;GAMA,QAASC,CAAAA,oBAAT,OAAgE,IAAhCrB,CAAAA,KAAgC,OAAhCA,KAAgC,CAAzBW,OAAyB,OAAzBA,OAAyB,CAAhBtC,YAAgB,OAAhBA,YAAgB,CAC9D,GAAMN,CAAAA,OAAO,CAAGjB,eAAe,EAA/B,CACA,mBACE,oBAAC,MAAD,EACE,MAAM,KADR,CAEE,QAAQ,CAAE,kBAAAgD,CAAC,QAAIzB,CAAAA,YAAY,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB,EAFb,CAGE,KAAK,CAAEA,KAHT,CAIE,UAAU,CAAE,CAAEY,IAAI,CAAE,iBAAR,CAA2BC,EAAE,CAAEF,OAA/B,CAJd,CAKE,KAAK,CAAE,CAAEzB,KAAK,CAAE,MAAT,CALT,CAME,OAAO,CAAE,CAAEgB,IAAI,CAAEnC,OAAO,CAACoC,UAAhB,CANX,EAQGpD,cAAc,CAACkB,GAAf,CAAmB,SAAA2C,IAAI,qBACtB,8BAAQ,GAAG,CAAEA,IAAb,CAAmB,KAAK,CAAEA,IAA1B,EACGA,IADH,CADsB,EAAvB,CARH,CADF,CAgBD,CAED;;;;;;GAOA,QAASU,CAAAA,qBAAT,OAKG,IAJDC,CAAAA,KAIC,OAJDA,KAIC,CAHDvB,KAGC,OAHDA,KAGC,CAFD3B,YAEC,OAFDA,YAEC,CADDmD,cACC,OADDA,cACC,CACD,mBACE,oBAAC,qBAAD,EACE,KAAK,CAAExB,KACP;AACA;AAHF,CAIE,QAAQ,CACN,kBAACyB,KAAD,CAAQC,QAAR,CAAqB,CACnBrD,YAAY,CAAC,CAAEF,SAAS,oBAAKoD,KAAL,CAAaG,QAAb,CAAX,CAAoCD,KAAK,CAALA,KAApC,CAAD,CAAZ,CACD,CAPL,CASE,iBAAiB,CACf,2BAACA,KAAD,CAAQC,QAAR,CAAqB,CACnBrD,YAAY,CAAC,CAAEF,SAAS,oBAAKoD,KAAL,CAAaG,QAAb,CAAX,CAAoCD,KAAK,CAALA,KAApC,CAAD,CAAZ,CACD,CAZL,CAcE,iBAAiB,CAAC,MAdpB,CAeE,YAAY,CAAE,wCAASF,KAAT,aAfhB,CAgBE,KAAK,CAAEC,cAAc,CAACvD,GAAf,CAAmB,SAAAK,GAAG,QAAK,CAAE0B,KAAK,CAAE1B,GAAT,CAAL,EAAtB,CAhBT,CAiBE,GAAG,CAAE2B,MAAM,CAACuB,cAAc,CAAC,CAAD,CAAf,CAjBb,CAkBE,GAAG,CAAEvB,MAAM,CAACuB,cAAc,CAACG,KAAf,CAAqB,CAAC,CAAtB,CAAD,CAlBb,CAmBE,WAAW,CAAC,YAnBd,CAoBE,IAAI,CAAE,IApBR,EADF,CAwBD,CAED;;;;;;GAOA,QAASC,CAAAA,WAAT,OAAkD,IAA3BhB,CAAAA,IAA2B,OAA3BA,IAA2B,CAArBD,OAAqB,OAArBA,OAAqB,CAAZkB,QAAY,OAAZA,QAAY,CAChD,mBACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,UAAU,CAAC,QAA3C,CAAoD,cAAc,CAAC,QAAnE,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACE,oBAAC,UAAD,EAAY,OAAO,CAAElB,OAArB,EAA+BC,IAA/B,KADF,CADF,cAIE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,EACGiB,QADH,CAJF,CADF,CAUD,CAED;;;;;;;;;;;;;GAcA,QAASC,CAAAA,YAAT,QA6BG,IA5BDC,CAAAA,QA4BC,QA5BDA,QA4BC,CA3BDC,OA2BC,QA3BDA,OA2BC,CA1BDC,oBA0BC,QA1BDA,oBA0BC,CAzBDC,mBAyBC,QAzBDA,mBAyBC,CAxBDC,4BAwBC,QAxBDA,4BAwBC,CAvBDC,mBAuBC,QAvBDA,mBAuBC,CAtBDC,iBAsBC,QAtBDA,iBAsBC,CArBDC,mCAqBC,QArBDA,mCAqBC,CApBDC,kBAoBC,QApBDA,kBAoBC,CAnBDC,kBAmBC,QAnBDA,kBAmBC,CAlBDC,gBAkBC,QAlBDA,gBAkBC,CAjBD7E,QAiBC,QAjBDA,QAiBC,CAhBD8E,UAgBC,QAhBDA,UAgBC,CAfDC,4BAeC,QAfDA,4BAeC,CAdDC,0BAcC,QAdDA,0BAcC,CAbDC,gBAaC,QAbDA,gBAaC,CAZDC,kBAYC,QAZDA,kBAYC,CAXDjF,KAWC,QAXDA,KAWC,CAVDX,MAUC,QAVDA,MAUC,CATDC,yBASC,QATDA,yBASC,CARDE,UAQC,QARDA,UAQC,CAPDC,SAOC,QAPDA,SAOC,CANDC,sBAMC,QANDA,sBAMC,CALDC,wBAKC,QALDA,wBAKC,CAJDC,YAIC,QAJDA,YAIC,CAHDC,aAGC,QAHDA,aAGC,CAFDC,YAEC,QAFDA,YAEC,CADDG,WACC,QADDA,WACC,YACyB0B,KAAK,CAACC,OAAN,CAAcvC,MAAM,CAACkB,IAArB,EAA6BlB,MAAM,CAACkB,IAAP,CAAY,CAAZ,CAA7B,CAA8ClB,MAAM,CAACkB,IAD9E,CACOsB,MADP,QACOA,MADP,CACeC,KADf,QACeA,KADf,CAED,GAAMoD,CAAAA,wBAAwB,CAAGrD,MAAM,CAACW,MAAP,CAAgB,CAAhB,EAAqBzC,QAAQ,CAACyC,MAAT,CAAkB,CAAxE,CACA,GAAMT,CAAAA,SAAS,CAAGD,KAAK,CAACD,MAAM,CAACG,OAAP,CAAe,GAAf,CAAD,CAAL,CAA6B,CAA/C,CACA;AACA,GAAMmD,CAAAA,sBAAsB,CAAG/B,OAAO,CAACzB,KAAK,CAACY,IAAN,CAAW,CAChDC,MAAM,CAAEnD,MAAM,CAACkB,IAAP,CAAYiC,MAD4B,CAAX,EAEpC4C,MAFoC,CAE7B,SAAC1C,CAAD,CAAI2C,GAAJ,QAAYzG,CAAAA,iBAAiB,CAACS,MAAM,CAACkB,IAAR,CAAc8E,GAAd,CAA7B,EAF6B,EAEoB7C,MAFrB,CAAtC,CAGA,mBACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,QAA1B,CAAmC,KAAK,CAAE,CAAEnB,KAAK,CAAE,MAAT,CAA1C,EACGU,SAAS,EACL,CAACtC,SADL,EAEI0F,sBAFJ,eAIC,oBAAC,cAAD,EACE,MAAM,CAAE9F,MADV,CAEE,kBAAkB,CAAEqF,kBAFtB,CAGE,kBAAkB,CAAEC,kBAHtB,CAIE,QAAQ,CAAE5E,QAJZ,CAKE,yBAAyB,CAAET,yBAL7B,CAME,UAAU,CAAEE,UANd,CAOE,SAAS,CAAEC,SAPb,CAQE,sBAAsB,CAAEC,sBAR1B,CASE,wBAAwB,CAAEC,wBAT5B,CAUE,YAAY,CAAEC,YAVhB,CAWE,aAAa,CAAEC,aAXjB,CAYE,YAAY,CAAEC,YAZhB,CAaE,KAAK,CAAEE,KAbT,CAcE,WAAW,CAAEC,WAdf,EALJ,CAuBGiF,wBAAwB,EACpB,CAAClF,KADL,EAEIuE,mBAAmB,CAACnE,GAApB,CACD,SAAAsD,KAAK,QAAI5B,CAAAA,KAAK,CAACD,MAAM,CAACG,OAAP,CAAe0B,KAAf,CAAD,CAAL,CAA+B,CAA/B,eACT,oBAAC,WAAD,EAAa,IAAI,CAAEA,KAAnB,CAA0B,OAAO,WAAKA,KAAL,WAAjC,CAAsD,GAAG,CAAEA,KAA3D,eACE,oBAAC,qBAAD,EACE,KAAK,CAAEA,KADT,CAEE,KAAK,CAAEc,iBAAiB,CAACd,KAAD,CAF1B,CAGE,YAAY,CAAEe,mCAHhB,CAIE,cAAc,CAAExG,KAAK,CAAC6D,KAAK,CAACD,MAAM,CAACG,OAAP,CAAe0B,KAAf,CAAD,CAAN,CAJvB,EADF,CADK,EADJ,CAzBP,CAqCG,CAACoB,4BAAD,cACC,wCACGG,kBAAkB,eACjB,oBAAC,IAAD,EAAM,IAAI,KAAV,eACE,oBAAC,WAAD,EAAa,IAAI,CAAC,UAAlB,CAA6B,OAAO,CAAC,iBAArC,eACE,oBAAC,cAAD,EACE,KAAK,CAAEf,QAAQ,EAAI,EADrB,CAEE,OAAO,CAAC,iBAFV,CAGE,YAAY,CAAEE,oBAHhB,EADF,CADF,CAFJ,CAYGY,gBAAgB,eACf,oBAAC,IAAD,EAAM,IAAI,KAAV,eACE,oBAAC,WAAD,EAAa,IAAI,CAAC,QAAlB,CAA2B,OAAO,CAAC,iBAAnC,eACE,oBAAC,oBAAD,EACE,KAAK,CAAEH,UAAU,EAAI9F,0BADvB,CAEE,YAAY,CAAE,sBAACoD,KAAD,CAAW,CACvBwC,kBAAkB,CAACxC,KAAD,CAAlB,CACD,CAJH,EADF,CADF,CAbJ,CADD,CA0BG,IA/DN,CAgEG,CAACnC,KAAD,eACC,oBAAC,IAAD,EAAM,IAAI,KAAV,eACE,oBAAC,WAAD,EAAa,IAAI,CAAC,SAAlB,CAA4B,OAAO,CAAC,gBAApC,eACE,oBAAC,aAAD,EAAe,KAAK,CAAEmE,OAAtB,CAA+B,YAAY,CAAEE,mBAA7C,EADF,CADF,CAjEJ,CAuEGU,0BAA0B,EAAI,CAAC/E,KAA/B,eACC,oBAAC,IAAD,EAAM,IAAI,KAAV,eACE,oBAAC,WAAD,EACE,IAAI,CAAC,kBADP,CAEE,OAAO,CAAC,4BAFV,eAIE,oBAAC,wBAAD,EACE,KAAK,CAAE4E,gBADT,CAEE,YAAY,CAAEN,4BAFhB,EAJF,CADF,CAxEJ,CADF,CAuFD,CAED,cAAeL,CAAAA,YAAf","sourcesContent":["import React from 'react';\nimport range from 'lodash/range';\nimport { Matrix4 } from 'math.gl';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { getDefaultInitialViewState } from '@hms-dbmi/viv';\n\nimport {\n  getBoundingCube, getMultiSelectionStats,\n} from './utils';\nimport {\n  COLORMAP_OPTIONS,\n  canLoadResolution,\n  formatBytes,\n  getStatsForResolution,\n} from '../utils';\nimport { DEFAULT_RASTER_DOMAIN_TYPE } from '../spatial/constants';\nimport { StyledSelectionSlider, useSelectStyles } from './styles';\n\nconst DOMAIN_OPTIONS = ['Full', 'Min/Max'];\n\n/**\n * Wrapper for the dropdown that selects a colormap (None, viridis, magma, etc.).\n * @prop {Object} loader Loader object with metadata.\n * @prop {function} handleMultiPropertyChange Function to propgate multiple layer changes at once.\n * This prevents updates from overridding each other.\n * @prop {number} resolution Current 3D resolution.\n * @prop {boolean} disable3d Whether or not to enable 3D selection\n * @prop {function} setRasterLayerCallback Setter for callbacks that fire after raster/volume loads.\n * @prop {function} setAreAllChannelsLoading Setter for whether or not a given channel is loading.\n * @prop {Object} setViewState Setter for the current view state.\n * @prop {number} spatialHeight Height of the spatial component.\n * @prop {number} spatialWidth Width of the spatial component.\n * @prop {object} channels Channels object.\n * @prop {boolean} use3d Whether or not 3D is enabled for this layer.\n */\nfunction VolumeDropdown({\n  loader: loaderWithMeta,\n  handleMultiPropertyChange,\n  resolution: currResolution,\n  disable3d,\n  setRasterLayerCallback,\n  setAreAllChannelsLoading,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  channels,\n  use3d,\n  modelMatrix,\n}) {\n  const classes = useSelectStyles();\n  const selections = channels.map(i => i.selection);\n  const { data: loader } = loaderWithMeta;\n  const handleChange = async (val) => {\n    // val is the resolution - null indicates 2D\n    const shouldUse3D = typeof val === 'number';\n    setAreAllChannelsLoading(true);\n    setRasterLayerCallback(() => {\n      setAreAllChannelsLoading(false);\n      setRasterLayerCallback(null);\n    });\n    if (shouldUse3D) {\n      const [xSlice, ySlice, zSlice] = getBoundingCube(loader);\n      const propertiesChanged = {\n        resolution: val,\n        xSlice,\n        ySlice,\n        zSlice,\n        use3d: shouldUse3D,\n      };\n      // Only make the fetch if needed i.e if the 3d was just being turned on.\n      if (!use3d) {\n        const { sliders } = await getMultiSelectionStats({\n          loader,\n          selections,\n          use3d: shouldUse3D,\n        });\n        propertiesChanged.channels = [...channels];\n        propertiesChanged.channels.forEach((ch, i) => {\n          // eslint-disable-next-line no-param-reassign\n          ch.slider = sliders[i];\n        });\n      }\n      // Update all properties at once to avoid overriding calls.\n      handleMultiPropertyChange(propertiesChanged);\n      const defaultViewState = getDefaultInitialViewState(loader,\n        { height: spatialHeight, width: spatialWidth }, 1.5, true, new Matrix4(modelMatrix));\n      setViewState({\n        ...defaultViewState,\n        rotationX: 0,\n        rotationOrbit: 0,\n      });\n    } else {\n      const { sliders } = await getMultiSelectionStats({\n        loader, selections, use3d: shouldUse3D,\n      });\n      const newChannels = [...channels];\n      newChannels.forEach((ch, i) => {\n        // eslint-disable-next-line no-param-reassign\n        ch.slider = sliders[i];\n      });\n      // Update all properties at once to avoid overriding calls.\n      handleMultiPropertyChange({\n        resolution: val,\n        use3d: shouldUse3D,\n        spatialAxisFixed: false,\n        channels: newChannels,\n      });\n      const defaultViewState = getDefaultInitialViewState(loader,\n        { height: spatialHeight, width: spatialWidth }, 0.5, false, new Matrix4(modelMatrix));\n      setViewState({\n        ...defaultViewState,\n        rotationX: null,\n        rotationOrbit: null,\n        orbitAxis: null,\n      });\n    }\n  };\n  const { labels, shape } = Array.isArray(loader) ? loader[0] : loader;\n  const hasZStack = shape[labels.indexOf('z')] > 1;\n  return (\n    <>\n      <Select\n        native\n        value={currResolution}\n        onChange={e => handleChange(\n          e.target.value === '2D' ? e.target.value : Number(e.target.value),\n        )\n        }\n        classes={{ root: classes.selectRoot }}\n      >\n        {\n          <option key=\"2D\" value=\"2D\">\n            2D Visualization\n          </option>\n        }\n        {Array.from({ length: loader.length })\n          .fill(0)\n          // eslint-disable-next-line no-unused-vars\n          .map((_, resolution) => {\n            if (loader) {\n              if (canLoadResolution(loader, resolution)) {\n                const {\n                  height,\n                  width,\n                  depthDownsampled,\n                  totalBytes,\n                } = getStatsForResolution(loader, resolution);\n                return (\n                  <option\n                    key={`(${height}, ${width}, ${depthDownsampled})`}\n                    value={resolution}\n                    disabled={\n                      disable3d\n                      || !hasZStack\n                    }\n                  >\n                    {`3D: ${resolution}x Downsampled, ~${formatBytes(\n                      totalBytes,\n                    )} per channel, (${height}, ${width}, ${depthDownsampled})`}\n                  </option>\n                );\n              }\n            }\n            return null;\n          })}\n      </Select>\n    </>\n  );\n}\n\n\n/**\n * Wrapper for the dropdown that selects a colormap (None, viridis, magma, etc.).\n * @prop {string} value Currently selected value for the colormap.\n * @prop {string} inputId Css id.\n * @prop {function} handleChange Callback for every change in colormap.\n */\nfunction ColormapSelect({ value, inputId, handleChange }) {\n  const classes = useSelectStyles();\n  return (\n    <Select\n      native\n      onChange={e => handleChange(e.target.value === '' ? null : e.target.value)}\n      value={value}\n      inputProps={{ name: 'colormap', id: inputId }}\n      style={{ width: '100%' }}\n      classes={{ root: classes.selectRoot }}\n    >\n      <option aria-label=\"None\" value=\"\">None</option>\n      {COLORMAP_OPTIONS.map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\nfunction TransparentColorCheckbox({ value, handleChange }) {\n  return (\n    <Checkbox\n      style={{ float: 'left', padding: 0 }}\n      color=\"default\"\n      onChange={() => {\n        if (value) {\n          handleChange(null);\n        } else {\n          handleChange([0, 0, 0]);\n        }\n      }}\n      checked={Boolean(value)}\n    />\n  );\n}\n\n/**\n * Wrapper for the slider that updates opacity.\n * @prop {string} value Currently selected value between 0 and 1.\n * @prop {function} handleChange Callback for every change in opacity.\n */\nfunction OpacitySlider({ value, handleChange }) {\n  return (\n    <Slider\n      value={value}\n      onChange={(e, v) => handleChange(v)}\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => 'opacity slider'}\n      min={0}\n      max={1}\n      step={0.01}\n      orientation=\"horizontal\"\n      style={{ marginTop: '7px' }}\n    />\n  );\n}\n\n/**\n * Wrapper for the dropdown that chooses the domain type.\n * @prop {string} value Currently selected value (i.e 'Max/Min').\n * @prop {string} inputId Css id.\n * @prop {function} handleChange Callback for every change in domain.\n */\nfunction SliderDomainSelector({ value, inputId, handleChange }) {\n  const classes = useSelectStyles();\n  return (\n    <Select\n      native\n      onChange={e => handleChange(e.target.value)}\n      value={value}\n      inputProps={{ name: 'domain-selector', id: inputId }}\n      style={{ width: '100%' }}\n      classes={{ root: classes.selectRoot }}\n    >\n      {DOMAIN_OPTIONS.map(name => (\n        <option key={name} value={name}>\n          {name}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\n/**\n * Wrapper for the slider that chooses global selections (z, t etc.).\n * @prop {string} field The dimension this selects for (z, t etc.).\n * @prop {number} value Currently selected index (1, 4, etc.).\n * @prop {function} handleChange Callback for every change in selection.\n * @prop {function} possibleValues All available values for the field.\n */\nfunction GlobalSelectionSlider({\n  field,\n  value,\n  handleChange,\n  possibleValues,\n}) {\n  return (\n    <StyledSelectionSlider\n      value={value}\n      // See https://github.com/hms-dbmi/viv/issues/176 for why\n      // we have the two handlers.\n      onChange={\n        (event, newValue) => {\n          handleChange({ selection: { [field]: newValue }, event });\n        }\n      }\n      onChangeCommitted={\n        (event, newValue) => {\n          handleChange({ selection: { [field]: newValue }, event });\n        }\n      }\n      valueLabelDisplay=\"auto\"\n      getAriaLabel={() => `${field} slider`}\n      marks={possibleValues.map(val => ({ value: val }))}\n      min={Number(possibleValues[0])}\n      max={Number(possibleValues.slice(-1))}\n      orientation=\"horizontal\"\n      step={null}\n    />\n  );\n}\n\n/**\n * Wrapper for each of the options to show its name and then its UI component.\n * @prop {string} name Display name for option.\n * @prop {number} opacity Current opacity value.\n * @prop {string} inputId An id for css.\n * @prop {object} children Components to be rendered next to the name (slider, dropdown etc.).\n */\nfunction LayerOption({ name, inputId, children }) {\n  return (\n    <Grid container direction=\"row\" alignItems=\"center\" justifyContent=\"center\">\n      <Grid item xs={6}>\n        <InputLabel htmlFor={inputId}>{name}:</InputLabel>\n      </Grid>\n      <Grid item xs={6}>\n        {children}\n      </Grid>\n    </Grid>\n  );\n}\n\n/**\n * Gloabl options for all channels (opacity, colormap, etc.).\n * @prop {string} colormap What colormap is currently selected (None, viridis etc.).\n * @prop {number} opacity Current opacity value.\n * @prop {function} handleColormapChange Callback for when colormap changes.\n * @prop {function} handleOpacityChange Callback for when opacity changes.\n * @prop {object} globalControlLabels All available options for global control (z and t).\n * @prop {function} handleGlobalChannelsSelectionChange Callback for global selection changes.\n * @prop {function} handleDomainChange Callback for domain type changes (full or min/max).\n * @prop {array} channels Current channel object for inferring the current global selection.\n * @prop {array} dimensions Currently available dimensions (channel, z, t etc.).\n * @prop {string} domainType One of Max/Min or Full (soon presets as well).\n * @prop {boolean} disableChannelsIfRgbDetected Whether or not we need colormap controllers if RGB.\n */\nfunction LayerOptions({\n  colormap,\n  opacity,\n  handleColormapChange,\n  handleOpacityChange,\n  handleTransparentColorChange,\n  globalControlLabels,\n  globalLabelValues,\n  handleGlobalChannelsSelectionChange,\n  handleSliderChange,\n  handleDomainChange,\n  transparentColor,\n  channels,\n  domainType,\n  disableChannelsIfRgbDetected,\n  shouldShowTransparentColor,\n  shouldShowDomain,\n  shouldShowColormap,\n  use3d,\n  loader,\n  handleMultiPropertyChange,\n  resolution,\n  disable3d,\n  setRasterLayerCallback,\n  setAreAllChannelsLoading,\n  setViewState,\n  spatialHeight,\n  spatialWidth,\n  modelMatrix,\n}) {\n  const { labels, shape } = Array.isArray(loader.data) ? loader.data[0] : loader.data;\n  const hasDimensionsAndChannels = labels.length > 0 && channels.length > 0;\n  const hasZStack = shape[labels.indexOf('z')] > 1;\n  // Only show volume button if we can actually view resolutions.\n  const hasViewableResolutions = Boolean(Array.from({\n    length: loader.data.length,\n  }).filter((_, res) => canLoadResolution(loader.data, res)).length);\n  return (\n    <Grid container direction=\"column\" style={{ width: '100%' }}>\n      {hasZStack\n        && !disable3d\n        && hasViewableResolutions\n        && (\n        <VolumeDropdown\n          loader={loader}\n          handleSliderChange={handleSliderChange}\n          handleDomainChange={handleDomainChange}\n          channels={channels}\n          handleMultiPropertyChange={handleMultiPropertyChange}\n          resolution={resolution}\n          disable3d={disable3d}\n          setRasterLayerCallback={setRasterLayerCallback}\n          setAreAllChannelsLoading={setAreAllChannelsLoading}\n          setViewState={setViewState}\n          spatialHeight={spatialHeight}\n          spatialWidth={spatialWidth}\n          use3d={use3d}\n          modelMatrix={modelMatrix}\n        />\n        )\n      }\n      {hasDimensionsAndChannels\n        && !use3d\n        && globalControlLabels.map(\n          field => shape[labels.indexOf(field)] > 1 && (\n          <LayerOption name={field} inputId={`${field}-slider`} key={field}>\n            <GlobalSelectionSlider\n              field={field}\n              value={globalLabelValues[field]}\n              handleChange={handleGlobalChannelsSelectionChange}\n              possibleValues={range(shape[labels.indexOf(field)])}\n            />\n          </LayerOption>\n          ),\n        )}\n      {!disableChannelsIfRgbDetected ? (\n        <>\n          {shouldShowColormap && (\n            <Grid item>\n              <LayerOption name=\"Colormap\" inputId=\"colormap-select\">\n                <ColormapSelect\n                  value={colormap || ''}\n                  inputId=\"colormap-select\"\n                  handleChange={handleColormapChange}\n                />\n              </LayerOption>\n            </Grid>\n          )}\n          {shouldShowDomain && (\n            <Grid item>\n              <LayerOption name=\"Domain\" inputId=\"domain-selector\">\n                <SliderDomainSelector\n                  value={domainType || DEFAULT_RASTER_DOMAIN_TYPE}\n                  handleChange={(value) => {\n                    handleDomainChange(value);\n                  }}\n                />\n              </LayerOption>\n            </Grid>\n          )}\n        </>\n      ) : null}\n      {!use3d && (\n        <Grid item>\n          <LayerOption name=\"Opacity\" inputId=\"opacity-slider\">\n            <OpacitySlider value={opacity} handleChange={handleOpacityChange} />\n          </LayerOption>\n        </Grid>\n      )}\n      {shouldShowTransparentColor && !use3d && (\n        <Grid item>\n          <LayerOption\n            name=\"Zero Transparent\"\n            inputId=\"transparent-color-selector\"\n          >\n            <TransparentColorCheckbox\n              value={transparentColor}\n              handleChange={handleTransparentColorChange}\n            />\n          </LayerOption>\n        </Grid>\n      )}\n    </Grid>\n  );\n}\n\nexport default LayerOptions;\n"]},"metadata":{},"sourceType":"module"}