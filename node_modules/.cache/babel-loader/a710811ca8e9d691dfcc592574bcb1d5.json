{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\demo\\\\view-configs\\\\plugin-coordination-type.js\";\nimport React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport { registerPluginCoordinationType, registerPluginViewType } from '../../app/plugins';\nimport { CoordinationType } from '../../app/constants'; // For plugin views to use:\n\nimport TitleInfo from '../../components/TitleInfo';\nimport { useCoordination } from '../../app/state/hooks';\n\nfunction MyPluginSlider(props) {\n  const {\n    myCustomCoordinationType,\n    setMyCustomCoordinationType\n  } = props;\n\n  function handleChange(event, newValue) {\n    setMyCustomCoordinationType(newValue);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    value: myCustomCoordinationType,\n    onChange: handleChange,\n    min: 0.0,\n    max: 1.0,\n    step: 0.005,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction MyPluginSliderSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'My plugin slider'\n  } = props; // Get \"props\" from the coordination space.\n\n  const [{\n    myCustomCoordinationType\n  }, {\n    setMyCustomCoordinationType\n  }] = useCoordination([CoordinationType.DATASET, 'myCustomCoordinationType'], coordinationScopes);\n  return /*#__PURE__*/React.createElement(TitleInfo, {\n    title: title,\n    theme: theme,\n    removeGridComponent: removeGridComponent,\n    isReady: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MyPluginSlider, {\n    myCustomCoordinationType: myCustomCoordinationType,\n    setMyCustomCoordinationType: setMyCustomCoordinationType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}\n\nregisterPluginCoordinationType('myCustomCoordinationType', 0.75); // Register the plugin view type.\n\nregisterPluginViewType('myCustomSlider', MyPluginSliderSubscriber, [CoordinationType.DATASET, 'myCustomCoordinationType']); // Use the plugin view in the configuration.\n\nexport const pluginCoordinationType = {\n  name: 'Test plugin views and coordination types',\n  version: '1.0.9',\n  description: 'Demonstration of a plugin coordination type implementation. The left sliders should be coordinated, while the right sliders are independent.',\n  public: false,\n  datasets: [{\n    uid: 'plugin-test-dataset',\n    name: 'Plugin test dataset',\n    files: []\n  }],\n  initStrategy: 'auto',\n  coordinationSpace: {\n    myCustomCoordinationType: {\n      A: 0.5,\n      B: 0.25,\n      C: undefined\n    }\n  },\n  layout: [{\n    component: 'description',\n    props: {\n      title: 'Description'\n    },\n    x: 0,\n    y: 0,\n    w: 2,\n    h: 2\n  }, {\n    component: 'myCustomSlider',\n    coordinationScopes: {\n      myCustomCoordinationType: 'A'\n    },\n    x: 2,\n    y: 0,\n    w: 2,\n    h: 1\n  }, {\n    component: 'myCustomSlider',\n    coordinationScopes: {\n      myCustomCoordinationType: 'A'\n    },\n    x: 2,\n    y: 1,\n    w: 2,\n    h: 1\n  }, {\n    component: 'myCustomSlider',\n    coordinationScopes: {\n      myCustomCoordinationType: 'B'\n    },\n    x: 4,\n    y: 0,\n    w: 2,\n    h: 1\n  }, {\n    component: 'myCustomSlider',\n    x: 4,\n    y: 1,\n    w: 2,\n    h: 1\n  }]\n};","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/demo/view-configs/plugin-coordination-type.js"],"names":["React","Slider","registerPluginCoordinationType","registerPluginViewType","CoordinationType","TitleInfo","useCoordination","MyPluginSlider","props","myCustomCoordinationType","setMyCustomCoordinationType","handleChange","event","newValue","MyPluginSliderSubscriber","coordinationScopes","removeGridComponent","theme","title","DATASET","pluginCoordinationType","name","version","description","public","datasets","uid","files","initStrategy","coordinationSpace","A","B","C","undefined","layout","component","x","y","w","h"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Slider from '@material-ui/core/Slider';\nimport {\n  registerPluginCoordinationType,\n  registerPluginViewType,\n} from '../../app/plugins';\nimport {\n  CoordinationType,\n} from '../../app/constants';\n// For plugin views to use:\nimport TitleInfo from '../../components/TitleInfo';\nimport {\n  useCoordination,\n} from '../../app/state/hooks';\n\nfunction MyPluginSlider(props) {\n  const {\n    myCustomCoordinationType,\n    setMyCustomCoordinationType,\n  } = props;\n\n  function handleChange(event, newValue) {\n    setMyCustomCoordinationType(newValue);\n  }\n\n  return (\n    <div>\n      <Slider\n        value={myCustomCoordinationType}\n        onChange={handleChange}\n        min={0.0}\n        max={1.0}\n        step={0.005}\n      />\n    </div>\n  );\n}\n\nfunction MyPluginSliderSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'My plugin slider',\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [{\n    myCustomCoordinationType,\n  }, {\n    setMyCustomCoordinationType,\n  }] = useCoordination(\n    [\n      CoordinationType.DATASET,\n      'myCustomCoordinationType',\n    ],\n    coordinationScopes,\n  );\n\n  return (\n    <TitleInfo\n      title={title}\n      theme={theme}\n      removeGridComponent={removeGridComponent}\n      isReady\n    >\n      <MyPluginSlider\n        myCustomCoordinationType={myCustomCoordinationType}\n        setMyCustomCoordinationType={setMyCustomCoordinationType}\n      />\n    </TitleInfo>\n  );\n}\n\nregisterPluginCoordinationType(\n  'myCustomCoordinationType',\n  0.75,\n);\n\n// Register the plugin view type.\nregisterPluginViewType(\n  'myCustomSlider',\n  MyPluginSliderSubscriber,\n  [\n    CoordinationType.DATASET,\n    'myCustomCoordinationType',\n  ],\n);\n\n// Use the plugin view in the configuration.\nexport const pluginCoordinationType = {\n  name: 'Test plugin views and coordination types',\n  version: '1.0.9',\n  description: 'Demonstration of a plugin coordination type implementation. The left sliders should be coordinated, while the right sliders are independent.',\n  public: false,\n  datasets: [\n    {\n      uid: 'plugin-test-dataset',\n      name: 'Plugin test dataset',\n      files: [],\n    },\n  ],\n  initStrategy: 'auto',\n  coordinationSpace: {\n    myCustomCoordinationType: {\n      A: 0.5,\n      B: 0.25,\n      C: undefined,\n    },\n  },\n  layout: [\n    {\n      component: 'description',\n      props: {\n        title: 'Description',\n      },\n      x: 0,\n      y: 0,\n      w: 2,\n      h: 2,\n    },\n    {\n      component: 'myCustomSlider',\n      coordinationScopes: {\n        myCustomCoordinationType: 'A',\n      },\n      x: 2,\n      y: 0,\n      w: 2,\n      h: 1,\n    },\n    {\n      component: 'myCustomSlider',\n      coordinationScopes: {\n        myCustomCoordinationType: 'A',\n      },\n      x: 2,\n      y: 1,\n      w: 2,\n      h: 1,\n    },\n    {\n      component: 'myCustomSlider',\n      coordinationScopes: {\n        myCustomCoordinationType: 'B',\n      },\n      x: 4,\n      y: 0,\n      w: 2,\n      h: 1,\n    },\n    {\n      component: 'myCustomSlider',\n      x: 4,\n      y: 1,\n      w: 2,\n      h: 1,\n    },\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}