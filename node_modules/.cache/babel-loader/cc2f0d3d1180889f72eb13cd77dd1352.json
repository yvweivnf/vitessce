{"ast":null,"code":"import _objectWithoutProperties from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport React from 'react';\nimport vegaEmbed from 'vega-embed';\nimport shallowEqual from './utils/shallowEqual';\nimport getUniqueFieldNames from './utils/getUniqueFieldNames';\nimport { NOOP } from './constants';\nimport addSignalListenersToView from './utils/addSignalListenersToView';\nimport computeSpecChanges from './utils/computeSpecChanges';\nimport removeSignalListenersFromView from './utils/removeSignalListenersFromView';\nimport combineSpecWithDimension from './utils/combineSpecWithDimension';\n\nvar VegaEmbed = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(VegaEmbed, _React$PureComponent);\n\n  var _super = _createSuper(VegaEmbed);\n\n  function VegaEmbed() {\n    var _this;\n\n    _classCallCheck(this, VegaEmbed);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"containerRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"resultPromise\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleError\", function (error) {\n      var _this$props$onError = _this.props.onError,\n          onError = _this$props$onError === void 0 ? NOOP : _this$props$onError;\n      onError(error); // eslint-disable-next-line no-console\n\n      console.warn(error);\n      return undefined;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"modifyView\", function (action) {\n      if (_this.resultPromise) {\n        _this.resultPromise.then(function (result) {\n          if (result) {\n            action(result.view);\n          }\n\n          return true;\n        }).catch(_this.handleError);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(VegaEmbed, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.createView();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      var fieldSet = getUniqueFieldNames([this.props, prevProps]);\n      fieldSet.delete('className');\n      fieldSet.delete('signalListeners');\n      fieldSet.delete('spec');\n      fieldSet.delete('style');\n      fieldSet.delete('width');\n      fieldSet.delete('height'); // Only create a new view if necessary\n\n      if (Array.from(fieldSet).some(function (f) {\n        return _this2.props[f] !== prevProps[f];\n      })) {\n        this.clearView();\n        this.createView();\n      } else {\n        var specChanges = computeSpecChanges(combineSpecWithDimension(this.props), combineSpecWithDimension(prevProps));\n        var newSignalListeners = this.props.signalListeners;\n        var oldSignalListeners = prevProps.signalListeners;\n\n        if (specChanges) {\n          if (specChanges.isExpensive) {\n            this.clearView();\n            this.createView();\n          } else {\n            var areSignalListenersChanged = !shallowEqual(newSignalListeners, oldSignalListeners);\n            this.modifyView(function (view) {\n              if (specChanges.width !== false) {\n                view.width(specChanges.width);\n              }\n\n              if (specChanges.height !== false) {\n                view.height(specChanges.height);\n              }\n\n              if (areSignalListenersChanged) {\n                if (oldSignalListeners) {\n                  removeSignalListenersFromView(view, oldSignalListeners);\n                }\n\n                if (newSignalListeners) {\n                  addSignalListenersToView(view, newSignalListeners);\n                }\n              }\n\n              view.run();\n            });\n          }\n        } else if (!shallowEqual(newSignalListeners, oldSignalListeners)) {\n          this.modifyView(function (view) {\n            if (oldSignalListeners) {\n              removeSignalListenersFromView(view, oldSignalListeners);\n            }\n\n            if (newSignalListeners) {\n              addSignalListenersToView(view, newSignalListeners);\n            }\n\n            view.run();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.clearView();\n    }\n  }, {\n    key: \"createView\",\n    value: function createView() {\n      var _this$props = this.props,\n          spec = _this$props.spec,\n          onNewView = _this$props.onNewView,\n          _this$props$signalLis = _this$props.signalListeners,\n          signalListeners = _this$props$signalLis === void 0 ? {} : _this$props$signalLis,\n          width = _this$props.width,\n          height = _this$props.height,\n          options = _objectWithoutProperties(_this$props, [\"spec\", \"onNewView\", \"signalListeners\", \"width\", \"height\"]);\n\n      if (this.containerRef.current) {\n        var finalSpec = combineSpecWithDimension(this.props);\n        this.resultPromise = vegaEmbed(this.containerRef.current, finalSpec, options).then(function (result) {\n          if (result) {\n            var view = result.view;\n\n            if (addSignalListenersToView(view, signalListeners)) {\n              view.run();\n            }\n          }\n\n          return result;\n        }).catch(this.handleError);\n\n        if (onNewView) {\n          this.modifyView(onNewView);\n        }\n      }\n    }\n  }, {\n    key: \"clearView\",\n    value: function clearView() {\n      if (this.resultPromise) {\n        this.resultPromise.then(function (result) {\n          if (result) {\n            result.finalize();\n          }\n        }).catch(this.handleError);\n      }\n\n      this.resultPromise = undefined;\n      return this;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          className = _this$props2.className,\n          style = _this$props2.style; // Create the container Vega draws inside\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: this.containerRef,\n        className: className,\n        style: style\n      });\n    }\n  }]);\n\n  return VegaEmbed;\n}(React.PureComponent);\n\nexport { VegaEmbed as default };\n\n_defineProperty(VegaEmbed, \"propTypes\", {\n  className: _pt.string,\n  onError: _pt.func\n});","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/react-vega/esm/VegaEmbed.js"],"names":["_pt","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","React","vegaEmbed","shallowEqual","getUniqueFieldNames","NOOP","addSignalListenersToView","computeSpecChanges","removeSignalListenersFromView","combineSpecWithDimension","VegaEmbed","args","createRef","error","props","onError","console","warn","undefined","action","resultPromise","then","result","view","catch","handleError","createView","prevProps","fieldSet","delete","Array","from","some","f","clearView","specChanges","newSignalListeners","signalListeners","oldSignalListeners","isExpensive","areSignalListenersChanged","modifyView","width","height","run","spec","onNewView","options","containerRef","current","finalSpec","finalize","className","style","createElement","ref","PureComponent","string","func"],"mappings":"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","sourcesContent":["import _pt from \"prop-types\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport vegaEmbed from 'vega-embed';\nimport shallowEqual from './utils/shallowEqual';\nimport getUniqueFieldNames from './utils/getUniqueFieldNames';\nimport { NOOP } from './constants';\nimport addSignalListenersToView from './utils/addSignalListenersToView';\nimport computeSpecChanges from './utils/computeSpecChanges';\nimport removeSignalListenersFromView from './utils/removeSignalListenersFromView';\nimport combineSpecWithDimension from './utils/combineSpecWithDimension';\nexport default class VegaEmbed extends React.PureComponent {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"containerRef\", /*#__PURE__*/React.createRef());\n\n    _defineProperty(this, \"resultPromise\", void 0);\n\n    _defineProperty(this, \"handleError\", error => {\n      const {\n        onError = NOOP\n      } = this.props;\n      onError(error); // eslint-disable-next-line no-console\n\n      console.warn(error);\n      return undefined;\n    });\n\n    _defineProperty(this, \"modifyView\", action => {\n      if (this.resultPromise) {\n        this.resultPromise.then(result => {\n          if (result) {\n            action(result.view);\n          }\n\n          return true;\n        }).catch(this.handleError);\n      }\n    });\n  }\n\n  componentDidMount() {\n    this.createView();\n  }\n\n  componentDidUpdate(prevProps) {\n    const fieldSet = getUniqueFieldNames([this.props, prevProps]);\n    fieldSet.delete('className');\n    fieldSet.delete('signalListeners');\n    fieldSet.delete('spec');\n    fieldSet.delete('style');\n    fieldSet.delete('width');\n    fieldSet.delete('height'); // Only create a new view if necessary\n\n    if (Array.from(fieldSet).some(f => this.props[f] !== prevProps[f])) {\n      this.clearView();\n      this.createView();\n    } else {\n      const specChanges = computeSpecChanges(combineSpecWithDimension(this.props), combineSpecWithDimension(prevProps));\n      const {\n        signalListeners: newSignalListeners\n      } = this.props;\n      const {\n        signalListeners: oldSignalListeners\n      } = prevProps;\n\n      if (specChanges) {\n        if (specChanges.isExpensive) {\n          this.clearView();\n          this.createView();\n        } else {\n          const areSignalListenersChanged = !shallowEqual(newSignalListeners, oldSignalListeners);\n          this.modifyView(view => {\n            if (specChanges.width !== false) {\n              view.width(specChanges.width);\n            }\n\n            if (specChanges.height !== false) {\n              view.height(specChanges.height);\n            }\n\n            if (areSignalListenersChanged) {\n              if (oldSignalListeners) {\n                removeSignalListenersFromView(view, oldSignalListeners);\n              }\n\n              if (newSignalListeners) {\n                addSignalListenersToView(view, newSignalListeners);\n              }\n            }\n\n            view.run();\n          });\n        }\n      } else if (!shallowEqual(newSignalListeners, oldSignalListeners)) {\n        this.modifyView(view => {\n          if (oldSignalListeners) {\n            removeSignalListenersFromView(view, oldSignalListeners);\n          }\n\n          if (newSignalListeners) {\n            addSignalListenersToView(view, newSignalListeners);\n          }\n\n          view.run();\n        });\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.clearView();\n  }\n\n  createView() {\n    const {\n      spec,\n      onNewView,\n      signalListeners = {},\n      width,\n      height,\n      ...options\n    } = this.props;\n\n    if (this.containerRef.current) {\n      const finalSpec = combineSpecWithDimension(this.props);\n      this.resultPromise = vegaEmbed(this.containerRef.current, finalSpec, options).then(result => {\n        if (result) {\n          const {\n            view\n          } = result;\n\n          if (addSignalListenersToView(view, signalListeners)) {\n            view.run();\n          }\n        }\n\n        return result;\n      }).catch(this.handleError);\n\n      if (onNewView) {\n        this.modifyView(onNewView);\n      }\n    }\n  }\n\n  clearView() {\n    if (this.resultPromise) {\n      this.resultPromise.then(result => {\n        if (result) {\n          result.finalize();\n        }\n      }).catch(this.handleError);\n    }\n\n    this.resultPromise = undefined;\n    return this;\n  }\n\n  render() {\n    const {\n      className,\n      style\n    } = this.props; // Create the container Vega draws inside\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.containerRef,\n      className: className,\n      style: style\n    });\n  }\n\n}\n\n_defineProperty(VegaEmbed, \"propTypes\", {\n  className: _pt.string,\n  onError: _pt.func\n});"]},"metadata":{},"sourceType":"module"}