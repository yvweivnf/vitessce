{"ast":null,"code":"import { lights } from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\nvar INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  var _material$ambient = material.ambient,\n      ambient = _material$ambient === void 0 ? 0.35 : _material$ambient,\n      _material$diffuse = material.diffuse,\n      diffuse = _material$diffuse === void 0 ? 0.6 : _material$diffuse,\n      _material$shininess = material.shininess,\n      shininess = _material$shininess === void 0 ? 32 : _material$shininess,\n      _material$specularCol = material.specularColor,\n      specularColor = _material$specularCol === void 0 ? [30, 30, 30] : _material$specularCol;\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(function (x) {\n      return x / 255;\n    })\n  };\n}\n\nfunction getUniforms() {\n  var opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_MODULE_OPTIONS;\n\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  var material = opts.material;\n\n  if (!material) {\n    return {\n      lighting_uEnabled: false\n    };\n  }\n\n  return getMaterialUniforms(material);\n}\n\nexport var gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms: getUniforms\n};\nexport var phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms: getUniforms\n};","map":{"version":3,"sources":["../../../../src/modules/phong-lighting/phong-lighting.js"],"names":["INITIAL_MODULE_OPTIONS","ambient","diffuse","shininess","specularColor","lighting_uAmbient","lighting_uDiffuse","lighting_uShininess","lighting_uSpecularColor","x","opts","material","lighting_uEnabled","getMaterialUniforms","gouraudLighting","name","dependencies","vs","defines","LIGHTING_VERTEX","getUniforms","phongLighting","fs","LIGHTING_FRAGMENT"],"mappings":"AAEA,SAAA,MAAA,QAAA,kBAAA;AACA,OAAA,cAAA,MAAA,uBAAA;AAEA,IAAMA,sBAAsB,GAA5B,EAAA;;AAEA,SAAA,mBAAA,CAAA,QAAA,EAAuC;AAAA,0BACrC,QADqC,CAC9BC,OAD8B;AAAA,MAC9BA,OAD8B,kCAC/B,IAD+B;AAAA,0BACrC,QADqC,CACdC,OADc;AAAA,MACdA,OADc,kCAC/B,GAD+B;AAAA,4BACrC,QADqC,CACCC,SADD;AAAA,MACCA,SADD,oCAC/B,EAD+B;AAAA,8BACrC,QADqC,CACiBC,aADjB;AAAA,MACiBA,aADjB,sCACiC,CAAA,EAAA,EAAA,EAAA,EAAA,EAAA,CADjC;AAGrC,SAAO;AACLC,IAAAA,iBAAiB,EADZ,OAAA;AAELC,IAAAA,iBAAiB,EAFZ,OAAA;AAGLC,IAAAA,mBAAmB,EAHd,SAAA;AAILC,IAAAA,uBAAuB,EAAEJ,aAAa,CAAbA,GAAAA,CAAkBK,UAAAA,CAAC;AAAA,aAAIA,CAAC,GAAxBL,GAAmB;AAAA,KAAnBA;AAJpB,GAAP;AAMD;;AAED,SAAA,WAAA,GAAoD;AAAA,MAA/BM,IAA+B,uEAApD,sBAAoD;;AAClD,MAAI,EAAE,cAAN,IAAI,CAAJ,EAA2B;AACzB,WAAA,EAAA;AACD;;AAHiD,MAK3CC,QAL2C,GAKlD,IALkD,CAK3CA,QAL2C;;AAOlD,MAAI,CAAJ,QAAA,EAAe;AACb,WAAO;AAACC,MAAAA,iBAAiB,EAAE;AAApB,KAAP;AACD;;AAED,SAAOC,mBAAmB,CAA1B,QAA0B,CAA1B;AACD;;AAGD,OAAO,IAAMC,eAAe,GAAG;AAC7BC,EAAAA,IAAI,EADyB,kBAAA;AAE7BC,EAAAA,YAAY,EAAE,CAFe,MAEf,CAFe;AAG7BC,EAAAA,EAAE,EAH2B,cAAA;AAI7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,eAAe,EAAE;AADV,GAJoB;AAO7BC,EAAAA,WAAAA,EAAAA;AAP6B,CAAxB;AAWP,OAAO,IAAMC,aAAa,GAAG;AAC3BN,EAAAA,IAAI,EADuB,gBAAA;AAE3BC,EAAAA,YAAY,EAAE,CAFa,MAEb,CAFa;AAG3BM,EAAAA,EAAE,EAHyB,cAAA;AAI3BJ,EAAAA,OAAO,EAAE;AACPK,IAAAA,iBAAiB,EAAE;AADZ,GAJkB;AAO3BH,EAAAA,WAAAA,EAAAA;AAP2B,CAAtB","sourcesContent":["/** @typedef {import('../../types').ShaderModule} ShaderModule */\n\nimport {lights} from '../lights/lights';\nimport lightingShader from './phong-lighting.glsl';\n\nconst INITIAL_MODULE_OPTIONS = {};\n\nfunction getMaterialUniforms(material) {\n  const {ambient = 0.35, diffuse = 0.6, shininess = 32, specularColor = [30, 30, 30]} = material;\n\n  return {\n    lighting_uAmbient: ambient,\n    lighting_uDiffuse: diffuse,\n    lighting_uShininess: shininess,\n    lighting_uSpecularColor: specularColor.map(x => x / 255)\n  };\n}\n\nfunction getUniforms(opts = INITIAL_MODULE_OPTIONS) {\n  if (!('material' in opts)) {\n    return {};\n  }\n\n  const {material} = opts;\n\n  if (!material) {\n    return {lighting_uEnabled: false};\n  }\n\n  return getMaterialUniforms(material);\n}\n\n/** @type {ShaderModule} */\nexport const gouraudLighting = {\n  name: 'gouraud-lighting',\n  dependencies: [lights],\n  vs: lightingShader,\n  defines: {\n    LIGHTING_VERTEX: 1\n  },\n  getUniforms\n};\n\n/** @type {ShaderModule} */\nexport const phongLighting = {\n  name: 'phong-lighting',\n  dependencies: [lights],\n  fs: lightingShader,\n  defines: {\n    LIGHTING_FRAGMENT: 1\n  },\n  getUniforms\n};\n"]},"metadata":{},"sourceType":"module"}