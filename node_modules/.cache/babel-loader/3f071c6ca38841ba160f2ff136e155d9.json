{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\layer-controller\\\\BitmaskChannelController.js\";\nimport React from 'react';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from '@material-ui/core/Grid';\nimport { ChannelSelectionDropdown, ChannelVisibilityCheckbox } from './shared-channel-controls';\n/**\n * Controller for the handling the bitmask channels.\n * @prop {boolean} visibility Whether or not this channel is \"on\"\n * @prop {string} dimName Name of the dimensions this slider controls (usually \"channel\").\n * @prop {object} channelOptions All available options for this dimension (i.e channel names).\n * @prop {function} handlePropertyChange Callback for when a property (color, slider etc.) changes.\n * @prop {function} handleChannelRemove When a channel is removed, this is called.\n * @prop {number} selectionIndex The current numeric index of the selection.\n * @prop {boolean} disableOptions Whether or not channel options are be disabled (default: false).\n */\n\nfunction BitmaskChannelController({\n  visibility = false,\n  dimName,\n  channelOptions,\n  handlePropertyChange,\n  handleChannelRemove,\n  selectionIndex,\n  disableOptions = false\n}) {\n  /* A valid selection is defined by an object where the keys are\n  *  the name of a dimension of the data, and the values are the\n  *  index of the image along that particular dimension.\n  *\n  *  Since we currently only support making a selection along one\n  *  addtional dimension (i.e. the dropdown just has channels or mz)\n  *  we have a helper function to create the selection.\n  *\n  *  e.g { channel: 2 } // channel dimension, third channel\n  */\n  const createSelection = index => ({\n    [dimName]: index\n  });\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    direction: \"row\",\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChannelVisibilityCheckbox, {\n    color: [220, 220, 220],\n    checked: visibility,\n    toggle: () => handlePropertyChange('visible', !visibility),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ChannelSelectionDropdown, {\n    handleChange: v => handlePropertyChange('selection', createSelection(v)),\n    selectionIndex: selectionIndex,\n    disableOptions: disableOptions,\n    channelOptions: channelOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleChannelRemove,\n    style: {\n      padding: '6px 6px 6px 0px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(RemoveCircleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }))));\n}\n\nexport default BitmaskChannelController;","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/layer-controller/BitmaskChannelController.js"],"names":["React","RemoveCircleIcon","IconButton","Grid","ChannelSelectionDropdown","ChannelVisibilityCheckbox","BitmaskChannelController","visibility","dimName","channelOptions","handlePropertyChange","handleChannelRemove","selectionIndex","disableOptions","createSelection","index","v","padding"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,SAASC,wBAAT,EAAmCC,yBAAnC,QAAoE,2BAApE;AAEA;;;;;;;;;;;AAUA,SAASC,wBAAT,CAAkC;AAChCC,EAAAA,UAAU,GAAG,KADmB;AAEhCC,EAAAA,OAFgC;AAGhCC,EAAAA,cAHgC;AAIhCC,EAAAA,oBAJgC;AAKhCC,EAAAA,mBALgC;AAMhCC,EAAAA,cANgC;AAOhCC,EAAAA,cAAc,GAAG;AAPe,CAAlC,EAQG;AACD;;;;;;;;;;AAUA,QAAMC,eAAe,GAAGC,KAAK,KAAK;AAAE,KAACP,OAAD,GAAWO;AAAb,GAAL,CAA7B;;AACA,sBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,SAAS,EAAC,KAA1B;AAAgC,IAAA,OAAO,EAAC,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,yBAAD;AACE,IAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CADT;AAEE,IAAA,OAAO,EAAER,UAFX;AAGE,IAAA,MAAM,EAAE,MAAMG,oBAAoB,CAAC,SAAD,EAAY,CAACH,UAAb,CAHpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,wBAAD;AACE,IAAA,YAAY,EAAES,CAAC,IAAIN,oBAAoB,CAAC,WAAD,EAAcI,eAAe,CAACE,CAAD,CAA7B,CADzC;AAEE,IAAA,cAAc,EAAEJ,cAFlB;AAGE,IAAA,cAAc,EAAEC,cAHlB;AAIE,IAAA,cAAc,EAAEJ,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,eAgBE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEE,mBAArB;AAA0C,IAAA,KAAK,EAAE;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAhBF,CADF;AAwBD;;AAED,eAAeX,wBAAf","sourcesContent":["import React from 'react';\n\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { ChannelSelectionDropdown, ChannelVisibilityCheckbox } from './shared-channel-controls';\n\n/**\n * Controller for the handling the bitmask channels.\n * @prop {boolean} visibility Whether or not this channel is \"on\"\n * @prop {string} dimName Name of the dimensions this slider controls (usually \"channel\").\n * @prop {object} channelOptions All available options for this dimension (i.e channel names).\n * @prop {function} handlePropertyChange Callback for when a property (color, slider etc.) changes.\n * @prop {function} handleChannelRemove When a channel is removed, this is called.\n * @prop {number} selectionIndex The current numeric index of the selection.\n * @prop {boolean} disableOptions Whether or not channel options are be disabled (default: false).\n */\nfunction BitmaskChannelController({\n  visibility = false,\n  dimName,\n  channelOptions,\n  handlePropertyChange,\n  handleChannelRemove,\n  selectionIndex,\n  disableOptions = false,\n}) {\n  /* A valid selection is defined by an object where the keys are\n  *  the name of a dimension of the data, and the values are the\n  *  index of the image along that particular dimension.\n  *\n  *  Since we currently only support making a selection along one\n  *  addtional dimension (i.e. the dropdown just has channels or mz)\n  *  we have a helper function to create the selection.\n  *\n  *  e.g { channel: 2 } // channel dimension, third channel\n  */\n  const createSelection = index => ({ [dimName]: index });\n  return (\n    <Grid container direction=\"row\" justify=\"space-between\">\n      <Grid item xs={2}>\n        <ChannelVisibilityCheckbox\n          color={[220, 220, 220]}\n          checked={visibility}\n          toggle={() => handlePropertyChange('visible', !visibility)}\n        />\n      </Grid>\n      <Grid item xs={9}>\n        <ChannelSelectionDropdown\n          handleChange={v => handlePropertyChange('selection', createSelection(v))}\n          selectionIndex={selectionIndex}\n          disableOptions={disableOptions}\n          channelOptions={channelOptions}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <IconButton onClick={handleChannelRemove} style={{ padding: '6px 6px 6px 0px' }}>\n          <RemoveCircleIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default BitmaskChannelController;\n"]},"metadata":{},"sourceType":"module"}