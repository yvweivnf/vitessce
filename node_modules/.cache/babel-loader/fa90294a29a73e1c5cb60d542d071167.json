{"ast":null,"code":"import * as log from '../log';\nimport { isAnyConcatSpec, isFacetSpec, isLayerSpec, isUnitSpec } from '../spec';\nimport { ConcatModel } from './concat';\nimport { FacetModel } from './facet';\nimport { LayerModel } from './layer';\nimport { UnitModel } from './unit';\nexport function buildModel(spec, parent, parentGivenName, unitSize, config) {\n  if (isFacetSpec(spec)) {\n    return new FacetModel(spec, parent, parentGivenName, config);\n  } else if (isLayerSpec(spec)) {\n    return new LayerModel(spec, parent, parentGivenName, unitSize, config);\n  } else if (isUnitSpec(spec)) {\n    return new UnitModel(spec, parent, parentGivenName, unitSize, config);\n  } else if (isAnyConcatSpec(spec)) {\n    return new ConcatModel(spec, parent, parentGivenName, config);\n  }\n\n  throw new Error(log.message.invalidSpec(spec));\n}","map":{"version":3,"sources":["../../../src/compile/buildmodel.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,GAAZ,MAAqB,QAArB;AACA,SAAQ,eAAR,EAAyB,WAAzB,EAAsC,WAAtC,EAAmD,UAAnD,QAAsG,SAAtG;AACA,SAAQ,WAAR,QAA0B,UAA1B;AACA,SAAQ,UAAR,QAAyB,SAAzB;AACA,SAAQ,UAAR,QAAyB,SAAzB;AAEA,SAAQ,SAAR,QAAwB,QAAxB;AAEA,OAAM,SAAU,UAAV,CACJ,IADI,EAEJ,MAFI,EAGJ,eAHI,EAIJ,QAJI,EAKJ,MALI,EAKqB;AAEzB,MAAI,WAAW,CAAC,IAAD,CAAf,EAAuB;AACrB,WAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,MAArB,EAA6B,eAA7B,EAA8C,MAA9C,CAAP;AACD,GAFD,MAEO,IAAI,WAAW,CAAC,IAAD,CAAf,EAAuB;AAC5B,WAAO,IAAI,UAAJ,CAAe,IAAf,EAAqB,MAArB,EAA6B,eAA7B,EAA8C,QAA9C,EAAwD,MAAxD,CAAP;AACD,GAFM,MAEA,IAAI,UAAU,CAAC,IAAD,CAAd,EAAsB;AAC3B,WAAO,IAAI,SAAJ,CAAc,IAAd,EAAoB,MAApB,EAA4B,eAA5B,EAA6C,QAA7C,EAAuD,MAAvD,CAAP;AACD,GAFM,MAEA,IAAI,eAAe,CAAC,IAAD,CAAnB,EAA2B;AAChC,WAAO,IAAI,WAAJ,CAAgB,IAAhB,EAAsB,MAAtB,EAA8B,eAA9B,EAA+C,MAA/C,CAAP;AACD;;AACD,QAAM,IAAI,KAAJ,CAAU,GAAG,CAAC,OAAJ,CAAY,WAAZ,CAAwB,IAAxB,CAAV,CAAN;AACD","sourceRoot":"","sourcesContent":["import * as log from '../log';\nimport { isAnyConcatSpec, isFacetSpec, isLayerSpec, isUnitSpec } from '../spec';\nimport { ConcatModel } from './concat';\nimport { FacetModel } from './facet';\nimport { LayerModel } from './layer';\nimport { UnitModel } from './unit';\nexport function buildModel(spec, parent, parentGivenName, unitSize, config) {\n    if (isFacetSpec(spec)) {\n        return new FacetModel(spec, parent, parentGivenName, config);\n    }\n    else if (isLayerSpec(spec)) {\n        return new LayerModel(spec, parent, parentGivenName, unitSize, config);\n    }\n    else if (isUnitSpec(spec)) {\n        return new UnitModel(spec, parent, parentGivenName, unitSize, config);\n    }\n    else if (isAnyConcatSpec(spec)) {\n        return new ConcatModel(spec, parent, parentGivenName, config);\n    }\n    throw new Error(log.message.invalidSpec(spec));\n}\n//# sourceMappingURL=buildmodel.js.map"]},"metadata":{},"sourceType":"module"}