{"ast":null,"code":"import * as encode from './encode';\nexport const area = {\n  vgMark: 'area',\n  encodeEntry: model => {\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n      align: 'ignore',\n      baseline: 'ignore',\n      color: 'include',\n      orient: 'include',\n      size: 'ignore',\n      theta: 'ignore'\n    })), encode.pointOrRangePosition('x', model, {\n      defaultPos: 'zeroOrMin',\n      defaultPos2: 'zeroOrMin',\n      range: model.markDef.orient === 'horizontal'\n    })), encode.pointOrRangePosition('y', model, {\n      defaultPos: 'zeroOrMin',\n      defaultPos2: 'zeroOrMin',\n      range: model.markDef.orient === 'vertical'\n    })), encode.defined(model));\n  }\n};","map":{"version":3,"sources":["../../../../src/compile/mark/area.ts"],"names":[],"mappings":"AAEA,OAAO,KAAK,MAAZ,MAAwB,UAAxB;AAEA,OAAO,MAAM,IAAI,GAAiB;AAChC,EAAA,MAAM,EAAE,MADwB;AAEhC,EAAA,WAAW,EAAG,KAAD,IAAqB;AAChC,WAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACK,MAAM,CAAC,eAAP,CAAuB,KAAvB,EAA8B;AAC/B,MAAA,KAAK,EAAE,QADwB;AAE/B,MAAA,QAAQ,EAAE,QAFqB;AAG/B,MAAA,KAAK,EAAE,SAHwB;AAI/B,MAAA,MAAM,EAAE,SAJuB;AAK/B,MAAA,IAAI,EAAE,QALyB;AAM/B,MAAA,KAAK,EAAE;AANwB,KAA9B,CADL,CAAA,EASK,MAAM,CAAC,oBAAP,CAA4B,GAA5B,EAAiC,KAAjC,EAAwC;AACzC,MAAA,UAAU,EAAE,WAD6B;AAEzC,MAAA,WAAW,EAAE,WAF4B;AAGzC,MAAA,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,MAAd,KAAyB;AAHS,KAAxC,CATL,CAAA,EAcK,MAAM,CAAC,oBAAP,CAA4B,GAA5B,EAAiC,KAAjC,EAAwC;AACzC,MAAA,UAAU,EAAE,WAD6B;AAEzC,MAAA,WAAW,EAAE,WAF4B;AAGzC,MAAA,KAAK,EAAE,KAAK,CAAC,OAAN,CAAc,MAAd,KAAyB;AAHS,KAAxC,CAdL,CAAA,EAmBK,MAAM,CAAC,OAAP,CAAe,KAAf,CAnBL,CAAA;AAqBD;AAxB+B,CAA3B","sourceRoot":"","sourcesContent":["import * as encode from './encode';\nexport const area = {\n    vgMark: 'area',\n    encodeEntry: (model) => {\n        return Object.assign(Object.assign(Object.assign(Object.assign({}, encode.baseEncodeEntry(model, {\n            align: 'ignore',\n            baseline: 'ignore',\n            color: 'include',\n            orient: 'include',\n            size: 'ignore',\n            theta: 'ignore'\n        })), encode.pointOrRangePosition('x', model, {\n            defaultPos: 'zeroOrMin',\n            defaultPos2: 'zeroOrMin',\n            range: model.markDef.orient === 'horizontal'\n        })), encode.pointOrRangePosition('y', model, {\n            defaultPos: 'zeroOrMin',\n            defaultPos2: 'zeroOrMin',\n            range: model.markDef.orient === 'vertical'\n        })), encode.defined(model));\n    }\n};\n//# sourceMappingURL=area.js.map"]},"metadata":{},"sourceType":"module"}