{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";/* eslint-disable dot-notation */import React,{useEffect,useCallback,useRef,forwardRef}from'react';import Grid from'@material-ui/core/Grid';import TitleInfo from'../TitleInfo';import RasterChannelController from'./RasterChannelController';import BitmaskChannelController from'./BitmaskChannelController';import VectorLayerController from'./VectorLayerController';import LayerController from'./LayerController';import ImageAddButton from'./ImageAddButton';import{useReady,useClosestVitessceContainerSize,useWindowDimensions}from'../hooks';import{useCellsData,useMoleculesData,useRasterData}from'../data-hooks';import{useCoordination,useLoaders,useAuxiliaryCoordination,useComponentLayout}from'../../app/state/hooks';import{COMPONENT_COORDINATION_TYPES}from'../../app/state/coordination';import{initializeLayerChannels}from'../spatial/utils';import{DEFAULT_RASTER_LAYER_PROPS}from'../spatial/constants';var LAYER_CONTROLLER_DATA_TYPES=['raster'];// LayerController is memoized to prevent updates from prop changes that\n// are caused by view state updates i.e zooming and panning within\n// the actual Spatial component.  Re-rendering this component is very\n// expensive so we have to be careful with props in this file in general.\nvar LayerControllerMemoized=React.memo(forwardRef(function(props,ref){var title=props.title,removeGridComponent=props.removeGridComponent,theme=props.theme,isReady=props.isReady,moleculesLayer=props.moleculesLayer,dataset=props.dataset,setMoleculesLayer=props.setMoleculesLayer,cellsLayer=props.cellsLayer,canShowCellVecmask=props.canShowCellVecmask,setCellsLayer=props.setCellsLayer,rasterLayers=props.rasterLayers,imageLayerLoaders=props.imageLayerLoaders,imageLayerMeta=props.imageLayerMeta,rasterLayersCallbacks=props.rasterLayersCallbacks,setRasterLayersCallbacks=props.setRasterLayersCallbacks,areLoadingRasterChannnels=props.areLoadingRasterChannnels,setAreLoadingRasterChannnels=props.setAreLoadingRasterChannnels,handleRasterLayerChange=props.handleRasterLayerChange,handleRasterLayerRemove=props.handleRasterLayerRemove,disable3d=props.disable3d,globalDisable3d=props.globalDisable3d,disableChannelsIfRgbDetected=props.disableChannelsIfRgbDetected,layerIs3DIndex=props.layerIs3DIndex,setZoom=props.setZoom,setTargetX=props.setTargetX,setTargetY=props.setTargetY,setTargetZ=props.setTargetZ,setRotationX=props.setRotationX,setRotationOrbit=props.setRotationOrbit,componentHeight=props.componentHeight,componentWidth=props.componentWidth,spatialLayout=props.spatialLayout,handleImageAdd=props.handleImageAdd,enableLayerButtonsWithOneLayer=props.enableLayerButtonsWithOneLayer;var shouldShowImageLayerButton=Boolean(enableLayerButtonsWithOneLayer||(imageLayerLoaders===null||imageLayerLoaders===void 0?void 0:imageLayerLoaders.length)>1);return/*#__PURE__*/React.createElement(TitleInfo,{title:title,isScroll:true,removeGridComponent:removeGridComponent,theme:theme,isReady:isReady},/*#__PURE__*/React.createElement(\"div\",{className:\"layer-controller-container\",ref:ref},moleculesLayer&&/*#__PURE__*/React.createElement(VectorLayerController,{key:\"\".concat(dataset,\"-molecules\"),label:\"Molecules\",layerType:\"molecules\",layer:moleculesLayer,handleLayerChange:setMoleculesLayer}),cellsLayer&&canShowCellVecmask&&/*#__PURE__*/React.createElement(VectorLayerController,{key:\"\".concat(dataset,\"-cells\"),label:\"Cell Segmentations\",layerType:\"cells\",layer:cellsLayer,handleLayerChange:setCellsLayer}),rasterLayers&&rasterLayers.map(function(layer,i){var _layerMeta$metadata;var index=layer.index;var loader=imageLayerLoaders[index];var layerMeta=imageLayerMeta[index];// Could also be bitmask at the moment.\nvar isRaster=!(layerMeta===null||layerMeta===void 0?void 0:(_layerMeta$metadata=layerMeta.metadata)===null||_layerMeta$metadata===void 0?void 0:_layerMeta$metadata.isBitmask);var ChannelController=isRaster?RasterChannelController:BitmaskChannelController;// Set up the call back mechanism so that each layer manages\n// callbacks/loading state for itself and its channels.\nvar setRasterLayerCallback=function setRasterLayerCallback(cb){var newRasterLayersCallbacks=_toConsumableArray(rasterLayersCallbacks||[]);newRasterLayersCallbacks[i]=cb;setRasterLayersCallbacks(newRasterLayersCallbacks);};var areLayerChannelsLoading=(areLoadingRasterChannnels||[])[i]||[];var setAreLayerChannelsLoading=function setAreLayerChannelsLoading(v){var newAreLoadingRasterChannnels=_toConsumableArray(areLoadingRasterChannnels||[]);newAreLoadingRasterChannnels[i]=v;setAreLoadingRasterChannnels(newAreLoadingRasterChannnels);};return loader&&layerMeta?/*#__PURE__*/React.createElement(Grid// eslint-disable-next-line react/no-array-index-key\n,{key:\"\".concat(dataset,\"-raster-\").concat(index,\"-\").concat(i),item:true,style:{marginTop:'10px'}},/*#__PURE__*/React.createElement(LayerController,{name:layerMeta.name,layer:layer,loader:loader,theme:theme,handleLayerChange:function handleLayerChange(v){return handleRasterLayerChange(v,i);},handleLayerRemove:function handleLayerRemove(){return handleRasterLayerRemove(i);},ChannelController:ChannelController,shouldShowTransparentColor:isRaster,shouldShowDomain:isRaster,shouldShowColormap:isRaster// Disable 3D if given explicit instructions to do so\n// or if another layer is using 3D mode.\n,disable3d:globalDisable3d||(disable3d||[]).indexOf(layerMeta.name)>=0||typeof layerIs3DIndex==='number'&&layerIs3DIndex!==-1&&layerIs3DIndex!==i,disabled:typeof layerIs3DIndex==='number'&&layerIs3DIndex!==-1&&layerIs3DIndex!==i,disableChannelsIfRgbDetected:disableChannelsIfRgbDetected,rasterLayersCallbacks:rasterLayersCallbacks,setRasterLayerCallback:setRasterLayerCallback,setViewState:function setViewState(_ref){var newZoom=_ref.zoom,target=_ref.target,newRotationX=_ref.rotationX,newRotationOrbit=_ref.rotationOrbit;setZoom(newZoom);setTargetX(target[0]);setTargetY(target[1]);setTargetZ(target[2]);setRotationX(newRotationX);setRotationOrbit(newRotationOrbit);},setAreLayerChannelsLoading:setAreLayerChannelsLoading,areLayerChannelsLoading:areLayerChannelsLoading,spatialHeight:componentHeight*(spatialLayout?spatialLayout.h:1)/12,spatialWidth:componentWidth*(spatialLayout?spatialLayout.w:1)/12,shouldShowRemoveLayerButton:shouldShowImageLayerButton})):null;}),shouldShowImageLayerButton?/*#__PURE__*/React.createElement(Grid,{item:true},/*#__PURE__*/React.createElement(ImageAddButton,{imageOptions:imageLayerMeta,handleImageAdd:handleImageAdd})):null));}));/**\n * A subscriber component for the spatial layer controller.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {Object} props.disable3d Which layers should have 3D disabled (from `raster.json` names).\n * @param {boolean} props.globalDisable3d Disable 3D for all layers. Overrides the `disable3d` prop.\n * @param {boolean} props.disableChannelsIfRgbDetected Disable channel controls if an\n * RGB image is detected i.e 3 channel 8 bit.\n * @param {boolean} props.enableLayerButtonsWithOneLayer If there is only one layer,\n * show the the layer add/remove buttons.\n */function LayerControllerSubscriber(props){var coordinationScopes=props.coordinationScopes,removeGridComponent=props.removeGridComponent,theme=props.theme,_props$title=props.title,title=_props$title===void 0?'Spatial Layers':_props$title,disable3d=props.disable3d,globalDisable3d=props.globalDisable3d,disableChannelsIfRgbDetected=props.disableChannelsIfRgbDetected,enableLayerButtonsWithOneLayer=props.enableLayerButtonsWithOneLayer;var loaders=useLoaders();// Get \"props\" from the coordination space.\nvar _useCoordination=useCoordination(COMPONENT_COORDINATION_TYPES.layerController,coordinationScopes),_useCoordination2=_slicedToArray(_useCoordination,2),_useCoordination2$=_useCoordination2[0],dataset=_useCoordination2$.dataset,rasterLayers=_useCoordination2$.spatialImageLayer,cellsLayer=_useCoordination2$.spatialSegmentationLayer,moleculesLayer=_useCoordination2$.spatialPointLayer,_useCoordination2$2=_useCoordination2[1],setRasterLayers=_useCoordination2$2.setSpatialImageLayer,setCellsLayer=_useCoordination2$2.setSpatialSegmentationLayer,setMoleculesLayer=_useCoordination2$2.setSpatialPointLayer,setTargetX=_useCoordination2$2.setSpatialTargetX,setTargetY=_useCoordination2$2.setSpatialTargetY,setTargetZ=_useCoordination2$2.setSpatialTargetZ,setRotationX=_useCoordination2$2.setSpatialRotationX,setRotationOrbit=_useCoordination2$2.setSpatialRotationOrbit,setZoom=_useCoordination2$2.setSpatialZoom;var _useAuxiliaryCoordina=useAuxiliaryCoordination(COMPONENT_COORDINATION_TYPES.layerController,coordinationScopes),_useAuxiliaryCoordina2=_slicedToArray(_useAuxiliaryCoordina,2),_useAuxiliaryCoordina3=_useAuxiliaryCoordina2[0],rasterLayersCallbacks=_useAuxiliaryCoordina3.rasterLayersCallbacks,areLoadingRasterChannnels=_useAuxiliaryCoordina3.areLoadingRasterChannnels,_useAuxiliaryCoordina4=_useAuxiliaryCoordina2[1],setRasterLayersCallbacks=_useAuxiliaryCoordina4.setRasterLayersCallbacks,setAreLoadingRasterChannnels=_useAuxiliaryCoordina4.setAreLoadingRasterChannnels;// Spatial layout + window size is needed for the \"re-center\" button to work properly.\n// Dimensions of the Spatial component can be inferred and used for resetting view state to\n// a nice, centered view.\nvar _useComponentLayout=useComponentLayout('spatial',['spatialImageLayer'],coordinationScopes),_useComponentLayout2=_slicedToArray(_useComponentLayout,1),spatialLayout=_useComponentLayout2[0];var layerControllerRef=useRef();var _useClosestVitessceCo=useClosestVitessceContainerSize(layerControllerRef),_useClosestVitessceCo2=_slicedToArray(_useClosestVitessceCo,2),componentWidth=_useClosestVitessceCo2[0],componentHeight=_useClosestVitessceCo2[1];var _useWindowDimensions=useWindowDimensions(),windowHeight=_useWindowDimensions.height,windowWidth=_useWindowDimensions.width;var _useReady=useReady(LAYER_CONTROLLER_DATA_TYPES),_useReady2=_slicedToArray(_useReady,4),isReady=_useReady2[0],setItemIsReady=_useReady2[1],setItemIsNotReady=_useReady2[2],// eslint-disable-line no-unused-vars\nresetReadyItems=_useReady2[3];// Reset loader progress when the dataset has changed.\nuseEffect(function(){resetReadyItems();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[loaders,dataset]);// Get data from loaders using the data hooks.\n// eslint-disable-next-line no-unused-vars\nvar _useRasterData=useRasterData(loaders,dataset,setItemIsReady,function(){},false,{setSpatialImageLayer:setRasterLayers},{spatialImageLayer:rasterLayers}),_useRasterData2=_slicedToArray(_useRasterData,3),raster=_useRasterData2[0],imageLayerLoaders=_useRasterData2[1],imageLayerMeta=_useRasterData2[2];useCellsData(loaders,dataset,setItemIsReady,function(){},false,{setSpatialSegmentationLayer:setCellsLayer},{spatialSegmentationLayer:cellsLayer});useMoleculesData(loaders,dataset,setItemIsReady,function(){},false,{setSpatialPointLayer:setMoleculesLayer},{spatialPointLayer:moleculesLayer});// useCallback prevents new functions from propogating\n// changes to the underlying component.\nvar handleImageAdd=useCallback(/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(index){var _imageLayerMeta$index,_imageLayerMeta$index2,_imageLayerMeta$index3,_imageLayerMeta$index4,_imageLayerMeta$index5;var loader,newChannels,newLayer,newLayers;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:loader=imageLayerLoaders[index];_context.next=3;return initializeLayerChannels(loader,(rasterLayers[index]||{}).use3d);case 3:newChannels=_context.sent;newLayer=_objectSpread({index:index,modelMatrix:(_imageLayerMeta$index=imageLayerMeta[index])===null||_imageLayerMeta$index===void 0?void 0:(_imageLayerMeta$index2=_imageLayerMeta$index.metadata)===null||_imageLayerMeta$index2===void 0?void 0:(_imageLayerMeta$index3=_imageLayerMeta$index2.transform)===null||_imageLayerMeta$index3===void 0?void 0:_imageLayerMeta$index3.matrix},DEFAULT_RASTER_LAYER_PROPS,{channels:newChannels,type:((_imageLayerMeta$index4=imageLayerMeta[index])===null||_imageLayerMeta$index4===void 0?void 0:(_imageLayerMeta$index5=_imageLayerMeta$index4.metadata)===null||_imageLayerMeta$index5===void 0?void 0:_imageLayerMeta$index5.isBitmask)?'bitmask':'raster'});newLayers=[].concat(_toConsumableArray(rasterLayers),[newLayer]);setRasterLayers(newLayers);case 7:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}(),[imageLayerLoaders,imageLayerMeta,rasterLayers,setRasterLayers]);var handleRasterLayerChange=useCallback(function(newLayer,i){var newLayers=_toConsumableArray(rasterLayers);newLayers[i]=newLayer;setRasterLayers(newLayers);},[rasterLayers,setRasterLayers]);var handleRasterLayerRemove=useCallback(function(i){var newLayers=_toConsumableArray(rasterLayers);newLayers.splice(i,1);setRasterLayers(newLayers);},[rasterLayers,setRasterLayers]);var hasNoBitmask=(imageLayerMeta.length?imageLayerMeta:[{metadata:{isBitmask:true}}]).every(function(l){var _l$metadata;return!(l===null||l===void 0?void 0:(_l$metadata=l.metadata)===null||_l$metadata===void 0?void 0:_l$metadata.isBitmask);});// Only want to show vector cells controller if there is no bitmask\nvar canShowCellVecmask=hasNoBitmask;var layerIs3DIndex=(rasterLayers===null||rasterLayers===void 0?void 0:rasterLayers.findIndex)&&rasterLayers.findIndex(function(layer){return layer.use3d;});return/*#__PURE__*/React.createElement(LayerControllerMemoized,{ref:layerControllerRef,title:title,removeGridComponent:removeGridComponent,theme:theme,isReady:isReady,moleculesLayer:moleculesLayer,dataset:dataset,setMoleculesLayer:setMoleculesLayer,cellsLayer:cellsLayer,canShowCellVecmask:canShowCellVecmask,setCellsLayer:setCellsLayer,rasterLayers:rasterLayers,imageLayerLoaders:imageLayerLoaders,imageLayerMeta:imageLayerMeta,rasterLayersCallbacks:rasterLayersCallbacks,setRasterLayersCallbacks:setRasterLayersCallbacks,areLoadingRasterChannnels:areLoadingRasterChannnels,setAreLoadingRasterChannnels:setAreLoadingRasterChannnels,handleRasterLayerChange:handleRasterLayerChange,handleRasterLayerRemove:handleRasterLayerRemove,disable3d:disable3d,globalDisable3d:globalDisable3d,layerIs3DIndex:layerIs3DIndex,disableChannelsIfRgbDetected:disableChannelsIfRgbDetected,enableLayerButtonsWithOneLayer:enableLayerButtonsWithOneLayer,setZoom:setZoom,setTargetX:setTargetX,setTargetY:setTargetY,setTargetZ:setTargetZ,setRotationX:setRotationX,setRotationOrbit:setRotationOrbit// Fall back to window for height and width.\n,componentHeight:componentHeight||windowHeight,componentWidth:componentWidth||windowWidth,spatialLayout:spatialLayout,handleImageAdd:handleImageAdd});}export default LayerControllerSubscriber;","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/layer-controller/LayerControllerSubscriber.js"],"names":["React","useEffect","useCallback","useRef","forwardRef","Grid","TitleInfo","RasterChannelController","BitmaskChannelController","VectorLayerController","LayerController","ImageAddButton","useReady","useClosestVitessceContainerSize","useWindowDimensions","useCellsData","useMoleculesData","useRasterData","useCoordination","useLoaders","useAuxiliaryCoordination","useComponentLayout","COMPONENT_COORDINATION_TYPES","initializeLayerChannels","DEFAULT_RASTER_LAYER_PROPS","LAYER_CONTROLLER_DATA_TYPES","LayerControllerMemoized","memo","props","ref","title","removeGridComponent","theme","isReady","moleculesLayer","dataset","setMoleculesLayer","cellsLayer","canShowCellVecmask","setCellsLayer","rasterLayers","imageLayerLoaders","imageLayerMeta","rasterLayersCallbacks","setRasterLayersCallbacks","areLoadingRasterChannnels","setAreLoadingRasterChannnels","handleRasterLayerChange","handleRasterLayerRemove","disable3d","globalDisable3d","disableChannelsIfRgbDetected","layerIs3DIndex","setZoom","setTargetX","setTargetY","setTargetZ","setRotationX","setRotationOrbit","componentHeight","componentWidth","spatialLayout","handleImageAdd","enableLayerButtonsWithOneLayer","shouldShowImageLayerButton","Boolean","length","map","layer","i","index","loader","layerMeta","isRaster","metadata","isBitmask","ChannelController","setRasterLayerCallback","cb","newRasterLayersCallbacks","areLayerChannelsLoading","setAreLayerChannelsLoading","v","newAreLoadingRasterChannnels","marginTop","name","indexOf","newZoom","zoom","target","newRotationX","rotationX","newRotationOrbit","rotationOrbit","h","w","LayerControllerSubscriber","coordinationScopes","loaders","layerController","spatialImageLayer","spatialSegmentationLayer","spatialPointLayer","setRasterLayers","setSpatialImageLayer","setSpatialSegmentationLayer","setSpatialPointLayer","setSpatialTargetX","setSpatialTargetY","setSpatialTargetZ","setSpatialRotationX","setSpatialRotationOrbit","setSpatialZoom","layerControllerRef","windowHeight","height","windowWidth","width","setItemIsReady","setItemIsNotReady","resetReadyItems","raster","use3d","newChannels","newLayer","modelMatrix","transform","matrix","channels","type","newLayers","splice","hasNoBitmask","every","l","findIndex"],"mappings":"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","sourcesContent":["/* eslint-disable dot-notation */\nimport React, {\n  useEffect, useCallback, useRef, forwardRef,\n} from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport TitleInfo from '../TitleInfo';\nimport RasterChannelController from './RasterChannelController';\nimport BitmaskChannelController from './BitmaskChannelController';\nimport VectorLayerController from './VectorLayerController';\nimport LayerController from './LayerController';\nimport ImageAddButton from './ImageAddButton';\nimport { useReady, useClosestVitessceContainerSize, useWindowDimensions } from '../hooks';\nimport { useCellsData, useMoleculesData, useRasterData } from '../data-hooks';\nimport {\n  useCoordination,\n  useLoaders,\n  useAuxiliaryCoordination,\n  useComponentLayout,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport { initializeLayerChannels } from '../spatial/utils';\nimport { DEFAULT_RASTER_LAYER_PROPS } from '../spatial/constants';\n\nconst LAYER_CONTROLLER_DATA_TYPES = ['raster'];\n\n// LayerController is memoized to prevent updates from prop changes that\n// are caused by view state updates i.e zooming and panning within\n// the actual Spatial component.  Re-rendering this component is very\n// expensive so we have to be careful with props in this file in general.\nconst LayerControllerMemoized = React.memo(\n  forwardRef((props, ref) => {\n    const {\n      title,\n      removeGridComponent,\n      theme,\n      isReady,\n      moleculesLayer,\n      dataset,\n      setMoleculesLayer,\n      cellsLayer,\n      canShowCellVecmask,\n      setCellsLayer,\n      rasterLayers,\n      imageLayerLoaders,\n      imageLayerMeta,\n      rasterLayersCallbacks,\n      setRasterLayersCallbacks,\n      areLoadingRasterChannnels,\n      setAreLoadingRasterChannnels,\n      handleRasterLayerChange,\n      handleRasterLayerRemove,\n      disable3d,\n      globalDisable3d,\n      disableChannelsIfRgbDetected,\n      layerIs3DIndex,\n      setZoom,\n      setTargetX,\n      setTargetY,\n      setTargetZ,\n      setRotationX,\n      setRotationOrbit,\n      componentHeight,\n      componentWidth,\n      spatialLayout,\n      handleImageAdd,\n      enableLayerButtonsWithOneLayer,\n    } = props;\n    const shouldShowImageLayerButton = Boolean(\n      enableLayerButtonsWithOneLayer || imageLayerLoaders?.length > 1,\n    );\n    return (\n      <TitleInfo\n        title={title}\n        isScroll\n        removeGridComponent={removeGridComponent}\n        theme={theme}\n        isReady={isReady}\n      >\n        <div className=\"layer-controller-container\" ref={ref}>\n          {moleculesLayer && (\n            <VectorLayerController\n              key={`${dataset}-molecules`}\n              label=\"Molecules\"\n              layerType=\"molecules\"\n              layer={moleculesLayer}\n              handleLayerChange={setMoleculesLayer}\n            />\n          )}\n          {cellsLayer && canShowCellVecmask && (\n            <VectorLayerController\n              key={`${dataset}-cells`}\n              label=\"Cell Segmentations\"\n              layerType=\"cells\"\n              layer={cellsLayer}\n              handleLayerChange={setCellsLayer}\n            />\n          )}\n          {rasterLayers\n            && rasterLayers.map((layer, i) => {\n              const { index } = layer;\n              const loader = imageLayerLoaders[index];\n              const layerMeta = imageLayerMeta[index];\n              // Could also be bitmask at the moment.\n              const isRaster = !layerMeta?.metadata?.isBitmask;\n              const ChannelController = isRaster\n                ? RasterChannelController\n                : BitmaskChannelController;\n              // Set up the call back mechanism so that each layer manages\n              // callbacks/loading state for itself and its channels.\n              const setRasterLayerCallback = (cb) => {\n                const newRasterLayersCallbacks = [\n                  ...(rasterLayersCallbacks || []),\n                ];\n                newRasterLayersCallbacks[i] = cb;\n                setRasterLayersCallbacks(newRasterLayersCallbacks);\n              };\n              const areLayerChannelsLoading = (areLoadingRasterChannnels || [])[i] || [];\n              const setAreLayerChannelsLoading = (v) => {\n                const newAreLoadingRasterChannnels = [\n                  ...(areLoadingRasterChannnels || []),\n                ];\n                newAreLoadingRasterChannnels[i] = v;\n                setAreLoadingRasterChannnels(newAreLoadingRasterChannnels);\n              };\n              return loader && layerMeta ? (\n                <Grid\n                  // eslint-disable-next-line react/no-array-index-key\n                  key={`${dataset}-raster-${index}-${i}`}\n                  item\n                  style={{ marginTop: '10px' }}\n                >\n                  <LayerController\n                    name={layerMeta.name}\n                    layer={layer}\n                    loader={loader}\n                    theme={theme}\n                    handleLayerChange={v => handleRasterLayerChange(v, i)}\n                    handleLayerRemove={() => handleRasterLayerRemove(i)}\n                    ChannelController={ChannelController}\n                    shouldShowTransparentColor={isRaster}\n                    shouldShowDomain={isRaster}\n                    shouldShowColormap={isRaster}\n                    // Disable 3D if given explicit instructions to do so\n                    // or if another layer is using 3D mode.\n                    disable3d={\n                      globalDisable3d\n                      || (disable3d || []).indexOf(layerMeta.name) >= 0\n                      || (typeof layerIs3DIndex === 'number'\n                        && layerIs3DIndex !== -1\n                        && layerIs3DIndex !== i)\n                    }\n                    disabled={\n                      typeof layerIs3DIndex === 'number'\n                      && layerIs3DIndex !== -1\n                      && layerIs3DIndex !== i\n                    }\n                    disableChannelsIfRgbDetected={disableChannelsIfRgbDetected}\n                    rasterLayersCallbacks={rasterLayersCallbacks}\n                    setRasterLayerCallback={setRasterLayerCallback}\n                    setViewState={({\n                      zoom: newZoom,\n                      target,\n                      rotationX: newRotationX,\n                      rotationOrbit: newRotationOrbit,\n                    }) => {\n                      setZoom(newZoom);\n                      setTargetX(target[0]);\n                      setTargetY(target[1]);\n                      setTargetZ(target[2]);\n                      setRotationX(newRotationX);\n                      setRotationOrbit(newRotationOrbit);\n                    }}\n                    setAreLayerChannelsLoading={setAreLayerChannelsLoading}\n                    areLayerChannelsLoading={areLayerChannelsLoading}\n                    spatialHeight={(componentHeight * (spatialLayout ? spatialLayout.h : 1)) / 12}\n                    spatialWidth={(componentWidth * (spatialLayout ? spatialLayout.w : 1)) / 12}\n                    shouldShowRemoveLayerButton={shouldShowImageLayerButton}\n                  />\n                </Grid>\n              ) : null;\n            })}\n          {shouldShowImageLayerButton\n            ? (\n              <Grid item>\n                <ImageAddButton\n                  imageOptions={imageLayerMeta}\n                  handleImageAdd={handleImageAdd}\n                />\n              </Grid>\n            ) : null}\n        </div>\n      </TitleInfo>\n    );\n  }),\n);\n\n/**\n * A subscriber component for the spatial layer controller.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {Object} props.disable3d Which layers should have 3D disabled (from `raster.json` names).\n * @param {boolean} props.globalDisable3d Disable 3D for all layers. Overrides the `disable3d` prop.\n * @param {boolean} props.disableChannelsIfRgbDetected Disable channel controls if an\n * RGB image is detected i.e 3 channel 8 bit.\n * @param {boolean} props.enableLayerButtonsWithOneLayer If there is only one layer,\n * show the the layer add/remove buttons.\n */\nfunction LayerControllerSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    theme,\n    title = 'Spatial Layers',\n    disable3d,\n    globalDisable3d,\n    disableChannelsIfRgbDetected,\n    enableLayerButtonsWithOneLayer,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [\n    {\n      dataset,\n      spatialImageLayer: rasterLayers,\n      spatialSegmentationLayer: cellsLayer,\n      spatialPointLayer: moleculesLayer,\n    },\n    {\n      setSpatialImageLayer: setRasterLayers,\n      setSpatialSegmentationLayer: setCellsLayer,\n      setSpatialPointLayer: setMoleculesLayer,\n      setSpatialTargetX: setTargetX,\n      setSpatialTargetY: setTargetY,\n      setSpatialTargetZ: setTargetZ,\n      setSpatialRotationX: setRotationX,\n      setSpatialRotationOrbit: setRotationOrbit,\n      setSpatialZoom: setZoom,\n    },\n  ] = useCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n\n  const [\n    {\n      rasterLayersCallbacks,\n      areLoadingRasterChannnels,\n    },\n    {\n      setRasterLayersCallbacks,\n      setAreLoadingRasterChannnels,\n    },\n  ] = useAuxiliaryCoordination(\n    COMPONENT_COORDINATION_TYPES.layerController,\n    coordinationScopes,\n  );\n  // Spatial layout + window size is needed for the \"re-center\" button to work properly.\n  // Dimensions of the Spatial component can be inferred and used for resetting view state to\n  // a nice, centered view.\n  const [spatialLayout] = useComponentLayout('spatial', ['spatialImageLayer'], coordinationScopes);\n  const layerControllerRef = useRef();\n  const [componentWidth, componentHeight] = useClosestVitessceContainerSize(layerControllerRef);\n  const { height: windowHeight, width: windowWidth } = useWindowDimensions();\n\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    LAYER_CONTROLLER_DATA_TYPES,\n  );\n\n  // Reset loader progress when the dataset has changed.\n  useEffect(() => {\n    resetReadyItems();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  // eslint-disable-next-line no-unused-vars\n  const [raster, imageLayerLoaders, imageLayerMeta] = useRasterData(\n    loaders, dataset, setItemIsReady, () => { }, false,\n    { setSpatialImageLayer: setRasterLayers },\n    { spatialImageLayer: rasterLayers },\n  );\n\n  useCellsData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n    { setSpatialSegmentationLayer: setCellsLayer },\n    { spatialSegmentationLayer: cellsLayer },\n  );\n  useMoleculesData(\n    loaders, dataset, setItemIsReady, () => {}, false,\n    { setSpatialPointLayer: setMoleculesLayer },\n    { spatialPointLayer: moleculesLayer },\n  );\n\n  // useCallback prevents new functions from propogating\n  // changes to the underlying component.\n  const handleImageAdd = useCallback(async (index) => {\n    const loader = imageLayerLoaders[index];\n    const newChannels = await initializeLayerChannels(\n      loader,\n      (rasterLayers[index] || {}).use3d,\n    );\n    const newLayer = {\n      index,\n      modelMatrix: imageLayerMeta[index]?.metadata?.transform?.matrix,\n      ...DEFAULT_RASTER_LAYER_PROPS,\n      channels: newChannels,\n      type: imageLayerMeta[index]?.metadata?.isBitmask ? 'bitmask' : 'raster',\n    };\n    const newLayers = [...rasterLayers, newLayer];\n    setRasterLayers(newLayers);\n  }, [imageLayerLoaders, imageLayerMeta, rasterLayers, setRasterLayers]);\n\n  const handleRasterLayerChange = useCallback((newLayer, i) => {\n    const newLayers = [...rasterLayers];\n    newLayers[i] = newLayer;\n    setRasterLayers(newLayers);\n  }, [rasterLayers, setRasterLayers]);\n\n  const handleRasterLayerRemove = useCallback((i) => {\n    const newLayers = [...rasterLayers];\n    newLayers.splice(i, 1);\n    setRasterLayers(newLayers);\n  }, [rasterLayers, setRasterLayers]);\n\n  const hasNoBitmask = (\n    imageLayerMeta.length ? imageLayerMeta : [{ metadata: { isBitmask: true } }]\n  ).every(l => !l?.metadata?.isBitmask);\n  // Only want to show vector cells controller if there is no bitmask\n  const canShowCellVecmask = hasNoBitmask;\n  const layerIs3DIndex = rasterLayers?.findIndex && rasterLayers.findIndex(layer => layer.use3d);\n  return (\n    <LayerControllerMemoized\n      ref={layerControllerRef}\n      title={title}\n      removeGridComponent={removeGridComponent}\n      theme={theme}\n      isReady={isReady}\n      moleculesLayer={moleculesLayer}\n      dataset={dataset}\n      setMoleculesLayer={setMoleculesLayer}\n      cellsLayer={cellsLayer}\n      canShowCellVecmask={canShowCellVecmask}\n      setCellsLayer={setCellsLayer}\n      rasterLayers={rasterLayers}\n      imageLayerLoaders={imageLayerLoaders}\n      imageLayerMeta={imageLayerMeta}\n      rasterLayersCallbacks={rasterLayersCallbacks}\n      setRasterLayersCallbacks={setRasterLayersCallbacks}\n      areLoadingRasterChannnels={areLoadingRasterChannnels}\n      setAreLoadingRasterChannnels={setAreLoadingRasterChannnels}\n      handleRasterLayerChange={handleRasterLayerChange}\n      handleRasterLayerRemove={handleRasterLayerRemove}\n      disable3d={disable3d}\n      globalDisable3d={globalDisable3d}\n      layerIs3DIndex={layerIs3DIndex}\n      disableChannelsIfRgbDetected={disableChannelsIfRgbDetected}\n      enableLayerButtonsWithOneLayer={enableLayerButtonsWithOneLayer}\n      setZoom={setZoom}\n      setTargetX={setTargetX}\n      setTargetY={setTargetY}\n      setTargetZ={setTargetZ}\n      setRotationX={setRotationX}\n      setRotationOrbit={setRotationOrbit}\n      // Fall back to window for height and width.\n      componentHeight={componentHeight || windowHeight}\n      componentWidth={componentWidth || windowWidth}\n      spatialLayout={spatialLayout}\n      handleImageAdd={handleImageAdd}\n    />\n  );\n}\n\nexport default LayerControllerSubscriber;\n"]},"metadata":{},"sourceType":"module"}