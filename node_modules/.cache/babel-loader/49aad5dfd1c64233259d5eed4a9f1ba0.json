{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.SELECTION_TYPE = void 0;\n\nvar _core = require(\"@deck.gl/core\");\n\nvar _layers = require(\"@deck.gl/layers\");\n\nvar _helpers = require(\"@turf/helpers\");\n\nvar _buffer = _interopRequireDefault(require(\"@turf/buffer\"));\n\nvar _difference = _interopRequireDefault(require(\"@turf/difference\"));\n\nvar _editModes = require(\"@nebula.gl/edit-modes\");\n\nvar _editableGeojsonLayer = _interopRequireDefault(require(\"./editable-geojson-layer\"));\n\nvar _MODE_MAP;\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar SELECTION_TYPE = {\n  NONE: null,\n  RECTANGLE: 'rectangle',\n  POLYGON: 'polygon'\n};\nexports.SELECTION_TYPE = SELECTION_TYPE;\nvar MODE_MAP = (_MODE_MAP = {}, _defineProperty(_MODE_MAP, SELECTION_TYPE.RECTANGLE, _editModes.DrawRectangleMode), _defineProperty(_MODE_MAP, SELECTION_TYPE.POLYGON, _editModes.DrawPolygonMode), _MODE_MAP);\n\nvar MODE_CONFIG_MAP = _defineProperty({}, SELECTION_TYPE.RECTANGLE, {\n  dragToDraw: true\n});\n\nvar defaultProps = {\n  selectionType: SELECTION_TYPE.RECTANGLE,\n  layerIds: [],\n  onSelect: function onSelect() {}\n};\nvar EMPTY_DATA = {\n  type: 'FeatureCollection',\n  features: []\n};\nvar EXPANSION_KM = 50;\nvar LAYER_ID_GEOJSON = 'selection-geojson';\nvar LAYER_ID_BLOCKER = 'selection-blocker';\nvar PASS_THROUGH_PROPS = ['lineWidthScale', 'lineWidthMinPixels', 'lineWidthMaxPixels', 'lineWidthUnits', 'lineJointRounded', 'lineMiterLimit', 'pointRadiusScale', 'pointRadiusMinPixels', 'pointRadiusMaxPixels', 'lineDashJustified', 'getLineColor', 'getFillColor', 'getRadius', 'getLineWidth', 'getLineDashArray', 'getTentativeLineDashArray', 'getTentativeLineColor', 'getTentativeFillColor', 'getTentativeLineWidth'];\n\nvar SelectionLayer = /*#__PURE__*/function (_CompositeLayer) {\n  _inherits(SelectionLayer, _CompositeLayer);\n\n  var _super = _createSuper(SelectionLayer);\n\n  function SelectionLayer() {\n    _classCallCheck(this, SelectionLayer);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(SelectionLayer, [{\n    key: \"_selectRectangleObjects\",\n    value: function _selectRectangleObjects(coordinates) {\n      var _this$props = this.props,\n          layerIds = _this$props.layerIds,\n          onSelect = _this$props.onSelect; // @ts-ignore\n\n      var _this$context$viewpor = this.context.viewport.project(coordinates[0][0]),\n          _this$context$viewpor2 = _slicedToArray(_this$context$viewpor, 2),\n          x1 = _this$context$viewpor2[0],\n          y1 = _this$context$viewpor2[1]; // @ts-ignore\n\n\n      var _this$context$viewpor3 = this.context.viewport.project(coordinates[0][2]),\n          _this$context$viewpor4 = _slicedToArray(_this$context$viewpor3, 2),\n          x2 = _this$context$viewpor4[0],\n          y2 = _this$context$viewpor4[1]; // @ts-ignore\n\n\n      var pickingInfos = this.context.deck.pickObjects({\n        x: Math.min(x1, x2),\n        y: Math.min(y1, y2),\n        width: Math.abs(x2 - x1),\n        height: Math.abs(y2 - y1),\n        layerIds: layerIds\n      });\n      onSelect({\n        pickingInfos: pickingInfos\n      });\n    }\n  }, {\n    key: \"_selectPolygonObjects\",\n    value: function _selectPolygonObjects(coordinates) {\n      var _this = this;\n\n      var _this$props2 = this.props,\n          layerIds = _this$props2.layerIds,\n          onSelect = _this$props2.onSelect; // @ts-ignore\n\n      var mousePoints = coordinates[0].map(function (c) {\n        return _this.context.viewport.project(c);\n      });\n      var allX = mousePoints.map(function (mousePoint) {\n        return mousePoint[0];\n      });\n      var allY = mousePoints.map(function (mousePoint) {\n        return mousePoint[1];\n      });\n      var x = Math.min.apply(Math, _toConsumableArray(allX));\n      var y = Math.min.apply(Math, _toConsumableArray(allY));\n      var maxX = Math.max.apply(Math, _toConsumableArray(allX));\n      var maxY = Math.max.apply(Math, _toConsumableArray(allY)); // Use a polygon to hide the outside, because pickObjects()\n      // does not support polygons\n\n      var landPointsPoly = (0, _helpers.polygon)(coordinates);\n      var bigBuffer = (0, _buffer[\"default\"])(landPointsPoly, EXPANSION_KM);\n      var bigPolygon;\n\n      try {\n        // turfDifference throws an exception if the polygon\n        // intersects with itself (TODO: check if true in all versions)\n        bigPolygon = (0, _difference[\"default\"])(bigBuffer, landPointsPoly);\n      } catch (e) {\n        // invalid selection polygon\n        console.log('turfDifference() error', e); // eslint-disable-line\n\n        return;\n      }\n\n      this.setState({\n        pendingPolygonSelection: {\n          bigPolygon: bigPolygon\n        }\n      });\n      var blockerId = \"\".concat(this.props.id, \"-\").concat(LAYER_ID_BLOCKER); // HACK, find a better way\n\n      setTimeout(function () {\n        // @ts-ignore\n        var pickingInfos = _this.context.deck.pickObjects({\n          x: x,\n          y: y,\n          width: maxX - x,\n          height: maxY - y,\n          layerIds: [blockerId].concat(_toConsumableArray(layerIds))\n        });\n\n        onSelect({\n          pickingInfos: pickingInfos.filter(function (item) {\n            return item.layer.id !== _this.props.id;\n          })\n        });\n      }, 250);\n    }\n  }, {\n    key: \"renderLayers\",\n    value: function renderLayers() {\n      var _this2 = this;\n\n      var pendingPolygonSelection = this.state.pendingPolygonSelection;\n      var mode = MODE_MAP[this.props.selectionType] || _editModes.ViewMode;\n      var modeConfig = MODE_CONFIG_MAP[this.props.selectionType];\n      var inheritedProps = {};\n      PASS_THROUGH_PROPS.forEach(function (p) {\n        if (_this2.props[p] !== undefined) inheritedProps[p] = _this2.props[p];\n      });\n      var layers = [new _editableGeojsonLayer[\"default\"](this.getSubLayerProps(_objectSpread({\n        id: LAYER_ID_GEOJSON,\n        pickable: true,\n        mode: mode,\n        modeConfig: modeConfig,\n        selectedFeatureIndexes: [],\n        data: EMPTY_DATA,\n        onEdit: function onEdit(_ref) {\n          var updatedData = _ref.updatedData,\n              editType = _ref.editType;\n\n          if (editType === 'addFeature') {\n            var coordinates = updatedData.features[0].geometry.coordinates;\n\n            if (_this2.props.selectionType === SELECTION_TYPE.RECTANGLE) {\n              _this2._selectRectangleObjects(coordinates);\n            } else if (_this2.props.selectionType === SELECTION_TYPE.POLYGON) {\n              _this2._selectPolygonObjects(coordinates);\n            }\n          }\n        }\n      }, inheritedProps)))];\n\n      if (pendingPolygonSelection) {\n        var bigPolygon = pendingPolygonSelection.bigPolygon;\n        layers.push(new _layers.PolygonLayer( // @ts-ignore\n        this.getSubLayerProps({\n          id: LAYER_ID_BLOCKER,\n          pickable: true,\n          stroked: false,\n          opacity: 1.0,\n          data: [bigPolygon],\n          getLineColor: function getLineColor(obj) {\n            return [0, 0, 0, 1];\n          },\n          getFillColor: function getFillColor(obj) {\n            return [0, 0, 0, 1];\n          },\n          getPolygon: function getPolygon(o) {\n            return o.geometry.coordinates;\n          }\n        })));\n      }\n\n      return layers;\n    }\n  }, {\n    key: \"shouldUpdateState\",\n    value: function shouldUpdateState(_ref2) {\n      var _ref2$changeFlags = _ref2.changeFlags,\n          stateChanged = _ref2$changeFlags.stateChanged,\n          propsOrDataChanged = _ref2$changeFlags.propsOrDataChanged;\n      return stateChanged || propsOrDataChanged;\n    }\n  }]);\n\n  return SelectionLayer;\n}(_core.CompositeLayer);\n\nexports[\"default\"] = SelectionLayer;\n\n_defineProperty(SelectionLayer, \"layerName\", 'SelectionLayer');\n\n_defineProperty(SelectionLayer, \"defaultProps\", defaultProps);","map":{"version":3,"sources":["../../src/layers/selection-layer.ts"],"names":["SELECTION_TYPE","NONE","RECTANGLE","POLYGON","MODE_MAP","DrawRectangleMode","DrawPolygonMode","MODE_CONFIG_MAP","dragToDraw","defaultProps","selectionType","layerIds","onSelect","EMPTY_DATA","type","features","EXPANSION_KM","LAYER_ID_GEOJSON","LAYER_ID_BLOCKER","PASS_THROUGH_PROPS","SelectionLayer","CompositeLayer","coordinates","x1","y1","x2","y2","pickingInfos","x","Math","y","width","height","mousePoints","allX","mousePoint","allY","maxX","maxY","landPointsPoly","bigBuffer","bigPolygon","console","pendingPolygonSelection","blockerId","setTimeout","item","mode","ViewMode","modeConfig","inheritedProps","layers","EditableGeoJsonLayer","id","pickable","selectedFeatureIndexes","data","onEdit","updatedData","editType","PolygonLayer","stroked","opacity","getLineColor","getFillColor","getPolygon","o","changeFlags","stateChanged","propsOrDataChanged"],"mappings":"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","sourcesContent":["/* eslint-env browser */\nimport { CompositeLayer } from '@deck.gl/core';\nimport { PolygonLayer } from '@deck.gl/layers';\nimport { polygon } from '@turf/helpers';\nimport turfBuffer from '@turf/buffer';\nimport turfDifference from '@turf/difference';\nimport { DrawRectangleMode, DrawPolygonMode, ViewMode } from '@nebula.gl/edit-modes';\n\nimport EditableGeoJsonLayer from './editable-geojson-layer';\n\nexport const SELECTION_TYPE = {\n  NONE: null,\n  RECTANGLE: 'rectangle',\n  POLYGON: 'polygon',\n};\n\nconst MODE_MAP = {\n  [SELECTION_TYPE.RECTANGLE]: DrawRectangleMode,\n  [SELECTION_TYPE.POLYGON]: DrawPolygonMode,\n};\n\nconst MODE_CONFIG_MAP = {\n  [SELECTION_TYPE.RECTANGLE]: { dragToDraw: true },\n};\n\nconst defaultProps = {\n  selectionType: SELECTION_TYPE.RECTANGLE,\n  layerIds: [],\n  onSelect: () => {},\n};\n\nconst EMPTY_DATA = {\n  type: 'FeatureCollection',\n  features: [],\n};\n\nconst EXPANSION_KM = 50;\nconst LAYER_ID_GEOJSON = 'selection-geojson';\nconst LAYER_ID_BLOCKER = 'selection-blocker';\n\nconst PASS_THROUGH_PROPS = [\n  'lineWidthScale',\n  'lineWidthMinPixels',\n  'lineWidthMaxPixels',\n  'lineWidthUnits',\n  'lineJointRounded',\n  'lineMiterLimit',\n  'pointRadiusScale',\n  'pointRadiusMinPixels',\n  'pointRadiusMaxPixels',\n  'lineDashJustified',\n  'getLineColor',\n  'getFillColor',\n  'getRadius',\n  'getLineWidth',\n  'getLineDashArray',\n  'getTentativeLineDashArray',\n  'getTentativeLineColor',\n  'getTentativeFillColor',\n  'getTentativeLineWidth',\n];\n\nexport default class SelectionLayer extends CompositeLayer<any> {\n  static layerName = 'SelectionLayer';\n  static defaultProps = defaultProps;\n\n  _selectRectangleObjects(coordinates: any) {\n    const { layerIds, onSelect } = this.props;\n    // @ts-ignore\n    const [x1, y1] = this.context.viewport.project(coordinates[0][0]);\n    // @ts-ignore\n    const [x2, y2] = this.context.viewport.project(coordinates[0][2]);\n    // @ts-ignore\n    const pickingInfos = this.context.deck.pickObjects({\n      x: Math.min(x1, x2),\n      y: Math.min(y1, y2),\n      width: Math.abs(x2 - x1),\n      height: Math.abs(y2 - y1),\n      layerIds,\n    });\n\n    onSelect({ pickingInfos });\n  }\n\n  _selectPolygonObjects(coordinates: any) {\n    const { layerIds, onSelect } = this.props;\n    // @ts-ignore\n    const mousePoints = coordinates[0].map((c) => this.context.viewport.project(c));\n\n    const allX = mousePoints.map((mousePoint) => mousePoint[0]);\n    const allY = mousePoints.map((mousePoint) => mousePoint[1]);\n    const x = Math.min(...allX);\n    const y = Math.min(...allY);\n    const maxX = Math.max(...allX);\n    const maxY = Math.max(...allY);\n\n    // Use a polygon to hide the outside, because pickObjects()\n    // does not support polygons\n    const landPointsPoly = polygon(coordinates);\n    const bigBuffer = turfBuffer(landPointsPoly, EXPANSION_KM);\n    let bigPolygon;\n    try {\n      // turfDifference throws an exception if the polygon\n      // intersects with itself (TODO: check if true in all versions)\n      bigPolygon = turfDifference(bigBuffer, landPointsPoly);\n    } catch (e) {\n      // invalid selection polygon\n      console.log('turfDifference() error', e); // eslint-disable-line\n      return;\n    }\n\n    this.setState({\n      pendingPolygonSelection: {\n        bigPolygon,\n      },\n    });\n\n    const blockerId = `${this.props.id}-${LAYER_ID_BLOCKER}`;\n\n    // HACK, find a better way\n    setTimeout(() => {\n      // @ts-ignore\n      const pickingInfos = this.context.deck.pickObjects({\n        x,\n        y,\n        width: maxX - x,\n        height: maxY - y,\n        layerIds: [blockerId, ...layerIds],\n      });\n\n      onSelect({\n        pickingInfos: pickingInfos.filter((item) => item.layer.id !== this.props.id),\n      });\n    }, 250);\n  }\n\n  renderLayers() {\n    const { pendingPolygonSelection } = this.state;\n\n    const mode = MODE_MAP[this.props.selectionType] || ViewMode;\n    const modeConfig = MODE_CONFIG_MAP[this.props.selectionType];\n\n    const inheritedProps = {};\n    PASS_THROUGH_PROPS.forEach((p) => {\n      if (this.props[p] !== undefined) inheritedProps[p] = this.props[p];\n    });\n\n    const layers = [\n      new EditableGeoJsonLayer(\n        this.getSubLayerProps({\n          id: LAYER_ID_GEOJSON,\n          pickable: true,\n          mode,\n          modeConfig,\n          selectedFeatureIndexes: [],\n          data: EMPTY_DATA,\n          onEdit: ({ updatedData, editType }) => {\n            if (editType === 'addFeature') {\n              const { coordinates } = updatedData.features[0].geometry;\n\n              if (this.props.selectionType === SELECTION_TYPE.RECTANGLE) {\n                this._selectRectangleObjects(coordinates);\n              } else if (this.props.selectionType === SELECTION_TYPE.POLYGON) {\n                this._selectPolygonObjects(coordinates);\n              }\n            }\n          },\n          ...inheritedProps,\n        })\n      ),\n    ];\n\n    if (pendingPolygonSelection) {\n      const { bigPolygon } = pendingPolygonSelection;\n      layers.push(\n        new PolygonLayer(\n          // @ts-ignore\n          this.getSubLayerProps({\n            id: LAYER_ID_BLOCKER,\n            pickable: true,\n            stroked: false,\n            opacity: 1.0,\n            data: [bigPolygon],\n            getLineColor: (obj) => [0, 0, 0, 1],\n            getFillColor: (obj) => [0, 0, 0, 1],\n            getPolygon: (o) => o.geometry.coordinates,\n          })\n        )\n      );\n    }\n\n    return layers;\n  }\n\n  shouldUpdateState({ changeFlags: { stateChanged, propsOrDataChanged } }: Record<string, any>) {\n    return stateChanged || propsOrDataChanged;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}