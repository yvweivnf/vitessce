{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\genes\\\\GenesSubscriber.js\";\nimport React, { useEffect } from 'react';\nimport { pluralize } from '../../utils';\nimport { useReady, useUrls } from '../hooks';\nimport { useExpressionAttrs } from '../data-hooks';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nimport TitleInfo from '../TitleInfo';\nimport Genes from './Genes';\nconst GENES_DATA_TYPES = ['expression-matrix'];\n/**\n * A subscriber component for a gene listing component.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {string} props.variablesLabelOverride The singular form\n * of the name of the variable.\n * @param {string} props.variablesPluralLabelOverride The plural\n * form of the name of the variable.\n * @param {boolean} props.enableMultiSelect If true, allow\n * shift-clicking to select multiple genes.\n */\n\nexport default function GenesSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    variablesLabelOverride: variablesLabel = 'gene',\n    variablesPluralLabelOverride: variablesPluralLabel = `${variablesLabel}s`,\n    theme,\n    title = 'Expression Levels',\n    enableMultiSelect = false\n  } = props;\n  const loaders = useLoaders(); // Get \"props\" from the coordination space.\n\n  const [{\n    dataset,\n    featureSelection: geneSelection,\n    featureFilter: geneFilter,\n    obsColorEncoding: cellColorEncoding\n  }, {\n    setFeatureSelection: setGeneSelection,\n    setFeatureFilter: setGeneFilter,\n    setFeatureHighlight: setGeneHighlight,\n    setObsColorEncoding: setCellColorEncoding\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.genes, coordinationScopes);\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [isReady, setItemIsReady, setItemIsNotReady, // eslint-disable-line no-unused-vars\n  resetReadyItems] = useReady(GENES_DATA_TYPES); // Reset file URLs and loader progress when the dataset has changed.\n\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]); // Get data from loaders using the data hooks.\n\n  const [attrs] = useExpressionAttrs(loaders, dataset, setItemIsReady, addUrl, true);\n  const geneList = attrs ? attrs.cols : [];\n  const numGenes = geneList.length;\n\n  function setGeneSelectionAndColorEncoding(newSelection) {\n    setGeneSelection(newSelection);\n    setCellColorEncoding('geneSelection');\n  }\n\n  return /*#__PURE__*/React.createElement(TitleInfo, {\n    title: title,\n    info: `${numGenes} ${pluralize(variablesLabel, variablesPluralLabel, numGenes)}`,\n    theme: theme // Virtual scroll is used but this allows for the same styling as a scroll component\n    // even though this no longer uses the TitleInfo component's\n    // scroll css (SelectableTable is virtual scroll).\n    ,\n    isScroll: true,\n    removeGridComponent: removeGridComponent,\n    isReady: isReady,\n    urls: urls,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Genes, {\n    hasColorEncoding: cellColorEncoding === 'geneSelection',\n    geneList: geneList,\n    geneSelection: geneSelection,\n    geneFilter: geneFilter,\n    setGeneSelection: setGeneSelectionAndColorEncoding,\n    setGeneFilter: setGeneFilter,\n    setGeneHighlight: setGeneHighlight,\n    enableMultiSelect: enableMultiSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/genes/GenesSubscriber.js"],"names":["React","useEffect","pluralize","useReady","useUrls","useExpressionAttrs","useCoordination","useLoaders","COMPONENT_COORDINATION_TYPES","TitleInfo","Genes","GENES_DATA_TYPES","GenesSubscriber","props","coordinationScopes","removeGridComponent","variablesLabelOverride","variablesLabel","variablesPluralLabelOverride","variablesPluralLabel","theme","title","enableMultiSelect","loaders","dataset","featureSelection","geneSelection","featureFilter","geneFilter","obsColorEncoding","cellColorEncoding","setFeatureSelection","setGeneSelection","setFeatureFilter","setGeneFilter","setFeatureHighlight","setGeneHighlight","setObsColorEncoding","setCellColorEncoding","genes","urls","addUrl","resetUrls","isReady","setItemIsReady","setItemIsNotReady","resetReadyItems","attrs","geneList","cols","numGenes","length","setGeneSelectionAndColorEncoding","newSelection"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { pluralize } from '../../utils';\nimport { useReady, useUrls } from '../hooks';\nimport { useExpressionAttrs } from '../data-hooks';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nimport TitleInfo from '../TitleInfo';\nimport Genes from './Genes';\n\nconst GENES_DATA_TYPES = ['expression-matrix'];\n\n/**\n * A subscriber component for a gene listing component.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {string} props.variablesLabelOverride The singular form\n * of the name of the variable.\n * @param {string} props.variablesPluralLabelOverride The plural\n * form of the name of the variable.\n * @param {boolean} props.enableMultiSelect If true, allow\n * shift-clicking to select multiple genes.\n */\nexport default function GenesSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    variablesLabelOverride: variablesLabel = 'gene',\n    variablesPluralLabelOverride: variablesPluralLabel = `${variablesLabel}s`,\n    theme,\n    title = 'Expression Levels',\n    enableMultiSelect = false,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    featureSelection: geneSelection,\n    featureFilter: geneFilter,\n    obsColorEncoding: cellColorEncoding,\n  }, {\n    setFeatureSelection: setGeneSelection,\n    setFeatureFilter: setGeneFilter,\n    setFeatureHighlight: setGeneHighlight,\n    setObsColorEncoding: setCellColorEncoding,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.genes, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    GENES_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  const geneList = attrs ? attrs.cols : [];\n  const numGenes = geneList.length;\n\n  function setGeneSelectionAndColorEncoding(newSelection) {\n    setGeneSelection(newSelection);\n    setCellColorEncoding('geneSelection');\n  }\n\n  return (\n    <TitleInfo\n      title={title}\n      info={`${numGenes} ${pluralize(variablesLabel, variablesPluralLabel, numGenes)}`}\n      theme={theme}\n      // Virtual scroll is used but this allows for the same styling as a scroll component\n      // even though this no longer uses the TitleInfo component's\n      // scroll css (SelectableTable is virtual scroll).\n      isScroll\n      removeGridComponent={removeGridComponent}\n      isReady={isReady}\n      urls={urls}\n    >\n      <Genes\n        hasColorEncoding={cellColorEncoding === 'geneSelection'}\n        geneList={geneList}\n        geneSelection={geneSelection}\n        geneFilter={geneFilter}\n        setGeneSelection={setGeneSelectionAndColorEncoding}\n        setGeneFilter={setGeneFilter}\n        setGeneHighlight={setGeneHighlight}\n        enableMultiSelect={enableMultiSelect}\n      />\n    </TitleInfo>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}