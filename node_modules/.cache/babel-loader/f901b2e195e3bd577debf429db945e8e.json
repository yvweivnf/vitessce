{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport { GLTFLoader } from '@loaders.gl/gltf';\nexport function parseGltf3DTile(_x, _x2, _x3, _x4) {\n  return _parseGltf3DTile.apply(this, arguments);\n}\n\nfunction _parseGltf3DTile() {\n  _parseGltf3DTile = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(tile, arrayBuffer, options, context) {\n    var parse;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tile.rotateYtoZ = true;\n            tile.gltfUpAxis = options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis ? options['3d-tiles'].assetGltfUpAxis : 'Y';\n            parse = context.parse;\n            _context.next = 5;\n            return parse(arrayBuffer, GLTFLoader, options, context);\n\n          case 5:\n            tile.gltf = _context.sent;\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _parseGltf3DTile.apply(this, arguments);\n}","map":{"version":3,"sources":["../../../../src/lib/parsers/parse-3d-tile-gltf.js"],"names":["tile","options","parse"],"mappings":";;AAAA,SAAA,UAAA,QAAA,kBAAA;AAEA,gBAAO,eAAP;AAAA;AAAA;;;8EAAO,iBAAA,IAAA,EAAA,WAAA,EAAA,OAAA,EAAA,OAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAILA,YAAAA,IAAI,CAAJA,UAAAA,GAAAA,IAAAA;AAEAA,YAAAA,IAAI,CAAJA,UAAAA,GACEC,OAAO,CAAPA,UAAO,CAAPA,IAAuBA,OAAO,CAAPA,UAAO,CAAPA,CAAvBA,eAAAA,GACIA,OAAO,CAAPA,UAAO,CAAPA,CADJA,eAAAA,GADFD,GAAAA;AAKOE,YAAAA,KAXF,GAWL,OAXK,CAWEA,KAXF;AAAA;AAAA,mBAYaA,KAAK,CAAA,WAAA,EAAA,UAAA,EAAA,OAAA,EAAvBF,OAAuB,CAZlB;;AAAA;AAYLA,YAAAA,IAAI,CAAJA,IAZK;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import {GLTFLoader} from '@loaders.gl/gltf';\n\nexport async function parseGltf3DTile(tile, arrayBuffer, options, context) {\n  // Set flags\n  // glTF models need to be rotated from Y to Z up\n  // https://github.com/AnalyticalGraphicsInc/3d-tiles/tree/master/specification#y-up-to-z-up\n  tile.rotateYtoZ = true;\n  // Save gltf up axis\n  tile.gltfUpAxis =\n    options['3d-tiles'] && options['3d-tiles'].assetGltfUpAxis\n      ? options['3d-tiles'].assetGltfUpAxis\n      : 'Y';\n\n  const {parse} = context;\n  tile.gltf = await parse(arrayBuffer, GLTFLoader, options, context);\n}\n"]},"metadata":{},"sourceType":"module"}