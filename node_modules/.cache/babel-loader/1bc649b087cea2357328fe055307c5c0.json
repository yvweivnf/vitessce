{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\higlass\\\\HiGlassLazy.js\";\nimport React, { useMemo, useEffect, useRef, Suspense, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport dynamicImportPolyfill from 'dynamic-import-polyfill';\nimport register from 'higlass-register';\nimport { ZarrMultivecDataFetcher } from 'higlass-zarr-datafetchers';\nimport packageJson from '../../../package.json';\nimport { createWarningComponent, asEsModule } from '../utils';\nimport { useGridItemSize } from '../hooks';\nimport { useCoordination } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\nconst PIXI_BUNDLE_VERSION = packageJson.dependencies['window-pixi'];\nconst HIGLASS_BUNDLE_VERSION = packageJson.dependencies.higlass;\nconst BUNDLE_FILE_EXT = process.env.NODE_ENV === 'development' ? 'js' : 'min.js';\nconst PIXI_BUNDLE_URL = `https://unpkg.com/window-pixi@${PIXI_BUNDLE_VERSION}/dist/pixi.${BUNDLE_FILE_EXT}`;\nconst HIGLASS_BUNDLE_URL = `https://unpkg.com/higlass@${HIGLASS_BUNDLE_VERSION}/dist/hglib.${BUNDLE_FILE_EXT}`; // Initialize the dynamic __import__() function.\n\nif (dynamicImportPolyfill) {\n  dynamicImportPolyfill.initialize();\n} // Register the zarr-multivec plugin data fetcher.\n// References:\n// https://github.com/higlass/higlass-register\n// https://github.com/higlass/higlass-zarr-datafetchers\n\n\nregister({\n  dataFetcher: ZarrMultivecDataFetcher,\n  config: ZarrMultivecDataFetcher.config\n}, {\n  pluginType: 'dataFetcher'\n}); // Lazy load the HiGlass React component,\n// using dynamic imports with absolute URLs.\n\nconst HiGlassComponent = React.lazy(() => {\n  if (!window.React) {\n    window.React = React;\n  }\n\n  if (!window.ReactDOM) {\n    window.ReactDOM = ReactDOM;\n  }\n\n  return new Promise(resolve => {\n    const handleImportError = e => {\n      console.warn(e);\n      resolve(asEsModule(createWarningComponent({\n        title: 'Could not load HiGlass',\n        message: 'The HiGlass scripts could not be dynamically imported.'\n      })));\n    }; // eslint-disable-next-line no-undef\n\n\n    __import__(PIXI_BUNDLE_URL).then(() => {\n      // eslint-disable-next-line no-undef\n      __import__(HIGLASS_BUNDLE_URL).then(() => {\n        // React.lazy promise must return an ES module with the\n        // component as the default export.\n        resolve(asEsModule(window.hglib.HiGlassComponent));\n      }).catch(handleImportError);\n    }).catch(handleImportError);\n  });\n}); // Use an arbitrary size for normalization of the zoom level.\n// (800 means 800 px width for the full genome)\n\nconst HG_SIZE = 800;\n/**\n   * A wrapper around HiGlass (http://higlass.io/).\n   * The HiGlassComponent react component is loaded lazily.\n   * @prop {object} hgViewConfig A HiGlass viewconfig object to pass\n   * to the HiGlassComponent viewConfig prop.\n   * @prop {object} hgOptions An optional HiGlass object to pass\n   * to the HiGlassComponent hgOptions prop.\n   * @prop {function} removeGridComponent A grid component removal handler\n   * to pass to the TitleInfo component.\n   * @prop {function} onReady A callback function to signal that the component is ready.\n   */\n\nexport default function HiGlassLazy(props) {\n  const {\n    coordinationScopes,\n    theme,\n    hgViewConfig: hgViewConfigProp,\n    hgOptions: hgOptionsProp,\n    genomeSize,\n    height\n  } = props; // Get \"props\" from the coordination space.\n\n  const [{\n    genomicZoomX,\n    genomicZoomY,\n    genomicTargetX,\n    genomicTargetY\n  }, {\n    setGenomicZoomX,\n    setGenomicZoomY,\n    setGenomicTargetX,\n    setGenomicTargetY\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.higlass, coordinationScopes); // eslint-disable-next-line no-unused-vars\n\n  const [width, computedHeight, containerRef] = useGridItemSize();\n  const [hgInstance, setHgInstance] = useState();\n  const isActiveRef = useRef();\n  const hgOptions = useMemo(() => ({ ...hgOptionsProp,\n    theme\n  }), [hgOptionsProp, theme]);\n  const hgViewConfig = useMemo(() => {\n    // HiGlass needs the start and end absolute genome coordinates\n    const centerX = genomicTargetX;\n    const genomesPerUnitX = genomeSize / 2 ** genomicZoomX;\n    const unitX = width / HG_SIZE;\n    const initialXDomain = [centerX - genomesPerUnitX * unitX / 2, centerX + genomesPerUnitX * unitX / 2];\n    const centerY = genomicTargetY;\n    const genomesPerUnitY = genomeSize / 2 ** genomicZoomY;\n    const unitY = height / HG_SIZE;\n    const initialYDomain = [centerY - genomesPerUnitY * unitY / 2, centerY + genomesPerUnitY * unitY / 2];\n    return {\n      editable: false,\n      zoomFixed: false,\n      trackSourceServers: ['//higlass.io/api/v1'],\n      exportViewUrl: '//higlass.io/api/v1/viewconfs',\n      views: [{\n        uid: 'main',\n        ...hgViewConfigProp,\n        initialXDomain,\n        initialYDomain\n      }],\n      zoomLocks: {\n        locksByViewUid: {},\n        locksDict: {}\n      },\n      locationLocks: {\n        locksByViewUid: {},\n        locksDict: {}\n      },\n      valueScaleLocks: {\n        locksByViewUid: {},\n        locksDict: {}\n      }\n    };\n  }, [genomicTargetX, genomeSize, genomicZoomX, width, genomicTargetY, genomicZoomY, height, hgViewConfigProp]);\n  useEffect(() => {\n    const handleMouseEnter = () => {\n      isActiveRef.current = true;\n    };\n\n    const handleMouseLeave = () => {\n      isActiveRef.current = false;\n    };\n\n    const container = containerRef.current;\n    container.addEventListener('mouseenter', handleMouseEnter);\n    container.addEventListener('mouseleave', handleMouseLeave);\n    return () => {\n      container.removeEventListener('mouseenter', handleMouseEnter);\n      container.removeEventListener('mouseenter', handleMouseLeave);\n    };\n  }, [containerRef]);\n  useEffect(() => {\n    if (!hgInstance) {\n      return () => {};\n    }\n\n    hgInstance.api.on('viewConfig', viewConfigString => {\n      // Only set if the user mouse is over this component (\"is active\").\n      // Otherwise, this could be an initial on viewConfig change callback from a sibling,\n      // which will cause an infinite loop.\n      if (!isActiveRef.current) {\n        return;\n      }\n\n      const viewConfig = JSON.parse(viewConfigString);\n      const xDomain = viewConfig.views[0].initialXDomain;\n      const yDomain = viewConfig.views[0].initialYDomain;\n      const nextGenomicZoomX = Math.log2(genomeSize / ((xDomain[1] - xDomain[0]) * (HG_SIZE / width)));\n      const nextGenomicZoomY = Math.log2(genomeSize / ((yDomain[1] - yDomain[0]) * (HG_SIZE / height)));\n      const nextGenomicTargetX = xDomain[0] + (xDomain[1] - xDomain[0]) / 2;\n      const nextGenomicTargetY = yDomain[0] + (yDomain[1] - yDomain[0]) / 2;\n      setGenomicZoomX(nextGenomicZoomX);\n      setGenomicZoomY(nextGenomicZoomY);\n      setGenomicTargetX(nextGenomicTargetX);\n      setGenomicTargetY(nextGenomicTargetY);\n    });\n    return () => hgInstance.api.off('viewConfig');\n  }, [hgInstance, genomeSize, width, height, setGenomicZoomX, setGenomicZoomY, setGenomicTargetX, setGenomicTargetY]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"higlass-wrapper-parent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"higlass-wrapper\",\n    ref: containerRef,\n    style: {\n      height: `${height}px`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }, \"Loading...\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HiGlassComponent, {\n    ref: setHgInstance,\n    zoomFixed: false,\n    viewConfig: hgViewConfig,\n    options: hgOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }))));\n}\nHiGlassLazy.defaultProps = {\n  hgOptions: {\n    bounded: true,\n    pixelPreciseMarginPadding: true,\n    containerPaddingX: 0,\n    containerPaddingY: 0,\n    sizeMode: 'default'\n  },\n  genomeSize: 3100000000\n};","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/higlass/HiGlassLazy.js"],"names":["React","useMemo","useEffect","useRef","Suspense","useState","ReactDOM","dynamicImportPolyfill","register","ZarrMultivecDataFetcher","packageJson","createWarningComponent","asEsModule","useGridItemSize","useCoordination","COMPONENT_COORDINATION_TYPES","PIXI_BUNDLE_VERSION","dependencies","HIGLASS_BUNDLE_VERSION","higlass","BUNDLE_FILE_EXT","process","env","NODE_ENV","PIXI_BUNDLE_URL","HIGLASS_BUNDLE_URL","initialize","dataFetcher","config","pluginType","HiGlassComponent","lazy","window","Promise","resolve","handleImportError","e","console","warn","title","message","__import__","then","hglib","catch","HG_SIZE","HiGlassLazy","props","coordinationScopes","theme","hgViewConfig","hgViewConfigProp","hgOptions","hgOptionsProp","genomeSize","height","genomicZoomX","genomicZoomY","genomicTargetX","genomicTargetY","setGenomicZoomX","setGenomicZoomY","setGenomicTargetX","setGenomicTargetY","width","computedHeight","containerRef","hgInstance","setHgInstance","isActiveRef","centerX","genomesPerUnitX","unitX","initialXDomain","centerY","genomesPerUnitY","unitY","initialYDomain","editable","zoomFixed","trackSourceServers","exportViewUrl","views","uid","zoomLocks","locksByViewUid","locksDict","locationLocks","valueScaleLocks","handleMouseEnter","current","handleMouseLeave","container","addEventListener","removeEventListener","api","on","viewConfigString","viewConfig","JSON","parse","xDomain","yDomain","nextGenomicZoomX","Math","log2","nextGenomicZoomY","nextGenomicTargetX","nextGenomicTargetY","off","defaultProps","bounded","pixelPreciseMarginPadding","containerPaddingX","containerPaddingY","sizeMode"],"mappings":";AAAA,OAAOA,KAAP,IACEC,OADF,EACWC,SADX,EACsBC,MADtB,EAC8BC,QAD9B,EACwCC,QADxC,QAEO,OAFP;AAGA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,sBAAT,EAAiCC,UAAjC,QAAmD,UAAnD;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SACEC,eADF,QAEO,uBAFP;AAGA,SAASC,4BAAT,QAA6C,8BAA7C;AAEA,MAAMC,mBAAmB,GAAGN,WAAW,CAACO,YAAZ,CAAyB,aAAzB,CAA5B;AACA,MAAMC,sBAAsB,GAAGR,WAAW,CAACO,YAAZ,CAAyBE,OAAxD;AACA,MAAMC,eAAe,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GAAyC,IAAzC,GAAgD,QAAxE;AACA,MAAMC,eAAe,GAAI,iCAAgCR,mBAAoB,cAAaI,eAAgB,EAA1G;AACA,MAAMK,kBAAkB,GAAI,6BAA4BP,sBAAuB,eAAcE,eAAgB,EAA7G,C,CAGA;;AACA,IAAIb,qBAAJ,EAA2B;AACzBA,EAAAA,qBAAqB,CAACmB,UAAtB;AACD,C,CAED;AACA;AACA;AACA;;;AACAlB,QAAQ,CACN;AAAEmB,EAAAA,WAAW,EAAElB,uBAAf;AAAwCmB,EAAAA,MAAM,EAAEnB,uBAAuB,CAACmB;AAAxE,CADM,EAEN;AAAEC,EAAAA,UAAU,EAAE;AAAd,CAFM,CAAR,C,CAKA;AACA;;AACA,MAAMC,gBAAgB,GAAG9B,KAAK,CAAC+B,IAAN,CAAW,MAAM;AACxC,MAAI,CAACC,MAAM,CAAChC,KAAZ,EAAmB;AACjBgC,IAAAA,MAAM,CAAChC,KAAP,GAAeA,KAAf;AACD;;AACD,MAAI,CAACgC,MAAM,CAAC1B,QAAZ,EAAsB;AACpB0B,IAAAA,MAAM,CAAC1B,QAAP,GAAkBA,QAAlB;AACD;;AACD,SAAO,IAAI2B,OAAJ,CAAaC,OAAD,IAAa;AAC9B,UAAMC,iBAAiB,GAAIC,CAAD,IAAO;AAC/BC,MAAAA,OAAO,CAACC,IAAR,CAAaF,CAAb;AACAF,MAAAA,OAAO,CAACtB,UAAU,CAACD,sBAAsB,CAAC;AACxC4B,QAAAA,KAAK,EAAE,wBADiC;AAExCC,QAAAA,OAAO,EAAE;AAF+B,OAAD,CAAvB,CAAX,CAAP;AAID,KAND,CAD8B,CAQ5B;;;AACFC,IAAAA,UAAU,CAACjB,eAAD,CAAV,CAA4BkB,IAA5B,CAAiC,MAAM;AACrC;AACAD,MAAAA,UAAU,CAAChB,kBAAD,CAAV,CAA+BiB,IAA/B,CAAoC,MAAM;AACxC;AACA;AACAR,QAAAA,OAAO,CAACtB,UAAU,CAACoB,MAAM,CAACW,KAAP,CAAab,gBAAd,CAAX,CAAP;AACD,OAJD,EAIGc,KAJH,CAIST,iBAJT;AAKD,KAPD,EAOGS,KAPH,CAOST,iBAPT;AAQD,GAjBM,CAAP;AAkBD,CAzBwB,CAAzB,C,CA2BA;AACA;;AACA,MAAMU,OAAO,GAAG,GAAhB;AAEA;;;;;;;;;;;;AAWA,eAAe,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACzC,QAAM;AACJC,IAAAA,kBADI;AAEJC,IAAAA,KAFI;AAGJC,IAAAA,YAAY,EAAEC,gBAHV;AAIJC,IAAAA,SAAS,EAAEC,aAJP;AAKJC,IAAAA,UALI;AAMJC,IAAAA;AANI,MAOFR,KAPJ,CADyC,CAUzC;;AACA,QAAM,CAAC;AACLS,IAAAA,YADK;AAELC,IAAAA,YAFK;AAGLC,IAAAA,cAHK;AAILC,IAAAA;AAJK,GAAD,EAKH;AACDC,IAAAA,eADC;AAEDC,IAAAA,eAFC;AAGDC,IAAAA,iBAHC;AAIDC,IAAAA;AAJC,GALG,IAUDjD,eAAe,CAACC,4BAA4B,CAACI,OAA9B,EAAuC6B,kBAAvC,CAVpB,CAXyC,CAuBzC;;AACA,QAAM,CAACgB,KAAD,EAAQC,cAAR,EAAwBC,YAAxB,IAAwCrD,eAAe,EAA7D;AACA,QAAM,CAACsD,UAAD,EAAaC,aAAb,IAA8B/D,QAAQ,EAA5C;AACA,QAAMgE,WAAW,GAAGlE,MAAM,EAA1B;AAEA,QAAMiD,SAAS,GAAGnD,OAAO,CAAC,OAAO,EAC/B,GAAGoD,aAD4B;AAE/BJ,IAAAA;AAF+B,GAAP,CAAD,EAGrB,CAACI,aAAD,EAAgBJ,KAAhB,CAHqB,CAAzB;AAKA,QAAMC,YAAY,GAAGjD,OAAO,CAAC,MAAM;AACjC;AACA,UAAMqE,OAAO,GAAGZ,cAAhB;AACA,UAAMa,eAAe,GAAGjB,UAAU,GAAI,KAAKE,YAA3C;AACA,UAAMgB,KAAK,GAAGR,KAAK,GAAGnB,OAAtB;AACA,UAAM4B,cAAc,GAAG,CACrBH,OAAO,GAAGC,eAAe,GAAGC,KAAlB,GAA0B,CADf,EAErBF,OAAO,GAAGC,eAAe,GAAGC,KAAlB,GAA0B,CAFf,CAAvB;AAIA,UAAME,OAAO,GAAGf,cAAhB;AACA,UAAMgB,eAAe,GAAGrB,UAAU,GAAI,KAAKG,YAA3C;AACA,UAAMmB,KAAK,GAAGrB,MAAM,GAAGV,OAAvB;AACA,UAAMgC,cAAc,GAAG,CACrBH,OAAO,GAAGC,eAAe,GAAGC,KAAlB,GAA0B,CADf,EAErBF,OAAO,GAAGC,eAAe,GAAGC,KAAlB,GAA0B,CAFf,CAAvB;AAIA,WAAO;AACLE,MAAAA,QAAQ,EAAE,KADL;AAELC,MAAAA,SAAS,EAAE,KAFN;AAGLC,MAAAA,kBAAkB,EAAE,CAClB,qBADkB,CAHf;AAMLC,MAAAA,aAAa,EAAE,+BANV;AAOLC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,GAAG,EAAE,MADP;AAEE,WAAGhC,gBAFL;AAGEsB,QAAAA,cAHF;AAIEI,QAAAA;AAJF,OADK,CAPF;AAeLO,MAAAA,SAAS,EAAE;AACTC,QAAAA,cAAc,EAAE,EADP;AAETC,QAAAA,SAAS,EAAE;AAFF,OAfN;AAmBLC,MAAAA,aAAa,EAAE;AACbF,QAAAA,cAAc,EAAE,EADH;AAEbC,QAAAA,SAAS,EAAE;AAFE,OAnBV;AAuBLE,MAAAA,eAAe,EAAE;AACfH,QAAAA,cAAc,EAAE,EADD;AAEfC,QAAAA,SAAS,EAAE;AAFI;AAvBZ,KAAP;AA4BD,GA5C2B,EA4CzB,CAAC5B,cAAD,EAAiBJ,UAAjB,EAA6BE,YAA7B,EAA2CQ,KAA3C,EAAkDL,cAAlD,EACDF,YADC,EACaF,MADb,EACqBJ,gBADrB,CA5CyB,CAA5B;AA+CAjD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMuF,gBAAgB,GAAG,MAAM;AAC7BpB,MAAAA,WAAW,CAACqB,OAAZ,GAAsB,IAAtB;AACD,KAFD;;AAGA,UAAMC,gBAAgB,GAAG,MAAM;AAC7BtB,MAAAA,WAAW,CAACqB,OAAZ,GAAsB,KAAtB;AACD,KAFD;;AAGA,UAAME,SAAS,GAAG1B,YAAY,CAACwB,OAA/B;AACAE,IAAAA,SAAS,CAACC,gBAAV,CAA2B,YAA3B,EAAyCJ,gBAAzC;AACAG,IAAAA,SAAS,CAACC,gBAAV,CAA2B,YAA3B,EAAyCF,gBAAzC;AACA,WAAO,MAAM;AACXC,MAAAA,SAAS,CAACE,mBAAV,CAA8B,YAA9B,EAA4CL,gBAA5C;AACAG,MAAAA,SAAS,CAACE,mBAAV,CAA8B,YAA9B,EAA4CH,gBAA5C;AACD,KAHD;AAID,GAdQ,EAcN,CAACzB,YAAD,CAdM,CAAT;AAiBAhE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACiE,UAAL,EAAiB;AACf,aAAO,MAAM,CAAE,CAAf;AACD;;AACDA,IAAAA,UAAU,CAAC4B,GAAX,CAAeC,EAAf,CAAkB,YAAlB,EAAiCC,gBAAD,IAAsB;AACpD;AACA;AACA;AACA,UAAI,CAAC5B,WAAW,CAACqB,OAAjB,EAA0B;AACxB;AACD;;AACD,YAAMQ,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,gBAAX,CAAnB;AACA,YAAMI,OAAO,GAAGH,UAAU,CAAChB,KAAX,CAAiB,CAAjB,EAAoBT,cAApC;AACA,YAAM6B,OAAO,GAAGJ,UAAU,CAAChB,KAAX,CAAiB,CAAjB,EAAoBL,cAApC;AAEA,YAAM0B,gBAAgB,GAAGC,IAAI,CAACC,IAAL,CACvBnD,UAAU,IAAI,CAAC+C,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAArB,KAA6BxD,OAAO,GAAGmB,KAAvC,CAAJ,CADa,CAAzB;AAGA,YAAM0C,gBAAgB,GAAGF,IAAI,CAACC,IAAL,CACvBnD,UAAU,IAAI,CAACgD,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAArB,KAA6BzD,OAAO,GAAGU,MAAvC,CAAJ,CADa,CAAzB;AAGA,YAAMoD,kBAAkB,GAAGN,OAAO,CAAC,CAAD,CAAP,GAAa,CAACA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAArB,IAA4B,CAApE;AACA,YAAMO,kBAAkB,GAAGN,OAAO,CAAC,CAAD,CAAP,GAAa,CAACA,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAArB,IAA4B,CAApE;AACA1C,MAAAA,eAAe,CAAC2C,gBAAD,CAAf;AACA1C,MAAAA,eAAe,CAAC6C,gBAAD,CAAf;AACA5C,MAAAA,iBAAiB,CAAC6C,kBAAD,CAAjB;AACA5C,MAAAA,iBAAiB,CAAC6C,kBAAD,CAAjB;AACD,KAvBD;AAwBA,WAAO,MAAMzC,UAAU,CAAC4B,GAAX,CAAec,GAAf,CAAmB,YAAnB,CAAb;AACD,GA7BQ,EA6BN,CAAC1C,UAAD,EAAab,UAAb,EAAyBU,KAAzB,EAAgCT,MAAhC,EAAwCK,eAAxC,EAAyDC,eAAzD,EACDC,iBADC,EACkBC,iBADlB,CA7BM,CAAT;AAgCA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAiC,IAAA,GAAG,EAAEG,YAAtC;AAAoD,IAAA,KAAK,EAAE;AAAEX,MAAAA,MAAM,EAAG,GAAEA,MAAO;AAApB,KAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,gBAAD;AACE,IAAA,GAAG,EAAEa,aADP;AAEE,IAAA,SAAS,EAAE,KAFb;AAGE,IAAA,UAAU,EAAElB,YAHd;AAIE,IAAA,OAAO,EAAEE,SAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAcD;AAEDN,WAAW,CAACgE,YAAZ,GAA2B;AACzB1D,EAAAA,SAAS,EAAE;AACT2D,IAAAA,OAAO,EAAE,IADA;AAETC,IAAAA,yBAAyB,EAAE,IAFlB;AAGTC,IAAAA,iBAAiB,EAAE,CAHV;AAITC,IAAAA,iBAAiB,EAAE,CAJV;AAKTC,IAAAA,QAAQ,EAAE;AALD,GADc;AAQzB7D,EAAAA,UAAU,EAAE;AARa,CAA3B","sourcesContent":["import React, {\n  useMemo, useEffect, useRef, Suspense, useState,\n} from 'react';\nimport ReactDOM from 'react-dom';\nimport dynamicImportPolyfill from 'dynamic-import-polyfill';\nimport register from 'higlass-register';\nimport { ZarrMultivecDataFetcher } from 'higlass-zarr-datafetchers';\nimport packageJson from '../../../package.json';\nimport { createWarningComponent, asEsModule } from '../utils';\nimport { useGridItemSize } from '../hooks';\nimport {\n  useCoordination,\n} from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nconst PIXI_BUNDLE_VERSION = packageJson.dependencies['window-pixi'];\nconst HIGLASS_BUNDLE_VERSION = packageJson.dependencies.higlass;\nconst BUNDLE_FILE_EXT = process.env.NODE_ENV === 'development' ? 'js' : 'min.js';\nconst PIXI_BUNDLE_URL = `https://unpkg.com/window-pixi@${PIXI_BUNDLE_VERSION}/dist/pixi.${BUNDLE_FILE_EXT}`;\nconst HIGLASS_BUNDLE_URL = `https://unpkg.com/higlass@${HIGLASS_BUNDLE_VERSION}/dist/hglib.${BUNDLE_FILE_EXT}`;\n\n\n// Initialize the dynamic __import__() function.\nif (dynamicImportPolyfill) {\n  dynamicImportPolyfill.initialize();\n}\n\n// Register the zarr-multivec plugin data fetcher.\n// References:\n// https://github.com/higlass/higlass-register\n// https://github.com/higlass/higlass-zarr-datafetchers\nregister(\n  { dataFetcher: ZarrMultivecDataFetcher, config: ZarrMultivecDataFetcher.config },\n  { pluginType: 'dataFetcher' },\n);\n\n// Lazy load the HiGlass React component,\n// using dynamic imports with absolute URLs.\nconst HiGlassComponent = React.lazy(() => {\n  if (!window.React) {\n    window.React = React;\n  }\n  if (!window.ReactDOM) {\n    window.ReactDOM = ReactDOM;\n  }\n  return new Promise((resolve) => {\n    const handleImportError = (e) => {\n      console.warn(e);\n      resolve(asEsModule(createWarningComponent({\n        title: 'Could not load HiGlass',\n        message: 'The HiGlass scripts could not be dynamically imported.',\n      })));\n    };\n      // eslint-disable-next-line no-undef\n    __import__(PIXI_BUNDLE_URL).then(() => {\n      // eslint-disable-next-line no-undef\n      __import__(HIGLASS_BUNDLE_URL).then(() => {\n        // React.lazy promise must return an ES module with the\n        // component as the default export.\n        resolve(asEsModule(window.hglib.HiGlassComponent));\n      }).catch(handleImportError);\n    }).catch(handleImportError);\n  });\n});\n\n// Use an arbitrary size for normalization of the zoom level.\n// (800 means 800 px width for the full genome)\nconst HG_SIZE = 800;\n\n/**\n   * A wrapper around HiGlass (http://higlass.io/).\n   * The HiGlassComponent react component is loaded lazily.\n   * @prop {object} hgViewConfig A HiGlass viewconfig object to pass\n   * to the HiGlassComponent viewConfig prop.\n   * @prop {object} hgOptions An optional HiGlass object to pass\n   * to the HiGlassComponent hgOptions prop.\n   * @prop {function} removeGridComponent A grid component removal handler\n   * to pass to the TitleInfo component.\n   * @prop {function} onReady A callback function to signal that the component is ready.\n   */\nexport default function HiGlassLazy(props) {\n  const {\n    coordinationScopes,\n    theme,\n    hgViewConfig: hgViewConfigProp,\n    hgOptions: hgOptionsProp,\n    genomeSize,\n    height,\n  } = props;\n\n  // Get \"props\" from the coordination space.\n  const [{\n    genomicZoomX,\n    genomicZoomY,\n    genomicTargetX,\n    genomicTargetY,\n  }, {\n    setGenomicZoomX,\n    setGenomicZoomY,\n    setGenomicTargetX,\n    setGenomicTargetY,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.higlass, coordinationScopes);\n\n  // eslint-disable-next-line no-unused-vars\n  const [width, computedHeight, containerRef] = useGridItemSize();\n  const [hgInstance, setHgInstance] = useState();\n  const isActiveRef = useRef();\n\n  const hgOptions = useMemo(() => ({\n    ...hgOptionsProp,\n    theme,\n  }), [hgOptionsProp, theme]);\n\n  const hgViewConfig = useMemo(() => {\n    // HiGlass needs the start and end absolute genome coordinates\n    const centerX = genomicTargetX;\n    const genomesPerUnitX = genomeSize / (2 ** genomicZoomX);\n    const unitX = width / HG_SIZE;\n    const initialXDomain = [\n      centerX - genomesPerUnitX * unitX / 2,\n      centerX + genomesPerUnitX * unitX / 2,\n    ];\n    const centerY = genomicTargetY;\n    const genomesPerUnitY = genomeSize / (2 ** genomicZoomY);\n    const unitY = height / HG_SIZE;\n    const initialYDomain = [\n      centerY - genomesPerUnitY * unitY / 2,\n      centerY + genomesPerUnitY * unitY / 2,\n    ];\n    return {\n      editable: false,\n      zoomFixed: false,\n      trackSourceServers: [\n        '//higlass.io/api/v1',\n      ],\n      exportViewUrl: '//higlass.io/api/v1/viewconfs',\n      views: [\n        {\n          uid: 'main',\n          ...hgViewConfigProp,\n          initialXDomain,\n          initialYDomain,\n        },\n      ],\n      zoomLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n      locationLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n      valueScaleLocks: {\n        locksByViewUid: {},\n        locksDict: {},\n      },\n    };\n  }, [genomicTargetX, genomeSize, genomicZoomX, width, genomicTargetY,\n    genomicZoomY, height, hgViewConfigProp]);\n\n  useEffect(() => {\n    const handleMouseEnter = () => {\n      isActiveRef.current = true;\n    };\n    const handleMouseLeave = () => {\n      isActiveRef.current = false;\n    };\n    const container = containerRef.current;\n    container.addEventListener('mouseenter', handleMouseEnter);\n    container.addEventListener('mouseleave', handleMouseLeave);\n    return () => {\n      container.removeEventListener('mouseenter', handleMouseEnter);\n      container.removeEventListener('mouseenter', handleMouseLeave);\n    };\n  }, [containerRef]);\n\n\n  useEffect(() => {\n    if (!hgInstance) {\n      return () => {};\n    }\n    hgInstance.api.on('viewConfig', (viewConfigString) => {\n      // Only set if the user mouse is over this component (\"is active\").\n      // Otherwise, this could be an initial on viewConfig change callback from a sibling,\n      // which will cause an infinite loop.\n      if (!isActiveRef.current) {\n        return;\n      }\n      const viewConfig = JSON.parse(viewConfigString);\n      const xDomain = viewConfig.views[0].initialXDomain;\n      const yDomain = viewConfig.views[0].initialYDomain;\n\n      const nextGenomicZoomX = Math.log2(\n        genomeSize / ((xDomain[1] - xDomain[0]) * (HG_SIZE / width)),\n      );\n      const nextGenomicZoomY = Math.log2(\n        genomeSize / ((yDomain[1] - yDomain[0]) * (HG_SIZE / height)),\n      );\n      const nextGenomicTargetX = xDomain[0] + (xDomain[1] - xDomain[0]) / 2;\n      const nextGenomicTargetY = yDomain[0] + (yDomain[1] - yDomain[0]) / 2;\n      setGenomicZoomX(nextGenomicZoomX);\n      setGenomicZoomY(nextGenomicZoomY);\n      setGenomicTargetX(nextGenomicTargetX);\n      setGenomicTargetY(nextGenomicTargetY);\n    });\n    return () => hgInstance.api.off('viewConfig');\n  }, [hgInstance, genomeSize, width, height, setGenomicZoomX, setGenomicZoomY,\n    setGenomicTargetX, setGenomicTargetY]);\n\n  return (\n    <div className=\"higlass-wrapper-parent\">\n      <div className=\"higlass-wrapper\" ref={containerRef} style={{ height: `${height}px` }}>\n        <Suspense fallback={<div>Loading...</div>}>\n          <HiGlassComponent\n            ref={setHgInstance}\n            zoomFixed={false}\n            viewConfig={hgViewConfig}\n            options={hgOptions}\n          />\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nHiGlassLazy.defaultProps = {\n  hgOptions: {\n    bounded: true,\n    pixelPreciseMarginPadding: true,\n    containerPaddingX: 0,\n    containerPaddingY: 0,\n    sizeMode: 'default',\n  },\n  genomeSize: 3100000000,\n};\n"]},"metadata":{},"sourceType":"module"}