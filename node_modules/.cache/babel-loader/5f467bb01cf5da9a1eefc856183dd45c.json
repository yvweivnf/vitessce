{"ast":null,"code":"export const VALUE_TRANSFORM_OPTIONS = [{\n  name: 'None',\n  value: null\n}, {\n  name: 'Log',\n  value: 'log1p'\n}, {\n  name: 'ArcSinh',\n  value: 'arcsinh'\n}];\n/**\n * Get a feature value transform function such as\n * log1p or arcsinh.\n * @param {string} featureValueTransform The function name.\n * @param {number} coefficient The transform coefficient.\n * @returns {function} The function which takes one number\n * as a parameter and returns the transformed number\n * (or the original number in the identity case).\n */\n\nexport function getValueTransformFunction(featureValueTransform, coefficient) {\n  // Set transform function\n  let transformFunction;\n\n  switch (featureValueTransform) {\n    case 'log1p':\n      transformFunction = v => Math.log(1 + v * coefficient);\n\n      break;\n\n    case 'arcsinh':\n      transformFunction = v => Math.asinh(v * coefficient);\n\n      break;\n\n    default:\n      transformFunction = v => v;\n\n  }\n\n  return transformFunction;\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/gating/utils.js"],"names":["VALUE_TRANSFORM_OPTIONS","name","value","getValueTransformFunction","featureValueTransform","coefficient","transformFunction","v","Math","log","asinh"],"mappings":"AACA,OAAO,MAAMA,uBAAuB,GAAG,CACrC;AAAEC,EAAAA,IAAI,EAAE,MAAR;AAAgBC,EAAAA,KAAK,EAAE;AAAvB,CADqC,EAErC;AAAED,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CAFqC,EAGrC;AAAED,EAAAA,IAAI,EAAE,SAAR;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAHqC,CAAhC;AAKP;;;;;;;;;;AASA,OAAO,SAASC,yBAAT,CAAmCC,qBAAnC,EAA0DC,WAA1D,EAAuE;AAC5E;AACA,MAAIC,iBAAJ;;AACA,UAAQF,qBAAR;AACE,SAAK,OAAL;AACEE,MAAAA,iBAAiB,GAAGC,CAAC,IAAIC,IAAI,CAACC,GAAL,CAAS,IAAIF,CAAC,GAAGF,WAAjB,CAAzB;;AACA;;AACF,SAAK,SAAL;AACEC,MAAAA,iBAAiB,GAAGC,CAAC,IAAIC,IAAI,CAACE,KAAL,CAAWH,CAAC,GAAGF,WAAf,CAAzB;;AACA;;AACF;AACEC,MAAAA,iBAAiB,GAAGC,CAAC,IAAIA,CAAzB;;AARJ;;AAUA,SAAOD,iBAAP;AACD","sourcesContent":["\nexport const VALUE_TRANSFORM_OPTIONS = [\n  { name: 'None', value: null },\n  { name: 'Log', value: 'log1p' },\n  { name: 'ArcSinh', value: 'arcsinh' },\n];\n/**\n * Get a feature value transform function such as\n * log1p or arcsinh.\n * @param {string} featureValueTransform The function name.\n * @param {number} coefficient The transform coefficient.\n * @returns {function} The function which takes one number\n * as a parameter and returns the transformed number\n * (or the original number in the identity case).\n */\nexport function getValueTransformFunction(featureValueTransform, coefficient) {\n  // Set transform function\n  let transformFunction;\n  switch (featureValueTransform) {\n    case 'log1p':\n      transformFunction = v => Math.log(1 + v * coefficient);\n      break;\n    case 'arcsinh':\n      transformFunction = v => Math.asinh(v * coefficient);\n      break;\n    default:\n      transformFunction = v => v;\n  }\n  return transformFunction;\n}\n"]},"metadata":{},"sourceType":"module"}