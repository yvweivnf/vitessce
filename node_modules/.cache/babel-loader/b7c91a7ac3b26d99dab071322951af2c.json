{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\n/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nexport var SignalRefWrapper = /*#__PURE__*/function () {\n  function SignalRefWrapper(exprGenerator) {\n    _classCallCheck(this, SignalRefWrapper);\n\n    Object.defineProperty(this, 'signal', {\n      enumerable: true,\n      get: exprGenerator\n    });\n  }\n\n  _createClass(SignalRefWrapper, null, [{\n    key: \"fromName\",\n    value: function fromName(rename, signalName) {\n      return new SignalRefWrapper(function () {\n        return rename(signalName);\n      });\n    }\n  }]);\n\n  return SignalRefWrapper;\n}();","map":{"version":3,"sources":["../../../src/compile/signal.ts"],"names":[],"mappings":";;;AAIA;;;;AAIA,WAAa,gBAAb;AACE,4BAAY,aAAZ,EAAuC;AAAA;;AACrC,IAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;AACpC,MAAA,UAAU,EAAE,IADwB;AAEpC,MAAA,GAAG,EAAE;AAF+B,KAAtC;AAID;;AANH;AAAA;AAAA,6BAUyB,MAVzB,EAUyC,UAVzC,EAU2D;AACvD,aAAO,IAAI,gBAAJ,CAAqB;AAAA,eAAM,MAAM,CAAC,UAAD,CAAZ;AAAA,OAArB,CAAP;AACD;AAZH;;AAAA;AAAA","sourceRoot":"","sourcesContent":["/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nexport class SignalRefWrapper {\n    constructor(exprGenerator) {\n        Object.defineProperty(this, 'signal', {\n            enumerable: true,\n            get: exprGenerator\n        });\n    }\n    static fromName(rename, signalName) {\n        return new SignalRefWrapper(() => rename(signalName));\n    }\n}\n//# sourceMappingURL=signal.js.map"]},"metadata":{},"sourceType":"module"}