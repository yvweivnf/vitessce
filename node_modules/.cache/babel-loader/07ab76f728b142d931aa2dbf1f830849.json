{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */ /* eslint-disable jsx-a11y/click-events-have-key-events */import React,{useEffect,useCallback,useState}from'react';import{Table,AutoSizer}from'react-virtualized';import uuidv4 from'uuid/v4';import union from'lodash/union';import difference from'lodash/difference';import isEqual from'lodash/isEqual';var SHIFT_KEYCODE=16;/**\n * A table with \"selectable\" rows.\n * @prop {string[]} columns An array of column names, corresponding to data object properties.\n * @prop {object[]} data An array of data objects used to populate table rows.\n * @prop {function} onChange Callback function,\n * passed a selection object when `allowMultiple` is false (and `null` if `allowUncheck` is true),\n * or passed an array of selection objects when `allowMultiple` is true.\n * @prop {string} idKey The key for a unique identifier property of `data` objects.\n * @prop {string} valueKey If initially-selected rows are required,\n * this key specifies a boolean property of the `data` objects\n * indicating those rows that should be initially selected.\n * @prop {boolean} allowMultiple Whether to allow multiple rows to be selected.\n * @prop {boolean} allowUncheck Whether to allow selected rows to be un-checked. By default, false.\n * @prop {boolean} showTableHead Whether to show the table header element. By default, true.\n * @prop {boolean} showTableInputs Whether to show the table input elements for each row.\n * By default, false.\n */export default function SelectableTable(props){var hasColorEncoding=props.hasColorEncoding,columns=props.columns,data=props.data,onChange=props.onChange,_props$idKey=props.idKey,idKey=_props$idKey===void 0?'id':_props$idKey,_props$valueKey=props.valueKey,valueKey=_props$valueKey===void 0?'value':_props$valueKey,_props$allowMultiple=props.allowMultiple,allowMultiple=_props$allowMultiple===void 0?false:_props$allowMultiple,_props$allowUncheck=props.allowUncheck,allowUncheck=_props$allowUncheck===void 0?false:_props$allowUncheck,_props$showTableHead=props.showTableHead,showTableHead=_props$showTableHead===void 0?true:_props$showTableHead,_props$showTableInput=props.showTableInputs,showTableInputs=_props$showTableInput===void 0?false:_props$showTableInput,_props$testHeight=props.testHeight,testHeight=_props$testHeight===void 0?undefined:_props$testHeight,_props$testWidth=props.testWidth,testWidth=_props$testWidth===void 0?undefined:_props$testWidth;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),selectedRows=_useState2[0],setSelectedRows=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isCheckingMultiple=_useState4[0],setIsCheckingMultiple=_useState4[1];// Enable selecting multiple rows while the shift key is down.\nuseEffect(function(){function onKeyDown(event){if(allowMultiple&&event.keyCode===SHIFT_KEYCODE){setIsCheckingMultiple(true);}}function onKeyUp(event){if(allowMultiple&&event.keyCode===SHIFT_KEYCODE){setIsCheckingMultiple(false);}}window.addEventListener('keydown',onKeyDown);window.addEventListener('keyup',onKeyUp);return function(){window.removeEventListener('keydown',onKeyDown);window.removeEventListener('keyup',onKeyUp);};},[allowMultiple]);// Callback function to update the `selectedRows` state.\nvar onSelectRow=useCallback(function(value,checked){if(checked||allowUncheck){if(!isCheckingMultiple&&(checked||!checked&&allowMultiple&&selectedRows.length>1)){setSelectedRows([value]);}else if(!allowMultiple&&!checked){setSelectedRows([]);}else{setSelectedRows(checked?union(selectedRows||[],[value]):difference(selectedRows||[],[value]));}}},[allowMultiple,isCheckingMultiple,allowUncheck,selectedRows]);// Handler for checkbox input elements.\nvar handleInputChange=useCallback(function(event){var target=event.target;var checked=target.checked;var value=target.value;onSelectRow(value,checked);},[onSelectRow]);// Function to map row IDs to corresponding objects\n// to pass to the `onChange` callback.\nvar getDataFromIds=useCallback(function(ids){return ids.map(function(id){var _ref;return _ref={},_defineProperty(_ref,idKey,id),_defineProperty(_ref,\"data\",data.find(function(item){return item[idKey]===id;})),_ref;});},[data,idKey]);// Function to check if a row ID has been selected.\nvar isSelected=useCallback(function(id){return Array.isArray(selectedRows)&&selectedRows.includes(id);},[selectedRows]);/* eslint-disable react-hooks/exhaustive-deps */useEffect(function(){// Check whether an initial set of rows should be selected.\nvar initialSelectedRows=data.map(function(d){if(d[valueKey]){return d[idKey];}return null;}).filter(Boolean);if(!isEqual(initialSelectedRows,selectedRows)){if(initialSelectedRows.length>0){setSelectedRows(initialSelectedRows);}else{setSelectedRows(null);}}},[data,idKey,valueKey]);/* eslint-disable react-hooks/exhaustive-deps */useEffect(function(){// Call the `onChange` prop function with an updated row or set of rows.\nif(!onChange||!selectedRows){return;}var selectedRowData=getDataFromIds(selectedRows);if(allowMultiple){onChange(selectedRowData);}else if(selectedRows.length===1){onChange(selectedRowData[0]);}else if(selectedRows.length===0){onChange(null);}},[selectedRows,allowMultiple]);// Generate a unique ID to use in (for, id) label-input pairs.\nvar inputUuid=uuidv4();// Class for first column of inputs, to hide them if desired.\nvar hiddenInputsClass=showTableInputs?'':'hidden-input-column';var rowRenderer=function rowRenderer(_ref2){var index=_ref2.index,style=_ref2.style;return/*#__PURE__*/ (// eslint-disable-next-line jsx-a11y/interactive-supports-focus\nReact.createElement(\"div\",{key:data[index][idKey],className:\"table-item table-row \".concat(isSelected(data[index][idKey])?'row-checked ':''),style:style,role:\"button\",onClick:function onClick(){return onSelectRow(data[index][idKey],!isSelected(data[index][idKey])||!hasColorEncoding);}},/*#__PURE__*/React.createElement(\"div\",{className:\"input-container \".concat(hiddenInputsClass,\" table-cell\")},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"\".concat(inputUuid,\"_\").concat(data[index][idKey])},/*#__PURE__*/React.createElement(\"input\",{id:\"\".concat(inputUuid,\"_\").concat(data[index][idKey]),type:\"checkbox\",className:isCheckingMultiple?'checkbox':'radio',name:inputUuid,value:data[index][idKey],onChange:handleInputChange,checked:isSelected(data[index][idKey])}))),columns.map(function(column){return/*#__PURE__*/React.createElement(\"div\",{className:\"table-cell\",key:column},data[index][column]);})));};var headerRowRenderer=function headerRowRenderer(_ref3){var style=_ref3.style;return/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(hiddenInputsClass,\" table-row\"),style:style},columns.map(function(column){return/*#__PURE__*/React.createElement(\"div\",{key:column},column);}));};return/*#__PURE__*/React.createElement(\"div\",{className:\"selectable-table\"},/*#__PURE__*/React.createElement(AutoSizer,null,function(_ref4){var width=_ref4.width,height=_ref4.height;return/*#__PURE__*/React.createElement(Table,{height:testHeight||height,gridStyle:{outline:'none'},rowCount:data.length// 24 is 1 em + padding in either direction (see _selectable_table.scss).\n,rowHeight:24,headerHeight:showTableHead?24:undefined,rowRenderer:rowRenderer,width:testWidth||width,headerRowRenderer:showTableHead?headerRowRenderer:undefined,rowGetter:function rowGetter(_ref5){var index=_ref5.index;return data[index];}});}));}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/selectable-table/SelectableTable.js"],"names":["React","useEffect","useCallback","useState","Table","AutoSizer","uuidv4","union","difference","isEqual","SHIFT_KEYCODE","SelectableTable","props","hasColorEncoding","columns","data","onChange","idKey","valueKey","allowMultiple","allowUncheck","showTableHead","showTableInputs","testHeight","undefined","testWidth","selectedRows","setSelectedRows","isCheckingMultiple","setIsCheckingMultiple","onKeyDown","event","keyCode","onKeyUp","window","addEventListener","removeEventListener","onSelectRow","value","checked","length","handleInputChange","target","getDataFromIds","ids","map","id","find","item","isSelected","Array","isArray","includes","initialSelectedRows","d","filter","Boolean","selectedRowData","inputUuid","hiddenInputsClass","rowRenderer","index","style","column","headerRowRenderer","width","height","outline"],"mappings":"kXAAA,2E,CACA,0DACA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,WAA3B,CAAwCC,QAAxC,KAAwD,OAAxD,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,mBAAjC,CACA,MAAOC,CAAAA,MAAP,KAAmB,SAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,cAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,mBAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CAEA,GAAMC,CAAAA,aAAa,CAAG,EAAtB,CAEA;;;;;;;;;;;;;;;;GAiBA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,IAE3CC,CAAAA,gBAF2C,CAczCD,KAdyC,CAE3CC,gBAF2C,CAG3CC,OAH2C,CAczCF,KAdyC,CAG3CE,OAH2C,CAI3CC,IAJ2C,CAczCH,KAdyC,CAI3CG,IAJ2C,CAK3CC,QAL2C,CAczCJ,KAdyC,CAK3CI,QAL2C,cAczCJ,KAdyC,CAM3CK,KAN2C,CAM3CA,KAN2C,uBAMnC,IANmC,8BAczCL,KAdyC,CAO3CM,QAP2C,CAO3CA,QAP2C,0BAOhC,OAPgC,sCAczCN,KAdyC,CAQ3CO,aAR2C,CAQ3CA,aAR2C,+BAQ3B,KAR2B,0CAczCP,KAdyC,CAS3CQ,YAT2C,CAS3CA,YAT2C,8BAS5B,KAT4B,0CAczCR,KAdyC,CAU3CS,aAV2C,CAU3CA,aAV2C,+BAU3B,IAV2B,4CAczCT,KAdyC,CAW3CU,eAX2C,CAW3CA,eAX2C,gCAWzB,KAXyB,yCAczCV,KAdyC,CAY3CW,UAZ2C,CAY3CA,UAZ2C,4BAY9BC,SAZ8B,oCAczCZ,KAdyC,CAa3Ca,SAb2C,CAa3CA,SAb2C,2BAa/BD,SAb+B,gCAgBLrB,QAAQ,CAAC,IAAD,CAhBH,wCAgBtCuB,YAhBsC,eAgBxBC,eAhBwB,8BAiBOxB,QAAQ,CAAC,KAAD,CAjBf,yCAiBtCyB,kBAjBsC,eAiBlBC,qBAjBkB,eAmB7C;AACA5B,SAAS,CAAC,UAAM,CACd,QAAS6B,CAAAA,SAAT,CAAmBC,KAAnB,CAA0B,CACxB,GAAIZ,aAAa,EAAIY,KAAK,CAACC,OAAN,GAAkBtB,aAAvC,CAAsD,CACpDmB,qBAAqB,CAAC,IAAD,CAArB,CACD,CACF,CAED,QAASI,CAAAA,OAAT,CAAiBF,KAAjB,CAAwB,CACtB,GAAIZ,aAAa,EAAIY,KAAK,CAACC,OAAN,GAAkBtB,aAAvC,CAAsD,CACpDmB,qBAAqB,CAAC,KAAD,CAArB,CACD,CACF,CAEDK,MAAM,CAACC,gBAAP,CAAwB,SAAxB,CAAmCL,SAAnC,EACAI,MAAM,CAACC,gBAAP,CAAwB,OAAxB,CAAiCF,OAAjC,EAEA,MAAO,WAAM,CACXC,MAAM,CAACE,mBAAP,CAA2B,SAA3B,CAAsCN,SAAtC,EACAI,MAAM,CAACE,mBAAP,CAA2B,OAA3B,CAAoCH,OAApC,EACD,CAHD,CAID,CApBQ,CAoBN,CAACd,aAAD,CApBM,CAAT,CAsBA;AACA,GAAMkB,CAAAA,WAAW,CAAGnC,WAAW,CAAC,SAACoC,KAAD,CAAQC,OAAR,CAAoB,CAClD,GAAIA,OAAO,EAAInB,YAAf,CAA6B,CAC3B,GAAI,CAACQ,kBAAD,GACEW,OAAO,EAAK,CAACA,OAAD,EAAYpB,aAAZ,EAA6BO,YAAY,CAACc,MAAb,CAAsB,CADjE,CAAJ,CAEE,CACAb,eAAe,CAAC,CAACW,KAAD,CAAD,CAAf,CACD,CAJD,IAIO,IAAI,CAACnB,aAAD,EAAkB,CAACoB,OAAvB,CAAgC,CACrCZ,eAAe,CAAC,EAAD,CAAf,CACD,CAFM,IAEA,CACLA,eAAe,CACbY,OAAO,CACHhC,KAAK,CAACmB,YAAY,EAAI,EAAjB,CAAqB,CAACY,KAAD,CAArB,CADF,CAEH9B,UAAU,CAACkB,YAAY,EAAI,EAAjB,CAAqB,CAACY,KAAD,CAArB,CAHD,CAAf,CAKD,CACF,CACF,CAhB8B,CAgB5B,CAACnB,aAAD,CAAgBS,kBAAhB,CAAoCR,YAApC,CAAkDM,YAAlD,CAhB4B,CAA/B,CAkBA;AACA,GAAMe,CAAAA,iBAAiB,CAAGvC,WAAW,CAAC,SAAC6B,KAAD,CAAW,IACvCW,CAAAA,MADuC,CAC5BX,KAD4B,CACvCW,MADuC,IAEvCH,CAAAA,OAFuC,CAE3BG,MAF2B,CAEvCH,OAFuC,IAGvCD,CAAAA,KAHuC,CAG7BI,MAH6B,CAGvCJ,KAHuC,CAI/CD,WAAW,CAACC,KAAD,CAAQC,OAAR,CAAX,CACD,CALoC,CAKlC,CAACF,WAAD,CALkC,CAArC,CAOA;AACA;AACA,GAAMM,CAAAA,cAAc,CAAGzC,WAAW,CAAC,SAAA0C,GAAG,QAAIA,CAAAA,GAAG,CAACC,GAAJ,CAAQ,SAAAC,EAAE,+CACjD7B,KADiD,CACzC6B,EADyC,8BAE5C/B,IAAI,CAACgC,IAAL,CAAU,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAAC/B,KAAD,CAAJ,GAAgB6B,EAApB,EAAd,CAF4C,QAAV,CAAJ,EAAJ,CAG7B,CAAC/B,IAAD,CAAOE,KAAP,CAH6B,CAAlC,CAKA;AACA,GAAMgC,CAAAA,UAAU,CAAG/C,WAAW,CAAC,SAAA4C,EAAE,QAC/BI,CAAAA,KAAK,CAACC,OAAN,CAAczB,YAAd,GAA+BA,YAAY,CAAC0B,QAAb,CAAsBN,EAAtB,CADA,EAAH,CAE3B,CAACpB,YAAD,CAF2B,CAA9B,CAIA,gDACAzB,SAAS,CAAC,UAAM,CACd;AACA,GAAMoD,CAAAA,mBAAmB,CAAGtC,IAAI,CAC7B8B,GADyB,CACrB,SAACS,CAAD,CAAO,CACV,GAAIA,CAAC,CAACpC,QAAD,CAAL,CAAiB,CACf,MAAOoC,CAAAA,CAAC,CAACrC,KAAD,CAAR,CACD,CACD,MAAO,KAAP,CACD,CANyB,EAOzBsC,MAPyB,CAOlBC,OAPkB,CAA5B,CAQA,GAAI,CAAC/C,OAAO,CAAC4C,mBAAD,CAAsB3B,YAAtB,CAAZ,CAAiD,CAC/C,GAAI2B,mBAAmB,CAACb,MAApB,CAA6B,CAAjC,CAAoC,CAClCb,eAAe,CAAC0B,mBAAD,CAAf,CACD,CAFD,IAEO,CACL1B,eAAe,CAAC,IAAD,CAAf,CACD,CACF,CACF,CAjBQ,CAiBN,CAACZ,IAAD,CAAOE,KAAP,CAAcC,QAAd,CAjBM,CAAT,CAmBA,gDACAjB,SAAS,CAAC,UAAM,CACd;AACA,GAAI,CAACe,QAAD,EAAa,CAACU,YAAlB,CAAgC,CAC9B,OACD,CACD,GAAM+B,CAAAA,eAAe,CAAGd,cAAc,CAACjB,YAAD,CAAtC,CACA,GAAIP,aAAJ,CAAmB,CACjBH,QAAQ,CAACyC,eAAD,CAAR,CACD,CAFD,IAEO,IAAI/B,YAAY,CAACc,MAAb,GAAwB,CAA5B,CAA+B,CACpCxB,QAAQ,CAACyC,eAAe,CAAC,CAAD,CAAhB,CAAR,CACD,CAFM,IAEA,IAAI/B,YAAY,CAACc,MAAb,GAAwB,CAA5B,CAA+B,CACpCxB,QAAQ,CAAC,IAAD,CAAR,CACD,CACF,CAbQ,CAaN,CAACU,YAAD,CAAeP,aAAf,CAbM,CAAT,CAeA;AACA,GAAMuC,CAAAA,SAAS,CAAGpD,MAAM,EAAxB,CAEA;AACA,GAAMqD,CAAAA,iBAAiB,CAAIrC,eAAe,CAAG,EAAH,CAAQ,qBAAlD,CAEA,GAAMsC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,WAAGC,CAAAA,KAAH,OAAGA,KAAH,CAAUC,KAAV,OAAUA,KAAV,qBAClB;AACA,2BACE,GAAG,CAAE/C,IAAI,CAAC8C,KAAD,CAAJ,CAAY5C,KAAZ,CADP,CAEE,SAAS,gCAA0BgC,UAAU,CAAClC,IAAI,CAAC8C,KAAD,CAAJ,CAAY5C,KAAZ,CAAD,CAAV,CAAiC,cAAjC,CAAkD,EAA5E,CAFX,CAGE,KAAK,CAAE6C,KAHT,CAIE,IAAI,CAAC,QAJP,CAKE,OAAO,CAAE,yBAAMzB,CAAAA,WAAW,CACxBtB,IAAI,CAAC8C,KAAD,CAAJ,CAAY5C,KAAZ,CADwB,CAExB,CAACgC,UAAU,CAAClC,IAAI,CAAC8C,KAAD,CAAJ,CAAY5C,KAAZ,CAAD,CAAX,EAAmC,CAACJ,gBAFZ,CAAjB,EALX,eAUE,2BAAK,SAAS,2BAAqB8C,iBAArB,eAAd,eACE,6BAAO,OAAO,WAAKD,SAAL,aAAkB3C,IAAI,CAAC8C,KAAD,CAAJ,CAAY5C,KAAZ,CAAlB,CAAd,eACE,6BACE,EAAE,WAAKyC,SAAL,aAAkB3C,IAAI,CAAC8C,KAAD,CAAJ,CAAY5C,KAAZ,CAAlB,CADJ,CAEE,IAAI,CAAC,UAFP,CAGE,SAAS,CAAGW,kBAAkB,CAAG,UAAH,CAAgB,OAHhD,CAIE,IAAI,CAAE8B,SAJR,CAKE,KAAK,CAAE3C,IAAI,CAAC8C,KAAD,CAAJ,CAAY5C,KAAZ,CALT,CAME,QAAQ,CAAEwB,iBANZ,CAOE,OAAO,CAAEQ,UAAU,CAAClC,IAAI,CAAC8C,KAAD,CAAJ,CAAY5C,KAAZ,CAAD,CAPrB,EADF,CADF,CAVF,CAuBGH,OAAO,CAAC+B,GAAR,CAAY,SAAAkB,MAAM,qBACjB,2BACE,SAAS,CAAC,YADZ,CAEE,GAAG,CAAEA,MAFP,EAIGhD,IAAI,CAAC8C,KAAD,CAAJ,CAAYE,MAAZ,CAJH,CADiB,EAAlB,CAvBH,CAFkB,GAApB,CAoCA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,WAAGF,CAAAA,KAAH,OAAGA,KAAH,oBACxB,2BAAK,SAAS,WAAKH,iBAAL,cAAd,CAAkD,KAAK,CAAEG,KAAzD,EACGhD,OAAO,CAAC+B,GAAR,CAAY,SAAAkB,MAAM,qBACjB,2BAAK,GAAG,CAAEA,MAAV,EAAmBA,MAAnB,CADiB,EAAlB,CADH,CADwB,EAA1B,CAQA,mBACE,2BAAK,SAAS,CAAC,kBAAf,eACE,oBAAC,SAAD,MACG,mBAAGE,CAAAA,KAAH,OAAGA,KAAH,CAAUC,MAAV,OAAUA,MAAV,oBACC,oBAAC,KAAD,EACE,MAAM,CAAE3C,UAAU,EAAI2C,MADxB,CAEE,SAAS,CAAE,CAAEC,OAAO,CAAE,MAAX,CAFb,CAGE,QAAQ,CAAEpD,IAAI,CAACyB,MACf;AAJF,CAKE,SAAS,CAAE,EALb,CAME,YAAY,CAAEnB,aAAa,CAAG,EAAH,CAAQG,SANrC,CAOE,WAAW,CAAEoC,WAPf,CAQE,KAAK,CAAEnC,SAAS,EAAIwC,KARtB,CASE,iBAAiB,CAAE5C,aAAa,CAAG2C,iBAAH,CAAuBxC,SATzD,CAUE,SAAS,CAAE,6BAAGqC,CAAAA,KAAH,OAAGA,KAAH,OAAe9C,CAAAA,IAAI,CAAC8C,KAAD,CAAnB,EAVb,EADD,EADH,CADF,CADF,CAoBD","sourcesContent":["/* eslint-disable jsx-a11y/no-noninteractive-element-to-interactive-role */\n/* eslint-disable jsx-a11y/click-events-have-key-events */\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { Table, AutoSizer } from 'react-virtualized';\nimport uuidv4 from 'uuid/v4';\nimport union from 'lodash/union';\nimport difference from 'lodash/difference';\nimport isEqual from 'lodash/isEqual';\n\nconst SHIFT_KEYCODE = 16;\n\n/**\n * A table with \"selectable\" rows.\n * @prop {string[]} columns An array of column names, corresponding to data object properties.\n * @prop {object[]} data An array of data objects used to populate table rows.\n * @prop {function} onChange Callback function,\n * passed a selection object when `allowMultiple` is false (and `null` if `allowUncheck` is true),\n * or passed an array of selection objects when `allowMultiple` is true.\n * @prop {string} idKey The key for a unique identifier property of `data` objects.\n * @prop {string} valueKey If initially-selected rows are required,\n * this key specifies a boolean property of the `data` objects\n * indicating those rows that should be initially selected.\n * @prop {boolean} allowMultiple Whether to allow multiple rows to be selected.\n * @prop {boolean} allowUncheck Whether to allow selected rows to be un-checked. By default, false.\n * @prop {boolean} showTableHead Whether to show the table header element. By default, true.\n * @prop {boolean} showTableInputs Whether to show the table input elements for each row.\n * By default, false.\n */\nexport default function SelectableTable(props) {\n  const {\n    hasColorEncoding,\n    columns,\n    data,\n    onChange,\n    idKey = 'id',\n    valueKey = 'value',\n    allowMultiple = false,\n    allowUncheck = false,\n    showTableHead = true,\n    showTableInputs = false,\n    testHeight = undefined,\n    testWidth = undefined,\n  } = props;\n\n  const [selectedRows, setSelectedRows] = useState(null);\n  const [isCheckingMultiple, setIsCheckingMultiple] = useState(false);\n\n  // Enable selecting multiple rows while the shift key is down.\n  useEffect(() => {\n    function onKeyDown(event) {\n      if (allowMultiple && event.keyCode === SHIFT_KEYCODE) {\n        setIsCheckingMultiple(true);\n      }\n    }\n\n    function onKeyUp(event) {\n      if (allowMultiple && event.keyCode === SHIFT_KEYCODE) {\n        setIsCheckingMultiple(false);\n      }\n    }\n\n    window.addEventListener('keydown', onKeyDown);\n    window.addEventListener('keyup', onKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', onKeyDown);\n      window.removeEventListener('keyup', onKeyUp);\n    };\n  }, [allowMultiple]);\n\n  // Callback function to update the `selectedRows` state.\n  const onSelectRow = useCallback((value, checked) => {\n    if (checked || allowUncheck) {\n      if (!isCheckingMultiple\n        && (checked || (!checked && allowMultiple && selectedRows.length > 1))\n      ) {\n        setSelectedRows([value]);\n      } else if (!allowMultiple && !checked) {\n        setSelectedRows([]);\n      } else {\n        setSelectedRows(\n          checked\n            ? union(selectedRows || [], [value])\n            : difference(selectedRows || [], [value]),\n        );\n      }\n    }\n  }, [allowMultiple, isCheckingMultiple, allowUncheck, selectedRows]);\n\n  // Handler for checkbox input elements.\n  const handleInputChange = useCallback((event) => {\n    const { target } = event;\n    const { checked } = target;\n    const { value } = target;\n    onSelectRow(value, checked);\n  }, [onSelectRow]);\n\n  // Function to map row IDs to corresponding objects\n  // to pass to the `onChange` callback.\n  const getDataFromIds = useCallback(ids => ids.map(id => ({\n    [idKey]: id,\n    data: data.find(item => item[idKey] === id),\n  })), [data, idKey]);\n\n  // Function to check if a row ID has been selected.\n  const isSelected = useCallback(id => (\n    Array.isArray(selectedRows) && selectedRows.includes(id)\n  ), [selectedRows]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    // Check whether an initial set of rows should be selected.\n    const initialSelectedRows = data\n      .map((d) => {\n        if (d[valueKey]) {\n          return d[idKey];\n        }\n        return null;\n      })\n      .filter(Boolean);\n    if (!isEqual(initialSelectedRows, selectedRows)) {\n      if (initialSelectedRows.length > 0) {\n        setSelectedRows(initialSelectedRows);\n      } else {\n        setSelectedRows(null);\n      }\n    }\n  }, [data, idKey, valueKey]);\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  useEffect(() => {\n    // Call the `onChange` prop function with an updated row or set of rows.\n    if (!onChange || !selectedRows) {\n      return;\n    }\n    const selectedRowData = getDataFromIds(selectedRows);\n    if (allowMultiple) {\n      onChange(selectedRowData);\n    } else if (selectedRows.length === 1) {\n      onChange(selectedRowData[0]);\n    } else if (selectedRows.length === 0) {\n      onChange(null);\n    }\n  }, [selectedRows, allowMultiple]);\n\n  // Generate a unique ID to use in (for, id) label-input pairs.\n  const inputUuid = uuidv4();\n\n  // Class for first column of inputs, to hide them if desired.\n  const hiddenInputsClass = (showTableInputs ? '' : 'hidden-input-column');\n\n  const rowRenderer = ({ index, style }) => (\n    // eslint-disable-next-line jsx-a11y/interactive-supports-focus\n    <div\n      key={data[index][idKey]}\n      className={`table-item table-row ${isSelected(data[index][idKey]) ? 'row-checked ' : ''}`}\n      style={style}\n      role=\"button\"\n      onClick={() => onSelectRow(\n        data[index][idKey],\n        !isSelected(data[index][idKey]) || !hasColorEncoding,\n      )}\n    >\n      <div className={`input-container ${hiddenInputsClass} table-cell`}>\n        <label htmlFor={`${inputUuid}_${data[index][idKey]}`}>\n          <input\n            id={`${inputUuid}_${data[index][idKey]}`}\n            type=\"checkbox\"\n            className={(isCheckingMultiple ? 'checkbox' : 'radio')}\n            name={inputUuid}\n            value={data[index][idKey]}\n            onChange={handleInputChange}\n            checked={isSelected(data[index][idKey])}\n          />\n        </label>\n      </div>\n      {columns.map(column => (\n        <div\n          className=\"table-cell\"\n          key={column}\n        >\n          {data[index][column]}\n        </div>\n      ))}\n    </div>\n  );\n\n  const headerRowRenderer = ({ style }) => (\n    <div className={`${hiddenInputsClass} table-row`} style={style}>\n      {columns.map(column => (\n        <div key={column}>{column}</div>\n      ))}\n    </div>\n  );\n\n  return (\n    <div className=\"selectable-table\">\n      <AutoSizer>\n        {({ width, height }) => (\n          <Table\n            height={testHeight || height}\n            gridStyle={{ outline: 'none' }}\n            rowCount={data.length}\n            // 24 is 1 em + padding in either direction (see _selectable_table.scss).\n            rowHeight={24}\n            headerHeight={showTableHead ? 24 : undefined}\n            rowRenderer={rowRenderer}\n            width={testWidth || width}\n            headerRowRenderer={showTableHead ? headerRowRenderer : undefined}\n            rowGetter={({ index }) => data[index]}\n          />\n        )}\n      </AutoSizer>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}