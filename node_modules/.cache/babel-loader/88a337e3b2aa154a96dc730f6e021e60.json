{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\heatmap\\\\HeatmapOptions.js\";\nimport React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport Slider from '@material-ui/core/Slider';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\nexport default function HeatmapOptions(props) {\n  const {\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange\n  } = props;\n  const classes = useStyles();\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n\n  const handleColormapRangeChangeDebounced = useCallback(debounce(handleColormapRangeChange, 5, {\n    trailing: true\n  }), [handleColormapRangeChange]);\n  return /*#__PURE__*/React.createElement(OptionsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    htmlFor: \"gene-expression-colormap-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Gene Expression Colormap\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OptionSelect, {\n    className: classes.select,\n    value: geneExpressionColormap,\n    onChange: handleGeneExpressionColormapChange,\n    inputProps: {\n      id: 'gene-expression-colormap-select'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, GLSL_COLORMAPS.map(cmap => /*#__PURE__*/React.createElement(\"option\", {\n    key: cmap,\n    value: cmap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, cmap))))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, \"Gene Expression Colormap Range\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    classes: {\n      root: classes.slider,\n      valueLabel: classes.sliderValueLabel\n    },\n    value: geneExpressionColormapRange,\n    onChange: handleColormapRangeChangeDebounced,\n    \"aria-labelledby\": \"gene-expression-colormap-range-slider\",\n    valueLabelDisplay: \"auto\",\n    step: 0.005,\n    min: 0.0,\n    max: 1.0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/heatmap/HeatmapOptions.js"],"names":["React","useCallback","debounce","Slider","TableCell","TableRow","useStyles","OptionsContainer","OptionSelect","GLSL_COLORMAPS","HeatmapOptions","props","geneExpressionColormap","setGeneExpressionColormap","geneExpressionColormapRange","setGeneExpressionColormapRange","classes","handleGeneExpressionColormapChange","event","target","value","handleColormapRangeChange","handleColormapRangeChangeDebounced","trailing","labelCell","inputCell","select","id","map","cmap","root","slider","valueLabel","sliderValueLabel"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport Slider from '@material-ui/core/Slider';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\n\nexport default function HeatmapOptions(props) {\n  const {\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange,\n  } = props;\n\n  const classes = useStyles();\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n  const handleColormapRangeChangeDebounced = useCallback(\n    debounce(handleColormapRangeChange, 5, { trailing: true }),\n    [handleColormapRangeChange],\n  );\n\n  return (\n    <OptionsContainer>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"gene-expression-colormap-select\">\n          Gene Expression Colormap\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={geneExpressionColormap}\n            onChange={handleGeneExpressionColormapChange}\n            inputProps={{\n              id: 'gene-expression-colormap-select',\n            }}\n          >\n            {GLSL_COLORMAPS.map(cmap => (\n              <option key={cmap} value={cmap}>{cmap}</option>\n            ))}\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          Gene Expression Colormap Range\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={geneExpressionColormapRange}\n            onChange={handleColormapRangeChangeDebounced}\n            aria-labelledby=\"gene-expression-colormap-range-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.005}\n            min={0.0}\n            max={1.0}\n          />\n        </TableCell>\n      </TableRow>\n    </OptionsContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}