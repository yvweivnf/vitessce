{"ast":null,"code":"import { Framebuffer, Texture2D, isWebGL2 } from '@luma.gl/core';\nconst DEFAULT_PARAMETERS = {\n  [10240]: 9728,\n  [10241]: 9728\n};\nexport function getFloatTexture(gl) {\n  let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    width = 1,\n    height = 1,\n    data = null,\n    unpackFlipY = true,\n    parameters = DEFAULT_PARAMETERS\n  } = opts;\n  const texture = new Texture2D(gl, {\n    data,\n    format: isWebGL2(gl) ? 34836 : 6408,\n    type: 5126,\n    border: 0,\n    mipmaps: false,\n    parameters,\n    dataFormat: 6408,\n    width,\n    height,\n    unpackFlipY\n  });\n  return texture;\n}\nexport function getFramebuffer(gl, opts) {\n  const {\n    id,\n    width = 1,\n    height = 1,\n    texture\n  } = opts;\n  const fb = new Framebuffer(gl, {\n    id,\n    width,\n    height,\n    attachments: {\n      [36064]: texture\n    }\n  });\n  return fb;\n}\nexport function getFloatArray(array, size) {\n  let fillValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  if (!array || array.length < size) {\n    return new Float32Array(size).fill(fillValue);\n  }\n\n  return array;\n}","map":{"version":3,"sources":["../../../src/utils/resource-utils.js"],"names":["DEFAULT_PARAMETERS","opts","width","height","data","unpackFlipY","parameters","texture","format","isWebGL2","type","border","mipmaps","dataFormat","fb","attachments","fillValue","array"],"mappings":"AACA,SAAA,WAAA,EAAA,SAAA,EAAA,QAAA,QAAA,eAAA;AAEA,MAAMA,kBAAkB,GAAG;AACzB,GAAA,KAAA,GADyB,IAAA;AAEzB,GAAA,KAAA,GAAA;AAFyB,CAA3B;AAKA,OAAO,SAAA,eAAA,CAAA,EAAA,EAAwC;AAAA,MAAXC,IAAW,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAC7C,QAAM;AACJC,IAAAA,KAAK,GADD,CAAA;AAEJC,IAAAA,MAAM,GAFF,CAAA;AAGJC,IAAAA,IAAI,GAHA,IAAA;AAIJC,IAAAA,WAAW,GAJP,IAAA;AAKJC,IAAAA,UAAU,GAAGN;AALT,MAAN,IAAA;AAOA,QAAMO,OAAO,GAAG,IAAA,SAAA,CAAA,EAAA,EAAkB;AAAA,IAAA,IAAA;AAEhCC,IAAAA,MAAM,EAAEC,QAAQ,CAARA,EAAQ,CAARA,GAAAA,KAAAA,GAFwB,IAAA;AAGhCC,IAAAA,IAAI,EAH4B,IAAA;AAIhCC,IAAAA,MAAM,EAJ0B,CAAA;AAKhCC,IAAAA,OAAO,EALyB,KAAA;AAAA,IAAA,UAAA;AAOhCC,IAAAA,UAAU,EAPsB,IAAA;AAAA,IAAA,KAAA;AAAA,IAAA,MAAA;AAUhCR,IAAAA;AAVgC,GAAlB,CAAhB;AAYA,SAAA,OAAA;AACD;AAED,OAAO,SAAA,cAAA,CAAA,EAAA,EAAA,IAAA,EAAkC;AACvC,QAAM;AAAA,IAAA,EAAA;AAAKH,IAAAA,KAAK,GAAV,CAAA;AAAgBC,IAAAA,MAAM,GAAtB,CAAA;AAA4BI,IAAAA;AAA5B,MAAN,IAAA;AACA,QAAMO,EAAE,GAAG,IAAA,WAAA,CAAA,EAAA,EAAoB;AAAA,IAAA,EAAA;AAAA,IAAA,KAAA;AAAA,IAAA,MAAA;AAI7BC,IAAAA,WAAW,EAAE;AACX,OAAA,KAAA,GAAwBR;AADb;AAJgB,GAApB,CAAX;AASA,SAAA,EAAA;AACD;AAED,OAAO,SAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EAAmD;AAAA,MAAfS,SAAe,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAH,CAAG;;AACxD,MAAI,CAAA,KAAA,IAAUC,KAAK,CAALA,MAAAA,GAAd,IAAA,EAAmC;AACjC,WAAO,IAAA,YAAA,CAAA,IAAA,EAAA,IAAA,CAAP,SAAO,CAAP;AACD;;AACD,SAAA,KAAA;AACD","sourcesContent":["import GL from '@luma.gl/constants';\nimport {Framebuffer, Texture2D, isWebGL2} from '@luma.gl/core';\n\nconst DEFAULT_PARAMETERS = {\n  [GL.TEXTURE_MAG_FILTER]: GL.NEAREST,\n  [GL.TEXTURE_MIN_FILTER]: GL.NEAREST\n};\n\nexport function getFloatTexture(gl, opts = {}) {\n  const {\n    width = 1,\n    height = 1,\n    data = null,\n    unpackFlipY = true,\n    parameters = DEFAULT_PARAMETERS\n  } = opts;\n  const texture = new Texture2D(gl, {\n    data,\n    format: isWebGL2(gl) ? GL.RGBA32F : GL.RGBA,\n    type: GL.FLOAT,\n    border: 0,\n    mipmaps: false,\n    parameters,\n    dataFormat: GL.RGBA,\n    width,\n    height,\n    unpackFlipY\n  });\n  return texture;\n}\n\nexport function getFramebuffer(gl, opts) {\n  const {id, width = 1, height = 1, texture} = opts;\n  const fb = new Framebuffer(gl, {\n    id,\n    width,\n    height,\n    attachments: {\n      [GL.COLOR_ATTACHMENT0]: texture\n    }\n  });\n\n  return fb;\n}\n\nexport function getFloatArray(array, size, fillValue = 0) {\n  if (!array || array.length < size) {\n    return new Float32Array(size).fill(fillValue);\n  }\n  return array;\n}\n"]},"metadata":{},"sourceType":"module"}