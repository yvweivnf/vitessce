{"ast":null,"code":"import { keys } from '../util';\nimport { CompositeMarkNormalizer } from './base';\nimport { BOXPLOT, BOXPLOT_PARTS, normalizeBoxPlot } from './boxplot';\nimport { ERRORBAND, ERRORBAND_PARTS, normalizeErrorBand } from './errorband';\nimport { ERRORBAR, ERRORBAR_PARTS, normalizeErrorBar } from './errorbar';\n/**\n * Registry index for all composite mark's normalizer\n */\n\nvar compositeMarkRegistry = {};\nexport function add(mark, run, parts) {\n  var normalizer = new CompositeMarkNormalizer(mark, run);\n  compositeMarkRegistry[mark] = {\n    normalizer: normalizer,\n    parts: parts\n  };\n}\nexport function remove(mark) {\n  delete compositeMarkRegistry[mark];\n}\nexport function getAllCompositeMarks() {\n  return keys(compositeMarkRegistry);\n}\nadd(BOXPLOT, normalizeBoxPlot, BOXPLOT_PARTS);\nadd(ERRORBAR, normalizeErrorBar, ERRORBAR_PARTS);\nadd(ERRORBAND, normalizeErrorBand, ERRORBAND_PARTS);","map":{"version":3,"sources":["../../../src/compositemark/index.ts"],"names":[],"mappings":"AAMA,SAAQ,IAAR,QAAmB,SAAnB;AACA,SAAQ,uBAAR,QAAsC,QAAtC;AACA,SAAQ,OAAR,EAA2D,aAA3D,EAA0E,gBAA1E,QAAiG,WAAjG;AACA,SACE,SADF,EAKE,eALF,EAME,kBANF,QAOO,aAPP;AAQA,SACE,QADF,EAKE,cALF,EAOE,iBAPF,QAQO,YARP;AAmBA;;;;AAGA,IAAM,qBAAqB,GAKvB,EALJ;AAOA,OAAM,SAAU,GAAV,CAAc,IAAd,EAA4B,GAA5B,EAA6D,KAA7D,EAAqF;AACzF,MAAM,UAAU,GAAG,IAAI,uBAAJ,CAA4B,IAA5B,EAAkC,GAAlC,CAAnB;AACA,EAAA,qBAAqB,CAAC,IAAD,CAArB,GAA8B;AAAC,IAAA,UAAU,EAAV,UAAD;AAAa,IAAA,KAAK,EAAL;AAAb,GAA9B;AACD;AAED,OAAM,SAAU,MAAV,CAAiB,IAAjB,EAA6B;AACjC,SAAO,qBAAqB,CAAC,IAAD,CAA5B;AACD;AAiBD,OAAM,SAAU,oBAAV,GAA8B;AAClC,SAAO,IAAI,CAAC,qBAAD,CAAX;AACD;AAQD,GAAG,CAAC,OAAD,EAAU,gBAAV,EAA4B,aAA5B,CAAH;AACA,GAAG,CAAC,QAAD,EAAW,iBAAX,EAA8B,cAA9B,CAAH;AACA,GAAG,CAAC,SAAD,EAAY,kBAAZ,EAAgC,eAAhC,CAAH","sourceRoot":"","sourcesContent":["import { keys } from '../util';\nimport { CompositeMarkNormalizer } from './base';\nimport { BOXPLOT, BOXPLOT_PARTS, normalizeBoxPlot } from './boxplot';\nimport { ERRORBAND, ERRORBAND_PARTS, normalizeErrorBand } from './errorband';\nimport { ERRORBAR, ERRORBAR_PARTS, normalizeErrorBar } from './errorbar';\n/**\n * Registry index for all composite mark's normalizer\n */\nconst compositeMarkRegistry = {};\nexport function add(mark, run, parts) {\n    const normalizer = new CompositeMarkNormalizer(mark, run);\n    compositeMarkRegistry[mark] = { normalizer, parts };\n}\nexport function remove(mark) {\n    delete compositeMarkRegistry[mark];\n}\nexport function getAllCompositeMarks() {\n    return keys(compositeMarkRegistry);\n}\nadd(BOXPLOT, normalizeBoxPlot, BOXPLOT_PARTS);\nadd(ERRORBAR, normalizeErrorBar, ERRORBAR_PARTS);\nadd(ERRORBAND, normalizeErrorBand, ERRORBAND_PARTS);\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}