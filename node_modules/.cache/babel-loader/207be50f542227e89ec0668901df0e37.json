{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\scatterplot\\\\ScatterplotOptions.js\";\nimport React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\nexport default function ScatterplotOptions(props) {\n  const {\n    children,\n    observationsLabel,\n    cellRadius,\n    setCellRadius,\n    cellRadiusMode,\n    setCellRadiusMode,\n    cellOpacity,\n    setCellOpacity,\n    cellOpacityMode,\n    setCellOpacityMode,\n    cellSetLabelsVisible,\n    setCellSetLabelsVisible,\n    cellSetLabelSize,\n    setCellSetLabelSize,\n    cellSetPolygonsVisible,\n    setCellSetPolygonsVisible,\n    cellColorEncoding,\n    setCellColorEncoding,\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange\n  } = props;\n  const observationsLabelNice = capitalize(observationsLabel);\n  const classes = useStyles();\n\n  function handleCellRadiusModeChange(event) {\n    setCellRadiusMode(event.target.value);\n  }\n\n  function handleCellOpacityModeChange(event) {\n    setCellOpacityMode(event.target.value);\n  }\n\n  function handleRadiusChange(event, value) {\n    setCellRadius(value);\n  }\n\n  function handleOpacityChange(event, value) {\n    setCellOpacity(value);\n  }\n\n  function handleLabelVisibilityChange(event) {\n    setCellSetLabelsVisible(event.target.checked);\n  }\n\n  function handleLabelSizeChange(event, value) {\n    setCellSetLabelSize(value);\n  }\n\n  function handlePolygonVisibilityChange(event) {\n    setCellSetPolygonsVisible(event.target.checked);\n  }\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n\n  const handleColormapRangeChangeDebounced = useCallback(debounce(handleColormapRangeChange, 5, {\n    trailing: true\n  }), [handleColormapRangeChange]);\n  return /*#__PURE__*/React.createElement(OptionsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, children, /*#__PURE__*/React.createElement(CellColorEncodingOption, {\n    observationsLabel: observationsLabel,\n    cellColorEncoding: cellColorEncoding,\n    setCellColorEncoding: setCellColorEncoding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, observationsLabelNice, \" Set Labels Visible\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    className: classes.checkbox,\n    checked: cellSetLabelsVisible,\n    onChange: handleLabelVisibilityChange,\n    name: \"scatterplot-option-cell-set-labels\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, observationsLabelNice, \" Set Label Size\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    disabled: !cellSetLabelsVisible,\n    classes: {\n      root: classes.slider,\n      valueLabel: classes.sliderValueLabel\n    },\n    value: cellSetLabelSize,\n    onChange: handleLabelSizeChange,\n    \"aria-labelledby\": \"cell-set-label-size-slider\",\n    valueLabelDisplay: \"auto\",\n    step: 1,\n    min: 8,\n    max: 36,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, observationsLabelNice, \" Set Polygons Visible\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    className: classes.checkbox,\n    checked: cellSetPolygonsVisible,\n    onChange: handlePolygonVisibilityChange,\n    name: \"scatterplot-option-cell-set-polygons\",\n    color: \"default\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    htmlFor: \"cell-radius-mode-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 9\n    }\n  }, observationsLabelNice, \" Radius Mode\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OptionSelect, {\n    className: classes.select,\n    value: cellRadiusMode,\n    onChange: handleCellRadiusModeChange,\n    inputProps: {\n      id: 'cell-radius-mode-select'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, \"Auto\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"manual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, \"Manual\")))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 9\n    }\n  }, observationsLabelNice, \" Radius\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    disabled: cellRadiusMode !== 'manual',\n    classes: {\n      root: classes.slider,\n      valueLabel: classes.sliderValueLabel\n    },\n    value: cellRadius,\n    onChange: handleRadiusChange,\n    \"aria-labelledby\": \"cell-radius-slider\",\n    valueLabelDisplay: \"auto\",\n    step: 0.01,\n    min: 0.01,\n    max: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    htmlFor: \"cell-opacity-mode-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, observationsLabelNice, \" Opacity Mode\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OptionSelect, {\n    className: classes.select,\n    value: cellOpacityMode,\n    onChange: handleCellOpacityModeChange,\n    inputProps: {\n      id: 'cell-opacity-mode-select'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  }, \"Auto\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"manual\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }, \"Manual\")))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 9\n    }\n  }, observationsLabelNice, \" Opacity\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    disabled: cellOpacityMode !== 'manual',\n    classes: {\n      root: classes.slider,\n      valueLabel: classes.sliderValueLabel\n    },\n    value: cellOpacity,\n    onChange: handleOpacityChange,\n    \"aria-labelledby\": \"cell-opacity-slider\",\n    valueLabelDisplay: \"auto\",\n    step: 0.05,\n    min: 0.0,\n    max: 1.0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    htmlFor: \"gene-expression-colormap-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }\n  }, \"Gene Expression Colormap\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(OptionSelect, {\n    className: classes.select,\n    value: geneExpressionColormap,\n    onChange: handleGeneExpressionColormapChange,\n    inputProps: {\n      id: 'gene-expression-colormap-select'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 11\n    }\n  }, GLSL_COLORMAPS.map(cmap => /*#__PURE__*/React.createElement(\"option\", {\n    key: cmap,\n    value: cmap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 15\n    }\n  }, cmap))))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 9\n    }\n  }, \"Gene Expression Colormap Range\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    classes: {\n      root: classes.slider,\n      valueLabel: classes.sliderValueLabel\n    },\n    value: geneExpressionColormapRange,\n    onChange: handleColormapRangeChangeDebounced,\n    \"aria-labelledby\": \"gene-expression-colormap-range-slider\",\n    valueLabelDisplay: \"auto\",\n    step: 0.005,\n    min: 0.0,\n    max: 1.0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/scatterplot/ScatterplotOptions.js"],"names":["React","useCallback","debounce","Checkbox","Slider","TableCell","TableRow","capitalize","useStyles","OptionsContainer","OptionSelect","CellColorEncodingOption","GLSL_COLORMAPS","ScatterplotOptions","props","children","observationsLabel","cellRadius","setCellRadius","cellRadiusMode","setCellRadiusMode","cellOpacity","setCellOpacity","cellOpacityMode","setCellOpacityMode","cellSetLabelsVisible","setCellSetLabelsVisible","cellSetLabelSize","setCellSetLabelSize","cellSetPolygonsVisible","setCellSetPolygonsVisible","cellColorEncoding","setCellColorEncoding","geneExpressionColormap","setGeneExpressionColormap","geneExpressionColormapRange","setGeneExpressionColormapRange","observationsLabelNice","classes","handleCellRadiusModeChange","event","target","value","handleCellOpacityModeChange","handleRadiusChange","handleOpacityChange","handleLabelVisibilityChange","checked","handleLabelSizeChange","handlePolygonVisibilityChange","handleGeneExpressionColormapChange","handleColormapRangeChange","handleColormapRangeChangeDebounced","trailing","labelCell","inputCell","checkbox","root","slider","valueLabel","sliderValueLabel","select","id","map","cmap"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Slider from '@material-ui/core/Slider';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport { capitalize } from '../../utils';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\n\nexport default function ScatterplotOptions(props) {\n  const {\n    children,\n    observationsLabel,\n    cellRadius,\n    setCellRadius,\n    cellRadiusMode,\n    setCellRadiusMode,\n    cellOpacity,\n    setCellOpacity,\n    cellOpacityMode,\n    setCellOpacityMode,\n    cellSetLabelsVisible,\n    setCellSetLabelsVisible,\n    cellSetLabelSize,\n    setCellSetLabelSize,\n    cellSetPolygonsVisible,\n    setCellSetPolygonsVisible,\n    cellColorEncoding,\n    setCellColorEncoding,\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange,\n  } = props;\n\n  const observationsLabelNice = capitalize(observationsLabel);\n\n  const classes = useStyles();\n\n  function handleCellRadiusModeChange(event) {\n    setCellRadiusMode(event.target.value);\n  }\n\n  function handleCellOpacityModeChange(event) {\n    setCellOpacityMode(event.target.value);\n  }\n\n  function handleRadiusChange(event, value) {\n    setCellRadius(value);\n  }\n\n  function handleOpacityChange(event, value) {\n    setCellOpacity(value);\n  }\n\n  function handleLabelVisibilityChange(event) {\n    setCellSetLabelsVisible(event.target.checked);\n  }\n\n  function handleLabelSizeChange(event, value) {\n    setCellSetLabelSize(value);\n  }\n\n  function handlePolygonVisibilityChange(event) {\n    setCellSetPolygonsVisible(event.target.checked);\n  }\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n  const handleColormapRangeChangeDebounced = useCallback(\n    debounce(handleColormapRangeChange, 5, { trailing: true }),\n    [handleColormapRangeChange],\n  );\n\n  return (\n    <OptionsContainer>\n      {children}\n      <CellColorEncodingOption\n        observationsLabel={observationsLabel}\n        cellColorEncoding={cellColorEncoding}\n        setCellColorEncoding={setCellColorEncoding}\n      />\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Labels Visible\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={cellSetLabelsVisible}\n            onChange={handleLabelVisibilityChange}\n            name=\"scatterplot-option-cell-set-labels\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Label Size\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={!cellSetLabelsVisible}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellSetLabelSize}\n            onChange={handleLabelSizeChange}\n            aria-labelledby=\"cell-set-label-size-slider\"\n            valueLabelDisplay=\"auto\"\n            step={1}\n            min={8}\n            max={36}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Set Polygons Visible\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Checkbox\n            className={classes.checkbox}\n            checked={cellSetPolygonsVisible}\n            onChange={handlePolygonVisibilityChange}\n            name=\"scatterplot-option-cell-set-polygons\"\n            color=\"default\"\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"cell-radius-mode-select\">\n          {observationsLabelNice} Radius Mode\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={cellRadiusMode}\n            onChange={handleCellRadiusModeChange}\n            inputProps={{\n              id: 'cell-radius-mode-select',\n            }}\n          >\n            <option value=\"auto\">Auto</option>\n            <option value=\"manual\">Manual</option>\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Radius\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={cellRadiusMode !== 'manual'}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellRadius}\n            onChange={handleRadiusChange}\n            aria-labelledby=\"cell-radius-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.01}\n            min={0.01}\n            max={10}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"cell-opacity-mode-select\">\n          {observationsLabelNice} Opacity Mode\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={cellOpacityMode}\n            onChange={handleCellOpacityModeChange}\n            inputProps={{\n              id: 'cell-opacity-mode-select',\n            }}\n          >\n            <option value=\"auto\">Auto</option>\n            <option value=\"manual\">Manual</option>\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          {observationsLabelNice} Opacity\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            disabled={cellOpacityMode !== 'manual'}\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={cellOpacity}\n            onChange={handleOpacityChange}\n            aria-labelledby=\"cell-opacity-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.05}\n            min={0.0}\n            max={1.0}\n          />\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell} htmlFor=\"gene-expression-colormap-select\">\n          Gene Expression Colormap\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <OptionSelect\n            className={classes.select}\n            value={geneExpressionColormap}\n            onChange={handleGeneExpressionColormapChange}\n            inputProps={{\n              id: 'gene-expression-colormap-select',\n            }}\n          >\n            {GLSL_COLORMAPS.map(cmap => (\n              <option key={cmap} value={cmap}>{cmap}</option>\n            ))}\n          </OptionSelect>\n        </TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell className={classes.labelCell}>\n          Gene Expression Colormap Range\n        </TableCell>\n        <TableCell className={classes.inputCell}>\n          <Slider\n            classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n            value={geneExpressionColormapRange}\n            onChange={handleColormapRangeChangeDebounced}\n            aria-labelledby=\"gene-expression-colormap-range-slider\"\n            valueLabelDisplay=\"auto\"\n            step={0.005}\n            min={0.0}\n            max={1.0}\n          />\n        </TableCell>\n      </TableRow>\n    </OptionsContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}