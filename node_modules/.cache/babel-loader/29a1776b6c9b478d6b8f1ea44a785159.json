{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport VectorTileLayer from './vector-tile-layer';\n\nvar VectorTile = function VectorTile(pbf, end) {\n  _classCallCheck(this, VectorTile);\n\n  _defineProperty(this, \"layers\", void 0);\n\n  this.layers = pbf.readFields(readTile, {}, end);\n};\n\nexport { VectorTile as default };\n\nfunction readTile(tag, layers, pbf) {\n  if (tag === 3) {\n    if (pbf) {\n      var layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n\n      if (layer.length && layers) {\n        layers[layer.name] = layer;\n      }\n    }\n  }\n}","map":{"version":3,"sources":["../../../../src/lib/mapbox-vector-tile/vector-tile.ts"],"names":["constructor","pbf","tag","layer","layers"],"mappings":";;AAEA,OAAA,eAAA,MAAA,qBAAA;;IAGe,U,GAEbA,oBAAW,GAAXA,EAAW,GAAXA,EAAyC;AAAA;;AAAA,EAAA,eAAA,CAAA,IAAA,EAAA,QAAA,EAAA,KAAA,CAAA,CAAA;;AACvC,OAAA,MAAA,GAAcC,GAAG,CAAHA,UAAAA,CAAAA,QAAAA,EAAAA,EAAAA,EAAd,GAAcA,CAAd;AACD,C;;SAJY,U;;AAaf,SAAA,QAAA,CAAA,GAAA,EAAA,MAAA,EAAA,GAAA,EAA8F;AAC5F,MAAIC,GAAG,KAAP,CAAA,EAAe;AACb,QAAA,GAAA,EAAS;AACP,UAAMC,KAAK,GAAG,IAAA,eAAA,CAAA,GAAA,EAAyBF,GAAG,CAAHA,UAAAA,KAAmBA,GAAG,CAA7D,GAAc,CAAd;;AACA,UAAIE,KAAK,CAALA,MAAAA,IAAJ,MAAA,EAA4B;AAC1BC,QAAAA,MAAM,CAACD,KAAK,CAAZC,IAAM,CAANA,GAAAA,KAAAA;AACD;AACF;AACF;AACF","sourcesContent":["// This code is forked from https://github.com/mapbox/vector-tile-js under BSD 3-clause license.\n\nimport VectorTileLayer from './vector-tile-layer';\nimport Protobuf from 'pbf';\n\nexport default class VectorTile {\n  layers: {[x: string]: VectorTileLayer};\n  constructor(pbf: Protobuf, end?: number) {\n    this.layers = pbf.readFields(readTile, {}, end);\n  }\n}\n\n/**\n *\n * @param tag\n * @param layers\n * @param pbf\n */\nfunction readTile(tag: number, layers?: {[x: string]: VectorTileLayer}, pbf?: Protobuf): void {\n  if (tag === 3) {\n    if (pbf) {\n      const layer = new VectorTileLayer(pbf, pbf.readVarint() + pbf.pos);\n      if (layer.length && layers) {\n        layers[layer.name] = layer;\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}