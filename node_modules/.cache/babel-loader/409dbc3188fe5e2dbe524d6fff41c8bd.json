{"ast":null,"code":"import { assert } from '@loaders.gl/loader-utils';\nimport { getBinaryImageMetadata } from '../category-api/binary-image-api';\nexport default async function parseToNodeImage(arrayBuffer, options) {\n  const {\n    mimeType\n  } = getBinaryImageMetadata(arrayBuffer) || {};\n  const _parseImageNode = globalThis._parseImageNode;\n  assert(_parseImageNode);\n  return await _parseImageNode(arrayBuffer, mimeType);\n}","map":{"version":3,"sources":["../../../../src/lib/parsers/parse-to-node-image.ts"],"names":["mimeType","getBinaryImageMetadata","_parseImageNode","globalThis","assert"],"mappings":"AAEA,SAAA,MAAA,QAAA,0BAAA;AACA,SAAA,sBAAA,QAAA,kCAAA;AAgBA,eAAe,eAAA,gBAAA,CAAA,WAAA,EAAA,OAAA,EAGW;AACxB,QAAM;AAACA,IAAAA;AAAD,MAAaC,sBAAsB,CAAtBA,WAAsB,CAAtBA,IAAnB,EAAA;AAGA,QAAMC,eAA+B,GAAGC,UAAU,CAAlD,eAAA;AACAC,EAAAA,MAAM,CAANA,eAAM,CAANA;AAGA,SAAO,MAAMF,eAAe,CAAA,WAAA,EAA5B,QAA4B,CAA5B;AACD","sourcesContent":["import type {ImageLoaderOptions} from '../../image-loader';\nimport type {ImageDataType} from '../../types';\nimport {assert} from '@loaders.gl/loader-utils';\nimport {getBinaryImageMetadata} from '../category-api/binary-image-api';\n\n// Note: These types should be consistent with loaders.gl/polyfills\n\ntype NDArray = {\n  shape: number[];\n  data: Uint8Array;\n  width: number;\n  height: number;\n  components: number;\n  layers: number[];\n};\n\ntype ParseImageNode = (arrayBuffer: ArrayBuffer, mimeType: string) => Promise<NDArray>;\n\n// Use polyfills if installed to parsed image using get-pixels\nexport default async function parseToNodeImage(\n  arrayBuffer: ArrayBuffer,\n  options: ImageLoaderOptions\n): Promise<ImageDataType> {\n  const {mimeType} = getBinaryImageMetadata(arrayBuffer) || {};\n\n  // @ts-ignore\n  const _parseImageNode: ParseImageNode = globalThis._parseImageNode;\n  assert(_parseImageNode); // '@loaders.gl/polyfills not installed'\n\n  // @ts-expect-error TODO should we throw error in this case?\n  return await _parseImageNode(arrayBuffer, mimeType);\n}\n"]},"metadata":{},"sourceType":"module"}