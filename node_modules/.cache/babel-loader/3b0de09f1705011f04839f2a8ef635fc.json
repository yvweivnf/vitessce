{"ast":null,"code":"export var VALUE_TRANSFORM_OPTIONS=[{name:'None',value:null},{name:'Log',value:'log1p'},{name:'ArcSinh',value:'arcsinh'}];/**\n * Get a feature value transform function such as\n * log1p or arcsinh.\n * @param {string} featureValueTransform The function name.\n * @param {number} coefficient The transform coefficient.\n * @returns {function} The function which takes one number\n * as a parameter and returns the transformed number\n * (or the original number in the identity case).\n */export function getValueTransformFunction(featureValueTransform,coefficient){// Set transform function\nvar transformFunction;switch(featureValueTransform){case'log1p':transformFunction=function transformFunction(v){return Math.log(1+v*coefficient);};break;case'arcsinh':transformFunction=function transformFunction(v){return Math.asinh(v*coefficient);};break;default:transformFunction=function transformFunction(v){return v;};}return transformFunction;}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/gating/utils.js"],"names":["VALUE_TRANSFORM_OPTIONS","name","value","getValueTransformFunction","featureValueTransform","coefficient","transformFunction","v","Math","log","asinh"],"mappings":"AACA,MAAO,IAAMA,CAAAA,uBAAuB,CAAG,CACrC,CAAEC,IAAI,CAAE,MAAR,CAAgBC,KAAK,CAAE,IAAvB,CADqC,CAErC,CAAED,IAAI,CAAE,KAAR,CAAeC,KAAK,CAAE,OAAtB,CAFqC,CAGrC,CAAED,IAAI,CAAE,SAAR,CAAmBC,KAAK,CAAE,SAA1B,CAHqC,CAAhC,CAKP;;;;;;;;GASA,MAAO,SAASC,CAAAA,yBAAT,CAAmCC,qBAAnC,CAA0DC,WAA1D,CAAuE,CAC5E;AACA,GAAIC,CAAAA,iBAAJ,CACA,OAAQF,qBAAR,EACE,IAAK,OAAL,CACEE,iBAAiB,CAAG,2BAAAC,CAAC,QAAIC,CAAAA,IAAI,CAACC,GAAL,CAAS,EAAIF,CAAC,CAAGF,WAAjB,CAAJ,EAArB,CACA,MACF,IAAK,SAAL,CACEC,iBAAiB,CAAG,2BAAAC,CAAC,QAAIC,CAAAA,IAAI,CAACE,KAAL,CAAWH,CAAC,CAAGF,WAAf,CAAJ,EAArB,CACA,MACF,QACEC,iBAAiB,CAAG,2BAAAC,CAAC,QAAIA,CAAAA,CAAJ,EAArB,CARJ,CAUA,MAAOD,CAAAA,iBAAP,CACD","sourcesContent":["\nexport const VALUE_TRANSFORM_OPTIONS = [\n  { name: 'None', value: null },\n  { name: 'Log', value: 'log1p' },\n  { name: 'ArcSinh', value: 'arcsinh' },\n];\n/**\n * Get a feature value transform function such as\n * log1p or arcsinh.\n * @param {string} featureValueTransform The function name.\n * @param {number} coefficient The transform coefficient.\n * @returns {function} The function which takes one number\n * as a parameter and returns the transformed number\n * (or the original number in the identity case).\n */\nexport function getValueTransformFunction(featureValueTransform, coefficient) {\n  // Set transform function\n  let transformFunction;\n  switch (featureValueTransform) {\n    case 'log1p':\n      transformFunction = v => Math.log(1 + v * coefficient);\n      break;\n    case 'arcsinh':\n      transformFunction = v => Math.asinh(v * coefficient);\n      break;\n    default:\n      transformFunction = v => v;\n  }\n  return transformFunction;\n}\n"]},"metadata":{},"sourceType":"module"}