{"ast":null,"code":"module.exports = function pointInPolygonFlat(point, vs, start, end) {\n  var x = point[0],\n      y = point[1];\n  var inside = false;\n  if (start === undefined) start = 0;\n  if (end === undefined) end = vs.length;\n  var len = (end - start) / 2;\n\n  for (var i = 0, j = len - 1; i < len; j = i++) {\n    var xi = vs[start + i * 2 + 0],\n        yi = vs[start + i * 2 + 1];\n    var xj = vs[start + j * 2 + 0],\n        yj = vs[start + j * 2 + 1];\n    var intersect = yi > y !== yj > y && x < (xj - xi) * (y - yi) / (yj - yi) + xi;\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n};","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/point-in-polygon/flat.js"],"names":["module","exports","pointInPolygonFlat","point","vs","start","end","x","y","inside","undefined","length","len","i","j","xi","yi","xj","yj","intersect"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,SAASC,kBAAT,CAA6BC,KAA7B,EAAoCC,EAApC,EAAwCC,KAAxC,EAA+CC,GAA/C,EAAoD;AACjE,MAAIC,CAAC,GAAGJ,KAAK,CAAC,CAAD,CAAb;AAAA,MAAkBK,CAAC,GAAGL,KAAK,CAAC,CAAD,CAA3B;AACA,MAAIM,MAAM,GAAG,KAAb;AACA,MAAIJ,KAAK,KAAKK,SAAd,EAAyBL,KAAK,GAAG,CAAR;AACzB,MAAIC,GAAG,KAAKI,SAAZ,EAAuBJ,GAAG,GAAGF,EAAE,CAACO,MAAT;AACvB,MAAIC,GAAG,GAAG,CAACN,GAAG,GAACD,KAAL,IAAY,CAAtB;;AACA,OAAK,IAAIQ,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGF,GAAG,GAAG,CAA1B,EAA6BC,CAAC,GAAGD,GAAjC,EAAsCE,CAAC,GAAGD,CAAC,EAA3C,EAA+C;AAC3C,QAAIE,EAAE,GAAGX,EAAE,CAACC,KAAK,GAACQ,CAAC,GAAC,CAAR,GAAU,CAAX,CAAX;AAAA,QAA0BG,EAAE,GAAGZ,EAAE,CAACC,KAAK,GAACQ,CAAC,GAAC,CAAR,GAAU,CAAX,CAAjC;AACA,QAAII,EAAE,GAAGb,EAAE,CAACC,KAAK,GAACS,CAAC,GAAC,CAAR,GAAU,CAAX,CAAX;AAAA,QAA0BI,EAAE,GAAGd,EAAE,CAACC,KAAK,GAACS,CAAC,GAAC,CAAR,GAAU,CAAX,CAAjC;AACA,QAAIK,SAAS,GAAKH,EAAE,GAAGR,CAAN,KAAcU,EAAE,GAAGV,CAApB,IACRD,CAAC,GAAG,CAACU,EAAE,GAAGF,EAAN,KAAaP,CAAC,GAAGQ,EAAjB,KAAwBE,EAAE,GAAGF,EAA7B,IAAmCD,EAD/C;AAEA,QAAII,SAAJ,EAAeV,MAAM,GAAG,CAACA,MAAV;AAClB;;AACD,SAAOA,MAAP;AACH,CAdD","sourcesContent":["module.exports = function pointInPolygonFlat (point, vs, start, end) {\n    var x = point[0], y = point[1];\n    var inside = false;\n    if (start === undefined) start = 0;\n    if (end === undefined) end = vs.length;\n    var len = (end-start)/2;\n    for (var i = 0, j = len - 1; i < len; j = i++) {\n        var xi = vs[start+i*2+0], yi = vs[start+i*2+1];\n        var xj = vs[start+j*2+0], yj = vs[start+j*2+1];\n        var intersect = ((yi > y) !== (yj > y))\n            && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n        if (intersect) inside = !inside;\n    }\n    return inside;\n};\n"]},"metadata":{},"sourceType":"script"}