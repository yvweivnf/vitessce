{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DrawEllipseUsingThreePointsMode = void 0;\n\nvar _distance = _interopRequireDefault(require(\"@turf/distance\"));\n\nvar _ellipse = _interopRequireDefault(require(\"@turf/ellipse\"));\n\nvar _bearing = _interopRequireDefault(require(\"@turf/bearing\"));\n\nvar _helpers = require(\"@turf/helpers\");\n\nvar _geojsonEditMode = require(\"./geojson-edit-mode\");\n\nvar _threeClickPolygonMode = require(\"./three-click-polygon-mode\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar DrawEllipseUsingThreePointsMode = /*#__PURE__*/function (_ThreeClickPolygonMod) {\n  _inherits(DrawEllipseUsingThreePointsMode, _ThreeClickPolygonMod);\n\n  var _super = _createSuper(DrawEllipseUsingThreePointsMode);\n\n  function DrawEllipseUsingThreePointsMode() {\n    _classCallCheck(this, DrawEllipseUsingThreePointsMode);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DrawEllipseUsingThreePointsMode, [{\n    key: \"getThreeClickPolygon\",\n    value: function getThreeClickPolygon(coord1, coord2, coord3, modeConfig) {\n      var centerCoordinates = (0, _geojsonEditMode.getIntermediatePosition)(coord1, coord2);\n      var xSemiAxis = Math.max((0, _distance[\"default\"])(centerCoordinates, (0, _helpers.point)(coord3)), 0.001);\n      var ySemiAxis = Math.max((0, _distance[\"default\"])(coord1, coord2), 0.001) / 2;\n      var options = {\n        angle: (0, _bearing[\"default\"])(coord1, coord2)\n      }; // @ts-ignore\n\n      return (0, _ellipse[\"default\"])(centerCoordinates, xSemiAxis, ySemiAxis, options);\n    }\n  }]);\n\n  return DrawEllipseUsingThreePointsMode;\n}(_threeClickPolygonMode.ThreeClickPolygonMode);\n\nexports.DrawEllipseUsingThreePointsMode = DrawEllipseUsingThreePointsMode;","map":{"version":3,"sources":["../../src/lib/draw-ellipse-using-three-points-mode.ts"],"names":["DrawEllipseUsingThreePointsMode","ThreeClickPolygonMode","coord1","coord2","coord3","modeConfig","centerCoordinates","xSemiAxis","Math","ySemiAxis","options","angle"],"mappings":";;;;;;;AAAA,IAAA,SAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,gBAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,eAAA,CAAA,CAAA;;AACA,IAAA,QAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAEA,IAAA,gBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;AACA,IAAA,sBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,+B;;;;;;;;;;;;;yCAETE,M,EACAC,M,EACAC,M,EACAC,U,EACuC;AACvC,UAAMC,iBAAiB,GAAG,CAAA,GAAA,gBAAA,CAAA,uBAAA,EAAA,MAAA,EAA1B,MAA0B,CAA1B;AACA,UAAMC,SAAS,GAAGC,IAAI,CAAJA,GAAAA,CAAS,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,EAAA,iBAAA,EAA4B,CAAA,GAAA,QAAA,CAAA,KAAA,EAArCA,MAAqC,CAA5B,CAATA,EAAlB,KAAkBA,CAAlB;AACA,UAAMC,SAAS,GAAGD,IAAI,CAAJA,GAAAA,CAAS,CAAA,GAAA,SAAA,CAAA,SAAA,CAAA,EAAA,MAAA,EAATA,MAAS,CAATA,EAAAA,KAAAA,IAAlB,CAAA;AACA,UAAME,OAAO,GAAG;AAAEC,QAAAA,KAAK,EAAE,CAAA,GAAA,QAAA,CAAA,SAAA,CAAA,EAAA,MAAA,EAAA,MAAA;AAAT,OAAhB,CAJuC,CAKvC;;AACA,aAAO,CAAA,GAAA,QAAA,CAAA,SAAA,CAAA,EAAA,iBAAA,EAAA,SAAA,EAAA,SAAA,EAAP,OAAO,CAAP;AACD;;;;EAbkDV,sBAAAA,CAAAA,qB","sourcesContent":["import distance from '@turf/distance';\nimport ellipse from '@turf/ellipse';\nimport bearing from '@turf/bearing';\nimport { point } from '@turf/helpers';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { getIntermediatePosition } from './geojson-edit-mode';\nimport { ThreeClickPolygonMode } from './three-click-polygon-mode';\n\nexport class DrawEllipseUsingThreePointsMode extends ThreeClickPolygonMode {\n  getThreeClickPolygon(\n    coord1: Position,\n    coord2: Position,\n    coord3: Position,\n    modeConfig: any\n  ): FeatureOf<Polygon> | null | undefined {\n    const centerCoordinates = getIntermediatePosition(coord1, coord2);\n    const xSemiAxis = Math.max(distance(centerCoordinates, point(coord3)), 0.001);\n    const ySemiAxis = Math.max(distance(coord1, coord2), 0.001) / 2;\n    const options = { angle: bearing(coord1, coord2) };\n    // @ts-ignore\n    return ellipse(centerCoordinates, xSemiAxis, ySemiAxis, options);\n  }\n}\n"]},"metadata":{},"sourceType":"script"}