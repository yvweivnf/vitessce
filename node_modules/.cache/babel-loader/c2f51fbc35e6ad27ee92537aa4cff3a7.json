{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DrawRectangleUsingThreePointsMode = void 0;\n\nvar _utils = require(\"../utils\");\n\nvar _threeClickPolygonMode = require(\"./three-click-polygon-mode\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nvar DrawRectangleUsingThreePointsMode = /*#__PURE__*/function (_ThreeClickPolygonMod) {\n  _inherits(DrawRectangleUsingThreePointsMode, _ThreeClickPolygonMod);\n\n  var _super = _createSuper(DrawRectangleUsingThreePointsMode);\n\n  function DrawRectangleUsingThreePointsMode() {\n    _classCallCheck(this, DrawRectangleUsingThreePointsMode);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(DrawRectangleUsingThreePointsMode, [{\n    key: \"getThreeClickPolygon\",\n    value: function getThreeClickPolygon(coord1, coord2, coord3, modeConfig) {\n      var _generatePointsParall = (0, _utils.generatePointsParallelToLinePoints)(coord1, coord2, coord3),\n          _generatePointsParall2 = _slicedToArray(_generatePointsParall, 2),\n          p3 = _generatePointsParall2[0],\n          p4 = _generatePointsParall2[1];\n\n      return {\n        type: 'Feature',\n        properties: {\n          shape: 'Rectangle'\n        },\n        geometry: {\n          type: 'Polygon',\n          coordinates: [[// Draw a polygon containing all the points of the LineString,\n          // then the points orthogonal to the lineString,\n          // then back to the starting position\n          coord1, coord2, p3, p4, coord1]]\n        }\n      };\n    }\n  }]);\n\n  return DrawRectangleUsingThreePointsMode;\n}(_threeClickPolygonMode.ThreeClickPolygonMode);\n\nexports.DrawRectangleUsingThreePointsMode = DrawRectangleUsingThreePointsMode;","map":{"version":3,"sources":["../../src/lib/draw-rectangle-using-three-points-mode.ts"],"names":["DrawRectangleUsingThreePointsMode","ThreeClickPolygonMode","coord1","coord2","coord3","modeConfig","p3","p4","type","properties","shape","geometry","coordinates"],"mappings":";;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAEA,IAAA,sBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEaA,iC;;;;;;;;;;;;;yCAETE,M,EACAC,M,EACAC,M,EACAC,U,EACuC;AAAA,UAAA,qBAAA,GACtB,CAAA,GAAA,MAAA,CAAA,kCAAA,EAAA,MAAA,EAAA,MAAA,EADsB,MACtB,CADsB;AAAA,UAAA,sBAAA,GAAA,cAAA,CAAA,qBAAA,EAAA,CAAA,CAAA;AAAA,UAChCC,EADgC,GAAA,sBAAA,CAAA,CAAA,CAAA;AAAA,UAC5BC,EAD4B,GAAA,sBAAA,CAAA,CAAA,CAAA;;AAGvC,aAAO;AACLC,QAAAA,IAAI,EADC,SAAA;AAELC,QAAAA,UAAU,EAAE;AACVC,UAAAA,KAAK,EAAE;AADG,SAFP;AAKLC,QAAAA,QAAQ,EAAE;AACRH,UAAAA,IAAI,EADI,SAAA;AAERI,UAAAA,WAAW,EAAE,CACX,CACE;AACA;AACA;AAHF,UAAA,MAAA,EAAA,MAAA,EAAA,EAAA,EAAA,EAAA,EADW,MACX,CADW;AAFL;AALL,OAAP;AAqBD;;;;EA9BoDX,sBAAAA,CAAAA,qB","sourcesContent":["import { generatePointsParallelToLinePoints } from '../utils';\nimport { Position, Polygon, FeatureOf } from '../geojson-types';\nimport { ThreeClickPolygonMode } from './three-click-polygon-mode';\n\nexport class DrawRectangleUsingThreePointsMode extends ThreeClickPolygonMode {\n  getThreeClickPolygon(\n    coord1: Position,\n    coord2: Position,\n    coord3: Position,\n    modeConfig: any\n  ): FeatureOf<Polygon> | null | undefined {\n    const [p3, p4] = generatePointsParallelToLinePoints(coord1, coord2, coord3);\n\n    return {\n      type: 'Feature',\n      properties: {\n        shape: 'Rectangle',\n      },\n      geometry: {\n        type: 'Polygon',\n        coordinates: [\n          [\n            // Draw a polygon containing all the points of the LineString,\n            // then the points orthogonal to the lineString,\n            // then back to the starting position\n            coord1,\n            coord2,\n            p3,\n            p4,\n            coord1,\n          ],\n        ],\n      },\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"script"}