{"ast":null,"code":"import { array, error, hasOwnProperty, extend, peek, toSet, constant, zero, one, span } from 'vega-util';\nimport { timeDay, timeWeek, utcDay, utcWeek, timeYear, timeMonth, timeHour, timeMinute, timeSecond, timeMillisecond, utcYear, utcMonth, utcHour, utcMinute, utcSecond, utcMillisecond } from 'd3-time';\nimport { bisector, tickStep } from 'd3-array';\nconst YEAR = 'year';\nconst QUARTER = 'quarter';\nconst MONTH = 'month';\nconst WEEK = 'week';\nconst DATE = 'date';\nconst DAY = 'day';\nconst DAYOFYEAR = 'dayofyear';\nconst HOURS = 'hours';\nconst MINUTES = 'minutes';\nconst SECONDS = 'seconds';\nconst MILLISECONDS = 'milliseconds';\nconst TIME_UNITS = [YEAR, QUARTER, MONTH, WEEK, DATE, DAY, DAYOFYEAR, HOURS, MINUTES, SECONDS, MILLISECONDS];\nconst UNITS = TIME_UNITS.reduce((o, u, i) => (o[u] = 1 + i, o), {});\n\nfunction timeUnits(units) {\n  const u = array(units).slice(),\n        m = {}; // check validity\n\n  if (!u.length) error('Missing time unit.');\n  u.forEach(unit => {\n    if (hasOwnProperty(UNITS, unit)) {\n      m[unit] = 1;\n    } else {\n      error(\"Invalid time unit: \".concat(unit, \".\"));\n    }\n  });\n  const numTypes = (m[WEEK] || m[DAY] ? 1 : 0) + (m[QUARTER] || m[MONTH] || m[DATE] ? 1 : 0) + (m[DAYOFYEAR] ? 1 : 0);\n\n  if (numTypes > 1) {\n    error(\"Incompatible time units: \".concat(units));\n  } // ensure proper sort order\n\n\n  u.sort((a, b) => UNITS[a] - UNITS[b]);\n  return u;\n}\n\nconst defaultSpecifiers = {\n  [YEAR]: '%Y ',\n  [QUARTER]: 'Q%q ',\n  [MONTH]: '%b ',\n  [DATE]: '%d ',\n  [WEEK]: 'W%U ',\n  [DAY]: '%a ',\n  [DAYOFYEAR]: '%j ',\n  [HOURS]: '%H:00',\n  [MINUTES]: '00:%M',\n  [SECONDS]: ':%S',\n  [MILLISECONDS]: '.%L',\n  [\"\".concat(YEAR, \"-\").concat(MONTH)]: '%Y-%m ',\n  [\"\".concat(YEAR, \"-\").concat(MONTH, \"-\").concat(DATE)]: '%Y-%m-%d ',\n  [\"\".concat(HOURS, \"-\").concat(MINUTES)]: '%H:%M'\n};\n\nfunction timeUnitSpecifier(units, specifiers) {\n  const s = extend({}, defaultSpecifiers, specifiers),\n        u = timeUnits(units),\n        n = u.length;\n  let fmt = '',\n      start = 0,\n      end,\n      key;\n\n  for (start = 0; start < n;) {\n    for (end = u.length; end > start; --end) {\n      key = u.slice(start, end).join('-');\n\n      if (s[key] != null) {\n        fmt += s[key];\n        start = end;\n        break;\n      }\n    }\n  }\n\n  return fmt.trim();\n}\n\nconst t0 = new Date();\n\nfunction localYear(y) {\n  t0.setFullYear(y);\n  t0.setMonth(0);\n  t0.setDate(1);\n  t0.setHours(0, 0, 0, 0);\n  return t0;\n}\n\nfunction dayofyear(d) {\n  return localDayOfYear(new Date(d));\n}\n\nfunction week(d) {\n  return localWeekNum(new Date(d));\n}\n\nfunction localDayOfYear(d) {\n  return timeDay.count(localYear(d.getFullYear()) - 1, d);\n}\n\nfunction localWeekNum(d) {\n  return timeWeek.count(localYear(d.getFullYear()) - 1, d);\n}\n\nfunction localFirst(y) {\n  return localYear(y).getDay();\n}\n\nfunction localDate(y, m, d, H, M, S, L) {\n  if (0 <= y && y < 100) {\n    const date = new Date(-1, m, d, H, M, S, L);\n    date.setFullYear(y);\n    return date;\n  }\n\n  return new Date(y, m, d, H, M, S, L);\n}\n\nfunction utcdayofyear(d) {\n  return utcDayOfYear(new Date(d));\n}\n\nfunction utcweek(d) {\n  return utcWeekNum(new Date(d));\n}\n\nfunction utcDayOfYear(d) {\n  const y = Date.UTC(d.getUTCFullYear(), 0, 1);\n  return utcDay.count(y - 1, d);\n}\n\nfunction utcWeekNum(d) {\n  const y = Date.UTC(d.getUTCFullYear(), 0, 1);\n  return utcWeek.count(y - 1, d);\n}\n\nfunction utcFirst(y) {\n  t0.setTime(Date.UTC(y, 0, 1));\n  return t0.getUTCDay();\n}\n\nfunction utcDate(y, m, d, H, M, S, L) {\n  if (0 <= y && y < 100) {\n    const date = new Date(Date.UTC(-1, m, d, H, M, S, L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n\n  return new Date(Date.UTC(y, m, d, H, M, S, L));\n}\n\nfunction floor(units, step, get, inv, newDate) {\n  const s = step || 1,\n        b = peek(units),\n        _ = (unit, p, key) => {\n    key = key || unit;\n    return getUnit(get[key], inv[key], unit === b && s, p);\n  };\n\n  const t = new Date(),\n        u = toSet(units),\n        y = u[YEAR] ? _(YEAR) : constant(2012),\n        m = u[MONTH] ? _(MONTH) : u[QUARTER] ? _(QUARTER) : zero,\n        d = u[WEEK] && u[DAY] ? _(DAY, 1, WEEK + DAY) : u[WEEK] ? _(WEEK, 1) : u[DAY] ? _(DAY, 1) : u[DATE] ? _(DATE, 1) : u[DAYOFYEAR] ? _(DAYOFYEAR, 1) : one,\n        H = u[HOURS] ? _(HOURS) : zero,\n        M = u[MINUTES] ? _(MINUTES) : zero,\n        S = u[SECONDS] ? _(SECONDS) : zero,\n        L = u[MILLISECONDS] ? _(MILLISECONDS) : zero;\n  return function (v) {\n    t.setTime(+v);\n    const year = y(t);\n    return newDate(year, m(t), d(t, year), H(t), M(t), S(t), L(t));\n  };\n}\n\nfunction getUnit(f, inv, step, phase) {\n  const u = step <= 1 ? f : phase ? (d, y) => phase + step * Math.floor((f(d, y) - phase) / step) : (d, y) => step * Math.floor(f(d, y) / step);\n  return inv ? (d, y) => inv(u(d, y), y) : u;\n} // returns the day of the year based on week number, day of week,\n// and the day of the week for the first day of the year\n\n\nfunction weekday(week, day, firstDay) {\n  return day + week * 7 - (firstDay + 6) % 7;\n} // -- LOCAL TIME --\n\n\nconst localGet = {\n  [YEAR]: d => d.getFullYear(),\n  [QUARTER]: d => Math.floor(d.getMonth() / 3),\n  [MONTH]: d => d.getMonth(),\n  [DATE]: d => d.getDate(),\n  [HOURS]: d => d.getHours(),\n  [MINUTES]: d => d.getMinutes(),\n  [SECONDS]: d => d.getSeconds(),\n  [MILLISECONDS]: d => d.getMilliseconds(),\n  [DAYOFYEAR]: d => localDayOfYear(d),\n  [WEEK]: d => localWeekNum(d),\n  [WEEK + DAY]: (d, y) => weekday(localWeekNum(d), d.getDay(), localFirst(y)),\n  [DAY]: (d, y) => weekday(1, d.getDay(), localFirst(y))\n};\nconst localInv = {\n  [QUARTER]: q => 3 * q,\n  [WEEK]: (w, y) => weekday(w, 0, localFirst(y))\n};\n\nfunction timeFloor(units, step) {\n  return floor(units, step || 1, localGet, localInv, localDate);\n} // -- UTC TIME --\n\n\nconst utcGet = {\n  [YEAR]: d => d.getUTCFullYear(),\n  [QUARTER]: d => Math.floor(d.getUTCMonth() / 3),\n  [MONTH]: d => d.getUTCMonth(),\n  [DATE]: d => d.getUTCDate(),\n  [HOURS]: d => d.getUTCHours(),\n  [MINUTES]: d => d.getUTCMinutes(),\n  [SECONDS]: d => d.getUTCSeconds(),\n  [MILLISECONDS]: d => d.getUTCMilliseconds(),\n  [DAYOFYEAR]: d => utcDayOfYear(d),\n  [WEEK]: d => utcWeekNum(d),\n  [DAY]: (d, y) => weekday(1, d.getUTCDay(), utcFirst(y)),\n  [WEEK + DAY]: (d, y) => weekday(utcWeekNum(d), d.getUTCDay(), utcFirst(y))\n};\nconst utcInv = {\n  [QUARTER]: q => 3 * q,\n  [WEEK]: (w, y) => weekday(w, 0, utcFirst(y))\n};\n\nfunction utcFloor(units, step) {\n  return floor(units, step || 1, utcGet, utcInv, utcDate);\n}\n\nconst timeIntervals = {\n  [YEAR]: timeYear,\n  [QUARTER]: timeMonth.every(3),\n  [MONTH]: timeMonth,\n  [WEEK]: timeWeek,\n  [DATE]: timeDay,\n  [DAY]: timeDay,\n  [DAYOFYEAR]: timeDay,\n  [HOURS]: timeHour,\n  [MINUTES]: timeMinute,\n  [SECONDS]: timeSecond,\n  [MILLISECONDS]: timeMillisecond\n};\nconst utcIntervals = {\n  [YEAR]: utcYear,\n  [QUARTER]: utcMonth.every(3),\n  [MONTH]: utcMonth,\n  [WEEK]: utcWeek,\n  [DATE]: utcDay,\n  [DAY]: utcDay,\n  [DAYOFYEAR]: utcDay,\n  [HOURS]: utcHour,\n  [MINUTES]: utcMinute,\n  [SECONDS]: utcSecond,\n  [MILLISECONDS]: utcMillisecond\n};\n\nfunction timeInterval(unit) {\n  return timeIntervals[unit];\n}\n\nfunction utcInterval(unit) {\n  return utcIntervals[unit];\n}\n\nfunction offset(ival, date, step) {\n  return ival ? ival.offset(date, step) : undefined;\n}\n\nfunction timeOffset(unit, date, step) {\n  return offset(timeInterval(unit), date, step);\n}\n\nfunction utcOffset(unit, date, step) {\n  return offset(utcInterval(unit), date, step);\n}\n\nfunction sequence(ival, start, stop, step) {\n  return ival ? ival.range(start, stop, step) : undefined;\n}\n\nfunction timeSequence(unit, start, stop, step) {\n  return sequence(timeInterval(unit), start, stop, step);\n}\n\nfunction utcSequence(unit, start, stop, step) {\n  return sequence(utcInterval(unit), start, stop, step);\n}\n\nconst durationSecond = 1000,\n      durationMinute = durationSecond * 60,\n      durationHour = durationMinute * 60,\n      durationDay = durationHour * 24,\n      durationWeek = durationDay * 7,\n      durationMonth = durationDay * 30,\n      durationYear = durationDay * 365;\nconst Milli = [YEAR, MONTH, DATE, HOURS, MINUTES, SECONDS, MILLISECONDS],\n      Seconds = Milli.slice(0, -1),\n      Minutes = Seconds.slice(0, -1),\n      Hours = Minutes.slice(0, -1),\n      Day = Hours.slice(0, -1),\n      Week = [YEAR, WEEK],\n      Month = [YEAR, MONTH],\n      Year = [YEAR];\nconst intervals = [[Seconds, 1, durationSecond], [Seconds, 5, 5 * durationSecond], [Seconds, 15, 15 * durationSecond], [Seconds, 30, 30 * durationSecond], [Minutes, 1, durationMinute], [Minutes, 5, 5 * durationMinute], [Minutes, 15, 15 * durationMinute], [Minutes, 30, 30 * durationMinute], [Hours, 1, durationHour], [Hours, 3, 3 * durationHour], [Hours, 6, 6 * durationHour], [Hours, 12, 12 * durationHour], [Day, 1, durationDay], [Week, 1, durationWeek], [Month, 1, durationMonth], [Month, 3, 3 * durationMonth], [Year, 1, durationYear]];\n\nfunction bin(opt) {\n  const ext = opt.extent,\n        max = opt.maxbins || 40,\n        target = Math.abs(span(ext)) / max;\n  let i = bisector(i => i[2]).right(intervals, target),\n      units,\n      step;\n\n  if (i === intervals.length) {\n    units = Year, step = tickStep(ext[0] / durationYear, ext[1] / durationYear, max);\n  } else if (i) {\n    i = intervals[target / intervals[i - 1][2] < intervals[i][2] / target ? i - 1 : i];\n    units = i[0];\n    step = i[1];\n  } else {\n    units = Milli;\n    step = Math.max(tickStep(ext[0], ext[1], max), 1);\n  }\n\n  return {\n    units,\n    step\n  };\n}\n\nexport { DATE, DAY, DAYOFYEAR, HOURS, MILLISECONDS, MINUTES, MONTH, QUARTER, SECONDS, TIME_UNITS, WEEK, YEAR, dayofyear, bin as timeBin, timeFloor, timeInterval, timeOffset, timeSequence, timeUnitSpecifier, timeUnits, utcFloor, utcInterval, utcOffset, utcSequence, utcdayofyear, utcweek, week };","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/vega-time/build/vega-time.module.js"],"names":["array","error","hasOwnProperty","extend","peek","toSet","constant","zero","one","span","timeDay","timeWeek","utcDay","utcWeek","timeYear","timeMonth","timeHour","timeMinute","timeSecond","timeMillisecond","utcYear","utcMonth","utcHour","utcMinute","utcSecond","utcMillisecond","bisector","tickStep","YEAR","QUARTER","MONTH","WEEK","DATE","DAY","DAYOFYEAR","HOURS","MINUTES","SECONDS","MILLISECONDS","TIME_UNITS","UNITS","reduce","o","u","i","timeUnits","units","slice","m","length","forEach","unit","concat","numTypes","sort","a","b","defaultSpecifiers","timeUnitSpecifier","specifiers","s","n","fmt","start","end","key","join","trim","t0","Date","localYear","y","setFullYear","setMonth","setDate","setHours","dayofyear","d","localDayOfYear","week","localWeekNum","count","getFullYear","localFirst","getDay","localDate","H","M","S","L","date","utcdayofyear","utcDayOfYear","utcweek","utcWeekNum","UTC","getUTCFullYear","utcFirst","setTime","getUTCDay","utcDate","setUTCFullYear","floor","step","get","inv","newDate","_","p","getUnit","t","v","year","f","phase","Math","weekday","day","firstDay","localGet","getMonth","getDate","getHours","getMinutes","getSeconds","getMilliseconds","localInv","q","w","timeFloor","utcGet","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","utcInv","utcFloor","timeIntervals","every","utcIntervals","timeInterval","utcInterval","offset","ival","undefined","timeOffset","utcOffset","sequence","stop","range","timeSequence","utcSequence","durationSecond","durationMinute","durationHour","durationDay","durationWeek","durationMonth","durationYear","Milli","Seconds","Minutes","Hours","Day","Week","Month","Year","intervals","bin","opt","ext","extent","max","maxbins","target","abs","right","timeBin"],"mappings":"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","sourcesContent":["import { array, error, hasOwnProperty, extend, peek, toSet, constant, zero, one, span } from 'vega-util';\nimport { timeDay, timeWeek, utcDay, utcWeek, timeYear, timeMonth, timeHour, timeMinute, timeSecond, timeMillisecond, utcYear, utcMonth, utcHour, utcMinute, utcSecond, utcMillisecond } from 'd3-time';\nimport { bisector, tickStep } from 'd3-array';\n\nconst YEAR = 'year';\nconst QUARTER = 'quarter';\nconst MONTH = 'month';\nconst WEEK = 'week';\nconst DATE = 'date';\nconst DAY = 'day';\nconst DAYOFYEAR = 'dayofyear';\nconst HOURS = 'hours';\nconst MINUTES = 'minutes';\nconst SECONDS = 'seconds';\nconst MILLISECONDS = 'milliseconds';\nconst TIME_UNITS = [YEAR, QUARTER, MONTH, WEEK, DATE, DAY, DAYOFYEAR, HOURS, MINUTES, SECONDS, MILLISECONDS];\nconst UNITS = TIME_UNITS.reduce((o, u, i) => (o[u] = 1 + i, o), {});\nfunction timeUnits(units) {\n  const u = array(units).slice(),\n        m = {}; // check validity\n\n  if (!u.length) error('Missing time unit.');\n  u.forEach(unit => {\n    if (hasOwnProperty(UNITS, unit)) {\n      m[unit] = 1;\n    } else {\n      error(\"Invalid time unit: \".concat(unit, \".\"));\n    }\n  });\n  const numTypes = (m[WEEK] || m[DAY] ? 1 : 0) + (m[QUARTER] || m[MONTH] || m[DATE] ? 1 : 0) + (m[DAYOFYEAR] ? 1 : 0);\n\n  if (numTypes > 1) {\n    error(\"Incompatible time units: \".concat(units));\n  } // ensure proper sort order\n\n\n  u.sort((a, b) => UNITS[a] - UNITS[b]);\n  return u;\n}\nconst defaultSpecifiers = {\n  [YEAR]: '%Y ',\n  [QUARTER]: 'Q%q ',\n  [MONTH]: '%b ',\n  [DATE]: '%d ',\n  [WEEK]: 'W%U ',\n  [DAY]: '%a ',\n  [DAYOFYEAR]: '%j ',\n  [HOURS]: '%H:00',\n  [MINUTES]: '00:%M',\n  [SECONDS]: ':%S',\n  [MILLISECONDS]: '.%L',\n  [\"\".concat(YEAR, \"-\").concat(MONTH)]: '%Y-%m ',\n  [\"\".concat(YEAR, \"-\").concat(MONTH, \"-\").concat(DATE)]: '%Y-%m-%d ',\n  [\"\".concat(HOURS, \"-\").concat(MINUTES)]: '%H:%M'\n};\nfunction timeUnitSpecifier(units, specifiers) {\n  const s = extend({}, defaultSpecifiers, specifiers),\n        u = timeUnits(units),\n        n = u.length;\n  let fmt = '',\n      start = 0,\n      end,\n      key;\n\n  for (start = 0; start < n;) {\n    for (end = u.length; end > start; --end) {\n      key = u.slice(start, end).join('-');\n\n      if (s[key] != null) {\n        fmt += s[key];\n        start = end;\n        break;\n      }\n    }\n  }\n\n  return fmt.trim();\n}\n\nconst t0 = new Date();\n\nfunction localYear(y) {\n  t0.setFullYear(y);\n  t0.setMonth(0);\n  t0.setDate(1);\n  t0.setHours(0, 0, 0, 0);\n  return t0;\n}\n\nfunction dayofyear(d) {\n  return localDayOfYear(new Date(d));\n}\nfunction week(d) {\n  return localWeekNum(new Date(d));\n}\nfunction localDayOfYear(d) {\n  return timeDay.count(localYear(d.getFullYear()) - 1, d);\n}\nfunction localWeekNum(d) {\n  return timeWeek.count(localYear(d.getFullYear()) - 1, d);\n}\nfunction localFirst(y) {\n  return localYear(y).getDay();\n}\nfunction localDate(y, m, d, H, M, S, L) {\n  if (0 <= y && y < 100) {\n    const date = new Date(-1, m, d, H, M, S, L);\n    date.setFullYear(y);\n    return date;\n  }\n\n  return new Date(y, m, d, H, M, S, L);\n}\nfunction utcdayofyear(d) {\n  return utcDayOfYear(new Date(d));\n}\nfunction utcweek(d) {\n  return utcWeekNum(new Date(d));\n}\nfunction utcDayOfYear(d) {\n  const y = Date.UTC(d.getUTCFullYear(), 0, 1);\n  return utcDay.count(y - 1, d);\n}\nfunction utcWeekNum(d) {\n  const y = Date.UTC(d.getUTCFullYear(), 0, 1);\n  return utcWeek.count(y - 1, d);\n}\nfunction utcFirst(y) {\n  t0.setTime(Date.UTC(y, 0, 1));\n  return t0.getUTCDay();\n}\nfunction utcDate(y, m, d, H, M, S, L) {\n  if (0 <= y && y < 100) {\n    const date = new Date(Date.UTC(-1, m, d, H, M, S, L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n\n  return new Date(Date.UTC(y, m, d, H, M, S, L));\n}\n\nfunction floor(units, step, get, inv, newDate) {\n  const s = step || 1,\n        b = peek(units),\n        _ = (unit, p, key) => {\n    key = key || unit;\n    return getUnit(get[key], inv[key], unit === b && s, p);\n  };\n\n  const t = new Date(),\n        u = toSet(units),\n        y = u[YEAR] ? _(YEAR) : constant(2012),\n        m = u[MONTH] ? _(MONTH) : u[QUARTER] ? _(QUARTER) : zero,\n        d = u[WEEK] && u[DAY] ? _(DAY, 1, WEEK + DAY) : u[WEEK] ? _(WEEK, 1) : u[DAY] ? _(DAY, 1) : u[DATE] ? _(DATE, 1) : u[DAYOFYEAR] ? _(DAYOFYEAR, 1) : one,\n        H = u[HOURS] ? _(HOURS) : zero,\n        M = u[MINUTES] ? _(MINUTES) : zero,\n        S = u[SECONDS] ? _(SECONDS) : zero,\n        L = u[MILLISECONDS] ? _(MILLISECONDS) : zero;\n  return function (v) {\n    t.setTime(+v);\n    const year = y(t);\n    return newDate(year, m(t), d(t, year), H(t), M(t), S(t), L(t));\n  };\n}\n\nfunction getUnit(f, inv, step, phase) {\n  const u = step <= 1 ? f : phase ? (d, y) => phase + step * Math.floor((f(d, y) - phase) / step) : (d, y) => step * Math.floor(f(d, y) / step);\n  return inv ? (d, y) => inv(u(d, y), y) : u;\n} // returns the day of the year based on week number, day of week,\n// and the day of the week for the first day of the year\n\n\nfunction weekday(week, day, firstDay) {\n  return day + week * 7 - (firstDay + 6) % 7;\n} // -- LOCAL TIME --\n\n\nconst localGet = {\n  [YEAR]: d => d.getFullYear(),\n  [QUARTER]: d => Math.floor(d.getMonth() / 3),\n  [MONTH]: d => d.getMonth(),\n  [DATE]: d => d.getDate(),\n  [HOURS]: d => d.getHours(),\n  [MINUTES]: d => d.getMinutes(),\n  [SECONDS]: d => d.getSeconds(),\n  [MILLISECONDS]: d => d.getMilliseconds(),\n  [DAYOFYEAR]: d => localDayOfYear(d),\n  [WEEK]: d => localWeekNum(d),\n  [WEEK + DAY]: (d, y) => weekday(localWeekNum(d), d.getDay(), localFirst(y)),\n  [DAY]: (d, y) => weekday(1, d.getDay(), localFirst(y))\n};\nconst localInv = {\n  [QUARTER]: q => 3 * q,\n  [WEEK]: (w, y) => weekday(w, 0, localFirst(y))\n};\nfunction timeFloor(units, step) {\n  return floor(units, step || 1, localGet, localInv, localDate);\n} // -- UTC TIME --\n\nconst utcGet = {\n  [YEAR]: d => d.getUTCFullYear(),\n  [QUARTER]: d => Math.floor(d.getUTCMonth() / 3),\n  [MONTH]: d => d.getUTCMonth(),\n  [DATE]: d => d.getUTCDate(),\n  [HOURS]: d => d.getUTCHours(),\n  [MINUTES]: d => d.getUTCMinutes(),\n  [SECONDS]: d => d.getUTCSeconds(),\n  [MILLISECONDS]: d => d.getUTCMilliseconds(),\n  [DAYOFYEAR]: d => utcDayOfYear(d),\n  [WEEK]: d => utcWeekNum(d),\n  [DAY]: (d, y) => weekday(1, d.getUTCDay(), utcFirst(y)),\n  [WEEK + DAY]: (d, y) => weekday(utcWeekNum(d), d.getUTCDay(), utcFirst(y))\n};\nconst utcInv = {\n  [QUARTER]: q => 3 * q,\n  [WEEK]: (w, y) => weekday(w, 0, utcFirst(y))\n};\nfunction utcFloor(units, step) {\n  return floor(units, step || 1, utcGet, utcInv, utcDate);\n}\n\nconst timeIntervals = {\n  [YEAR]: timeYear,\n  [QUARTER]: timeMonth.every(3),\n  [MONTH]: timeMonth,\n  [WEEK]: timeWeek,\n  [DATE]: timeDay,\n  [DAY]: timeDay,\n  [DAYOFYEAR]: timeDay,\n  [HOURS]: timeHour,\n  [MINUTES]: timeMinute,\n  [SECONDS]: timeSecond,\n  [MILLISECONDS]: timeMillisecond\n};\nconst utcIntervals = {\n  [YEAR]: utcYear,\n  [QUARTER]: utcMonth.every(3),\n  [MONTH]: utcMonth,\n  [WEEK]: utcWeek,\n  [DATE]: utcDay,\n  [DAY]: utcDay,\n  [DAYOFYEAR]: utcDay,\n  [HOURS]: utcHour,\n  [MINUTES]: utcMinute,\n  [SECONDS]: utcSecond,\n  [MILLISECONDS]: utcMillisecond\n};\nfunction timeInterval(unit) {\n  return timeIntervals[unit];\n}\nfunction utcInterval(unit) {\n  return utcIntervals[unit];\n}\n\nfunction offset(ival, date, step) {\n  return ival ? ival.offset(date, step) : undefined;\n}\n\nfunction timeOffset(unit, date, step) {\n  return offset(timeInterval(unit), date, step);\n}\nfunction utcOffset(unit, date, step) {\n  return offset(utcInterval(unit), date, step);\n}\n\nfunction sequence(ival, start, stop, step) {\n  return ival ? ival.range(start, stop, step) : undefined;\n}\n\nfunction timeSequence(unit, start, stop, step) {\n  return sequence(timeInterval(unit), start, stop, step);\n}\nfunction utcSequence(unit, start, stop, step) {\n  return sequence(utcInterval(unit), start, stop, step);\n}\n\nconst durationSecond = 1000,\n      durationMinute = durationSecond * 60,\n      durationHour = durationMinute * 60,\n      durationDay = durationHour * 24,\n      durationWeek = durationDay * 7,\n      durationMonth = durationDay * 30,\n      durationYear = durationDay * 365;\nconst Milli = [YEAR, MONTH, DATE, HOURS, MINUTES, SECONDS, MILLISECONDS],\n      Seconds = Milli.slice(0, -1),\n      Minutes = Seconds.slice(0, -1),\n      Hours = Minutes.slice(0, -1),\n      Day = Hours.slice(0, -1),\n      Week = [YEAR, WEEK],\n      Month = [YEAR, MONTH],\n      Year = [YEAR];\nconst intervals = [[Seconds, 1, durationSecond], [Seconds, 5, 5 * durationSecond], [Seconds, 15, 15 * durationSecond], [Seconds, 30, 30 * durationSecond], [Minutes, 1, durationMinute], [Minutes, 5, 5 * durationMinute], [Minutes, 15, 15 * durationMinute], [Minutes, 30, 30 * durationMinute], [Hours, 1, durationHour], [Hours, 3, 3 * durationHour], [Hours, 6, 6 * durationHour], [Hours, 12, 12 * durationHour], [Day, 1, durationDay], [Week, 1, durationWeek], [Month, 1, durationMonth], [Month, 3, 3 * durationMonth], [Year, 1, durationYear]];\nfunction bin (opt) {\n  const ext = opt.extent,\n        max = opt.maxbins || 40,\n        target = Math.abs(span(ext)) / max;\n  let i = bisector(i => i[2]).right(intervals, target),\n      units,\n      step;\n\n  if (i === intervals.length) {\n    units = Year, step = tickStep(ext[0] / durationYear, ext[1] / durationYear, max);\n  } else if (i) {\n    i = intervals[target / intervals[i - 1][2] < intervals[i][2] / target ? i - 1 : i];\n    units = i[0];\n    step = i[1];\n  } else {\n    units = Milli;\n    step = Math.max(tickStep(ext[0], ext[1], max), 1);\n  }\n\n  return {\n    units,\n    step\n  };\n}\n\nexport { DATE, DAY, DAYOFYEAR, HOURS, MILLISECONDS, MINUTES, MONTH, QUARTER, SECONDS, TIME_UNITS, WEEK, YEAR, dayofyear, bin as timeBin, timeFloor, timeInterval, timeOffset, timeSequence, timeUnitSpecifier, timeUnits, utcFloor, utcInterval, utcOffset, utcSequence, utcdayofyear, utcweek, week };\n"]},"metadata":{},"sourceType":"module"}