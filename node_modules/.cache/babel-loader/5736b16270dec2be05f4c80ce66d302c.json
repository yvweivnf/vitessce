{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar Delatin = /*#__PURE__*/function () {\n  function Delatin(data, width) {\n    var height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : width;\n\n    _classCallCheck(this, Delatin);\n\n    this.data = data;\n    this.width = width;\n    this.height = height;\n    this.coords = [];\n    this.triangles = [];\n    this._halfedges = [];\n    this._candidates = [];\n    this._queueIndices = [];\n    this._queue = [];\n    this._errors = [];\n    this._rms = [];\n    this._pending = [];\n    this._pendingLen = 0;\n    this._rmsSum = 0;\n    var x1 = width - 1;\n    var y1 = height - 1;\n\n    var p0 = this._addPoint(0, 0);\n\n    var p1 = this._addPoint(x1, 0);\n\n    var p2 = this._addPoint(0, y1);\n\n    var p3 = this._addPoint(x1, y1);\n\n    var t0 = this._addTriangle(p3, p0, p2, -1, -1, -1);\n\n    this._addTriangle(p0, p3, p1, t0, -1, -1);\n\n    this._flush();\n  }\n\n  _createClass(Delatin, [{\n    key: \"run\",\n    value: function run() {\n      var maxError = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n\n      while (this.getMaxError() > maxError) {\n        this.refine();\n      }\n    }\n  }, {\n    key: \"refine\",\n    value: function refine() {\n      this._step();\n\n      this._flush();\n    }\n  }, {\n    key: \"getMaxError\",\n    value: function getMaxError() {\n      return this._errors[0];\n    }\n  }, {\n    key: \"getRMSD\",\n    value: function getRMSD() {\n      return this._rmsSum > 0 ? Math.sqrt(this._rmsSum / (this.width * this.height)) : 0;\n    }\n  }, {\n    key: \"heightAt\",\n    value: function heightAt(x, y) {\n      return this.data[this.width * y + x];\n    }\n  }, {\n    key: \"_flush\",\n    value: function _flush() {\n      var coords = this.coords;\n\n      for (var i = 0; i < this._pendingLen; i++) {\n        var t = this._pending[i];\n        var a = 2 * this.triangles[t * 3 + 0];\n        var b = 2 * this.triangles[t * 3 + 1];\n        var c = 2 * this.triangles[t * 3 + 2];\n\n        this._findCandidate(coords[a], coords[a + 1], coords[b], coords[b + 1], coords[c], coords[c + 1], t);\n      }\n\n      this._pendingLen = 0;\n    }\n  }, {\n    key: \"_findCandidate\",\n    value: function _findCandidate(p0x, p0y, p1x, p1y, p2x, p2y, t) {\n      var minX = Math.min(p0x, p1x, p2x);\n      var minY = Math.min(p0y, p1y, p2y);\n      var maxX = Math.max(p0x, p1x, p2x);\n      var maxY = Math.max(p0y, p1y, p2y);\n      var w00 = orient(p1x, p1y, p2x, p2y, minX, minY);\n      var w01 = orient(p2x, p2y, p0x, p0y, minX, minY);\n      var w02 = orient(p0x, p0y, p1x, p1y, minX, minY);\n      var a01 = p1y - p0y;\n      var b01 = p0x - p1x;\n      var a12 = p2y - p1y;\n      var b12 = p1x - p2x;\n      var a20 = p0y - p2y;\n      var b20 = p2x - p0x;\n      var a = orient(p0x, p0y, p1x, p1y, p2x, p2y);\n      var z0 = this.heightAt(p0x, p0y) / a;\n      var z1 = this.heightAt(p1x, p1y) / a;\n      var z2 = this.heightAt(p2x, p2y) / a;\n      var maxError = 0;\n      var mx = 0;\n      var my = 0;\n      var rms = 0;\n\n      for (var y = minY; y <= maxY; y++) {\n        var dx = 0;\n\n        if (w00 < 0 && a12 !== 0) {\n          dx = Math.max(dx, Math.floor(-w00 / a12));\n        }\n\n        if (w01 < 0 && a20 !== 0) {\n          dx = Math.max(dx, Math.floor(-w01 / a20));\n        }\n\n        if (w02 < 0 && a01 !== 0) {\n          dx = Math.max(dx, Math.floor(-w02 / a01));\n        }\n\n        var w0 = w00 + a12 * dx;\n        var w1 = w01 + a20 * dx;\n        var w2 = w02 + a01 * dx;\n        var wasInside = false;\n\n        for (var x = minX + dx; x <= maxX; x++) {\n          if (w0 >= 0 && w1 >= 0 && w2 >= 0) {\n            wasInside = true;\n            var z = z0 * w0 + z1 * w1 + z2 * w2;\n            var dz = Math.abs(z - this.heightAt(x, y));\n            rms += dz * dz;\n\n            if (dz > maxError) {\n              maxError = dz;\n              mx = x;\n              my = y;\n            }\n          } else if (wasInside) {\n            break;\n          }\n\n          w0 += a12;\n          w1 += a20;\n          w2 += a01;\n        }\n\n        w00 += b12;\n        w01 += b20;\n        w02 += b01;\n      }\n\n      if (mx === p0x && my === p0y || mx === p1x && my === p1y || mx === p2x && my === p2y) {\n        maxError = 0;\n      }\n\n      this._candidates[2 * t] = mx;\n      this._candidates[2 * t + 1] = my;\n      this._rms[t] = rms;\n\n      this._queuePush(t, maxError, rms);\n    }\n  }, {\n    key: \"_step\",\n    value: function _step() {\n      var t = this._queuePop();\n\n      var e0 = t * 3 + 0;\n      var e1 = t * 3 + 1;\n      var e2 = t * 3 + 2;\n      var p0 = this.triangles[e0];\n      var p1 = this.triangles[e1];\n      var p2 = this.triangles[e2];\n      var ax = this.coords[2 * p0];\n      var ay = this.coords[2 * p0 + 1];\n      var bx = this.coords[2 * p1];\n      var by = this.coords[2 * p1 + 1];\n      var cx = this.coords[2 * p2];\n      var cy = this.coords[2 * p2 + 1];\n      var px = this._candidates[2 * t];\n      var py = this._candidates[2 * t + 1];\n\n      var pn = this._addPoint(px, py);\n\n      if (orient(ax, ay, bx, by, px, py) === 0) {\n        this._handleCollinear(pn, e0);\n      } else if (orient(bx, by, cx, cy, px, py) === 0) {\n        this._handleCollinear(pn, e1);\n      } else if (orient(cx, cy, ax, ay, px, py) === 0) {\n        this._handleCollinear(pn, e2);\n      } else {\n        var h0 = this._halfedges[e0];\n        var h1 = this._halfedges[e1];\n        var h2 = this._halfedges[e2];\n\n        var t0 = this._addTriangle(p0, p1, pn, h0, -1, -1, e0);\n\n        var t1 = this._addTriangle(p1, p2, pn, h1, -1, t0 + 1);\n\n        var t2 = this._addTriangle(p2, p0, pn, h2, t0 + 2, t1 + 1);\n\n        this._legalize(t0);\n\n        this._legalize(t1);\n\n        this._legalize(t2);\n      }\n    }\n  }, {\n    key: \"_addPoint\",\n    value: function _addPoint(x, y) {\n      var i = this.coords.length >> 1;\n      this.coords.push(x, y);\n      return i;\n    }\n  }, {\n    key: \"_addTriangle\",\n    value: function _addTriangle(a, b, c, ab, bc, ca) {\n      var e = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : this.triangles.length;\n      var t = e / 3;\n      this.triangles[e + 0] = a;\n      this.triangles[e + 1] = b;\n      this.triangles[e + 2] = c;\n      this._halfedges[e + 0] = ab;\n      this._halfedges[e + 1] = bc;\n      this._halfedges[e + 2] = ca;\n\n      if (ab >= 0) {\n        this._halfedges[ab] = e + 0;\n      }\n\n      if (bc >= 0) {\n        this._halfedges[bc] = e + 1;\n      }\n\n      if (ca >= 0) {\n        this._halfedges[ca] = e + 2;\n      }\n\n      this._candidates[2 * t + 0] = 0;\n      this._candidates[2 * t + 1] = 0;\n      this._queueIndices[t] = -1;\n      this._rms[t] = 0;\n      this._pending[this._pendingLen++] = t;\n      return e;\n    }\n  }, {\n    key: \"_legalize\",\n    value: function _legalize(a) {\n      var b = this._halfedges[a];\n\n      if (b < 0) {\n        return;\n      }\n\n      var a0 = a - a % 3;\n      var b0 = b - b % 3;\n      var al = a0 + (a + 1) % 3;\n      var ar = a0 + (a + 2) % 3;\n      var bl = b0 + (b + 2) % 3;\n      var br = b0 + (b + 1) % 3;\n      var p0 = this.triangles[ar];\n      var pr = this.triangles[a];\n      var pl = this.triangles[al];\n      var p1 = this.triangles[bl];\n      var coords = this.coords;\n\n      if (!inCircle(coords[2 * p0], coords[2 * p0 + 1], coords[2 * pr], coords[2 * pr + 1], coords[2 * pl], coords[2 * pl + 1], coords[2 * p1], coords[2 * p1 + 1])) {\n        return;\n      }\n\n      var hal = this._halfedges[al];\n      var har = this._halfedges[ar];\n      var hbl = this._halfedges[bl];\n      var hbr = this._halfedges[br];\n\n      this._queueRemove(a0 / 3);\n\n      this._queueRemove(b0 / 3);\n\n      var t0 = this._addTriangle(p0, p1, pl, -1, hbl, hal, a0);\n\n      var t1 = this._addTriangle(p1, p0, pr, t0, har, hbr, b0);\n\n      this._legalize(t0 + 1);\n\n      this._legalize(t1 + 2);\n    }\n  }, {\n    key: \"_handleCollinear\",\n    value: function _handleCollinear(pn, a) {\n      var a0 = a - a % 3;\n      var al = a0 + (a + 1) % 3;\n      var ar = a0 + (a + 2) % 3;\n      var p0 = this.triangles[ar];\n      var pr = this.triangles[a];\n      var pl = this.triangles[al];\n      var hal = this._halfedges[al];\n      var har = this._halfedges[ar];\n      var b = this._halfedges[a];\n\n      if (b < 0) {\n        var _t = this._addTriangle(pn, p0, pr, -1, har, -1, a0);\n\n        var _t2 = this._addTriangle(p0, pn, pl, _t, -1, hal);\n\n        this._legalize(_t + 1);\n\n        this._legalize(_t2 + 2);\n\n        return;\n      }\n\n      var b0 = b - b % 3;\n      var bl = b0 + (b + 2) % 3;\n      var br = b0 + (b + 1) % 3;\n      var p1 = this.triangles[bl];\n      var hbl = this._halfedges[bl];\n      var hbr = this._halfedges[br];\n\n      this._queueRemove(b0 / 3);\n\n      var t0 = this._addTriangle(p0, pr, pn, har, -1, -1, a0);\n\n      var t1 = this._addTriangle(pr, p1, pn, hbr, -1, t0 + 1, b0);\n\n      var t2 = this._addTriangle(p1, pl, pn, hbl, -1, t1 + 1);\n\n      var t3 = this._addTriangle(pl, p0, pn, hal, t0 + 2, t2 + 1);\n\n      this._legalize(t0);\n\n      this._legalize(t1);\n\n      this._legalize(t2);\n\n      this._legalize(t3);\n    }\n  }, {\n    key: \"_queuePush\",\n    value: function _queuePush(t, error, rms) {\n      var i = this._queue.length;\n      this._queueIndices[t] = i;\n\n      this._queue.push(t);\n\n      this._errors.push(error);\n\n      this._rmsSum += rms;\n\n      this._queueUp(i);\n    }\n  }, {\n    key: \"_queuePop\",\n    value: function _queuePop() {\n      var n = this._queue.length - 1;\n\n      this._queueSwap(0, n);\n\n      this._queueDown(0, n);\n\n      return this._queuePopBack();\n    }\n  }, {\n    key: \"_queuePopBack\",\n    value: function _queuePopBack() {\n      var t = this._queue.pop();\n\n      this._errors.pop();\n\n      this._rmsSum -= this._rms[t];\n      this._queueIndices[t] = -1;\n      return t;\n    }\n  }, {\n    key: \"_queueRemove\",\n    value: function _queueRemove(t) {\n      var i = this._queueIndices[t];\n\n      if (i < 0) {\n        var it = this._pending.indexOf(t);\n\n        if (it !== -1) {\n          this._pending[it] = this._pending[--this._pendingLen];\n        } else {\n          throw new Error('Broken triangulation (something went wrong).');\n        }\n\n        return;\n      }\n\n      var n = this._queue.length - 1;\n\n      if (n !== i) {\n        this._queueSwap(i, n);\n\n        if (!this._queueDown(i, n)) {\n          this._queueUp(i);\n        }\n      }\n\n      this._queuePopBack();\n    }\n  }, {\n    key: \"_queueLess\",\n    value: function _queueLess(i, j) {\n      return this._errors[i] > this._errors[j];\n    }\n  }, {\n    key: \"_queueSwap\",\n    value: function _queueSwap(i, j) {\n      var pi = this._queue[i];\n      var pj = this._queue[j];\n      this._queue[i] = pj;\n      this._queue[j] = pi;\n      this._queueIndices[pi] = j;\n      this._queueIndices[pj] = i;\n      var e = this._errors[i];\n      this._errors[i] = this._errors[j];\n      this._errors[j] = e;\n    }\n  }, {\n    key: \"_queueUp\",\n    value: function _queueUp(j0) {\n      var j = j0;\n\n      while (true) {\n        var i = j - 1 >> 1;\n\n        if (i === j || !this._queueLess(j, i)) {\n          break;\n        }\n\n        this._queueSwap(i, j);\n\n        j = i;\n      }\n    }\n  }, {\n    key: \"_queueDown\",\n    value: function _queueDown(i0, n) {\n      var i = i0;\n\n      while (true) {\n        var j1 = 2 * i + 1;\n\n        if (j1 >= n || j1 < 0) {\n          break;\n        }\n\n        var j2 = j1 + 1;\n        var j = j1;\n\n        if (j2 < n && this._queueLess(j2, j1)) {\n          j = j2;\n        }\n\n        if (!this._queueLess(j, i)) {\n          break;\n        }\n\n        this._queueSwap(i, j);\n\n        i = j;\n      }\n\n      return i > i0;\n    }\n  }]);\n\n  return Delatin;\n}();\n\nexport { Delatin as default };\n\nfunction orient(ax, ay, bx, by, cx, cy) {\n  return (bx - cx) * (ay - cy) - (by - cy) * (ax - cx);\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  var dx = ax - px;\n  var dy = ay - py;\n  var ex = bx - px;\n  var ey = by - py;\n  var fx = cx - px;\n  var fy = cy - py;\n  var ap = dx * dx + dy * dy;\n  var bp = ex * ex + ey * ey;\n  var cp = fx * fx + fy * fy;\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}","map":{"version":3,"sources":["../../../../src/lib/delatin/index.ts"],"names":["constructor","height","x1","width","y1","p0","p1","p2","p3","t0","maxError","Math","coords","i","t","a","b","c","minX","minY","maxX","maxY","w00","orient","w01","w02","a01","p1y","b01","p0x","a12","p2y","b12","p1x","a20","p0y","b20","p2x","z0","z1","z2","mx","my","rms","y","dx","w0","w1","w2","wasInside","x","z","dz","e0","e1","e2","ax","ay","bx","by","cx","cy","px","py","pn","h0","h1","h2","t1","t2","e","ab","bc","ca","a0","b0","al","ar","bl","br","pr","pl","inCircle","hal","har","hbl","hbr","t3","n","it","pi","pj","j","j1","j2","dy","ex","ey","fx","fy","ap","bp","cp"],"mappings":"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","sourcesContent":["// ISC License\n\n// Copyright(c) 2019, Michael Fogleman, Vladimir Agafonkin\n\n// Permission to use, copy, modify, and / or distribute this software for any purpose\n// with or without fee is hereby granted, provided that the above copyright notice\n// and this permission notice appear in all copies.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n// REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND\n// FITNESS.IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n//   INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS\n// OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER\n// TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF\n// THIS SOFTWARE.\n\n// @ts-nocheck\n\n/* eslint-disable complexity, max-params, max-statements, max-depth, no-constant-condition */\nexport default class Delatin {\n  constructor(data, width, height = width) {\n    this.data = data; // height data\n    this.width = width;\n    this.height = height;\n\n    this.coords = []; // vertex coordinates (x, y)\n    this.triangles = []; // mesh triangle indices\n\n    // additional triangle data\n    this._halfedges = [];\n    this._candidates = [];\n    this._queueIndices = [];\n\n    this._queue = []; // queue of added triangles\n    this._errors = [];\n    this._rms = [];\n    this._pending = []; // triangles pending addition to queue\n    this._pendingLen = 0;\n\n    this._rmsSum = 0;\n\n    const x1 = width - 1;\n    const y1 = height - 1;\n    const p0 = this._addPoint(0, 0);\n    const p1 = this._addPoint(x1, 0);\n    const p2 = this._addPoint(0, y1);\n    const p3 = this._addPoint(x1, y1);\n\n    // add initial two triangles\n    const t0 = this._addTriangle(p3, p0, p2, -1, -1, -1);\n    this._addTriangle(p0, p3, p1, t0, -1, -1);\n    this._flush();\n  }\n\n  // refine the mesh until its maximum error gets below the given one\n  run(maxError = 1) {\n    while (this.getMaxError() > maxError) {\n      this.refine();\n    }\n  }\n\n  // refine the mesh with a single point\n  refine() {\n    this._step();\n    this._flush();\n  }\n\n  // max error of the current mesh\n  getMaxError() {\n    return this._errors[0];\n  }\n\n  // root-mean-square deviation of the current mesh\n  getRMSD() {\n    return this._rmsSum > 0 ? Math.sqrt(this._rmsSum / (this.width * this.height)) : 0;\n  }\n\n  // height value at a given position\n  heightAt(x, y) {\n    return this.data[this.width * y + x];\n  }\n\n  // rasterize and queue all triangles that got added or updated in _step\n  _flush() {\n    const coords = this.coords;\n    for (let i = 0; i < this._pendingLen; i++) {\n      const t = this._pending[i];\n      // rasterize triangle to find maximum pixel error\n      const a = 2 * this.triangles[t * 3 + 0];\n      const b = 2 * this.triangles[t * 3 + 1];\n      const c = 2 * this.triangles[t * 3 + 2];\n      this._findCandidate(\n        coords[a],\n        coords[a + 1],\n        coords[b],\n        coords[b + 1],\n        coords[c],\n        coords[c + 1],\n        t\n      );\n    }\n    this._pendingLen = 0;\n  }\n\n  // rasterize a triangle, find its max error, and queue it for processing\n  _findCandidate(p0x, p0y, p1x, p1y, p2x, p2y, t) {\n    // triangle bounding box\n    const minX = Math.min(p0x, p1x, p2x);\n    const minY = Math.min(p0y, p1y, p2y);\n    const maxX = Math.max(p0x, p1x, p2x);\n    const maxY = Math.max(p0y, p1y, p2y);\n\n    // forward differencing variables\n    let w00 = orient(p1x, p1y, p2x, p2y, minX, minY);\n    let w01 = orient(p2x, p2y, p0x, p0y, minX, minY);\n    let w02 = orient(p0x, p0y, p1x, p1y, minX, minY);\n    const a01 = p1y - p0y;\n    const b01 = p0x - p1x;\n    const a12 = p2y - p1y;\n    const b12 = p1x - p2x;\n    const a20 = p0y - p2y;\n    const b20 = p2x - p0x;\n\n    // pre-multiplied z values at vertices\n    const a = orient(p0x, p0y, p1x, p1y, p2x, p2y);\n    const z0 = this.heightAt(p0x, p0y) / a;\n    const z1 = this.heightAt(p1x, p1y) / a;\n    const z2 = this.heightAt(p2x, p2y) / a;\n\n    // iterate over pixels in bounding box\n    let maxError = 0;\n    let mx = 0;\n    let my = 0;\n    let rms = 0;\n    for (let y = minY; y <= maxY; y++) {\n      // compute starting offset\n      let dx = 0;\n      if (w00 < 0 && a12 !== 0) {\n        dx = Math.max(dx, Math.floor(-w00 / a12));\n      }\n      if (w01 < 0 && a20 !== 0) {\n        dx = Math.max(dx, Math.floor(-w01 / a20));\n      }\n      if (w02 < 0 && a01 !== 0) {\n        dx = Math.max(dx, Math.floor(-w02 / a01));\n      }\n\n      let w0 = w00 + a12 * dx;\n      let w1 = w01 + a20 * dx;\n      let w2 = w02 + a01 * dx;\n\n      let wasInside = false;\n\n      for (let x = minX + dx; x <= maxX; x++) {\n        // check if inside triangle\n        if (w0 >= 0 && w1 >= 0 && w2 >= 0) {\n          wasInside = true;\n\n          // compute z using barycentric coordinates\n          const z = z0 * w0 + z1 * w1 + z2 * w2;\n          const dz = Math.abs(z - this.heightAt(x, y));\n          rms += dz * dz;\n          if (dz > maxError) {\n            maxError = dz;\n            mx = x;\n            my = y;\n          }\n        } else if (wasInside) {\n          break;\n        }\n\n        w0 += a12;\n        w1 += a20;\n        w2 += a01;\n      }\n\n      w00 += b12;\n      w01 += b20;\n      w02 += b01;\n    }\n\n    if ((mx === p0x && my === p0y) || (mx === p1x && my === p1y) || (mx === p2x && my === p2y)) {\n      maxError = 0;\n    }\n\n    // update triangle metadata\n    this._candidates[2 * t] = mx;\n    this._candidates[2 * t + 1] = my;\n    this._rms[t] = rms;\n\n    // add triangle to priority queue\n    this._queuePush(t, maxError, rms);\n  }\n\n  // process the next triangle in the queue, splitting it with a new point\n  _step() {\n    // pop triangle with highest error from priority queue\n    const t = this._queuePop();\n\n    const e0 = t * 3 + 0;\n    const e1 = t * 3 + 1;\n    const e2 = t * 3 + 2;\n\n    const p0 = this.triangles[e0];\n    const p1 = this.triangles[e1];\n    const p2 = this.triangles[e2];\n\n    const ax = this.coords[2 * p0];\n    const ay = this.coords[2 * p0 + 1];\n    const bx = this.coords[2 * p1];\n    const by = this.coords[2 * p1 + 1];\n    const cx = this.coords[2 * p2];\n    const cy = this.coords[2 * p2 + 1];\n    const px = this._candidates[2 * t];\n    const py = this._candidates[2 * t + 1];\n\n    const pn = this._addPoint(px, py);\n\n    if (orient(ax, ay, bx, by, px, py) === 0) {\n      this._handleCollinear(pn, e0);\n    } else if (orient(bx, by, cx, cy, px, py) === 0) {\n      this._handleCollinear(pn, e1);\n    } else if (orient(cx, cy, ax, ay, px, py) === 0) {\n      this._handleCollinear(pn, e2);\n    } else {\n      const h0 = this._halfedges[e0];\n      const h1 = this._halfedges[e1];\n      const h2 = this._halfedges[e2];\n\n      const t0 = this._addTriangle(p0, p1, pn, h0, -1, -1, e0);\n      const t1 = this._addTriangle(p1, p2, pn, h1, -1, t0 + 1);\n      const t2 = this._addTriangle(p2, p0, pn, h2, t0 + 2, t1 + 1);\n\n      this._legalize(t0);\n      this._legalize(t1);\n      this._legalize(t2);\n    }\n  }\n\n  // add coordinates for a new vertex\n  _addPoint(x, y) {\n    const i = this.coords.length >> 1;\n    this.coords.push(x, y);\n    return i;\n  }\n\n  // add or update a triangle in the mesh\n  _addTriangle(a, b, c, ab, bc, ca, e = this.triangles.length) {\n    const t = e / 3; // new triangle index\n\n    // add triangle vertices\n    this.triangles[e + 0] = a;\n    this.triangles[e + 1] = b;\n    this.triangles[e + 2] = c;\n\n    // add triangle halfedges\n    this._halfedges[e + 0] = ab;\n    this._halfedges[e + 1] = bc;\n    this._halfedges[e + 2] = ca;\n\n    // link neighboring halfedges\n    if (ab >= 0) {\n      this._halfedges[ab] = e + 0;\n    }\n    if (bc >= 0) {\n      this._halfedges[bc] = e + 1;\n    }\n    if (ca >= 0) {\n      this._halfedges[ca] = e + 2;\n    }\n\n    // init triangle metadata\n    this._candidates[2 * t + 0] = 0;\n    this._candidates[2 * t + 1] = 0;\n    this._queueIndices[t] = -1;\n    this._rms[t] = 0;\n\n    // add triangle to pending queue for later rasterization\n    this._pending[this._pendingLen++] = t;\n\n    // return first halfedge index\n    return e;\n  }\n\n  _legalize(a) {\n    // if the pair of triangles doesn't satisfy the Delaunay condition\n    // (p1 is inside the circumcircle of [p0, pl, pr]), flip them,\n    // then do the same check/flip recursively for the new pair of triangles\n    //\n    //           pl                    pl\n    //          /||\\                  /  \\\n    //       al/ || \\bl            al/    \\a\n    //        /  ||  \\              /      \\\n    //       /  a||b  \\    flip    /___ar___\\\n    //     p0\\   ||   /p1   =>   p0\\---bl---/p1\n    //        \\  ||  /              \\      /\n    //       ar\\ || /br             b\\    /br\n    //          \\||/                  \\  /\n    //           pr                    pr\n\n    const b = this._halfedges[a];\n\n    if (b < 0) {\n      return;\n    }\n\n    const a0 = a - (a % 3);\n    const b0 = b - (b % 3);\n    const al = a0 + ((a + 1) % 3);\n    const ar = a0 + ((a + 2) % 3);\n    const bl = b0 + ((b + 2) % 3);\n    const br = b0 + ((b + 1) % 3);\n    const p0 = this.triangles[ar];\n    const pr = this.triangles[a];\n    const pl = this.triangles[al];\n    const p1 = this.triangles[bl];\n    const coords = this.coords;\n\n    if (\n      !inCircle(\n        coords[2 * p0],\n        coords[2 * p0 + 1],\n        coords[2 * pr],\n        coords[2 * pr + 1],\n        coords[2 * pl],\n        coords[2 * pl + 1],\n        coords[2 * p1],\n        coords[2 * p1 + 1]\n      )\n    ) {\n      return;\n    }\n\n    const hal = this._halfedges[al];\n    const har = this._halfedges[ar];\n    const hbl = this._halfedges[bl];\n    const hbr = this._halfedges[br];\n\n    this._queueRemove(a0 / 3);\n    this._queueRemove(b0 / 3);\n\n    const t0 = this._addTriangle(p0, p1, pl, -1, hbl, hal, a0);\n    const t1 = this._addTriangle(p1, p0, pr, t0, har, hbr, b0);\n\n    this._legalize(t0 + 1);\n    this._legalize(t1 + 2);\n  }\n\n  // handle a case where new vertex is on the edge of a triangle\n  _handleCollinear(pn, a) {\n    const a0 = a - (a % 3);\n    const al = a0 + ((a + 1) % 3);\n    const ar = a0 + ((a + 2) % 3);\n    const p0 = this.triangles[ar];\n    const pr = this.triangles[a];\n    const pl = this.triangles[al];\n    const hal = this._halfedges[al];\n    const har = this._halfedges[ar];\n\n    const b = this._halfedges[a];\n\n    if (b < 0) {\n      const t0 = this._addTriangle(pn, p0, pr, -1, har, -1, a0);\n      const t1 = this._addTriangle(p0, pn, pl, t0, -1, hal);\n      this._legalize(t0 + 1);\n      this._legalize(t1 + 2);\n      return;\n    }\n\n    const b0 = b - (b % 3);\n    const bl = b0 + ((b + 2) % 3);\n    const br = b0 + ((b + 1) % 3);\n    const p1 = this.triangles[bl];\n    const hbl = this._halfedges[bl];\n    const hbr = this._halfedges[br];\n\n    this._queueRemove(b0 / 3);\n\n    const t0 = this._addTriangle(p0, pr, pn, har, -1, -1, a0);\n    const t1 = this._addTriangle(pr, p1, pn, hbr, -1, t0 + 1, b0);\n    const t2 = this._addTriangle(p1, pl, pn, hbl, -1, t1 + 1);\n    const t3 = this._addTriangle(pl, p0, pn, hal, t0 + 2, t2 + 1);\n\n    this._legalize(t0);\n    this._legalize(t1);\n    this._legalize(t2);\n    this._legalize(t3);\n  }\n\n  // priority queue methods\n\n  _queuePush(t, error, rms) {\n    const i = this._queue.length;\n    this._queueIndices[t] = i;\n    this._queue.push(t);\n    this._errors.push(error);\n    this._rmsSum += rms;\n    this._queueUp(i);\n  }\n\n  _queuePop() {\n    const n = this._queue.length - 1;\n    this._queueSwap(0, n);\n    this._queueDown(0, n);\n    return this._queuePopBack();\n  }\n\n  _queuePopBack() {\n    const t = this._queue.pop();\n    this._errors.pop();\n    this._rmsSum -= this._rms[t];\n    this._queueIndices[t] = -1;\n    return t;\n  }\n\n  _queueRemove(t) {\n    const i = this._queueIndices[t];\n    if (i < 0) {\n      const it = this._pending.indexOf(t);\n      if (it !== -1) {\n        this._pending[it] = this._pending[--this._pendingLen];\n      } else {\n        throw new Error('Broken triangulation (something went wrong).');\n      }\n      return;\n    }\n    const n = this._queue.length - 1;\n    if (n !== i) {\n      this._queueSwap(i, n);\n      if (!this._queueDown(i, n)) {\n        this._queueUp(i);\n      }\n    }\n    this._queuePopBack();\n  }\n\n  _queueLess(i, j) {\n    return this._errors[i] > this._errors[j];\n  }\n\n  _queueSwap(i, j) {\n    const pi = this._queue[i];\n    const pj = this._queue[j];\n    this._queue[i] = pj;\n    this._queue[j] = pi;\n    this._queueIndices[pi] = j;\n    this._queueIndices[pj] = i;\n    const e = this._errors[i];\n    this._errors[i] = this._errors[j];\n    this._errors[j] = e;\n  }\n\n  _queueUp(j0) {\n    let j = j0;\n    while (true) {\n      const i = (j - 1) >> 1;\n      if (i === j || !this._queueLess(j, i)) {\n        break;\n      }\n      this._queueSwap(i, j);\n      j = i;\n    }\n  }\n\n  _queueDown(i0, n) {\n    let i = i0;\n    while (true) {\n      const j1 = 2 * i + 1;\n      if (j1 >= n || j1 < 0) {\n        break;\n      }\n      const j2 = j1 + 1;\n      let j = j1;\n      if (j2 < n && this._queueLess(j2, j1)) {\n        j = j2;\n      }\n      if (!this._queueLess(j, i)) {\n        break;\n      }\n      this._queueSwap(i, j);\n      i = j;\n    }\n    return i > i0;\n  }\n}\n\nfunction orient(ax, ay, bx, by, cx, cy) {\n  return (bx - cx) * (ay - cy) - (by - cy) * (ax - cx);\n}\n\nfunction inCircle(ax, ay, bx, by, cx, cy, px, py) {\n  const dx = ax - px;\n  const dy = ay - py;\n  const ex = bx - px;\n  const ey = by - py;\n  const fx = cx - px;\n  const fy = cy - py;\n\n  const ap = dx * dx + dy * dy;\n  const bp = ex * ex + ey * ey;\n  const cp = fx * fx + fy * fy;\n\n  return dx * (ey * cp - bp * fy) - dy * (ex * cp - bp * fx) + ap * (ex * fy - ey * fx) < 0;\n}\n"]},"metadata":{},"sourceType":"module"}