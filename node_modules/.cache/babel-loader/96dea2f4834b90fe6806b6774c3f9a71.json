{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _toConsumableArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _asyncToGenerator from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _objectWithoutProperties from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import React,{useState,useRef,useEffect}from'react';import{MAX_CHANNELS,getChannelStats}from'@hms-dbmi/viv';import Grid from'@material-ui/core/Grid';import Button from'@material-ui/core/Button';import AddIcon from'@material-ui/icons/Add';import Slider from'@material-ui/core/Slider';import Tabs from'@material-ui/core/Tabs';import Tab from'@material-ui/core/Tab';import Accordion from'@material-ui/core/Accordion';import ExpandMoreIcon from'@material-ui/icons/ExpandMore';import VisibilityIcon from'@material-ui/icons/Visibility';import VisibilityOffIcon from'@material-ui/icons/VisibilityOff';import LayerOptions from'./LayerOptions';import VolumeOptions from'./VolumeOptions';import{useControllerSectionStyles,StyledAccordionDetails,StyledAccordionSummary,StyledInputLabel,OverflowEllipsisGrid}from'./styles';import{getMultiSelectionStats}from'./utils';import{GLOBAL_LABELS}from'../spatial/constants';import{getSourceFromLoader,isRgb}from'../../utils';import{canLoadResolution}from'../utils';import{DOMAINS}from'./constants';function TabPanel(props){var children=props.children,value=props.value,index=props.index,other=_objectWithoutProperties(props,[\"children\",\"value\",\"index\"]);return/*#__PURE__*/React.createElement(\"div\",Object.assign({role:\"tabpanel\",hidden:value!==index,id:\"simple-tabpanel-\".concat(index),\"aria-labelledby\":\"simple-tab-\".concat(index)},other),value===index&&children);}// Set the domain of the sliders based on either a full range or min/max.\nfunction getDomainsAndSliders(_x,_x2,_x3,_x4){return _getDomainsAndSliders.apply(this,arguments);}function _getDomainsAndSliders(){_getDomainsAndSliders=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(loader,selections,domainType,use3d){var domains,stats,sliders,source;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return getMultiSelectionStats({loader:loader.data,selections:selections,use3d:use3d});case 2:stats=_context6.sent;sliders=stats.sliders;if(domainType==='Min/Max'){// eslint-disable-next-line prefer-destructuring\ndomains=stats.domains;}if(domainType==='Full'){source=getSourceFromLoader(loader);domains=selections.map(function(){return DOMAINS[source.dtype];});}return _context6.abrupt(\"return\",{domains:domains,sliders:sliders});case 7:case\"end\":return _context6.stop();}}},_callee6);}));return _getDomainsAndSliders.apply(this,arguments);}var buttonStyles={borderStyle:'dashed',marginTop:'10px',fontWeight:400};/**\n * Controller for the various imaging options (color, opactiy, sliders etc.)\n * @prop {object} imageData Image config object, one of the `images` in the raster schema.\n * @prop {object} layerId Randomly generated id for the image layer that this controller handles.\n * @prop {function} handleLayerRemove Callback for handling the removal of a layer.\n * @prop {object} loader Loader object for the current imaging layer.\n * @prop {function} handleLayerChange Callback for handling the changing of layer properties.\n */export default function LayerController(props){var _channels$;var layer=props.layer,name=props.name,loader=props.loader,theme=props.theme,handleLayerRemove=props.handleLayerRemove,handleLayerChange=props.handleLayerChange,shouldShowTransparentColor=props.shouldShowTransparentColor,shouldShowDomain=props.shouldShowDomain,shouldShowColormap=props.shouldShowColormap,ChannelController=props.ChannelController,setViewState=props.setViewState,disable3d=props.disable3d,setRasterLayerCallback=props.setRasterLayerCallback,setAreLayerChannelsLoading=props.setAreLayerChannelsLoading,areLayerChannelsLoading=props.areLayerChannelsLoading,disabled=props.disabled,spatialHeight=props.spatialHeight,spatialWidth=props.spatialWidth,disableChannelsIfRgbDetected=props.disableChannelsIfRgbDetected,shouldShowRemoveLayerButton=props.shouldShowRemoveLayerButton;var colormap=layer.colormap,opacity=layer.opacity,channels=layer.channels,transparentColor=layer.transparentColor,renderingMode=layer.renderingMode,xSlice=layer.xSlice,ySlice=layer.ySlice,zSlice=layer.zSlice,resolution=layer.resolution,use3d=layer.use3d,modelMatrix=layer.modelMatrix;// Channels are used in a lot of callbacks and change handlers\n// so ensuring they have an up to date copy of the data ensures consistency.\n// See: https://github.com/vitessce/vitessce/issues/1036\nvar channelRef=useRef(channels);useEffect(function(){channelRef.current=channels;return undefined;},[channels]);var firstSelection=((_channels$=channels[0])===null||_channels$===void 0?void 0:_channels$.selection)||{};var data=loader.data,channelOptions=loader.channels;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),tab=_useState2[0],setTab=_useState2[1];var handleTabChange=function handleTabChange(event,newTab){setTab(newTab);};var _ref=Array.isArray(data)?data[data.length-1]:data,labels=_ref.labels,shape=_ref.shape;var _useState3=useState(layer.domainType),_useState4=_slicedToArray(_useState3,2),domainType=_useState4[0],setDomainType=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),isExpanded=_useState6[0],setIsExpanded=_useState6[1];var _useState7=useState(GLOBAL_LABELS.filter(function(field){return typeof firstSelection[field]==='number';}).reduce(function(o,key){return _objectSpread({},o,_defineProperty({},key,firstSelection[key]));},{})),_useState8=_slicedToArray(_useState7,2),globalLabelValues=_useState8[0],setGlobalLabelValues=_useState8[1];function setVisible(v){handleLayerChange(_objectSpread({},layer,{visible:v}));}function setColormap(v){handleLayerChange(_objectSpread({},layer,{colormap:v}));}function setOpacity(v){handleLayerChange(_objectSpread({},layer,{opacity:v}));}function setChannels(v){handleLayerChange(_objectSpread({},layer,{channels:v}));}function setTransparentColor(v){handleLayerChange(_objectSpread({},layer,{transparentColor:v}));}function setRenderingMode(v){handleLayerChange(_objectSpread({},layer,{renderingMode:v}));}function handleMultiPropertyChange(obj){handleLayerChange(_objectSpread({},layer,{},obj));}function handleSlicerSetting(slice,val){handleLayerChange(_objectSpread({},layer,_defineProperty({},\"\".concat(slice,\"Slice\"),val)));}function setChannelsAndDomainType(newChannels,newDomainType){handleLayerChange(_objectSpread({},layer,{channels:newChannels,domainType:newDomainType}));}function setChannel(v,i){var newChannels=_toConsumableArray(channelRef.current);newChannels[i]=v;handleLayerChange(_objectSpread({},layer,{channels:newChannels}));}function addChannel(v){var newChannels=[].concat(_toConsumableArray(channelRef.current),[v]);handleLayerChange(_objectSpread({},layer,{channels:newChannels}));}function removeChannel(i){var newChannels=_toConsumableArray(channelRef.current);newChannels.splice(i,1);handleLayerChange(_objectSpread({},layer,{channels:newChannels}));}var setAreAllChannelsLoading=function setAreAllChannelsLoading(val){var newAreLayerChannelsLoading=channelRef.current.map(function(){return val;});setAreLayerChannelsLoading(newAreLayerChannelsLoading);};// Handles adding a channel, creating a default selection\n// for the current global settings and domain type.\nvar handleChannelAdd=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var selection,_yield$getDomainsAndS,domains,sliders,domain,slider,color,visible,newChannelId,newAreLayerChannelsLoading,channel;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:selection={};labels.forEach(function(label){// Set new image to default selection for non-global selections (0)\n// and use current global selection otherwise.\nselection[label]=GLOBAL_LABELS.includes(label)?globalLabelValues[label]||0:0;});_context.next=4;return getDomainsAndSliders(loader,[selection],domainType,use3d);case 4:_yield$getDomainsAndS=_context.sent;domains=_yield$getDomainsAndS.domains;sliders=_yield$getDomainsAndS.sliders;domain=domains[0];slider=domain;color=[255,255,255];visible=true;newChannelId=channels.length;newAreLayerChannelsLoading=_toConsumableArray(areLayerChannelsLoading);newAreLayerChannelsLoading[newChannelId]=true;setAreLayerChannelsLoading(newAreLayerChannelsLoading);channel={selection:selection,slider:slider,visible:visible,color:color};setRasterLayerCallback(function(){setChannel(_objectSpread({},channel,{slider:sliders[0]}),newChannelId);var areLayerChannelsLoadingCallback=_toConsumableArray(newAreLayerChannelsLoading);areLayerChannelsLoadingCallback[newChannelId]=false;setAreLayerChannelsLoading(areLayerChannelsLoadingCallback);setRasterLayerCallback(null);});addChannel(channel);case 18:case\"end\":return _context.stop();}}},_callee);}));return function handleChannelAdd(){return _ref2.apply(this,arguments);};}();var handleDomainChange=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(value){var selections,sliders,_yield$getDomainsAndS2,domains,newChannels;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setDomainType(value);selections=channels.map(function(channel){return channel.selection;});sliders=channels.map(function(channel){return channel.slider;});_context2.next=5;return getDomainsAndSliders(loader,selections,value,use3d);case 5:_yield$getDomainsAndS2=_context2.sent;domains=_yield$getDomainsAndS2.domains;// If it's the right-most slider, we take the minimum of that and the new value.\n// Otherwise, we use the maximum of the left-hand side and the new value.\nsliders=sliders.map(function(slider,i){var _slider=_slicedToArray(slider,2),left=_slider[0],right=_slider[1];return[Math.max(left,domains[i][0]),Math.min(right,domains[i][1])];});newChannels=channels.map(function(c,i){return _objectSpread({},c,{slider:sliders[i]});});setChannelsAndDomainType(newChannels,value);case 10:case\"end\":return _context2.stop();}}},_callee2);}));return function handleDomainChange(_x5){return _ref3.apply(this,arguments);};}();// This call updates all channel selections with new global selection from the UI.\nvar handleGlobalChannelsSelectionChange=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(_ref4){var selection,event,selections,canUpdateChannels;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:selection=_ref4.selection,event=_ref4.event;selections=channels.map(function(channel){return _objectSpread({},channel.selection,{},selection);});canUpdateChannels=event.type==='mouseup'||event.type==='keydown';// Only update domains on a mouseup event for the same reason as above.\nif(canUpdateChannels){setAreAllChannelsLoading(true);getDomainsAndSliders(loader,selections,domainType,use3d).then(function(_ref6){var sliders=_ref6.sliders;var newChannelsWithSelection=channels.map(function(c){return _objectSpread({},c,{selection:_objectSpread({},c.selection,{},selection)});});// Set the callback before changing the selection\n// so the callback is used when the layer (re)loads its data.\nsetRasterLayerCallback(function(){setRasterLayerCallback(null);setAreAllChannelsLoading(false);var newChannelsWithSliders=_toConsumableArray(newChannelsWithSelection).map(function(c,i){return _objectSpread({},c,{slider:sliders[i]});});setChannels(newChannelsWithSliders);});setChannels(newChannelsWithSelection);});}setGlobalLabelValues(function(prev){return _objectSpread({},prev,{},selection);});case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function handleGlobalChannelsSelectionChange(_x6){return _ref5.apply(this,arguments);};}();var channelControllers=[];if(labels.length>0){var channelLabel=labels.find(function(c){return c==='channel'||c==='c';})||labels[0];// Create the channel controllers for each channel.\nchannelControllers=channels.map(// c is an object like { color, selection, slider, visible }.\nfunction(c,channelId){// Update the auxiliary store with the current loading state of a channel.\nvar setIsLoading=function setIsLoading(val){var newAreLayerChannelsLoading=_toConsumableArray(areLayerChannelsLoading);newAreLayerChannelsLoading[channelId]=val;setAreLayerChannelsLoading(newAreLayerChannelsLoading);};// Change one property of a channel (for now - soon\n// nested structures allowing for multiple z/t selecitons at once, for example).\nvar handleChannelPropertyChange=function handleChannelPropertyChange(property,value){// property is something like \"selection\" or \"slider.\"\n// value is the actual change, like { channel: \"DAPI\" }.\nvar update=_defineProperty({},property,value);if(property==='selection'){// Channel is loading until the layer callback is called\n// by the layer, which fetches the raster data.\nsetIsLoading(true);update.selection=_objectSpread({},globalLabelValues,{},update.selection);setChannel(_objectSpread({},c,{},update),channelId);// Call back for raster layer handles update of UI\n// like sliders and the loading state of the channel.\nsetRasterLayerCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var selections,_yield$getDomainsAndS3,sliders,_sliders;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:selections=[_objectSpread({},channels[channelId][property],{},value)];_context4.next=3;return getDomainsAndSliders(loader,selections,domainType,use3d);case 3:_yield$getDomainsAndS3=_context4.sent;sliders=_yield$getDomainsAndS3.sliders;_sliders=_slicedToArray(sliders,1);update.slider=_sliders[0];setChannel(_objectSpread({},c,{},update),channelId);setRasterLayerCallback(null);setIsLoading(false);case 10:case\"end\":return _context4.stop();}}},_callee4);})));}else{setChannel(_objectSpread({},c,{},update),channelId);}};var handleChannelRemove=function handleChannelRemove(){removeChannel(channelId);};var handleIQRUpdate=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var loaderData,source,raster,stats,q1,q3;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:loaderData=loader.data;source=Array.isArray(loaderData)?loaderData[loaderData.length-1]:loaderData;_context5.next=4;return source.getRaster({selection:channels[channelId].selection});case 4:raster=_context5.sent;stats=getChannelStats(raster.data);q1=stats.q1,q3=stats.q3;setChannel(_objectSpread({},c,{slider:[q1,q3]}),channelId);case 8:case\"end\":return _context5.stop();}}},_callee5);}));return function handleIQRUpdate(){return _ref8.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(ChannelController// eslint-disable-next-line react/no-array-index-key\n,{key:\"channel-controller-\".concat(channelId),dimName:channelLabel,visibility:c.visible,selectionIndex:c.selection[channelLabel],slider:c.slider,color:c.color,channels:channels,channelId:channelId,domainType:domainType,loader:loader,globalLabelValues:globalLabelValues,theme:theme,channelOptions:channelOptions,colormapOn:Boolean(colormap),handlePropertyChange:handleChannelPropertyChange,handleChannelRemove:handleChannelRemove,handleIQRUpdate:handleIQRUpdate,setRasterLayerCallback:setRasterLayerCallback,isLoading:areLayerChannelsLoading[channelId],use3d:use3d});});}var controllerSectionClasses=useControllerSectionStyles();var visible=layer.visible;var visibleSetting=typeof visible==='boolean'?visible:true;var Visibility=visibleSetting?VisibilityIcon:VisibilityOffIcon;// Only show Volume tabs if 3D is available.\nvar hasViewableResolutions=Boolean(Array.from({length:loader.data.length}).filter(function(_,res){return canLoadResolution(loader.data,res);}).length);var useVolumeTabs=!disable3d&&shape[labels.indexOf('z')]>1&&hasViewableResolutions;var FullController=/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(LayerOptions,{channels:channels,opacity:opacity,colormap:colormap,transparentColor:transparentColor,domainType:domainType// Only allow for global dimension controllers that\n// exist in the `dimensions` part of the loader.\n,globalControlLabels:labels.filter(function(label){return GLOBAL_LABELS.includes(label);}),globalLabelValues:globalLabelValues,handleOpacityChange:setOpacity,handleColormapChange:setColormap,handleGlobalChannelsSelectionChange:handleGlobalChannelsSelectionChange,handleTransparentColorChange:setTransparentColor,disableChannelsIfRgbDetected:isRgb(loader)&&disableChannelsIfRgbDetected,handleDomainChange:handleDomainChange,shouldShowTransparentColor:shouldShowTransparentColor,shouldShowDomain:shouldShowDomain,shouldShowColormap:shouldShowColormap,use3d:use3d,loader:loader,handleMultiPropertyChange:handleMultiPropertyChange,resolution:resolution,disable3d:disable3d,setRasterLayerCallback:setRasterLayerCallback,setAreAllChannelsLoading:setAreAllChannelsLoading,setViewState:setViewState,spatialHeight:spatialHeight,spatialWidth:spatialWidth,modelMatrix:modelMatrix}),isRgb(loader)&&disableChannelsIfRgbDetected?null:channelControllers,isRgb(loader)&&disableChannelsIfRgbDetected?null:/*#__PURE__*/React.createElement(Button,{disabled:channels.length===MAX_CHANNELS,onClick:handleChannelAdd,fullWidth:true,variant:\"outlined\",style:buttonStyles,startIcon:/*#__PURE__*/React.createElement(AddIcon,null),size:\"small\"},\"Add Channel\"));return/*#__PURE__*/React.createElement(Accordion,{className:controllerSectionClasses.root,onChange:function onChange(e,expanded){var _e$target,_e$target$attributes,_e$target$attributes$;return!disabled&&setIsExpanded(expanded&&(e===null||e===void 0?void 0:(_e$target=e.target)===null||_e$target===void 0?void 0:(_e$target$attributes=_e$target.attributes)===null||_e$target$attributes===void 0?void 0:(_e$target$attributes$=_e$target$attributes.role)===null||_e$target$attributes$===void 0?void 0:_e$target$attributes$.value)==='presentation');},TransitionProps:{enter:false},expanded:!disabled&&isExpanded},/*#__PURE__*/React.createElement(StyledAccordionSummary,{expandIcon:/*#__PURE__*/React.createElement(ExpandMoreIcon,{role:\"presentation\"}),\"aria-controls\":\"layer-\".concat(name,\"-controls\")},/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"column\",m:1,justifyContent:\"center\"},/*#__PURE__*/React.createElement(OverflowEllipsisGrid,{item:true},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(e){if(!disabled){// Needed to prevent affecting the expansion panel from changing\ne.stopPropagation();var nextVisible=typeof visible==='boolean'?!visible:false;setVisible(nextVisible);}},style:{marginRight:8,marginBottom:2,padding:0,minWidth:0}},/*#__PURE__*/React.createElement(Visibility,null)),name),!disabled&&!isExpanded&&!use3d&&/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",alignItems:\"center\",justifyContent:\"center\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(StyledInputLabel,{htmlFor:\"layer-\".concat(name,\"-opacity-closed\")},\"Opacity:\")),/*#__PURE__*/React.createElement(Grid,{item:true,xs:6},/*#__PURE__*/React.createElement(Slider,{id:\"layer-\".concat(name,\"-opacity-closed\"),value:opacity,onChange:function onChange(e,v){return setOpacity(v);},valueLabelDisplay:\"auto\",getAriaLabel:function getAriaLabel(){return'opacity slider';},min:0,max:1,step:0.01,orientation:\"horizontal\"}))))),/*#__PURE__*/React.createElement(StyledAccordionDetails,null,useVolumeTabs?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Tabs,{value:tab,onChange:handleTabChange,\"aria-label\":\"simple tabs example\",style:{height:'24px',minHeight:'24px'}},/*#__PURE__*/React.createElement(Tab,{label:\"Channels\",style:{fontSize:'.75rem',bottom:12,width:'50%',minWidth:'50%'},disableRipple:true}),/*#__PURE__*/React.createElement(Tab,{label:\"Volume\",style:{fontSize:'.75rem',bottom:12,width:'50%',minWidth:'50%'}})),/*#__PURE__*/React.createElement(TabPanel,{value:tab,index:0},FullController),/*#__PURE__*/React.createElement(TabPanel,{value:tab,index:1,style:{marginTop:4}},/*#__PURE__*/React.createElement(VolumeOptions,{loader:loader,handleSlicerSetting:handleSlicerSetting,handleRenderingModeChange:setRenderingMode,renderingMode:renderingMode,xSlice:xSlice,ySlice:ySlice,zSlice:zSlice,use3d:use3d,setViewState:setViewState,spatialHeight:spatialHeight,spatialWidth:spatialWidth,modelMatrix:modelMatrix}))):FullController,shouldShowRemoveLayerButton?/*#__PURE__*/React.createElement(Button,{onClick:handleLayerRemove,fullWidth:true,variant:\"outlined\",style:buttonStyles,size:\"small\"},\"Remove Image Layer\"):null));}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/layer-controller/LayerController.js"],"names":["React","useState","useRef","useEffect","MAX_CHANNELS","getChannelStats","Grid","Button","AddIcon","Slider","Tabs","Tab","Accordion","ExpandMoreIcon","VisibilityIcon","VisibilityOffIcon","LayerOptions","VolumeOptions","useControllerSectionStyles","StyledAccordionDetails","StyledAccordionSummary","StyledInputLabel","OverflowEllipsisGrid","getMultiSelectionStats","GLOBAL_LABELS","getSourceFromLoader","isRgb","canLoadResolution","DOMAINS","TabPanel","props","children","value","index","other","getDomainsAndSliders","loader","selections","domainType","use3d","data","stats","sliders","domains","source","map","dtype","buttonStyles","borderStyle","marginTop","fontWeight","LayerController","layer","name","theme","handleLayerRemove","handleLayerChange","shouldShowTransparentColor","shouldShowDomain","shouldShowColormap","ChannelController","setViewState","disable3d","setRasterLayerCallback","setAreLayerChannelsLoading","areLayerChannelsLoading","disabled","spatialHeight","spatialWidth","disableChannelsIfRgbDetected","shouldShowRemoveLayerButton","colormap","opacity","channels","transparentColor","renderingMode","xSlice","ySlice","zSlice","resolution","modelMatrix","channelRef","current","undefined","firstSelection","selection","channelOptions","tab","setTab","handleTabChange","event","newTab","Array","isArray","length","labels","shape","setDomainType","isExpanded","setIsExpanded","filter","field","reduce","o","key","globalLabelValues","setGlobalLabelValues","setVisible","v","visible","setColormap","setOpacity","setChannels","setTransparentColor","setRenderingMode","handleMultiPropertyChange","obj","handleSlicerSetting","slice","val","setChannelsAndDomainType","newChannels","newDomainType","setChannel","i","addChannel","removeChannel","splice","setAreAllChannelsLoading","newAreLayerChannelsLoading","handleChannelAdd","forEach","label","includes","domain","slider","color","newChannelId","channel","areLayerChannelsLoadingCallback","handleDomainChange","left","right","Math","max","min","c","handleGlobalChannelsSelectionChange","canUpdateChannels","type","then","newChannelsWithSelection","newChannelsWithSliders","prev","channelControllers","channelLabel","find","channelId","setIsLoading","handleChannelPropertyChange","property","update","handleChannelRemove","handleIQRUpdate","loaderData","getRaster","raster","q1","q3","Boolean","controllerSectionClasses","visibleSetting","Visibility","hasViewableResolutions","from","_","res","useVolumeTabs","indexOf","FullController","root","e","expanded","target","attributes","role","enter","stopPropagation","nextVisible","marginRight","marginBottom","padding","minWidth","height","minHeight","fontSize","bottom","width"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { MAX_CHANNELS, getChannelStats } from '@hms-dbmi/viv';\n\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport AddIcon from '@material-ui/icons/Add';\nimport Slider from '@material-ui/core/Slider';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\n\nimport Accordion from '@material-ui/core/Accordion';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport VisibilityOffIcon from '@material-ui/icons/VisibilityOff';\n\nimport LayerOptions from './LayerOptions';\nimport VolumeOptions from './VolumeOptions';\nimport {\n  useControllerSectionStyles,\n  StyledAccordionDetails,\n  StyledAccordionSummary,\n  StyledInputLabel,\n  OverflowEllipsisGrid,\n} from './styles';\nimport { getMultiSelectionStats } from './utils';\n\nimport { GLOBAL_LABELS } from '../spatial/constants';\nimport { getSourceFromLoader, isRgb } from '../../utils';\nimport { canLoadResolution } from '../utils';\nimport { DOMAINS } from './constants';\n\nfunction TabPanel(props) {\n  const {\n    children, value, index, ...other\n  } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`simple-tabpanel-${index}`}\n      aria-labelledby={`simple-tab-${index}`}\n      {...other}\n    >\n      {value === index && children}\n    </div>\n  );\n}\n\n// Set the domain of the sliders based on either a full range or min/max.\nasync function getDomainsAndSliders(loader, selections, domainType, use3d) {\n  let domains;\n  const stats = await getMultiSelectionStats({\n    loader: loader.data,\n    selections,\n    use3d,\n  });\n  const { sliders } = stats;\n  if (domainType === 'Min/Max') {\n    // eslint-disable-next-line prefer-destructuring\n    domains = stats.domains;\n  }\n  if (domainType === 'Full') {\n    const source = getSourceFromLoader(loader);\n    domains = selections.map(() => DOMAINS[source.dtype]);\n  }\n  return { domains, sliders };\n}\n\nconst buttonStyles = {\n  borderStyle: 'dashed',\n  marginTop: '10px',\n  fontWeight: 400,\n};\n\n/**\n * Controller for the various imaging options (color, opactiy, sliders etc.)\n * @prop {object} imageData Image config object, one of the `images` in the raster schema.\n * @prop {object} layerId Randomly generated id for the image layer that this controller handles.\n * @prop {function} handleLayerRemove Callback for handling the removal of a layer.\n * @prop {object} loader Loader object for the current imaging layer.\n * @prop {function} handleLayerChange Callback for handling the changing of layer properties.\n */\nexport default function LayerController(props) {\n  const {\n    layer,\n    name,\n    loader,\n    theme,\n    handleLayerRemove,\n    handleLayerChange,\n    shouldShowTransparentColor,\n    shouldShowDomain,\n    shouldShowColormap,\n    ChannelController,\n    setViewState,\n    disable3d,\n    setRasterLayerCallback,\n    setAreLayerChannelsLoading,\n    areLayerChannelsLoading,\n    disabled,\n    spatialHeight,\n    spatialWidth,\n    disableChannelsIfRgbDetected,\n    shouldShowRemoveLayerButton,\n  } = props;\n\n  const {\n    colormap,\n    opacity,\n    channels,\n    transparentColor,\n    renderingMode,\n    xSlice,\n    ySlice,\n    zSlice,\n    resolution,\n    use3d,\n    modelMatrix,\n  } = layer;\n  // Channels are used in a lot of callbacks and change handlers\n  // so ensuring they have an up to date copy of the data ensures consistency.\n  // See: https://github.com/vitessce/vitessce/issues/1036\n  const channelRef = useRef(channels);\n  useEffect(() => {\n    channelRef.current = channels;\n    return undefined;\n  }, [channels]);\n\n  const firstSelection = channels[0]?.selection || {};\n\n  const { data, channels: channelOptions } = loader;\n  const [tab, setTab] = useState(0);\n\n  const handleTabChange = (event, newTab) => {\n    setTab(newTab);\n  };\n  const { labels, shape } = Array.isArray(data) ? data[data.length - 1] : data;\n  const [domainType, setDomainType] = useState(layer.domainType);\n  const [isExpanded, setIsExpanded] = useState(true);\n  const [globalLabelValues, setGlobalLabelValues] = useState(\n    GLOBAL_LABELS.filter(\n      field => typeof firstSelection[field] === 'number',\n    ).reduce((o, key) => ({ ...o, [key]: firstSelection[key] }), {}),\n  );\n\n  function setVisible(v) {\n    handleLayerChange({ ...layer, visible: v });\n  }\n\n  function setColormap(v) {\n    handleLayerChange({ ...layer, colormap: v });\n  }\n\n  function setOpacity(v) {\n    handleLayerChange({ ...layer, opacity: v });\n  }\n\n  function setChannels(v) {\n    handleLayerChange({ ...layer, channels: v });\n  }\n  function setTransparentColor(v) {\n    handleLayerChange({ ...layer, transparentColor: v });\n  }\n  function setRenderingMode(v) {\n    handleLayerChange({ ...layer, renderingMode: v });\n  }\n\n  function handleMultiPropertyChange(obj) {\n    handleLayerChange({ ...layer, ...obj });\n  }\n\n  function handleSlicerSetting(slice, val) {\n    handleLayerChange({ ...layer, [`${slice}Slice`]: val });\n  }\n\n  function setChannelsAndDomainType(newChannels, newDomainType) {\n    handleLayerChange({\n      ...layer,\n      channels: newChannels,\n      domainType: newDomainType,\n    });\n  }\n\n  function setChannel(v, i) {\n    const newChannels = [...channelRef.current];\n    newChannels[i] = v;\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  function addChannel(v) {\n    const newChannels = [...channelRef.current, v];\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  function removeChannel(i) {\n    const newChannels = [...channelRef.current];\n    newChannels.splice(i, 1);\n    handleLayerChange({ ...layer, channels: newChannels });\n  }\n\n  const setAreAllChannelsLoading = (val) => {\n    const newAreLayerChannelsLoading = channelRef.current.map(() => val);\n    setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n  };\n\n  // Handles adding a channel, creating a default selection\n  // for the current global settings and domain type.\n  const handleChannelAdd = async () => {\n    const selection = {};\n    labels.forEach((label) => {\n      // Set new image to default selection for non-global selections (0)\n      // and use current global selection otherwise.\n      selection[label] = GLOBAL_LABELS.includes(label)\n        ? globalLabelValues[label] || 0\n        : 0;\n    });\n    const { domains, sliders } = await getDomainsAndSliders(\n      loader,\n      [selection],\n      domainType,\n      use3d,\n    );\n    const domain = domains[0];\n    const slider = domain;\n    const color = [255, 255, 255];\n    const visible = true;\n    const newChannelId = channels.length;\n    const newAreLayerChannelsLoading = [...areLayerChannelsLoading];\n    newAreLayerChannelsLoading[newChannelId] = true;\n    setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n    const channel = {\n      selection,\n      slider,\n      visible,\n      color,\n    };\n    setRasterLayerCallback(() => {\n      setChannel({ ...channel, slider: sliders[0] }, newChannelId);\n      const areLayerChannelsLoadingCallback = [...newAreLayerChannelsLoading];\n      areLayerChannelsLoadingCallback[newChannelId] = false;\n      setAreLayerChannelsLoading(areLayerChannelsLoadingCallback);\n      setRasterLayerCallback(null);\n    });\n    addChannel(channel);\n  };\n\n  const handleDomainChange = async (value) => {\n    setDomainType(value);\n    const selections = channels.map(channel => channel.selection);\n    let sliders = channels.map(channel => channel.slider);\n    const { domains } = await getDomainsAndSliders(\n      loader,\n      selections,\n      value,\n      use3d,\n    );\n\n    // If it's the right-most slider, we take the minimum of that and the new value.\n    // Otherwise, we use the maximum of the left-hand side and the new value.\n    sliders = sliders.map((slider, i) => {\n      const [left, right] = slider;\n      return [Math.max(left, domains[i][0]), Math.min(right, domains[i][1])];\n    });\n\n    const newChannels = channels.map((c, i) => ({ ...c, slider: sliders[i] }));\n    setChannelsAndDomainType(newChannels, value);\n  };\n\n  // This call updates all channel selections with new global selection from the UI.\n  const handleGlobalChannelsSelectionChange = async ({ selection, event }) => {\n    const selections = channels.map(channel => ({\n      ...channel.selection,\n      ...selection,\n    }));\n    const canUpdateChannels = event.type === 'mouseup' || event.type === 'keydown';\n    // Only update domains on a mouseup event for the same reason as above.\n    if (canUpdateChannels) {\n      setAreAllChannelsLoading(true);\n      getDomainsAndSliders(loader, selections, domainType, use3d).then(\n        ({ sliders }) => {\n          const newChannelsWithSelection = channels.map(c => ({\n            ...c,\n            selection: { ...c.selection, ...selection },\n          }));\n          // Set the callback before changing the selection\n          // so the callback is used when the layer (re)loads its data.\n          setRasterLayerCallback(() => {\n            setRasterLayerCallback(null);\n            setAreAllChannelsLoading(false);\n            const newChannelsWithSliders = [...newChannelsWithSelection].map(\n              (c, i) => ({\n                ...c,\n                slider: sliders[i],\n              }),\n            );\n            setChannels(newChannelsWithSliders);\n          });\n          setChannels(newChannelsWithSelection);\n        },\n      );\n    }\n    setGlobalLabelValues(prev => ({ ...prev, ...selection }));\n  };\n\n  let channelControllers = [];\n  if (labels.length > 0) {\n    const channelLabel = labels.find(c => c === 'channel' || c === 'c') || labels[0];\n    // Create the channel controllers for each channel.\n    channelControllers = channels.map(\n      // c is an object like { color, selection, slider, visible }.\n      (c, channelId) => {\n        // Update the auxiliary store with the current loading state of a channel.\n        const setIsLoading = (val) => {\n          const newAreLayerChannelsLoading = [...areLayerChannelsLoading];\n          newAreLayerChannelsLoading[channelId] = val;\n          setAreLayerChannelsLoading(newAreLayerChannelsLoading);\n        };\n        // Change one property of a channel (for now - soon\n        // nested structures allowing for multiple z/t selecitons at once, for example).\n        const handleChannelPropertyChange = (property, value) => {\n          // property is something like \"selection\" or \"slider.\"\n          // value is the actual change, like { channel: \"DAPI\" }.\n          const update = { [property]: value };\n          if (property === 'selection') {\n            // Channel is loading until the layer callback is called\n            // by the layer, which fetches the raster data.\n            setIsLoading(true);\n            update.selection = {\n              ...globalLabelValues,\n              ...update.selection,\n            };\n            setChannel({ ...c, ...update }, channelId);\n            // Call back for raster layer handles update of UI\n            // like sliders and the loading state of the channel.\n            setRasterLayerCallback(async () => {\n              const selections = [\n                { ...channels[channelId][property], ...value },\n              ];\n              const { sliders } = await getDomainsAndSliders(\n                loader,\n                selections,\n                domainType,\n                use3d,\n              );\n              [update.slider] = sliders;\n              setChannel({ ...c, ...update }, channelId);\n              setRasterLayerCallback(null);\n              setIsLoading(false);\n            });\n          } else {\n            setChannel({ ...c, ...update }, channelId);\n          }\n        };\n        const handleChannelRemove = () => {\n          removeChannel(channelId);\n        };\n        const handleIQRUpdate = async () => {\n          const { data: loaderData } = loader;\n          const source = Array.isArray(loaderData)\n            ? loaderData[loaderData.length - 1]\n            : loaderData;\n          const raster = await source.getRaster({\n            selection: channels[channelId].selection,\n          });\n          const stats = getChannelStats(raster.data);\n          const { q1, q3 } = stats;\n          setChannel({ ...c, slider: [q1, q3] }, channelId);\n        };\n        return (\n          <ChannelController\n            // eslint-disable-next-line react/no-array-index-key\n            key={`channel-controller-${channelId}`}\n            dimName={channelLabel}\n            visibility={c.visible}\n            selectionIndex={c.selection[channelLabel]}\n            slider={c.slider}\n            color={c.color}\n            channels={channels}\n            channelId={channelId}\n            domainType={domainType}\n            loader={loader}\n            globalLabelValues={globalLabelValues}\n            theme={theme}\n            channelOptions={channelOptions}\n            colormapOn={Boolean(colormap)}\n            handlePropertyChange={handleChannelPropertyChange}\n            handleChannelRemove={handleChannelRemove}\n            handleIQRUpdate={handleIQRUpdate}\n            setRasterLayerCallback={setRasterLayerCallback}\n            isLoading={areLayerChannelsLoading[channelId]}\n            use3d={use3d}\n          />\n        );\n      },\n    );\n  }\n\n  const controllerSectionClasses = useControllerSectionStyles();\n\n  const { visible } = layer;\n  const visibleSetting = typeof visible === 'boolean' ? visible : true;\n  const Visibility = visibleSetting ? VisibilityIcon : VisibilityOffIcon;\n  // Only show Volume tabs if 3D is available.\n  const hasViewableResolutions = Boolean(\n    Array.from({\n      length: loader.data.length,\n    }).filter((_, res) => canLoadResolution(loader.data, res)).length,\n  );\n  const useVolumeTabs = !disable3d && shape[labels.indexOf('z')] > 1 && hasViewableResolutions;\n  const FullController = (\n    <>\n      <LayerOptions\n        channels={channels}\n        opacity={opacity}\n        colormap={colormap}\n        transparentColor={transparentColor}\n        domainType={domainType}\n        // Only allow for global dimension controllers that\n        // exist in the `dimensions` part of the loader.\n        globalControlLabels={labels.filter(label => GLOBAL_LABELS.includes(label))}\n        globalLabelValues={globalLabelValues}\n        handleOpacityChange={setOpacity}\n        handleColormapChange={setColormap}\n        handleGlobalChannelsSelectionChange={\n          handleGlobalChannelsSelectionChange\n        }\n        handleTransparentColorChange={setTransparentColor}\n        disableChannelsIfRgbDetected={\n          isRgb(loader) && disableChannelsIfRgbDetected\n        }\n        handleDomainChange={handleDomainChange}\n        shouldShowTransparentColor={shouldShowTransparentColor}\n        shouldShowDomain={shouldShowDomain}\n        shouldShowColormap={shouldShowColormap}\n        use3d={use3d}\n        loader={loader}\n        handleMultiPropertyChange={handleMultiPropertyChange}\n        resolution={resolution}\n        disable3d={disable3d}\n        setRasterLayerCallback={setRasterLayerCallback}\n        setAreAllChannelsLoading={setAreAllChannelsLoading}\n        setViewState={setViewState}\n        spatialHeight={spatialHeight}\n        spatialWidth={spatialWidth}\n        modelMatrix={modelMatrix}\n      />\n      {isRgb(loader) && disableChannelsIfRgbDetected\n        ? null\n        : channelControllers}\n      {isRgb(loader) && disableChannelsIfRgbDetected ? null : (\n        <Button\n          disabled={channels.length === MAX_CHANNELS}\n          onClick={handleChannelAdd}\n          fullWidth\n          variant=\"outlined\"\n          style={buttonStyles}\n          startIcon={<AddIcon />}\n          size=\"small\"\n        >\n          Add Channel\n        </Button>\n      )}\n    </>\n  );\n  return (\n    <Accordion\n      className={controllerSectionClasses.root}\n      onChange={(e, expanded) => !disabled\n        && setIsExpanded(\n          expanded && e?.target?.attributes?.role?.value === 'presentation',\n        )\n      }\n      TransitionProps={{ enter: false }}\n      expanded={!disabled && isExpanded}\n    >\n      <StyledAccordionSummary\n        expandIcon={<ExpandMoreIcon role=\"presentation\" />}\n        aria-controls={`layer-${name}-controls`}\n      >\n        <Grid container direction=\"column\" m={1} justifyContent=\"center\">\n          <OverflowEllipsisGrid item>\n            <Button\n              onClick={(e) => {\n                if (!disabled) {\n                  // Needed to prevent affecting the expansion panel from changing\n                  e.stopPropagation();\n                  const nextVisible = typeof visible === 'boolean' ? !visible : false;\n                  setVisible(nextVisible);\n                }\n              }}\n              style={{\n                marginRight: 8,\n                marginBottom: 2,\n                padding: 0,\n                minWidth: 0,\n              }}\n            >\n              <Visibility />\n            </Button>\n            {name}\n          </OverflowEllipsisGrid>\n          {!disabled && !isExpanded && !use3d && (\n            <Grid\n              container\n              direction=\"row\"\n              alignItems=\"center\"\n              justifyContent=\"center\"\n            >\n              <Grid item xs={6}>\n                <StyledInputLabel htmlFor={`layer-${name}-opacity-closed`}>\n                  Opacity:\n                </StyledInputLabel>\n              </Grid>\n              <Grid item xs={6}>\n                <Slider\n                  id={`layer-${name}-opacity-closed`}\n                  value={opacity}\n                  onChange={(e, v) => setOpacity(v)}\n                  valueLabelDisplay=\"auto\"\n                  getAriaLabel={() => 'opacity slider'}\n                  min={0}\n                  max={1}\n                  step={0.01}\n                  orientation=\"horizontal\"\n                />\n              </Grid>\n            </Grid>\n          )}\n        </Grid>\n      </StyledAccordionSummary>\n      <StyledAccordionDetails>\n        {useVolumeTabs ? (\n          <>\n            <Tabs\n              value={tab}\n              onChange={handleTabChange}\n              aria-label=\"simple tabs example\"\n              style={{ height: '24px', minHeight: '24px' }}\n            >\n              <Tab\n                label=\"Channels\"\n                style={{\n                  fontSize: '.75rem',\n                  bottom: 12,\n                  width: '50%',\n                  minWidth: '50%',\n                }}\n                disableRipple\n              />\n              <Tab\n                label=\"Volume\"\n                style={{\n                  fontSize: '.75rem',\n                  bottom: 12,\n                  width: '50%',\n                  minWidth: '50%',\n                }}\n              />\n            </Tabs>\n            <TabPanel value={tab} index={0}>\n              {FullController}\n            </TabPanel>\n            <TabPanel value={tab} index={1} style={{ marginTop: 4 }}>\n              <VolumeOptions\n                loader={loader}\n                handleSlicerSetting={handleSlicerSetting}\n                handleRenderingModeChange={setRenderingMode}\n                renderingMode={renderingMode}\n                xSlice={xSlice}\n                ySlice={ySlice}\n                zSlice={zSlice}\n                use3d={use3d}\n                setViewState={setViewState}\n                spatialHeight={spatialHeight}\n                spatialWidth={spatialWidth}\n                modelMatrix={modelMatrix}\n              />\n            </TabPanel>\n          </>\n        ) : (\n          FullController\n        )}\n        {shouldShowRemoveLayerButton ? (\n          <Button\n            onClick={handleLayerRemove}\n            fullWidth\n            variant=\"outlined\"\n            style={buttonStyles}\n            size=\"small\"\n          >\n            Remove Image Layer\n          </Button>\n        ) : null}\n      </StyledAccordionDetails>\n    </Accordion>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}