{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { lerp } from 'math.gl';\nvar availableTransformations = {\n  Point: Point,\n  MultiPoint: MultiPoint,\n  LineString: LineString,\n  MultiLineString: MultiLineString,\n  Polygon: Polygon,\n  MultiPolygon: MultiPolygon\n};\n\nfunction Point(_ref, _ref2, viewport) {\n  var _ref3 = _slicedToArray(_ref, 2),\n      pointX = _ref3[0],\n      pointY = _ref3[1];\n\n  var _ref4 = _slicedToArray(_ref2, 2),\n      nw = _ref4[0],\n      se = _ref4[1];\n\n  var x = lerp(nw[0], se[0], pointX);\n  var y = lerp(nw[1], se[1], pointY);\n  return viewport.unprojectFlat([x, y]);\n}\n\nfunction getPoints(geometry, bbox, viewport) {\n  return geometry.map(function (g) {\n    return Point(g, bbox, viewport);\n  });\n}\n\nfunction MultiPoint(multiPoint, bbox, viewport) {\n  return getPoints(multiPoint, bbox, viewport);\n}\n\nfunction LineString(line, bbox, viewport) {\n  return getPoints(line, bbox, viewport);\n}\n\nfunction MultiLineString(multiLineString, bbox, viewport) {\n  return multiLineString.map(function (lineString) {\n    return LineString(lineString, bbox, viewport);\n  });\n}\n\nfunction Polygon(polygon, bbox, viewport) {\n  return polygon.map(function (polygonRing) {\n    return getPoints(polygonRing, bbox, viewport);\n  });\n}\n\nfunction MultiPolygon(multiPolygon, bbox, viewport) {\n  return multiPolygon.map(function (polygon) {\n    return Polygon(polygon, bbox, viewport);\n  });\n}\n\nexport function transform(geometry, bbox, viewport) {\n  var nw = viewport.projectFlat([bbox.west, bbox.north]);\n  var se = viewport.projectFlat([bbox.east, bbox.south]);\n  var projectedBbox = [nw, se];\n  return _objectSpread({}, geometry, {\n    coordinates: availableTransformations[geometry.type](geometry.coordinates, projectedBbox, viewport)\n  });\n}","map":{"version":3,"sources":["../../../src/mvt-layer/coordinate-transform.js"],"names":["availableTransformations","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","x","lerp","nw","se","y","viewport","geometry","g","getPoints","multiLineString","lineString","polygon","polygonRing","multiPolygon","bbox","projectedBbox","coordinates"],"mappings":"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","sourcesContent":["import {lerp} from 'math.gl';\n\nconst availableTransformations = {\n  Point,\n  MultiPoint,\n  LineString,\n  MultiLineString,\n  Polygon,\n  MultiPolygon\n};\n\nfunction Point([pointX, pointY], [nw, se], viewport) {\n  const x = lerp(nw[0], se[0], pointX);\n  const y = lerp(nw[1], se[1], pointY);\n\n  return viewport.unprojectFlat([x, y]);\n}\n\nfunction getPoints(geometry, bbox, viewport) {\n  return geometry.map(g => Point(g, bbox, viewport));\n}\n\nfunction MultiPoint(multiPoint, bbox, viewport) {\n  return getPoints(multiPoint, bbox, viewport);\n}\n\nfunction LineString(line, bbox, viewport) {\n  return getPoints(line, bbox, viewport);\n}\n\nfunction MultiLineString(multiLineString, bbox, viewport) {\n  return multiLineString.map(lineString => LineString(lineString, bbox, viewport));\n}\n\nfunction Polygon(polygon, bbox, viewport) {\n  return polygon.map(polygonRing => getPoints(polygonRing, bbox, viewport));\n}\n\nfunction MultiPolygon(multiPolygon, bbox, viewport) {\n  return multiPolygon.map(polygon => Polygon(polygon, bbox, viewport));\n}\n\nexport function transform(geometry, bbox, viewport) {\n  const nw = viewport.projectFlat([bbox.west, bbox.north]);\n  const se = viewport.projectFlat([bbox.east, bbox.south]);\n  const projectedBbox = [nw, se];\n\n  return {\n    ...geometry,\n    coordinates: availableTransformations[geometry.type](\n      geometry.coordinates,\n      projectedBbox,\n      viewport\n    )\n  };\n}\n"]},"metadata":{},"sourceType":"module"}