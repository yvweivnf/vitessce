{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport { TILE3D_OPTIMIZATION_HINT, TILE_REFINEMENT } from '../../constants';\nimport TilesetTraverser from './tileset-traverser';\n\nvar Tileset3DTraverser = /*#__PURE__*/function (_TilesetTraverser) {\n  _inherits(Tileset3DTraverser, _TilesetTraverser);\n\n  var _super = _createSuper(Tileset3DTraverser);\n\n  function Tileset3DTraverser() {\n    _classCallCheck(this, Tileset3DTraverser);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Tileset3DTraverser, [{\n    key: \"compareDistanceToCamera\",\n    value: function compareDistanceToCamera(a, b) {\n      return b._distanceToCamera === 0 && a._distanceToCamera === 0 ? b._centerZDepth - a._centerZDepth : b._distanceToCamera - a._distanceToCamera;\n    }\n  }, {\n    key: \"updateTileVisibility\",\n    value: function updateTileVisibility(tile, frameState) {\n      _get(_getPrototypeOf(Tileset3DTraverser.prototype), \"updateTileVisibility\", this).call(this, tile, frameState);\n\n      if (!tile.isVisibleAndInRequestVolume) {\n        return;\n      }\n\n      var hasChildren = tile.children.length > 0;\n\n      if (tile.hasTilesetContent && hasChildren) {\n        var firstChild = tile.children[0];\n        this.updateTileVisibility(firstChild, frameState);\n        tile._visible = firstChild._visible;\n        return;\n      }\n\n      if (this.meetsScreenSpaceErrorEarly(tile, frameState)) {\n        tile._visible = false;\n        return;\n      }\n\n      var replace = tile.refine === TILE_REFINEMENT.REPLACE;\n      var useOptimization = tile._optimChildrenWithinParent === TILE3D_OPTIMIZATION_HINT.USE_OPTIMIZATION;\n\n      if (replace && useOptimization && hasChildren) {\n        if (!this.anyChildrenVisible(tile, frameState)) {\n          tile._visible = false;\n          return;\n        }\n      }\n    }\n  }, {\n    key: \"meetsScreenSpaceErrorEarly\",\n    value: function meetsScreenSpaceErrorEarly(tile, frameState) {\n      var parent = tile.parent;\n\n      if (!parent || parent.hasTilesetContent || parent.refine !== TILE_REFINEMENT.ADD) {\n        return false;\n      }\n\n      return !this.shouldRefine(tile, frameState, true);\n    }\n  }]);\n\n  return Tileset3DTraverser;\n}(TilesetTraverser);\n\nexport { Tileset3DTraverser as default };","map":{"version":3,"sources":["../../../../src/tileset/traversers/tileset-3d-traverser.ts"],"names":["b","a","tile","hasChildren","firstChild","replace","TILE_REFINEMENT","useOptimization","TILE3D_OPTIMIZATION_HINT","parent"],"mappings":";;;;;;AAGA,SAAA,wBAAA,EAAA,eAAA,QAAA,iBAAA;AACA,OAAA,gBAAA,MAAA,qBAAA;;IAEe,kB;;;;;;;;;;;;;4CACU,C,EAAA,C,EAAO;AAE5B,aAAOA,CAAC,CAADA,iBAAAA,KAAAA,CAAAA,IAA6BC,CAAC,CAADA,iBAAAA,KAA7BD,CAAAA,GACHA,CAAC,CAADA,aAAAA,GAAkBC,CAAC,CADhBD,aAAAA,GAEHA,CAAC,CAADA,iBAAAA,GAAsBC,CAAC,CAF3B,iBAAA;AAGD;;;yCAEmB,I,EAAA,U,EAAmB;AACrC,mGAAA,IAAA,EAAA,UAAA;;AAGA,UAAI,CAACC,IAAI,CAAT,2BAAA,EAAuC;AACrC;AACD;;AAED,UAAMC,WAAW,GAAGD,IAAI,CAAJA,QAAAA,CAAAA,MAAAA,GAApB,CAAA;;AACA,UAAIA,IAAI,CAAJA,iBAAAA,IAAJ,WAAA,EAA2C;AAIzC,YAAME,UAAU,GAAGF,IAAI,CAAJA,QAAAA,CAAnB,CAAmBA,CAAnB;AACA,aAAA,oBAAA,CAAA,UAAA,EAAA,UAAA;AACAA,QAAAA,IAAI,CAAJA,QAAAA,GAAgBE,UAAU,CAA1BF,QAAAA;AACA;AACD;;AAED,UAAI,KAAA,0BAAA,CAAA,IAAA,EAAJ,UAAI,CAAJ,EAAuD;AACrDA,QAAAA,IAAI,CAAJA,QAAAA,GAAAA,KAAAA;AACA;AACD;;AAED,UAAMG,OAAO,GAAGH,IAAI,CAAJA,MAAAA,KAAgBI,eAAe,CAA/C,OAAA;AACA,UAAMC,eAAe,GACnBL,IAAI,CAAJA,0BAAAA,KAAoCM,wBAAwB,CAD9D,gBAAA;;AAEA,UAAIH,OAAO,IAAPA,eAAAA,IAAJ,WAAA,EAA+C;AAC7C,YAAI,CAAC,KAAA,kBAAA,CAAA,IAAA,EAAL,UAAK,CAAL,EAAgD;AAC9CH,UAAAA,IAAI,CAAJA,QAAAA,GAAAA,KAAAA;AACA;AACD;AACF;AACF;;;+CAEyB,I,EAAA,U,EAAmB;AAAA,UACpCO,MADoC,GAC3C,IAD2C,CACpCA,MADoC;;AAE3C,UAAI,CAAA,MAAA,IAAWA,MAAM,CAAjB,iBAAA,IAAuCA,MAAM,CAANA,MAAAA,KAAkBH,eAAe,CAA5E,GAAA,EAAkF;AAChF,eAAA,KAAA;AACD;;AAGD,aAAO,CAAC,KAAA,YAAA,CAAA,IAAA,EAAA,UAAA,EAAR,IAAQ,CAAR;AACD;;;;EAnDY,gB;;SAAA,kB","sourcesContent":["// This file is derived from the Cesium code base under Apache 2 license\n// See LICENSE.md and https://github.com/AnalyticalGraphicsInc/cesium/blob/master/LICENSE.md\n\nimport {TILE3D_OPTIMIZATION_HINT, TILE_REFINEMENT} from '../../constants';\nimport TilesetTraverser from './tileset-traverser';\n\nexport default class Tileset3DTraverser extends TilesetTraverser {\n  compareDistanceToCamera(a, b) {\n    // Sort by farthest child first since this is going on a stack\n    return b._distanceToCamera === 0 && a._distanceToCamera === 0\n      ? b._centerZDepth - a._centerZDepth\n      : b._distanceToCamera - a._distanceToCamera;\n  }\n\n  updateTileVisibility(tile, frameState) {\n    super.updateTileVisibility(tile, frameState);\n\n    //  Optimization - if none of the tile's children are visible then this tile isn't visible\n    if (!tile.isVisibleAndInRequestVolume) {\n      return;\n    }\n\n    const hasChildren = tile.children.length > 0;\n    if (tile.hasTilesetContent && hasChildren) {\n      // Use the root tile's visibility instead of this tile's visibility.\n      // The root tile may be culled by the children bounds optimization in which\n      // case this tile should also be culled.\n      const firstChild = tile.children[0];\n      this.updateTileVisibility(firstChild, frameState);\n      tile._visible = firstChild._visible;\n      return;\n    }\n\n    if (this.meetsScreenSpaceErrorEarly(tile, frameState)) {\n      tile._visible = false;\n      return;\n    }\n\n    const replace = tile.refine === TILE_REFINEMENT.REPLACE;\n    const useOptimization =\n      tile._optimChildrenWithinParent === TILE3D_OPTIMIZATION_HINT.USE_OPTIMIZATION;\n    if (replace && useOptimization && hasChildren) {\n      if (!this.anyChildrenVisible(tile, frameState)) {\n        tile._visible = false;\n        return;\n      }\n    }\n  }\n\n  meetsScreenSpaceErrorEarly(tile, frameState) {\n    const {parent} = tile;\n    if (!parent || parent.hasTilesetContent || parent.refine !== TILE_REFINEMENT.ADD) {\n      return false;\n    }\n\n    // Use parent's geometric error with child's box to see if the tile already meet the SSE\n    return !this.shouldRefine(tile, frameState, true);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}