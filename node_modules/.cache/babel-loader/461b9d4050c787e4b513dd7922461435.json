{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = memoize; // port from @deck.gl/core\n\nfunction isEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (Array.isArray(a)) {\n    // Special treatment for arrays: compare 1-level deep\n    // This is to support equality of matrix/coordinate props\n    var len = a.length;\n\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (var i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param {function} compute - the function to be memoized\n */\n\n\nfunction memoize(compute) {\n  var cachedArgs = {};\n  var cachedResult;\n  return function (args) {\n    for (var key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n\n    return cachedResult;\n  };\n}","map":{"version":3,"sources":["../src/memoize.ts"],"names":["a","Array","len","b","i","cachedArgs","isEqual","args","cachedResult","compute"],"mappings":";;;;;8BAAA;;AACA,SAAA,OAAA,CAAA,CAAA,EAAA,CAAA,EAAiC;AAC/B,MAAIA,CAAC,KAAL,CAAA,EAAa;AACX,WAAA,IAAA;AACD;;AACD,MAAIC,KAAK,CAALA,OAAAA,CAAJ,CAAIA,CAAJ,EAAsB;AACpB;AACA;AACA,QAAMC,GAAG,GAAGF,CAAC,CAAb,MAAA;;AACA,QAAI,CAAA,CAAA,IAAMG,CAAC,CAADA,MAAAA,KAAV,GAAA,EAA4B;AAC1B,aAAA,KAAA;AACD;;AAED,SAAK,IAAIC,CAAC,GAAV,CAAA,EAAgBA,CAAC,GAAjB,GAAA,EAAyBA,CAAzB,EAAA,EAA8B;AAC5B,UAAIJ,CAAC,CAADA,CAAC,CAADA,KAASG,CAAC,CAAd,CAAc,CAAd,EAAmB;AACjB,eAAA,KAAA;AACD;AACF;;AACD,WAAA,IAAA;AACD;;AACD,SAAA,KAAA;AACD;AAED;;;;;;;AAKe,SAAA,OAAA,CAAA,OAAA,EAAoC;AACjD,MAAIE,UAAU,GAAd,EAAA;AACA,MAAA,YAAA;AAEA,SAAO,UAAA,IAAA,EAAe;AACpB,SAAK,IAAL,GAAA,IAAA,IAAA,EAAwB;AACtB,UAAI,CAACC,OAAO,CAACC,IAAI,CAAL,GAAK,CAAL,EAAYF,UAAU,CAAlC,GAAkC,CAAtB,CAAZ,EAA0C;AACxCG,QAAAA,YAAY,GAAGC,OAAO,CAAtBD,IAAsB,CAAtBA;AACAH,QAAAA,UAAU,GAAVA,IAAAA;AACA;AACD;AACF;;AACD,WAAA,YAAA;AARF,GAAA;AAUD","sourcesContent":["// port from @deck.gl/core\nfunction isEqual(a: any, b: any) {\n  if (a === b) {\n    return true;\n  }\n  if (Array.isArray(a)) {\n    // Special treatment for arrays: compare 1-level deep\n    // This is to support equality of matrix/coordinate props\n    const len = a.length;\n    if (!b || b.length !== len) {\n      return false;\n    }\n\n    for (let i = 0; i < len; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\n/**\n * Speed up consecutive function calls by caching the result of calls with identical input\n * https://en.wikipedia.org/wiki/Memoization\n * @param {function} compute - the function to be memoized\n */\nexport default function memoize(compute: Function) {\n  let cachedArgs = {};\n  let cachedResult;\n\n  return (args: any) => {\n    for (const key in args) {\n      if (!isEqual(args[key], cachedArgs[key])) {\n        cachedResult = compute(args);\n        cachedArgs = args;\n        break;\n      }\n    }\n    return cachedResult;\n  };\n}\n"]},"metadata":{},"sourceType":"script"}