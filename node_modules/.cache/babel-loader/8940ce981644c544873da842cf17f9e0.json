{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport { array } from 'vega-util';\nimport * as log from '../log';\nimport { isLayerSpec, isUnitSpec } from '../spec';\nimport { keys } from '../util';\nimport { assembleAxisSignals } from './axis/assemble';\nimport { parseLayerAxes } from './axis/parse';\nimport { parseData as _parseData } from './data/parse';\nimport { assembleLayoutSignals as _assembleLayoutSignals } from './layoutsize/assemble';\nimport { parseLayerLayoutSize } from './layoutsize/parse';\nimport { assembleLegends as _assembleLegends } from './legend/assemble';\nimport { Model } from './model';\nimport { assembleLayerSelectionMarks } from './selection/assemble';\nimport { UnitModel } from './unit';\nexport var LayerModel = /*#__PURE__*/function (_Model) {\n  _inherits(LayerModel, _Model);\n\n  var _super = _createSuper(LayerModel);\n\n  function LayerModel(spec, parent, parentGivenName, parentGivenSize, config) {\n    var _this;\n\n    _classCallCheck(this, LayerModel);\n\n    _this = _super.call(this, spec, 'layer', parent, parentGivenName, config, spec.resolve, spec.view);\n    var layoutSize = Object.assign(Object.assign(Object.assign({}, parentGivenSize), spec.width ? {\n      width: spec.width\n    } : {}), spec.height ? {\n      height: spec.height\n    } : {});\n    _this.children = spec.layer.map(function (layer, i) {\n      if (isLayerSpec(layer)) {\n        return new LayerModel(layer, _assertThisInitialized(_this), _this.getName(\"layer_\".concat(i)), layoutSize, config);\n      } else if (isUnitSpec(layer)) {\n        return new UnitModel(layer, _assertThisInitialized(_this), _this.getName(\"layer_\".concat(i)), layoutSize, config);\n      }\n\n      throw new Error(log.message.invalidSpec(layer));\n    });\n    return _this;\n  }\n\n  _createClass(LayerModel, [{\n    key: \"parseData\",\n    value: function parseData() {\n      this.component.data = _parseData(this);\n\n      var _iterator = _createForOfIteratorHelper(this.children),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var child = _step.value;\n          child.parseData();\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n  }, {\n    key: \"parseLayoutSize\",\n    value: function parseLayoutSize() {\n      parseLayerLayoutSize(this);\n    }\n  }, {\n    key: \"parseSelections\",\n    value: function parseSelections() {\n      // Merge selections up the hierarchy so that they may be referenced\n      // across unit specs. Persist their definitions within each child\n      // to assemble signals which remain within output Vega unit groups.\n      this.component.selection = {};\n\n      var _iterator2 = _createForOfIteratorHelper(this.children),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var child = _step2.value;\n          child.parseSelections();\n\n          var _iterator3 = _createForOfIteratorHelper(keys(child.component.selection)),\n              _step3;\n\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var key = _step3.value;\n              this.component.selection[key] = child.component.selection[key];\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n  }, {\n    key: \"parseMarkGroup\",\n    value: function parseMarkGroup() {\n      var _iterator4 = _createForOfIteratorHelper(this.children),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var child = _step4.value;\n          child.parseMarkGroup();\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  }, {\n    key: \"parseAxesAndHeaders\",\n    value: function parseAxesAndHeaders() {\n      parseLayerAxes(this);\n    }\n  }, {\n    key: \"assembleSelectionTopLevelSignals\",\n    value: function assembleSelectionTopLevelSignals(signals) {\n      return this.children.reduce(function (sg, child) {\n        return child.assembleSelectionTopLevelSignals(sg);\n      }, signals);\n    } // TODO: Support same named selections across children.\n\n  }, {\n    key: \"assembleSignals\",\n    value: function assembleSignals() {\n      return this.children.reduce(function (signals, child) {\n        return signals.concat(child.assembleSignals());\n      }, assembleAxisSignals(this));\n    }\n  }, {\n    key: \"assembleLayoutSignals\",\n    value: function assembleLayoutSignals() {\n      return this.children.reduce(function (signals, child) {\n        return signals.concat(child.assembleLayoutSignals());\n      }, _assembleLayoutSignals(this));\n    }\n  }, {\n    key: \"assembleSelectionData\",\n    value: function assembleSelectionData(data) {\n      return this.children.reduce(function (db, child) {\n        return child.assembleSelectionData(db);\n      }, data);\n    }\n  }, {\n    key: \"assembleGroupStyle\",\n    value: function assembleGroupStyle() {\n      var uniqueStyles = new Set();\n\n      var _iterator5 = _createForOfIteratorHelper(this.children),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var child = _step5.value;\n\n          var _iterator6 = _createForOfIteratorHelper(array(child.assembleGroupStyle())),\n              _step6;\n\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var style = _step6.value;\n              uniqueStyles.add(style);\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      var styles = Array.from(uniqueStyles);\n      return styles.length > 1 ? styles : styles.length === 1 ? styles[0] : undefined;\n    }\n  }, {\n    key: \"assembleTitle\",\n    value: function assembleTitle() {\n      var title = _get(_getPrototypeOf(LayerModel.prototype), \"assembleTitle\", this).call(this);\n\n      if (title) {\n        return title;\n      } // If title does not provide layer, look into children\n\n\n      var _iterator7 = _createForOfIteratorHelper(this.children),\n          _step7;\n\n      try {\n        for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n          var child = _step7.value;\n          title = child.assembleTitle();\n\n          if (title) {\n            return title;\n          }\n        }\n      } catch (err) {\n        _iterator7.e(err);\n      } finally {\n        _iterator7.f();\n      }\n\n      return undefined;\n    }\n  }, {\n    key: \"assembleLayout\",\n    value: function assembleLayout() {\n      return null;\n    }\n  }, {\n    key: \"assembleMarks\",\n    value: function assembleMarks() {\n      return assembleLayerSelectionMarks(this, this.children.flatMap(function (child) {\n        return child.assembleMarks();\n      }));\n    }\n  }, {\n    key: \"assembleLegends\",\n    value: function assembleLegends() {\n      return this.children.reduce(function (legends, child) {\n        return legends.concat(child.assembleLegends());\n      }, _assembleLegends(this));\n    }\n  }]);\n\n  return LayerModel;\n}(Model);","map":{"version":3,"sources":["../../../src/compile/layer.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { array } from 'vega-util';\nimport * as log from '../log';\nimport { isLayerSpec, isUnitSpec } from '../spec';\nimport { keys } from '../util';\nimport { assembleAxisSignals } from './axis/assemble';\nimport { parseLayerAxes } from './axis/parse';\nimport { parseData } from './data/parse';\nimport { assembleLayoutSignals } from './layoutsize/assemble';\nimport { parseLayerLayoutSize } from './layoutsize/parse';\nimport { assembleLegends } from './legend/assemble';\nimport { Model } from './model';\nimport { assembleLayerSelectionMarks } from './selection/assemble';\nimport { UnitModel } from './unit';\nexport class LayerModel extends Model {\n    constructor(spec, parent, parentGivenName, parentGivenSize, config) {\n        super(spec, 'layer', parent, parentGivenName, config, spec.resolve, spec.view);\n        const layoutSize = Object.assign(Object.assign(Object.assign({}, parentGivenSize), (spec.width ? { width: spec.width } : {})), (spec.height ? { height: spec.height } : {}));\n        this.children = spec.layer.map((layer, i) => {\n            if (isLayerSpec(layer)) {\n                return new LayerModel(layer, this, this.getName(`layer_${i}`), layoutSize, config);\n            }\n            else if (isUnitSpec(layer)) {\n                return new UnitModel(layer, this, this.getName(`layer_${i}`), layoutSize, config);\n            }\n            throw new Error(log.message.invalidSpec(layer));\n        });\n    }\n    parseData() {\n        this.component.data = parseData(this);\n        for (const child of this.children) {\n            child.parseData();\n        }\n    }\n    parseLayoutSize() {\n        parseLayerLayoutSize(this);\n    }\n    parseSelections() {\n        // Merge selections up the hierarchy so that they may be referenced\n        // across unit specs. Persist their definitions within each child\n        // to assemble signals which remain within output Vega unit groups.\n        this.component.selection = {};\n        for (const child of this.children) {\n            child.parseSelections();\n            for (const key of keys(child.component.selection)) {\n                this.component.selection[key] = child.component.selection[key];\n            }\n        }\n    }\n    parseMarkGroup() {\n        for (const child of this.children) {\n            child.parseMarkGroup();\n        }\n    }\n    parseAxesAndHeaders() {\n        parseLayerAxes(this);\n    }\n    assembleSelectionTopLevelSignals(signals) {\n        return this.children.reduce((sg, child) => child.assembleSelectionTopLevelSignals(sg), signals);\n    }\n    // TODO: Support same named selections across children.\n    assembleSignals() {\n        return this.children.reduce((signals, child) => {\n            return signals.concat(child.assembleSignals());\n        }, assembleAxisSignals(this));\n    }\n    assembleLayoutSignals() {\n        return this.children.reduce((signals, child) => {\n            return signals.concat(child.assembleLayoutSignals());\n        }, assembleLayoutSignals(this));\n    }\n    assembleSelectionData(data) {\n        return this.children.reduce((db, child) => child.assembleSelectionData(db), data);\n    }\n    assembleGroupStyle() {\n        const uniqueStyles = new Set();\n        for (const child of this.children) {\n            for (const style of array(child.assembleGroupStyle())) {\n                uniqueStyles.add(style);\n            }\n        }\n        const styles = Array.from(uniqueStyles);\n        return styles.length > 1 ? styles : styles.length === 1 ? styles[0] : undefined;\n    }\n    assembleTitle() {\n        let title = super.assembleTitle();\n        if (title) {\n            return title;\n        }\n        // If title does not provide layer, look into children\n        for (const child of this.children) {\n            title = child.assembleTitle();\n            if (title) {\n                return title;\n            }\n        }\n        return undefined;\n    }\n    assembleLayout() {\n        return null;\n    }\n    assembleMarks() {\n        return assembleLayerSelectionMarks(this, this.children.flatMap(child => {\n            return child.assembleMarks();\n        }));\n    }\n    assembleLegends() {\n        return this.children.reduce((legends, child) => {\n            return legends.concat(child.assembleLegends());\n        }, assembleLegends(this));\n    }\n}\n//# sourceMappingURL=layer.js.map"]},"metadata":{},"sourceType":"module"}