{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport { projectPosition } from '../../shaderlib/project/project-functions';\nimport { COORDINATE_SYSTEM } from '../../lib';\nvar DEFAULT_LIGHT_COLOR = [255, 255, 255];\nvar DEFAULT_LIGHT_INTENSITY = 1.0;\nvar DEFAULT_ATTENUATION = [0, 0, 1];\nvar DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\nvar idCount = 0;\nexport var PointLight = /*#__PURE__*/function () {\n  function PointLight() {\n    _classCallCheck(this, PointLight);\n\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var _props$color = props.color,\n        color = _props$color === void 0 ? DEFAULT_LIGHT_COLOR : _props$color;\n    var _props$intensity = props.intensity,\n        intensity = _props$intensity === void 0 ? DEFAULT_LIGHT_INTENSITY : _props$intensity;\n    var _props$position = props.position,\n        position = _props$position === void 0 ? DEFAULT_LIGHT_POSITION : _props$position;\n    this.id = props.id || \"point-\".concat(idCount++);\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = _objectSpread({}, this);\n  }\n\n  _createClass(PointLight, [{\n    key: \"getProjectedLight\",\n    value: function getProjectedLight(_ref) {\n      var layer = _ref.layer;\n      var projectedLight = this.projectedLight;\n      var viewport = layer.context.viewport;\n      var _layer$props = layer.props,\n          coordinateSystem = _layer$props.coordinateSystem,\n          coordinateOrigin = _layer$props.coordinateOrigin;\n      var position = projectPosition(this.position, {\n        viewport: viewport,\n        coordinateSystem: coordinateSystem,\n        coordinateOrigin: coordinateOrigin,\n        fromCoordinateSystem: viewport.isGeospatial ? COORDINATE_SYSTEM.LNGLAT : COORDINATE_SYSTEM.CARTESIAN,\n        fromCoordinateOrigin: [0, 0, 0]\n      });\n      projectedLight.color = this.color;\n      projectedLight.intensity = this.intensity;\n      projectedLight.position = position;\n      return projectedLight;\n    }\n  }]);\n\n  return PointLight;\n}();\n\nfunction getAttenuation(props) {\n  if ('attenuation' in props) {\n    return props.attenuation;\n  }\n\n  if ('intensity' in props) {\n    return [0, 0, props.intensity];\n  }\n\n  return DEFAULT_ATTENUATION;\n}","map":{"version":3,"sources":["../../../../src/effects/lighting/point-light.js"],"names":["DEFAULT_LIGHT_COLOR","DEFAULT_LIGHT_INTENSITY","DEFAULT_ATTENUATION","DEFAULT_LIGHT_POSITION","idCount","constructor","props","color","intensity","position","getAttenuation","layer","projectedLight","viewport","coordinateOrigin","projectPosition","coordinateSystem","fromCoordinateSystem","COORDINATE_SYSTEM","fromCoordinateOrigin"],"mappings":";;;AAAA,SAAA,eAAA,QAAA,2CAAA;AACA,SAAA,iBAAA,QAAA,WAAA;AAEA,IAAMA,mBAAmB,GAAG,CAAA,GAAA,EAAA,GAAA,EAA5B,GAA4B,CAA5B;AACA,IAAMC,uBAAuB,GAA7B,GAAA;AACA,IAAMC,mBAAmB,GAAG,CAAA,CAAA,EAAA,CAAA,EAA5B,CAA4B,CAA5B;AACA,IAAMC,sBAAsB,GAAG,CAAA,GAAA,EAAA,GAAA,EAA/B,GAA+B,CAA/B;AAEA,IAAIC,OAAO,GAAX,CAAA;AAEA,WAAO,UAAP;AACEC,wBAAwB;AAAA;;AAAA,QAAZC,KAAY,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAJ,EAAI;AAAA,uBACtB,KADsB,CACfC,KADe;AAAA,QACfA,KADe,6BACPP,mBADO;AAAA,2BAEtB,KAFsB,CAEfQ,SAFe;AAAA,QAEfA,SAFe,iCAEHP,uBAFG;AAAA,0BAGtB,KAHsB,CAGfQ,QAHe;AAAA,QAGfA,QAHe,gCAGJN,sBAHI;AAKtB,SAAA,EAAA,GAAUG,KAAK,CAALA,EAAAA,IAAAA,SAAAA,MAAAA,CAAqBF,OAA/B,EAAUE,CAAV;AACA,SAAA,KAAA,GAAA,KAAA;AACA,SAAA,SAAA,GAAA,SAAA;AACA,SAAA,IAAA,GAAA,OAAA;AACA,SAAA,QAAA,GAAA,QAAA;AACA,SAAA,WAAA,GAAmBI,cAAc,CAAjC,KAAiC,CAAjC;AACA,SAAA,cAAA,qBAA0B,IAA1B;AACD;;AAbH;AAAA;AAAA,sCAemB,IAfnB,EAe6B;AAAA,UAARC,KAAQ,GAAA,IAAA,CAARA,KAAQ;AAAA,UAClBC,cADkB,GACzB,IADyB,CAClBA,cADkB;AAEzB,UAAMC,QAAQ,GAAGF,KAAK,CAALA,OAAAA,CAAjB,QAAA;AAFyB,yBAGoBA,KAAK,CAAlD,KAHyB;AAAA,UAGnB,gBAHmB,gBAGnB,gBAHmB;AAAA,UAGAG,gBAHA,gBAGAA,gBAHA;AAIzB,UAAML,QAAQ,GAAGM,eAAe,CAAC,KAAD,QAAA,EAAgB;AAC9CF,QAAAA,QAD8C,EAC9CA,QAD8C;AAE9CG,QAAAA,gBAF8C,EAE9CA,gBAF8C;AAG9CF,QAAAA,gBAH8C,EAG9CA,gBAH8C;AAI9CG,QAAAA,oBAAoB,EAAEJ,QAAQ,CAARA,YAAAA,GAClBK,iBAAiB,CADCL,MAAAA,GAElBK,iBAAiB,CANyB,SAAA;AAO9CC,QAAAA,oBAAoB,EAAE,CAAA,CAAA,EAAA,CAAA,EAAA,CAAA;AAPwB,OAAhB,CAAhC;AASAP,MAAAA,cAAc,CAAdA,KAAAA,GAAuB,KAAvBA,KAAAA;AACAA,MAAAA,cAAc,CAAdA,SAAAA,GAA2B,KAA3BA,SAAAA;AACAA,MAAAA,cAAc,CAAdA,QAAAA,GAAAA,QAAAA;AACA,aAAA,cAAA;AACD;AAhCH;;AAAA;AAAA;;AAmCA,SAAA,cAAA,CAAA,KAAA,EAA+B;AAC7B,MAAI,iBAAJ,KAAA,EAA4B;AAC1B,WAAON,KAAK,CAAZ,WAAA;AACD;;AACD,MAAI,eAAJ,KAAA,EAA0B;AACxB,WAAO,CAAA,CAAA,EAAA,CAAA,EAAOA,KAAK,CAAnB,SAAO,CAAP;AACD;;AACD,SAAA,mBAAA;AACD","sourcesContent":["import {projectPosition} from '../../shaderlib/project/project-functions';\nimport {COORDINATE_SYSTEM} from '../../lib';\n\nconst DEFAULT_LIGHT_COLOR = [255, 255, 255];\nconst DEFAULT_LIGHT_INTENSITY = 1.0;\nconst DEFAULT_ATTENUATION = [0, 0, 1];\nconst DEFAULT_LIGHT_POSITION = [0.0, 0.0, 1.0];\n\nlet idCount = 0;\n\nexport class PointLight {\n  constructor(props = {}) {\n    const {color = DEFAULT_LIGHT_COLOR} = props;\n    const {intensity = DEFAULT_LIGHT_INTENSITY} = props;\n    const {position = DEFAULT_LIGHT_POSITION} = props;\n\n    this.id = props.id || `point-${idCount++}`;\n    this.color = color;\n    this.intensity = intensity;\n    this.type = 'point';\n    this.position = position;\n    this.attenuation = getAttenuation(props);\n    this.projectedLight = {...this};\n  }\n\n  getProjectedLight({layer}) {\n    const {projectedLight} = this;\n    const viewport = layer.context.viewport;\n    const {coordinateSystem, coordinateOrigin} = layer.props;\n    const position = projectPosition(this.position, {\n      viewport,\n      coordinateSystem,\n      coordinateOrigin,\n      fromCoordinateSystem: viewport.isGeospatial\n        ? COORDINATE_SYSTEM.LNGLAT\n        : COORDINATE_SYSTEM.CARTESIAN,\n      fromCoordinateOrigin: [0, 0, 0]\n    });\n    projectedLight.color = this.color;\n    projectedLight.intensity = this.intensity;\n    projectedLight.position = position;\n    return projectedLight;\n  }\n}\n\nfunction getAttenuation(props) {\n  if ('attenuation' in props) {\n    return props.attenuation;\n  }\n  if ('intensity' in props) {\n    return [0, 0, props.intensity];\n  }\n  return DEFAULT_ATTENUATION;\n}\n"]},"metadata":{},"sourceType":"module"}