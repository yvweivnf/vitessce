{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { resolvePath, assert } from '@loaders.gl/loader-utils';\nexport function generateUrl(getUrl, options, urlOptions) {\n  var url = getUrl;\n\n  if (typeof getUrl === 'function') {\n    url = getUrl(_objectSpread({}, options, {}, urlOptions));\n  }\n\n  assert(typeof url === 'string');\n  var baseUrl = options.baseUrl;\n\n  if (baseUrl) {\n    url = baseUrl[baseUrl.length - 1] === '/' ? \"\".concat(baseUrl).concat(url) : \"\".concat(baseUrl, \"/\").concat(url);\n  }\n\n  return resolvePath(url);\n}","map":{"version":3,"sources":["../../../../src/lib/texture-api/generate-url.ts"],"names":["url","getUrl","urlOptions","assert","baseUrl","resolvePath"],"mappings":";AAAA,SAAA,WAAA,EAAA,MAAA,QAAA,0BAAA;AAGA,OAAO,SAAA,WAAA,CAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAkD;AAEvD,MAAIA,GAAG,GAAP,MAAA;;AACA,MAAI,OAAA,MAAA,KAAJ,UAAA,EAAkC;AAChCA,IAAAA,GAAG,GAAGC,MAAM,mBAAC,OAAD,MAAiBC,UAAjB,EAAZF;AACD;;AACDG,EAAAA,MAAM,CAAC,OAAA,GAAA,KAAPA,QAAM,CAANA;AANuD,MAShDC,OATgD,GASvD,OATuD,CAShDA,OATgD;;AAUvD,MAAA,OAAA,EAAa;AACXJ,IAAAA,GAAG,GAAGI,OAAO,CAACA,OAAO,CAAPA,MAAAA,GAARA,CAAO,CAAPA,KAAAA,GAAAA,GAAAA,GAAAA,MAAAA,CAAAA,OAAAA,EAAAA,MAAAA,CAAAA,GAAAA,CAAAA,GAAAA,GAAAA,MAAAA,CAAAA,OAAAA,EAAAA,GAAAA,EAAAA,MAAAA,CAANJ,GAAMI,CAANJ;AACD;;AAED,SAAOK,WAAW,CAAlB,GAAkB,CAAlB;AACD","sourcesContent":["import {resolvePath, assert} from '@loaders.gl/loader-utils';\n\n// Generate a url by calling getUrl with mix of options, applying options.baseUrl\nexport function generateUrl(getUrl, options, urlOptions) {\n  // Get url\n  let url = getUrl;\n  if (typeof getUrl === 'function') {\n    url = getUrl({...options, ...urlOptions});\n  }\n  assert(typeof url === 'string');\n\n  // Apply options.baseUrl\n  const {baseUrl} = options;\n  if (baseUrl) {\n    url = baseUrl[baseUrl.length - 1] === '/' ? `${baseUrl}${url}` : `${baseUrl}/${url}`;\n  }\n\n  return resolvePath(url);\n}\n"]},"metadata":{},"sourceType":"module"}