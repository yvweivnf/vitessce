{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { Split } from '../split';\n\nfunction isFalseOrNull(v) {\n  return v === false || v === null;\n}\n\nvar AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({\n  disable: 1,\n  gridScale: 1,\n  scale: 1\n}, COMMON_AXIS_PROPERTIES_INDEX), {\n  labelExpr: 1,\n  encode: 1\n});\nexport var AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport var AxisComponent = /*#__PURE__*/function (_Split) {\n  _inherits(AxisComponent, _Split);\n\n  var _super = _createSuper(AxisComponent);\n\n  function AxisComponent() {\n    var _this;\n\n    var explicit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var implicit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var mainExtracted = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    _classCallCheck(this, AxisComponent);\n\n    _this = _super.call(this);\n    _this.explicit = explicit;\n    _this.implicit = implicit;\n    _this.mainExtracted = mainExtracted;\n    return _this;\n  }\n\n  _createClass(AxisComponent, [{\n    key: \"clone\",\n    value: function clone() {\n      return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n    }\n  }, {\n    key: \"hasAxisPart\",\n    value: function hasAxisPart(part) {\n      // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n      if (part === 'axis') {\n        // always has the axis container part\n        return true;\n      }\n\n      if (part === 'grid' || part === 'title') {\n        return !!this.get(part);\n      } // Other parts are enabled by default, so they should not be false or null.\n\n\n      return !isFalseOrNull(this.get(part));\n    }\n  }, {\n    key: \"hasOrientSignalRef\",\n    value: function hasOrientSignalRef() {\n      return isSignalRef(this.explicit.orient);\n    }\n  }]);\n\n  return AxisComponent;\n}(Split);","map":{"version":3,"sources":["../../../../src/compile/axis/component.ts"],"names":[],"mappings":";;;;AACA,SAIE,4BAJF,QAMO,YANP;AAQA,SAAQ,SAAR,EAAyB,IAAzB,QAAoC,YAApC;AACA,SAAQ,WAAR,QAA0B,mBAA1B;AACA,SAAQ,KAAR,QAAoB,UAApB;;AAEA,SAAS,aAAT,CAAuB,CAAvB,EAA6B;AAC3B,SAAO,CAAC,KAAK,KAAN,IAAe,CAAC,KAAK,IAA5B;AACD;;AASD,IAAM,+BAA+B,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA;AACnC,EAAA,OAAO,EAAE,CAD0B;AAEnC,EAAA,SAAS,EAAE,CAFwB;AAGnC,EAAA,KAAK,EAAE;AAH4B,CAAA,EAIhC,4BAJgC,CAAA,EAIJ;AAC/B,EAAA,SAAS,EAAE,CADoB;AAE/B,EAAA,MAAM,EAAE;AAFuB,CAJI,CAArC;AASA,OAAO,IAAM,yBAAyB,GAAG,IAAI,CAAC,+BAAD,CAAtC;AAEP,WAAa,aAAb;AAAA;;AAAA;;AACE,2BAG8B;AAAA;;AAAA,QAFZ,QAEY,uEAF4B,EAE5B;AAAA,QADZ,QACY,uEAD4B,EAC5B;AAAA,QAArB,aAAqB,uEAAL,KAAK;;AAAA;;AAE5B;AAJgB,UAAA,QAAA,GAAA,QAAA;AACA,UAAA,QAAA,GAAA,QAAA;AACT,UAAA,aAAA,GAAA,aAAA;AAAqB;AAG7B;;AAPH;AAAA;AAAA,4BASc;AACV,aAAO,IAAI,aAAJ,CAAkB,SAAS,CAAC,KAAK,QAAN,CAA3B,EAA4C,SAAS,CAAC,KAAK,QAAN,CAArD,EAAsE,KAAK,aAA3E,CAAP;AACD;AAXH;AAAA;AAAA,gCAaqB,IAbrB,EAamC;AAC/B;AAEA,UAAI,IAAI,KAAK,MAAb,EAAqB;AACnB;AACA,eAAO,IAAP;AACD;;AAED,UAAI,IAAI,KAAK,MAAT,IAAmB,IAAI,KAAK,OAAhC,EAAyC;AACvC,eAAO,CAAC,CAAC,KAAK,GAAL,CAAS,IAAT,CAAT;AACD,OAV8B,CAW/B;;;AACA,aAAO,CAAC,aAAa,CAAC,KAAK,GAAL,CAAS,IAAT,CAAD,CAArB;AACD;AA1BH;AAAA;AAAA,yCA4B2B;AACvB,aAAO,WAAW,CAAC,KAAK,QAAL,CAAc,MAAf,CAAlB;AACD;AA9BH;;AAAA;AAAA,EAAmC,KAAnC","sourceRoot":"","sourcesContent":["import { COMMON_AXIS_PROPERTIES_INDEX } from '../../axis';\nimport { duplicate, keys } from '../../util';\nimport { isSignalRef } from '../../vega.schema';\nimport { Split } from '../split';\nfunction isFalseOrNull(v) {\n    return v === false || v === null;\n}\nconst AXIS_COMPONENT_PROPERTIES_INDEX = Object.assign(Object.assign({ disable: 1, gridScale: 1, scale: 1 }, COMMON_AXIS_PROPERTIES_INDEX), { labelExpr: 1, encode: 1 });\nexport const AXIS_COMPONENT_PROPERTIES = keys(AXIS_COMPONENT_PROPERTIES_INDEX);\nexport class AxisComponent extends Split {\n    constructor(explicit = {}, implicit = {}, mainExtracted = false) {\n        super();\n        this.explicit = explicit;\n        this.implicit = implicit;\n        this.mainExtracted = mainExtracted;\n    }\n    clone() {\n        return new AxisComponent(duplicate(this.explicit), duplicate(this.implicit), this.mainExtracted);\n    }\n    hasAxisPart(part) {\n        // FIXME(https://github.com/vega/vega-lite/issues/2552) this method can be wrong if users use a Vega theme.\n        if (part === 'axis') {\n            // always has the axis container part\n            return true;\n        }\n        if (part === 'grid' || part === 'title') {\n            return !!this.get(part);\n        }\n        // Other parts are enabled by default, so they should not be false or null.\n        return !isFalseOrNull(this.get(part));\n    }\n    hasOrientSignalRef() {\n        return isSignalRef(this.explicit.orient);\n    }\n}\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}