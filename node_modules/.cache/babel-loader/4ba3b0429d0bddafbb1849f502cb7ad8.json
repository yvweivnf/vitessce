{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport { isAggregateOp } from '../../aggregate';\nimport { vgField } from '../../channeldef';\nimport { duplicate, hash as _hash } from '../../util';\nimport { unique } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for the window transform nodes\n */\n\nexport var WindowTransformNode = /*#__PURE__*/function (_DataFlowNode) {\n  _inherits(WindowTransformNode, _DataFlowNode);\n\n  var _super = _createSuper(WindowTransformNode);\n\n  function WindowTransformNode(parent, transform) {\n    var _this;\n\n    _classCallCheck(this, WindowTransformNode);\n\n    _this = _super.call(this, parent);\n    _this.transform = transform;\n    return _this;\n  }\n\n  _createClass(WindowTransformNode, [{\n    key: \"clone\",\n    value: function clone() {\n      return new WindowTransformNode(null, duplicate(this.transform));\n    }\n  }, {\n    key: \"addDimensions\",\n    value: function addDimensions(fields) {\n      this.transform.groupby = unique(this.transform.groupby.concat(fields), function (d) {\n        return d;\n      });\n    }\n  }, {\n    key: \"dependentFields\",\n    value: function dependentFields() {\n      var _a, _b;\n\n      var out = new Set();\n      ((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : []).forEach(out.add, out);\n      ((_b = this.transform.sort) !== null && _b !== void 0 ? _b : []).forEach(function (m) {\n        return out.add(m.field);\n      });\n      this.transform.window.map(function (w) {\n        return w.field;\n      }).filter(function (f) {\n        return f !== undefined;\n      }).forEach(out.add, out);\n      return out;\n    }\n  }, {\n    key: \"producedFields\",\n    value: function producedFields() {\n      return new Set(this.transform.window.map(this.getDefaultName));\n    }\n  }, {\n    key: \"getDefaultName\",\n    value: function getDefaultName(windowFieldDef) {\n      var _a;\n\n      return (_a = windowFieldDef.as) !== null && _a !== void 0 ? _a : vgField(windowFieldDef);\n    }\n  }, {\n    key: \"hash\",\n    value: function hash() {\n      return \"WindowTransform \".concat(_hash(this.transform));\n    }\n  }, {\n    key: \"assemble\",\n    value: function assemble() {\n      var _a;\n\n      var fields = [];\n      var ops = [];\n      var as = [];\n      var params = [];\n\n      var _iterator = _createForOfIteratorHelper(this.transform.window),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var window = _step.value;\n          ops.push(window.op);\n          as.push(this.getDefaultName(window));\n          params.push(window.param === undefined ? null : window.param);\n          fields.push(window.field === undefined ? null : window.field);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      var frame = this.transform.frame;\n      var groupby = this.transform.groupby;\n\n      if (frame && frame[0] === null && frame[1] === null && ops.every(function (o) {\n        return isAggregateOp(o);\n      })) {\n        // when the window does not rely on any particular window ops or frame, switch to a simpler and more efficient joinaggregate\n        return Object.assign({\n          type: 'joinaggregate',\n          as: as,\n          ops: ops,\n          fields: fields\n        }, groupby !== undefined ? {\n          groupby: groupby\n        } : {});\n      }\n\n      var sortFields = [];\n      var sortOrder = [];\n\n      if (this.transform.sort !== undefined) {\n        var _iterator2 = _createForOfIteratorHelper(this.transform.sort),\n            _step2;\n\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var sortField = _step2.value;\n            sortFields.push(sortField.field);\n            sortOrder.push((_a = sortField.order) !== null && _a !== void 0 ? _a : 'ascending');\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n      }\n\n      var sort = {\n        field: sortFields,\n        order: sortOrder\n      };\n      var ignorePeers = this.transform.ignorePeers;\n      return Object.assign(Object.assign(Object.assign({\n        type: 'window',\n        params: params,\n        as: as,\n        ops: ops,\n        fields: fields,\n        sort: sort\n      }, ignorePeers !== undefined ? {\n        ignorePeers: ignorePeers\n      } : {}), groupby !== undefined ? {\n        groupby: groupby\n      } : {}), frame !== undefined ? {\n        frame: frame\n      } : {});\n    }\n  }]);\n\n  return WindowTransformNode;\n}(DataFlowNode);","map":{"version":3,"sources":["../../../../src/compile/data/window.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { isAggregateOp } from '../../aggregate';\nimport { vgField } from '../../channeldef';\nimport { duplicate, hash } from '../../util';\nimport { unique } from '../../util';\nimport { DataFlowNode } from './dataflow';\n/**\n * A class for the window transform nodes\n */\nexport class WindowTransformNode extends DataFlowNode {\n    constructor(parent, transform) {\n        super(parent);\n        this.transform = transform;\n    }\n    clone() {\n        return new WindowTransformNode(null, duplicate(this.transform));\n    }\n    addDimensions(fields) {\n        this.transform.groupby = unique(this.transform.groupby.concat(fields), d => d);\n    }\n    dependentFields() {\n        var _a, _b;\n        const out = new Set();\n        ((_a = this.transform.groupby) !== null && _a !== void 0 ? _a : []).forEach(out.add, out);\n        ((_b = this.transform.sort) !== null && _b !== void 0 ? _b : []).forEach(m => out.add(m.field));\n        this.transform.window\n            .map(w => w.field)\n            .filter(f => f !== undefined)\n            .forEach(out.add, out);\n        return out;\n    }\n    producedFields() {\n        return new Set(this.transform.window.map(this.getDefaultName));\n    }\n    getDefaultName(windowFieldDef) {\n        var _a;\n        return (_a = windowFieldDef.as) !== null && _a !== void 0 ? _a : vgField(windowFieldDef);\n    }\n    hash() {\n        return `WindowTransform ${hash(this.transform)}`;\n    }\n    assemble() {\n        var _a;\n        const fields = [];\n        const ops = [];\n        const as = [];\n        const params = [];\n        for (const window of this.transform.window) {\n            ops.push(window.op);\n            as.push(this.getDefaultName(window));\n            params.push(window.param === undefined ? null : window.param);\n            fields.push(window.field === undefined ? null : window.field);\n        }\n        const frame = this.transform.frame;\n        const groupby = this.transform.groupby;\n        if (frame && frame[0] === null && frame[1] === null && ops.every(o => isAggregateOp(o))) {\n            // when the window does not rely on any particular window ops or frame, switch to a simpler and more efficient joinaggregate\n            return Object.assign({ type: 'joinaggregate', as, ops: ops, fields }, (groupby !== undefined ? { groupby } : {}));\n        }\n        const sortFields = [];\n        const sortOrder = [];\n        if (this.transform.sort !== undefined) {\n            for (const sortField of this.transform.sort) {\n                sortFields.push(sortField.field);\n                sortOrder.push((_a = sortField.order) !== null && _a !== void 0 ? _a : 'ascending');\n            }\n        }\n        const sort = {\n            field: sortFields,\n            order: sortOrder\n        };\n        const ignorePeers = this.transform.ignorePeers;\n        return Object.assign(Object.assign(Object.assign({ type: 'window', params,\n            as,\n            ops,\n            fields,\n            sort }, (ignorePeers !== undefined ? { ignorePeers } : {})), (groupby !== undefined ? { groupby } : {})), (frame !== undefined ? { frame } : {}));\n    }\n}\n//# sourceMappingURL=window.js.map"]},"metadata":{},"sourceType":"module"}