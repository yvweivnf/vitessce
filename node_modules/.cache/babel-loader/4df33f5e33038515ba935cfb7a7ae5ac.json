{"ast":null,"code":"//index.js\nvar deepEqual = require('deep-equal');\n\nvar Equality = function (opt) {\n  this.precision = opt && opt.precision ? opt.precision : 17;\n  this.direction = opt && opt.direction ? opt.direction : false;\n  this.pseudoNode = opt && opt.pseudoNode ? opt.pseudoNode : false;\n  this.objectComparator = opt && opt.objectComparator ? opt.objectComparator : objectComparator;\n};\n\nEquality.prototype.compare = function (g1, g2) {\n  if (g1.type !== g2.type || !sameLength(g1, g2)) return false;\n\n  switch (g1.type) {\n    case 'Point':\n      return this.compareCoord(g1.coordinates, g2.coordinates);\n      break;\n\n    case 'LineString':\n      return this.compareLine(g1.coordinates, g2.coordinates, 0, false);\n      break;\n\n    case 'Polygon':\n      return this.comparePolygon(g1, g2);\n      break;\n\n    case 'Feature':\n      return this.compareFeature(g1, g2);\n\n    default:\n      if (g1.type.indexOf('Multi') === 0) {\n        var context = this;\n        var g1s = explode(g1);\n        var g2s = explode(g2);\n        return g1s.every(function (g1part) {\n          return this.some(function (g2part) {\n            return context.compare(g1part, g2part);\n          });\n        }, g2s);\n      }\n\n  }\n\n  return false;\n};\n\nfunction explode(g) {\n  return g.coordinates.map(function (part) {\n    return {\n      type: g.type.replace('Multi', ''),\n      coordinates: part\n    };\n  });\n} //compare length of coordinates/array\n\n\nfunction sameLength(g1, g2) {\n  return g1.hasOwnProperty('coordinates') ? g1.coordinates.length === g2.coordinates.length : g1.length === g2.length;\n} // compare the two coordinates [x,y]\n\n\nEquality.prototype.compareCoord = function (c1, c2) {\n  if (c1.length !== c2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < c1.length; i++) {\n    if (c1[i].toFixed(this.precision) !== c2[i].toFixed(this.precision)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nEquality.prototype.compareLine = function (path1, path2, ind, isPoly) {\n  if (!sameLength(path1, path2)) return false;\n  var p1 = this.pseudoNode ? path1 : this.removePseudo(path1);\n  var p2 = this.pseudoNode ? path2 : this.removePseudo(path2);\n\n  if (isPoly && !this.compareCoord(p1[0], p2[0])) {\n    // fix start index of both to same point\n    p2 = this.fixStartIndex(p2, p1);\n    if (!p2) return;\n  } // for linestring ind =0 and for polygon ind =1\n\n\n  var sameDirection = this.compareCoord(p1[ind], p2[ind]);\n\n  if (this.direction || sameDirection) {\n    return this.comparePath(p1, p2);\n  } else {\n    if (this.compareCoord(p1[ind], p2[p2.length - (1 + ind)])) {\n      return this.comparePath(p1.slice().reverse(), p2);\n    }\n\n    return false;\n  }\n};\n\nEquality.prototype.fixStartIndex = function (sourcePath, targetPath) {\n  //make sourcePath first point same as of targetPath\n  var correctPath,\n      ind = -1;\n\n  for (var i = 0; i < sourcePath.length; i++) {\n    if (this.compareCoord(sourcePath[i], targetPath[0])) {\n      ind = i;\n      break;\n    }\n  }\n\n  if (ind >= 0) {\n    correctPath = [].concat(sourcePath.slice(ind, sourcePath.length), sourcePath.slice(1, ind + 1));\n  }\n\n  return correctPath;\n};\n\nEquality.prototype.comparePath = function (p1, p2) {\n  var cont = this;\n  return p1.every(function (c, i) {\n    return cont.compareCoord(c, this[i]);\n  }, p2);\n};\n\nEquality.prototype.comparePolygon = function (g1, g2) {\n  if (this.compareLine(g1.coordinates[0], g2.coordinates[0], 1, true)) {\n    var holes1 = g1.coordinates.slice(1, g1.coordinates.length);\n    var holes2 = g2.coordinates.slice(1, g2.coordinates.length);\n    var cont = this;\n    return holes1.every(function (h1) {\n      return this.some(function (h2) {\n        return cont.compareLine(h1, h2, 1, true);\n      });\n    }, holes2);\n  } else {\n    return false;\n  }\n};\n\nEquality.prototype.compareFeature = function (g1, g2) {\n  if (g1.id !== g2.id || !this.objectComparator(g1.properties, g2.properties) || !this.compareBBox(g1, g2)) {\n    return false;\n  }\n\n  return this.compare(g1.geometry, g2.geometry);\n};\n\nEquality.prototype.compareBBox = function (g1, g2) {\n  if (!g1.bbox && !g2.bbox || g1.bbox && g2.bbox && this.compareCoord(g1.bbox, g2.bbox)) {\n    return true;\n  }\n\n  return false;\n};\n\nEquality.prototype.removePseudo = function (path) {\n  //TODO to be implement\n  return path;\n};\n\nfunction objectComparator(obj1, obj2) {\n  return deepEqual(obj1, obj2, {\n    strict: true\n  });\n}\n\nmodule.exports = Equality;","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/geojson-equality/index.js"],"names":["deepEqual","require","Equality","opt","precision","direction","pseudoNode","objectComparator","prototype","compare","g1","g2","type","sameLength","compareCoord","coordinates","compareLine","comparePolygon","compareFeature","indexOf","context","g1s","explode","g2s","every","g1part","some","g2part","g","map","part","replace","hasOwnProperty","length","c1","c2","i","toFixed","path1","path2","ind","isPoly","p1","removePseudo","p2","fixStartIndex","sameDirection","comparePath","slice","reverse","sourcePath","targetPath","correctPath","concat","cont","c","holes1","holes2","h1","h2","id","properties","compareBBox","geometry","bbox","path","obj1","obj2","strict","module","exports"],"mappings":"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","sourcesContent":["//index.js\nvar deepEqual = require('deep-equal');\n\nvar Equality = function(opt) {\n  this.precision = opt && opt.precision ? opt.precision : 17;\n  this.direction = opt && opt.direction ? opt.direction : false;\n  this.pseudoNode = opt && opt.pseudoNode ? opt.pseudoNode : false;\n  this.objectComparator = opt && opt.objectComparator ? opt.objectComparator : objectComparator;\n};\n\nEquality.prototype.compare = function(g1,g2) {\n  if (g1.type !== g2.type || !sameLength(g1,g2)) return false;\n\n  switch(g1.type) {\n  case 'Point':\n    return this.compareCoord(g1.coordinates, g2.coordinates);\n    break;\n  case 'LineString':\n    return this.compareLine(g1.coordinates, g2.coordinates,0,false);\n    break;\n  case 'Polygon':\n    return this.comparePolygon(g1,g2);\n    break;\n  case 'Feature':\n    return this.compareFeature(g1, g2);\n  default:\n    if (g1.type.indexOf('Multi') === 0) {\n      var context = this;\n      var g1s = explode(g1);\n      var g2s = explode(g2);\n      return g1s.every(function(g1part) {\n        return this.some(function(g2part) {\n          return context.compare(g1part,g2part);\n        });\n      },g2s);\n    }\n  }\n  return false;\n};\n\nfunction explode(g) {\n  return g.coordinates.map(function(part) {\n    return {\n      type: g.type.replace('Multi', ''),\n      coordinates: part}\n  });\n}\n//compare length of coordinates/array\nfunction sameLength(g1,g2) {\n   return g1.hasOwnProperty('coordinates') ?\n    g1.coordinates.length === g2.coordinates.length\n    : g1.length === g2.length;\n}\n\n// compare the two coordinates [x,y]\nEquality.prototype.compareCoord = function(c1,c2) {\n  if (c1.length !== c2.length) {\n    return false;\n  }\n\n  for (var i=0; i < c1.length; i++) {\n    if (c1[i].toFixed(this.precision) !== c2[i].toFixed(this.precision)) {\n      return false;\n    }\n  }\n  return true;\n};\n\nEquality.prototype.compareLine = function(path1,path2,ind,isPoly) {\n  if (!sameLength(path1,path2)) return false;\n  var p1 = this.pseudoNode ? path1 : this.removePseudo(path1);\n  var p2 = this.pseudoNode ? path2 : this.removePseudo(path2);\n  if (isPoly && !this.compareCoord(p1[0],p2[0])) {\n    // fix start index of both to same point\n    p2 = this.fixStartIndex(p2,p1);\n    if(!p2) return;\n  }\n  // for linestring ind =0 and for polygon ind =1\n  var sameDirection = this.compareCoord(p1[ind],p2[ind]);\n  if (this.direction || sameDirection\n  ) {\n    return this.comparePath(p1, p2);\n  } else {\n    if (this.compareCoord(p1[ind],p2[p2.length - (1+ind)])\n    ) {\n      return this.comparePath(p1.slice().reverse(), p2);\n    }\n    return false;\n  }\n};\nEquality.prototype.fixStartIndex = function(sourcePath,targetPath) {\n  //make sourcePath first point same as of targetPath\n  var correctPath,ind = -1;\n  for (var i=0; i< sourcePath.length; i++) {\n    if(this.compareCoord(sourcePath[i],targetPath[0])) {\n      ind = i;\n      break;\n    }\n  }\n  if (ind >= 0) {\n    correctPath = [].concat(\n      sourcePath.slice(ind,sourcePath.length),\n      sourcePath.slice(1,ind+1));\n  }\n  return correctPath;\n};\nEquality.prototype.comparePath = function (p1,p2) {\n  var cont = this;\n  return p1.every(function(c,i) {\n    return cont.compareCoord(c,this[i]);\n  },p2);\n};\n\nEquality.prototype.comparePolygon = function(g1,g2) {\n  if (this.compareLine(g1.coordinates[0],g2.coordinates[0],1,true)) {\n    var holes1 = g1.coordinates.slice(1,g1.coordinates.length);\n    var holes2 = g2.coordinates.slice(1,g2.coordinates.length);\n    var cont = this;\n    return holes1.every(function(h1) {\n      return this.some(function(h2) {\n        return cont.compareLine(h1,h2,1,true);\n      });\n    },holes2);\n  } else {\n    return false;\n  }\n};\n\nEquality.prototype.compareFeature = function(g1,g2) {\n  if (\n    g1.id !== g2.id ||\n    !this.objectComparator(g1.properties, g2.properties) ||\n    !this.compareBBox(g1,g2)\n  ) {\n    return false;\n  }\n  return this.compare(g1.geometry, g2.geometry);\n};\n\nEquality.prototype.compareBBox = function(g1,g2) {\n  if (\n    (!g1.bbox && !g2.bbox) || \n    (\n      g1.bbox && g2.bbox &&\n      this.compareCoord(g1.bbox, g2.bbox)\n    )\n  )  {\n    return true;\n  }\n  return false;\n};\nEquality.prototype.removePseudo = function(path) {\n  //TODO to be implement\n  return path;\n};\n\nfunction objectComparator(obj1, obj2) {\n  return deepEqual(obj1, obj2, {strict: true});\n}\n\nmodule.exports = Equality;\n"]},"metadata":{},"sourceType":"script"}