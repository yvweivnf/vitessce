{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { writeConfig } from 'vega';\nimport { isObject, mergeConfig } from 'vega-util';\nimport { AXIS_CONFIGS, isConditionalAxisValue } from './axis';\nimport { signalOrValueRefWithCondition, signalRefOrValue } from './compile/common';\nimport { getAllCompositeMarks } from './compositemark';\nimport { replaceExprRef } from './expr';\nimport { VL_ONLY_LEGEND_CONFIG } from './guide';\nimport { HEADER_CONFIGS } from './header';\nimport { defaultLegendConfig } from './legend';\nimport * as mark from './mark';\nimport { MARK_CONFIGS, PRIMITIVE_MARKS, VL_ONLY_MARK_CONFIG_PROPERTIES, VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX } from './mark';\nimport { assembleParameterSignals } from './parameter';\nimport { defaultScaleConfig } from './scale';\nimport { defaultConfig as defaultSelectionConfig } from './selection';\nimport { DEFAULT_SPACING, isStep } from './spec/base';\nimport { extractTitleConfig } from './title';\nimport { duplicate, getFirstDefined, isEmpty, keys, omit } from './util';\nexport function getViewConfigContinuousSize(viewConfig, channel) {\n  var _a;\n\n  return (_a = viewConfig[channel]) !== null && _a !== void 0 ? _a : viewConfig[channel === 'width' ? 'continuousWidth' : 'continuousHeight']; // get width/height for backwards compatibility\n}\nexport function getViewConfigDiscreteStep(viewConfig, channel) {\n  const size = getViewConfigDiscreteSize(viewConfig, channel);\n  return isStep(size) ? size.step : DEFAULT_STEP;\n}\nexport function getViewConfigDiscreteSize(viewConfig, channel) {\n  var _a;\n\n  const size = (_a = viewConfig[channel]) !== null && _a !== void 0 ? _a : viewConfig[channel === 'width' ? 'discreteWidth' : 'discreteHeight']; // get width/height for backwards compatibility\n\n  return getFirstDefined(size, {\n    step: viewConfig.step\n  });\n}\nexport const DEFAULT_STEP = 20;\nexport const defaultViewConfig = {\n  continuousWidth: 200,\n  continuousHeight: 200,\n  step: DEFAULT_STEP\n};\nexport function isVgScheme(rangeScheme) {\n  return rangeScheme && !!rangeScheme['scheme'];\n}\nexport const defaultConfig = {\n  background: 'white',\n  padding: 5,\n  timeFormat: '%b %d, %Y',\n  countTitle: 'Count of Records',\n  view: defaultViewConfig,\n  mark: mark.defaultMarkConfig,\n  arc: {},\n  area: {},\n  bar: mark.defaultBarConfig,\n  circle: {},\n  geoshape: {},\n  image: {},\n  line: {},\n  point: {},\n  rect: mark.defaultRectConfig,\n  rule: {\n    color: 'black'\n  },\n  square: {},\n  text: {\n    color: 'black'\n  },\n  tick: mark.defaultTickConfig,\n  trail: {},\n  boxplot: {\n    size: 14,\n    extent: 1.5,\n    box: {},\n    median: {\n      color: 'white'\n    },\n    outliers: {},\n    rule: {},\n    ticks: null\n  },\n  errorbar: {\n    center: 'mean',\n    rule: true,\n    ticks: false\n  },\n  errorband: {\n    band: {\n      opacity: 0.3\n    },\n    borders: false\n  },\n  scale: defaultScaleConfig,\n  projection: {},\n  legend: defaultLegendConfig,\n  header: {\n    titlePadding: 10,\n    labelPadding: 10\n  },\n  headerColumn: {},\n  headerRow: {},\n  headerFacet: {},\n  selection: defaultSelectionConfig,\n  style: {},\n  title: {},\n  facet: {\n    spacing: DEFAULT_SPACING\n  },\n  concat: {\n    spacing: DEFAULT_SPACING\n  }\n}; // Tableau10 color palette, copied from `vegaScale.scheme('tableau10')`\n\nconst tab10 = ['#4c78a8', '#f58518', '#e45756', '#72b7b2', '#54a24b', '#eeca3b', '#b279a2', '#ff9da6', '#9d755d', '#bab0ac'];\nexport const DEFAULT_FONT_SIZE = {\n  text: 11,\n  guideLabel: 10,\n  guideTitle: 11,\n  groupTitle: 13,\n  groupSubtitle: 12\n};\nexport const DEFAULT_COLOR = {\n  blue: tab10[0],\n  orange: tab10[1],\n  red: tab10[2],\n  teal: tab10[3],\n  green: tab10[4],\n  yellow: tab10[5],\n  purple: tab10[6],\n  pink: tab10[7],\n  brown: tab10[8],\n  gray0: '#000',\n  gray1: '#111',\n  gray2: '#222',\n  gray3: '#333',\n  gray4: '#444',\n  gray5: '#555',\n  gray6: '#666',\n  gray7: '#777',\n  gray8: '#888',\n  gray9: '#999',\n  gray10: '#aaa',\n  gray11: '#bbb',\n  gray12: '#ccc',\n  gray13: '#ddd',\n  gray14: '#eee',\n  gray15: '#fff'\n};\nexport function colorSignalConfig(color = {}) {\n  return {\n    signals: [{\n      name: 'color',\n      value: isObject(color) ? Object.assign(Object.assign({}, DEFAULT_COLOR), color) : DEFAULT_COLOR\n    }],\n    mark: {\n      color: {\n        signal: 'color.blue'\n      }\n    },\n    rule: {\n      color: {\n        signal: 'color.gray0'\n      }\n    },\n    text: {\n      color: {\n        signal: 'color.gray0'\n      }\n    },\n    style: {\n      'guide-label': {\n        fill: {\n          signal: 'color.gray0'\n        }\n      },\n      'guide-title': {\n        fill: {\n          signal: 'color.gray0'\n        }\n      },\n      'group-title': {\n        fill: {\n          signal: 'color.gray0'\n        }\n      },\n      'group-subtitle': {\n        fill: {\n          signal: 'color.gray0'\n        }\n      },\n      cell: {\n        stroke: {\n          signal: 'color.gray8'\n        }\n      }\n    },\n    axis: {\n      domainColor: {\n        signal: 'color.gray13'\n      },\n      gridColor: {\n        signal: 'color.gray8'\n      },\n      tickColor: {\n        signal: 'color.gray13'\n      }\n    },\n    range: {\n      category: [{\n        signal: 'color.blue'\n      }, {\n        signal: 'color.orange'\n      }, {\n        signal: 'color.red'\n      }, {\n        signal: 'color.teal'\n      }, {\n        signal: 'color.green'\n      }, {\n        signal: 'color.yellow'\n      }, {\n        signal: 'color.purple'\n      }, {\n        signal: 'color.pink'\n      }, {\n        signal: 'color.brown'\n      }, {\n        signal: 'color.grey8'\n      }]\n    }\n  };\n}\nexport function fontSizeSignalConfig(fontSize) {\n  return {\n    signals: [{\n      name: 'fontSize',\n      value: isObject(fontSize) ? Object.assign(Object.assign({}, DEFAULT_FONT_SIZE), fontSize) : DEFAULT_FONT_SIZE\n    }],\n    text: {\n      fontSize: {\n        signal: 'fontSize.text'\n      }\n    },\n    style: {\n      'guide-label': {\n        fontSize: {\n          signal: 'fontSize.guideLabel'\n        }\n      },\n      'guide-title': {\n        fontSize: {\n          signal: 'fontSize.guideTitle'\n        }\n      },\n      'group-title': {\n        fontSize: {\n          signal: 'fontSize.groupTitle'\n        }\n      },\n      'group-subtitle': {\n        fontSize: {\n          signal: 'fontSize.groupSubtitle'\n        }\n      }\n    }\n  };\n}\nexport function fontConfig(font) {\n  return {\n    text: {\n      font\n    },\n    style: {\n      'guide-label': {\n        font\n      },\n      'guide-title': {\n        font\n      },\n      'group-title': {\n        font\n      },\n      'group-subtitle': {\n        font\n      }\n    }\n  };\n}\n\nfunction getAxisConfigInternal(axisConfig) {\n  const props = keys(axisConfig || {});\n  const axisConfigInternal = {};\n\n  for (const prop of props) {\n    const val = axisConfig[prop];\n    axisConfigInternal[prop] = isConditionalAxisValue(val) ? signalOrValueRefWithCondition(val) : signalRefOrValue(val);\n  }\n\n  return axisConfigInternal;\n}\n\nfunction getStyleConfigInternal(styleConfig) {\n  const props = keys(styleConfig);\n  const styleConfigInternal = {};\n\n  for (const prop of props) {\n    // We need to cast to cheat a bit here since styleConfig can be either mark config or axis config\n    styleConfigInternal[prop] = getAxisConfigInternal(styleConfig[prop]);\n  }\n\n  return styleConfigInternal;\n}\n\nconst configPropsWithExpr = [...MARK_CONFIGS, ...AXIS_CONFIGS, ...HEADER_CONFIGS, 'background', 'padding', 'legend', 'lineBreak', 'scale', 'style', 'title', 'view'];\n/**\n * Merge specified config with default config and config for the `color` flag,\n * then replace all expressions with signals\n */\n\nexport function initConfig(specifiedConfig = {}) {\n  const {\n    color,\n    font,\n    fontSize,\n    selection\n  } = specifiedConfig,\n        restConfig = __rest(specifiedConfig, [\"color\", \"font\", \"fontSize\", \"selection\"]);\n\n  const mergedConfig = mergeConfig({}, duplicate(defaultConfig), font ? fontConfig(font) : {}, color ? colorSignalConfig(color) : {}, fontSize ? fontSizeSignalConfig(fontSize) : {}, restConfig || {}); // mergeConfig doesn't recurse and overrides object values.\n\n  if (selection) {\n    writeConfig(mergedConfig, 'selection', selection, true);\n  }\n\n  const outputConfig = omit(mergedConfig, configPropsWithExpr);\n\n  for (const prop of ['background', 'lineBreak', 'padding']) {\n    if (mergedConfig[prop]) {\n      outputConfig[prop] = signalRefOrValue(mergedConfig[prop]);\n    }\n  }\n\n  for (const markConfigType of mark.MARK_CONFIGS) {\n    if (mergedConfig[markConfigType]) {\n      // FIXME: outputConfig[markConfigType] expects that types are replaced recursively but replaceExprRef only replaces one level deep\n      outputConfig[markConfigType] = replaceExprRef(mergedConfig[markConfigType]);\n    }\n  }\n\n  for (const axisConfigType of AXIS_CONFIGS) {\n    if (mergedConfig[axisConfigType]) {\n      outputConfig[axisConfigType] = getAxisConfigInternal(mergedConfig[axisConfigType]);\n    }\n  }\n\n  for (const headerConfigType of HEADER_CONFIGS) {\n    if (mergedConfig[headerConfigType]) {\n      outputConfig[headerConfigType] = replaceExprRef(mergedConfig[headerConfigType]);\n    }\n  }\n\n  if (mergedConfig.legend) {\n    outputConfig.legend = replaceExprRef(mergedConfig.legend);\n  }\n\n  if (mergedConfig.scale) {\n    outputConfig.scale = replaceExprRef(mergedConfig.scale);\n  }\n\n  if (mergedConfig.style) {\n    outputConfig.style = getStyleConfigInternal(mergedConfig.style);\n  }\n\n  if (mergedConfig.title) {\n    outputConfig.title = replaceExprRef(mergedConfig.title);\n  }\n\n  if (mergedConfig.view) {\n    outputConfig.view = replaceExprRef(mergedConfig.view);\n  }\n\n  return outputConfig;\n}\nconst MARK_STYLES = ['view', ...PRIMITIVE_MARKS];\nconst VL_ONLY_CONFIG_PROPERTIES = ['color', 'fontSize', 'background', 'padding', 'facet', 'concat', 'numberFormat', 'timeFormat', 'countTitle', 'header', 'axisQuantitative', 'axisTemporal', 'axisDiscrete', 'axisPoint', 'axisXBand', 'axisXPoint', 'axisXDiscrete', 'axisXQuantitative', 'axisXTemporal', 'axisYBand', 'axisYPoint', 'axisYDiscrete', 'axisYQuantitative', 'axisYTemporal', 'scale', 'selection', 'overlay' // FIXME: Redesign and unhide this\n];\nconst VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = Object.assign({\n  view: ['continuousWidth', 'continuousHeight', 'discreteWidth', 'discreteHeight', 'step']\n}, VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX);\nexport function stripAndRedirectConfig(config) {\n  config = duplicate(config);\n\n  for (const prop of VL_ONLY_CONFIG_PROPERTIES) {\n    delete config[prop];\n  }\n\n  if (config.axis) {\n    // delete condition axis config\n    for (const prop in config.axis) {\n      if (isConditionalAxisValue(config.axis[prop])) {\n        delete config.axis[prop];\n      }\n    }\n  }\n\n  if (config.legend) {\n    for (const prop of VL_ONLY_LEGEND_CONFIG) {\n      delete config.legend[prop];\n    }\n  } // Remove Vega-Lite only generic mark config\n\n\n  if (config.mark) {\n    for (const prop of VL_ONLY_MARK_CONFIG_PROPERTIES) {\n      delete config.mark[prop];\n    }\n\n    if (config.mark.tooltip && isObject(config.mark.tooltip)) {\n      delete config.mark.tooltip;\n    }\n  }\n\n  if (config.params) {\n    config.signals = (config.signals || []).concat(assembleParameterSignals(config.params));\n    delete config.params;\n  }\n\n  for (const markType of MARK_STYLES) {\n    // Remove Vega-Lite-only mark config\n    for (const prop of VL_ONLY_MARK_CONFIG_PROPERTIES) {\n      delete config[markType][prop];\n    } // Remove Vega-Lite only mark-specific config\n\n\n    const vlOnlyMarkSpecificConfigs = VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX[markType];\n\n    if (vlOnlyMarkSpecificConfigs) {\n      for (const prop of vlOnlyMarkSpecificConfigs) {\n        delete config[markType][prop];\n      }\n    } // Redirect mark config to config.style so that mark config only affect its own mark type\n    // without affecting other marks that share the same underlying Vega marks.\n    // For example, config.rect should not affect bar marks.\n\n\n    redirectConfigToStyleConfig(config, markType);\n  }\n\n  for (const m of getAllCompositeMarks()) {\n    // Clean up the composite mark config as we don't need them in the output specs anymore\n    delete config[m];\n  }\n\n  redirectTitleConfig(config); // Remove empty config objects.\n\n  for (const prop in config) {\n    if (isObject(config[prop]) && isEmpty(config[prop])) {\n      delete config[prop];\n    }\n  }\n\n  return isEmpty(config) ? undefined : config;\n}\n/**\n *\n * Redirect config.title -- so that title config do not affect header labels,\n * which also uses `title` directive to implement.\n *\n * For subtitle configs in config.title, keep them in config.title as header titles never have subtitles.\n */\n\nfunction redirectTitleConfig(config) {\n  const {\n    titleMarkConfig,\n    subtitleMarkConfig,\n    subtitle\n  } = extractTitleConfig(config.title); // set config.style if title/subtitleMarkConfig is not an empty object\n\n  if (!isEmpty(titleMarkConfig)) {\n    config.style['group-title'] = Object.assign(Object.assign({}, config.style['group-title']), titleMarkConfig // config.title has higher precedence than config.style.group-title in Vega\n    );\n  }\n\n  if (!isEmpty(subtitleMarkConfig)) {\n    config.style['group-subtitle'] = Object.assign(Object.assign({}, config.style['group-subtitle']), subtitleMarkConfig);\n  } // subtitle part can stay in config.title since header titles do not use subtitle\n\n\n  if (!isEmpty(subtitle)) {\n    config.title = subtitle;\n  } else {\n    delete config.title;\n  }\n}\n\nfunction redirectConfigToStyleConfig(config, prop, // string = composite mark\ntoProp, compositeMarkPart) {\n  const propConfig = compositeMarkPart ? config[prop][compositeMarkPart] : config[prop];\n\n  if (prop === 'view') {\n    toProp = 'cell'; // View's default style is \"cell\"\n  }\n\n  const style = Object.assign(Object.assign({}, propConfig), config.style[toProp !== null && toProp !== void 0 ? toProp : prop]); // set config.style if it is not an empty object\n\n  if (!isEmpty(style)) {\n    config.style[toProp !== null && toProp !== void 0 ? toProp : prop] = style;\n  }\n\n  if (!compositeMarkPart) {\n    // For composite mark, so don't delete the whole config yet as we have to do multiple redirections.\n    delete config[prop];\n  }\n}","map":{"version":3,"sources":["../../src/config.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { writeConfig } from 'vega';\nimport { isObject, mergeConfig } from 'vega-util';\nimport { AXIS_CONFIGS, isConditionalAxisValue } from './axis';\nimport { signalOrValueRefWithCondition, signalRefOrValue } from './compile/common';\nimport { getAllCompositeMarks } from './compositemark';\nimport { replaceExprRef } from './expr';\nimport { VL_ONLY_LEGEND_CONFIG } from './guide';\nimport { HEADER_CONFIGS } from './header';\nimport { defaultLegendConfig } from './legend';\nimport * as mark from './mark';\nimport { MARK_CONFIGS, PRIMITIVE_MARKS, VL_ONLY_MARK_CONFIG_PROPERTIES, VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX } from './mark';\nimport { assembleParameterSignals } from './parameter';\nimport { defaultScaleConfig } from './scale';\nimport { defaultConfig as defaultSelectionConfig } from './selection';\nimport { DEFAULT_SPACING, isStep } from './spec/base';\nimport { extractTitleConfig } from './title';\nimport { duplicate, getFirstDefined, isEmpty, keys, omit } from './util';\nexport function getViewConfigContinuousSize(viewConfig, channel) {\n    var _a;\n    return (_a = viewConfig[channel]) !== null && _a !== void 0 ? _a : viewConfig[channel === 'width' ? 'continuousWidth' : 'continuousHeight']; // get width/height for backwards compatibility\n}\nexport function getViewConfigDiscreteStep(viewConfig, channel) {\n    const size = getViewConfigDiscreteSize(viewConfig, channel);\n    return isStep(size) ? size.step : DEFAULT_STEP;\n}\nexport function getViewConfigDiscreteSize(viewConfig, channel) {\n    var _a;\n    const size = (_a = viewConfig[channel]) !== null && _a !== void 0 ? _a : viewConfig[channel === 'width' ? 'discreteWidth' : 'discreteHeight']; // get width/height for backwards compatibility\n    return getFirstDefined(size, { step: viewConfig.step });\n}\nexport const DEFAULT_STEP = 20;\nexport const defaultViewConfig = {\n    continuousWidth: 200,\n    continuousHeight: 200,\n    step: DEFAULT_STEP\n};\nexport function isVgScheme(rangeScheme) {\n    return rangeScheme && !!rangeScheme['scheme'];\n}\nexport const defaultConfig = {\n    background: 'white',\n    padding: 5,\n    timeFormat: '%b %d, %Y',\n    countTitle: 'Count of Records',\n    view: defaultViewConfig,\n    mark: mark.defaultMarkConfig,\n    arc: {},\n    area: {},\n    bar: mark.defaultBarConfig,\n    circle: {},\n    geoshape: {},\n    image: {},\n    line: {},\n    point: {},\n    rect: mark.defaultRectConfig,\n    rule: { color: 'black' },\n    square: {},\n    text: { color: 'black' },\n    tick: mark.defaultTickConfig,\n    trail: {},\n    boxplot: {\n        size: 14,\n        extent: 1.5,\n        box: {},\n        median: { color: 'white' },\n        outliers: {},\n        rule: {},\n        ticks: null\n    },\n    errorbar: {\n        center: 'mean',\n        rule: true,\n        ticks: false\n    },\n    errorband: {\n        band: {\n            opacity: 0.3\n        },\n        borders: false\n    },\n    scale: defaultScaleConfig,\n    projection: {},\n    legend: defaultLegendConfig,\n    header: { titlePadding: 10, labelPadding: 10 },\n    headerColumn: {},\n    headerRow: {},\n    headerFacet: {},\n    selection: defaultSelectionConfig,\n    style: {},\n    title: {},\n    facet: { spacing: DEFAULT_SPACING },\n    concat: { spacing: DEFAULT_SPACING }\n};\n// Tableau10 color palette, copied from `vegaScale.scheme('tableau10')`\nconst tab10 = [\n    '#4c78a8',\n    '#f58518',\n    '#e45756',\n    '#72b7b2',\n    '#54a24b',\n    '#eeca3b',\n    '#b279a2',\n    '#ff9da6',\n    '#9d755d',\n    '#bab0ac'\n];\nexport const DEFAULT_FONT_SIZE = {\n    text: 11,\n    guideLabel: 10,\n    guideTitle: 11,\n    groupTitle: 13,\n    groupSubtitle: 12\n};\nexport const DEFAULT_COLOR = {\n    blue: tab10[0],\n    orange: tab10[1],\n    red: tab10[2],\n    teal: tab10[3],\n    green: tab10[4],\n    yellow: tab10[5],\n    purple: tab10[6],\n    pink: tab10[7],\n    brown: tab10[8],\n    gray0: '#000',\n    gray1: '#111',\n    gray2: '#222',\n    gray3: '#333',\n    gray4: '#444',\n    gray5: '#555',\n    gray6: '#666',\n    gray7: '#777',\n    gray8: '#888',\n    gray9: '#999',\n    gray10: '#aaa',\n    gray11: '#bbb',\n    gray12: '#ccc',\n    gray13: '#ddd',\n    gray14: '#eee',\n    gray15: '#fff'\n};\nexport function colorSignalConfig(color = {}) {\n    return {\n        signals: [\n            {\n                name: 'color',\n                value: isObject(color) ? Object.assign(Object.assign({}, DEFAULT_COLOR), color) : DEFAULT_COLOR\n            }\n        ],\n        mark: { color: { signal: 'color.blue' } },\n        rule: { color: { signal: 'color.gray0' } },\n        text: {\n            color: { signal: 'color.gray0' }\n        },\n        style: {\n            'guide-label': {\n                fill: { signal: 'color.gray0' }\n            },\n            'guide-title': {\n                fill: { signal: 'color.gray0' }\n            },\n            'group-title': {\n                fill: { signal: 'color.gray0' }\n            },\n            'group-subtitle': {\n                fill: { signal: 'color.gray0' }\n            },\n            cell: {\n                stroke: { signal: 'color.gray8' }\n            }\n        },\n        axis: {\n            domainColor: { signal: 'color.gray13' },\n            gridColor: { signal: 'color.gray8' },\n            tickColor: { signal: 'color.gray13' }\n        },\n        range: {\n            category: [\n                { signal: 'color.blue' },\n                { signal: 'color.orange' },\n                { signal: 'color.red' },\n                { signal: 'color.teal' },\n                { signal: 'color.green' },\n                { signal: 'color.yellow' },\n                { signal: 'color.purple' },\n                { signal: 'color.pink' },\n                { signal: 'color.brown' },\n                { signal: 'color.grey8' }\n            ]\n        }\n    };\n}\nexport function fontSizeSignalConfig(fontSize) {\n    return {\n        signals: [\n            {\n                name: 'fontSize',\n                value: isObject(fontSize) ? Object.assign(Object.assign({}, DEFAULT_FONT_SIZE), fontSize) : DEFAULT_FONT_SIZE\n            }\n        ],\n        text: {\n            fontSize: { signal: 'fontSize.text' }\n        },\n        style: {\n            'guide-label': {\n                fontSize: { signal: 'fontSize.guideLabel' }\n            },\n            'guide-title': {\n                fontSize: { signal: 'fontSize.guideTitle' }\n            },\n            'group-title': {\n                fontSize: { signal: 'fontSize.groupTitle' }\n            },\n            'group-subtitle': {\n                fontSize: { signal: 'fontSize.groupSubtitle' }\n            }\n        }\n    };\n}\nexport function fontConfig(font) {\n    return {\n        text: { font },\n        style: {\n            'guide-label': { font },\n            'guide-title': { font },\n            'group-title': { font },\n            'group-subtitle': { font }\n        }\n    };\n}\nfunction getAxisConfigInternal(axisConfig) {\n    const props = keys(axisConfig || {});\n    const axisConfigInternal = {};\n    for (const prop of props) {\n        const val = axisConfig[prop];\n        axisConfigInternal[prop] = isConditionalAxisValue(val)\n            ? signalOrValueRefWithCondition(val)\n            : signalRefOrValue(val);\n    }\n    return axisConfigInternal;\n}\nfunction getStyleConfigInternal(styleConfig) {\n    const props = keys(styleConfig);\n    const styleConfigInternal = {};\n    for (const prop of props) {\n        // We need to cast to cheat a bit here since styleConfig can be either mark config or axis config\n        styleConfigInternal[prop] = getAxisConfigInternal(styleConfig[prop]);\n    }\n    return styleConfigInternal;\n}\nconst configPropsWithExpr = [\n    ...MARK_CONFIGS,\n    ...AXIS_CONFIGS,\n    ...HEADER_CONFIGS,\n    'background',\n    'padding',\n    'legend',\n    'lineBreak',\n    'scale',\n    'style',\n    'title',\n    'view'\n];\n/**\n * Merge specified config with default config and config for the `color` flag,\n * then replace all expressions with signals\n */\nexport function initConfig(specifiedConfig = {}) {\n    const { color, font, fontSize, selection } = specifiedConfig, restConfig = __rest(specifiedConfig, [\"color\", \"font\", \"fontSize\", \"selection\"]);\n    const mergedConfig = mergeConfig({}, duplicate(defaultConfig), font ? fontConfig(font) : {}, color ? colorSignalConfig(color) : {}, fontSize ? fontSizeSignalConfig(fontSize) : {}, restConfig || {});\n    // mergeConfig doesn't recurse and overrides object values.\n    if (selection) {\n        writeConfig(mergedConfig, 'selection', selection, true);\n    }\n    const outputConfig = omit(mergedConfig, configPropsWithExpr);\n    for (const prop of ['background', 'lineBreak', 'padding']) {\n        if (mergedConfig[prop]) {\n            outputConfig[prop] = signalRefOrValue(mergedConfig[prop]);\n        }\n    }\n    for (const markConfigType of mark.MARK_CONFIGS) {\n        if (mergedConfig[markConfigType]) {\n            // FIXME: outputConfig[markConfigType] expects that types are replaced recursively but replaceExprRef only replaces one level deep\n            outputConfig[markConfigType] = replaceExprRef(mergedConfig[markConfigType]);\n        }\n    }\n    for (const axisConfigType of AXIS_CONFIGS) {\n        if (mergedConfig[axisConfigType]) {\n            outputConfig[axisConfigType] = getAxisConfigInternal(mergedConfig[axisConfigType]);\n        }\n    }\n    for (const headerConfigType of HEADER_CONFIGS) {\n        if (mergedConfig[headerConfigType]) {\n            outputConfig[headerConfigType] = replaceExprRef(mergedConfig[headerConfigType]);\n        }\n    }\n    if (mergedConfig.legend) {\n        outputConfig.legend = replaceExprRef(mergedConfig.legend);\n    }\n    if (mergedConfig.scale) {\n        outputConfig.scale = replaceExprRef(mergedConfig.scale);\n    }\n    if (mergedConfig.style) {\n        outputConfig.style = getStyleConfigInternal(mergedConfig.style);\n    }\n    if (mergedConfig.title) {\n        outputConfig.title = replaceExprRef(mergedConfig.title);\n    }\n    if (mergedConfig.view) {\n        outputConfig.view = replaceExprRef(mergedConfig.view);\n    }\n    return outputConfig;\n}\nconst MARK_STYLES = ['view', ...PRIMITIVE_MARKS];\nconst VL_ONLY_CONFIG_PROPERTIES = [\n    'color',\n    'fontSize',\n    'background',\n    'padding',\n    'facet',\n    'concat',\n    'numberFormat',\n    'timeFormat',\n    'countTitle',\n    'header',\n    'axisQuantitative',\n    'axisTemporal',\n    'axisDiscrete',\n    'axisPoint',\n    'axisXBand',\n    'axisXPoint',\n    'axisXDiscrete',\n    'axisXQuantitative',\n    'axisXTemporal',\n    'axisYBand',\n    'axisYPoint',\n    'axisYDiscrete',\n    'axisYQuantitative',\n    'axisYTemporal',\n    'scale',\n    'selection',\n    'overlay' // FIXME: Redesign and unhide this\n];\nconst VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = Object.assign({ view: ['continuousWidth', 'continuousHeight', 'discreteWidth', 'discreteHeight', 'step'] }, VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX);\nexport function stripAndRedirectConfig(config) {\n    config = duplicate(config);\n    for (const prop of VL_ONLY_CONFIG_PROPERTIES) {\n        delete config[prop];\n    }\n    if (config.axis) {\n        // delete condition axis config\n        for (const prop in config.axis) {\n            if (isConditionalAxisValue(config.axis[prop])) {\n                delete config.axis[prop];\n            }\n        }\n    }\n    if (config.legend) {\n        for (const prop of VL_ONLY_LEGEND_CONFIG) {\n            delete config.legend[prop];\n        }\n    }\n    // Remove Vega-Lite only generic mark config\n    if (config.mark) {\n        for (const prop of VL_ONLY_MARK_CONFIG_PROPERTIES) {\n            delete config.mark[prop];\n        }\n        if (config.mark.tooltip && isObject(config.mark.tooltip)) {\n            delete config.mark.tooltip;\n        }\n    }\n    if (config.params) {\n        config.signals = (config.signals || []).concat(assembleParameterSignals(config.params));\n        delete config.params;\n    }\n    for (const markType of MARK_STYLES) {\n        // Remove Vega-Lite-only mark config\n        for (const prop of VL_ONLY_MARK_CONFIG_PROPERTIES) {\n            delete config[markType][prop];\n        }\n        // Remove Vega-Lite only mark-specific config\n        const vlOnlyMarkSpecificConfigs = VL_ONLY_ALL_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX[markType];\n        if (vlOnlyMarkSpecificConfigs) {\n            for (const prop of vlOnlyMarkSpecificConfigs) {\n                delete config[markType][prop];\n            }\n        }\n        // Redirect mark config to config.style so that mark config only affect its own mark type\n        // without affecting other marks that share the same underlying Vega marks.\n        // For example, config.rect should not affect bar marks.\n        redirectConfigToStyleConfig(config, markType);\n    }\n    for (const m of getAllCompositeMarks()) {\n        // Clean up the composite mark config as we don't need them in the output specs anymore\n        delete config[m];\n    }\n    redirectTitleConfig(config);\n    // Remove empty config objects.\n    for (const prop in config) {\n        if (isObject(config[prop]) && isEmpty(config[prop])) {\n            delete config[prop];\n        }\n    }\n    return isEmpty(config) ? undefined : config;\n}\n/**\n *\n * Redirect config.title -- so that title config do not affect header labels,\n * which also uses `title` directive to implement.\n *\n * For subtitle configs in config.title, keep them in config.title as header titles never have subtitles.\n */\nfunction redirectTitleConfig(config) {\n    const { titleMarkConfig, subtitleMarkConfig, subtitle } = extractTitleConfig(config.title);\n    // set config.style if title/subtitleMarkConfig is not an empty object\n    if (!isEmpty(titleMarkConfig)) {\n        config.style['group-title'] = Object.assign(Object.assign({}, config.style['group-title']), titleMarkConfig // config.title has higher precedence than config.style.group-title in Vega\n        );\n    }\n    if (!isEmpty(subtitleMarkConfig)) {\n        config.style['group-subtitle'] = Object.assign(Object.assign({}, config.style['group-subtitle']), subtitleMarkConfig);\n    }\n    // subtitle part can stay in config.title since header titles do not use subtitle\n    if (!isEmpty(subtitle)) {\n        config.title = subtitle;\n    }\n    else {\n        delete config.title;\n    }\n}\nfunction redirectConfigToStyleConfig(config, prop, // string = composite mark\ntoProp, compositeMarkPart) {\n    const propConfig = compositeMarkPart ? config[prop][compositeMarkPart] : config[prop];\n    if (prop === 'view') {\n        toProp = 'cell'; // View's default style is \"cell\"\n    }\n    const style = Object.assign(Object.assign({}, propConfig), config.style[toProp !== null && toProp !== void 0 ? toProp : prop]);\n    // set config.style if it is not an empty object\n    if (!isEmpty(style)) {\n        config.style[toProp !== null && toProp !== void 0 ? toProp : prop] = style;\n    }\n    if (!compositeMarkPart) {\n        // For composite mark, so don't delete the whole config yet as we have to do multiple redirections.\n        delete config[prop];\n    }\n}\n//# sourceMappingURL=config.js.map"]},"metadata":{},"sourceType":"module"}