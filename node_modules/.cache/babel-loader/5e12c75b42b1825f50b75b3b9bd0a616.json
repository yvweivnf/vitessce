{"ast":null,"code":"import { getPositionScaleChannel } from '../channel';\nimport { signalRefOrValue } from '../compile/common';\nexport function isFitType(autoSizeType) {\n  return autoSizeType === 'fit' || autoSizeType === 'fit-x' || autoSizeType === 'fit-y';\n}\nexport function getFitType(sizeType) {\n  return sizeType ? `fit-${getPositionScaleChannel(sizeType)}` : 'fit';\n}\nconst TOP_LEVEL_PROPERTIES = ['background', 'padding' // We do not include \"autosize\" here as it is supported by only unit and layer specs and thus need to be normalized\n];\nexport function extractTopLevelProperties(t, includeParams) {\n  const o = {};\n\n  for (const p of TOP_LEVEL_PROPERTIES) {\n    if (t && t[p] !== undefined) {\n      o[p] = signalRefOrValue(t[p]);\n    }\n  }\n\n  if (includeParams) {\n    o.params = t.params;\n  }\n\n  return o;\n}","map":{"version":3,"sources":["../../../src/spec/toplevel.ts"],"names":[],"mappings":"AAEA,SAAQ,uBAAR,QAAsC,YAAtC;AACA,SAAQ,gBAAR,QAA+B,mBAA/B;AA4EA,OAAM,SAAU,SAAV,CAAoB,YAApB,EAA8C;AAClD,SAAO,YAAY,KAAK,KAAjB,IAA0B,YAAY,KAAK,OAA3C,IAAsD,YAAY,KAAK,OAA9E;AACD;AAED,OAAM,SAAU,UAAV,CAAqB,QAArB,EAAkD;AACtD,SAAO,QAAQ,GAAI,OAAO,uBAAuB,CAAC,QAAD,CAAU,EAA5C,GAA6D,KAA5E;AACD;AA2BD,MAAM,oBAAoB,GAAiC,CACzD,YADyD,EAEzD,SAFyD,CAGzD;AAHyD,CAA3D;AAMA,OAAM,SAAU,yBAAV,CAAoC,CAApC,EAA2D,aAA3D,EAAiF;AACrF,QAAM,CAAC,GAAkC,EAAzC;;AACA,OAAK,MAAM,CAAX,IAAgB,oBAAhB,EAAsC;AACpC,QAAI,CAAC,IAAI,CAAC,CAAC,CAAD,CAAD,KAAS,SAAlB,EAA6B;AAC3B,MAAA,CAAC,CAAC,CAAD,CAAD,GAAc,gBAAgB,CAAC,CAAC,CAAC,CAAD,CAAF,CAA9B;AACD;AACF;;AACD,MAAI,aAAJ,EAAmB;AACjB,IAAA,CAAC,CAAC,MAAF,GAAW,CAAC,CAAC,MAAb;AACD;;AACD,SAAO,CAAP;AACD","sourceRoot":"","sourcesContent":["import { getPositionScaleChannel } from '../channel';\nimport { signalRefOrValue } from '../compile/common';\nexport function isFitType(autoSizeType) {\n    return autoSizeType === 'fit' || autoSizeType === 'fit-x' || autoSizeType === 'fit-y';\n}\nexport function getFitType(sizeType) {\n    return sizeType ? `fit-${getPositionScaleChannel(sizeType)}` : 'fit';\n}\nconst TOP_LEVEL_PROPERTIES = [\n    'background',\n    'padding'\n    // We do not include \"autosize\" here as it is supported by only unit and layer specs and thus need to be normalized\n];\nexport function extractTopLevelProperties(t, includeParams) {\n    const o = {};\n    for (const p of TOP_LEVEL_PROPERTIES) {\n        if (t && t[p] !== undefined) {\n            o[p] = signalRefOrValue(t[p]);\n        }\n    }\n    if (includeParams) {\n        o.params = t.params;\n    }\n    return o;\n}\n//# sourceMappingURL=toplevel.js.map"]},"metadata":{},"sourceType":"module"}