{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from'react';import{COORDINATE_SYSTEM}from'@deck.gl/core';// eslint-disable-line import/no-extraneous-dependencies\nimport{SETS_DATATYPE_CELL,HIERARCHICAL_SCHEMAS}from'./sets/constants';import{PRIMARY_CARD}from'./classNames';export function makeCellStatusMessage(cellInfoFactors){return Object.entries(cellInfoFactors).map(function(_ref){var _ref2=_slicedToArray(_ref,2),factor=_ref2[0],value=_ref2[1];return\"\".concat(factor,\": \").concat(value);}).join('; ');}export function cellLayerDefaultProps(cells,updateStatus,setCellHighlight,setComponentHover){return{coordinateSystem:COORDINATE_SYSTEM.CARTESIAN,data:cells,pickable:true,autoHighlight:true,stroked:true,filled:true,getElevation:0,onHover:function onHover(info){// Notify the parent component that its child component is\n// the \"hover source\".\nif(setComponentHover){setComponentHover();}if(info.object){var _info$object=_slicedToArray(info.object,2),cellId=_info$object[0],cellInfo=_info$object[1];var _cellInfo$factors=cellInfo.factors,factors=_cellInfo$factors===void 0?{}:_cellInfo$factors;if(updateStatus){updateStatus(makeCellStatusMessage(factors));}if(setCellHighlight){setCellHighlight(cellId);}}else if(setCellHighlight){// Clear the currently-hovered cell info by passing null.\nsetCellHighlight('');}}};}export var DEFAULT_DARK_COLOR=[50,50,50];export var DEFAULT_LIGHT_COLOR=[200,200,200];export function getDefaultColor(theme){return theme==='dark'?DEFAULT_DARK_COLOR:DEFAULT_LIGHT_COLOR;}// From https://personal.sron.nl/~pault/#sec:qualitative\nexport var PALETTE=[[68,119,170],[136,204,238],[68,170,153],[17,119,51],[153,153,51],[221,204,119],[204,102,119],[136,34,85],[170,68,153]];export var VIEWER_PALETTE=[[0,0,255],[0,255,0],[255,0,255],[255,255,0],[0,255,255],[255,255,255],[255,128,0],[255,0,0]];export var COLORMAP_OPTIONS=['viridis','greys','magma','jet','hot','bone','copper','summer','density','inferno'];export var DEFAULT_GL_OPTIONS={webgl2:true};export function createDefaultUpdateStatus(componentName){return function(message){return console.warn(\"\".concat(componentName,\" updateStatus: \").concat(message));};}export function createDefaultUpdateCellsSelection(componentName){return function(cellsSelection){return console.warn(\"\".concat(componentName,\" updateCellsSelection: \").concat(cellsSelection));};}export function createDefaultUpdateCellsHover(componentName){return function(hoverInfo){return console.warn(\"\".concat(componentName,\" updateCellsHover: \").concat(hoverInfo.cellId));};}export function createDefaultUpdateGenesHover(componentName){return function(hoverInfo){return console.warn(\"\".concat(componentName,\" updateGenesHover: \").concat(hoverInfo.geneId));};}export function createDefaultUpdateTracksHover(componentName){return function(hoverInfo){return console.warn(\"\".concat(componentName,\" updateTracksHover: \").concat(hoverInfo));};}export function createDefaultUpdateViewInfo(componentName){return function(viewInfo){return console.warn(\"\".concat(componentName,\" updateViewInfo: \").concat(viewInfo));};}export function createDefaultClearPleaseWait(){return function(){};}/**\n * Copy a typed array into a new array buffer.\n * @param {Uint8Array} arr The typed array to be copied.\n * @returns {Uint8Array} The copied array.\n */export function copyUint8Array(arr){var newBuffer=new ArrayBuffer(arr.buffer.byteLength);var newArr=new Uint8Array(newBuffer);newArr.set(arr);return newArr;}export function getNextNumberedNodeName(nodes,prefix){var i=1;if(nodes){// eslint-disable-next-line no-loop-func\nwhile(nodes.find(function(n){return n.name===\"\".concat(prefix).concat(i);})){// eslint-disable-next-line no-plusplus\ni++;}}return\"\".concat(prefix).concat(i);}/**\n * Create a new selected cell set based on a cell selection.\n * @param {string[]} cellSelection An array of cell IDs.\n * @param {object[]} additionalCellSets The previous array of user-defined cell sets.\n * @param {function} setCellSetSelection The setter function for cell set selections.\n * @param {function} setAdditionalCellSets The setter function for user-defined cell sets.\n */export function setCellSelection(cellSelection,additionalCellSets,cellSetColor,setCellSetSelection,setAdditionalCellSets,setCellSetColor,setCellColorEncoding){var prefix=arguments.length>7&&arguments[7]!==undefined?arguments[7]:'Selection ';var CELL_SELECTIONS_LEVEL_ZERO_NAME='My Selections';var selectionsLevelZeroNode=additionalCellSets===null||additionalCellSets===void 0?void 0:additionalCellSets.tree.find(function(n){return n.name===CELL_SELECTIONS_LEVEL_ZERO_NAME;});var nextAdditionalCellSets={version:HIERARCHICAL_SCHEMAS[SETS_DATATYPE_CELL].latestVersion,datatype:SETS_DATATYPE_CELL,tree:_toConsumableArray(additionalCellSets?additionalCellSets.tree:[])};var nextName=getNextNumberedNodeName(selectionsLevelZeroNode===null||selectionsLevelZeroNode===void 0?void 0:selectionsLevelZeroNode.children,prefix);var colorIndex=0;if(selectionsLevelZeroNode){colorIndex=selectionsLevelZeroNode.children.length;selectionsLevelZeroNode.children.push({name:nextName,set:cellSelection.map(function(d){return[d,null];})});}else{nextAdditionalCellSets.tree.push({name:CELL_SELECTIONS_LEVEL_ZERO_NAME,children:[{name:nextName,set:cellSelection.map(function(d){return[d,null];})}]});}setAdditionalCellSets(nextAdditionalCellSets);var nextPath=['My Selections',nextName];setCellSetColor([].concat(_toConsumableArray(cellSetColor||[]),[{path:nextPath,color:PALETTE[colorIndex%PALETTE.length]}]));setCellSetSelection([nextPath]);setCellColorEncoding('cellSetSelection');}export function mergeCellSets(cellSets,additionalCellSets){return{version:HIERARCHICAL_SCHEMAS[SETS_DATATYPE_CELL].latestVersion,datatype:SETS_DATATYPE_CELL,tree:[].concat(_toConsumableArray(cellSets?cellSets.tree:[]),_toConsumableArray(additionalCellSets?additionalCellSets.tree:[]))};}export function createWarningComponent(props){return function(){var title=props.title,message=props.message;return/*#__PURE__*/React.createElement(\"div\",{className:PRIMARY_CARD},/*#__PURE__*/React.createElement(\"h1\",null,title),/*#__PURE__*/React.createElement(\"div\",null,message));};}export function asEsModule(component){return{__esModule:true,default:component};}export function formatBytes(bytes){var decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:2;if(bytes===0)return'0 Bytes';var k=1024;var dm=decimals<0?0:decimals;var sizes=['Bytes','KB','MB','GB'];var i=Math.floor(Math.log(bytes)/Math.log(k));// eslint-disable-next-line no-restricted-properties\nreturn\"\".concat(parseFloat((bytes/Math.pow(k,i)).toFixed(dm)),\" \").concat(sizes[i]);}export var getStatsForResolution=function getStatsForResolution(loader,resolution){var _loader$resolution=loader[resolution],shape=_loader$resolution.shape,labels=_loader$resolution.labels;var height=shape[labels.indexOf('y')];var width=shape[labels.indexOf('x')];var depth=shape[labels.indexOf('z')];// eslint-disable-next-line no-bitwise\nvar depthDownsampled=Math.max(1,depth>>resolution);// Check memory allocation limits for Float32Array (used in XR3DLayer for rendering)\nvar totalBytes=4*height*width*depthDownsampled;return{height:height,width:width,depthDownsampled:depthDownsampled,totalBytes:totalBytes};};export var canLoadResolution=function canLoadResolution(loader,resolution){var _window$performance,_window$performance2,_window$performance2$;var _getStatsForResolutio=getStatsForResolution(loader,resolution),totalBytes=_getStatsForResolutio.totalBytes,height=_getStatsForResolutio.height,width=_getStatsForResolutio.width,depthDownsampled=_getStatsForResolutio.depthDownsampled;var maxHeapSize=((_window$performance=window.performance)===null||_window$performance===void 0?void 0:_window$performance.memory)&&((_window$performance2=window.performance)===null||_window$performance2===void 0?void 0:(_window$performance2$=_window$performance2.memory)===null||_window$performance2$===void 0?void 0:_window$performance2$.jsHeapSizeLimit)/2;var maxSize=maxHeapSize||Math.pow(2,31)-1;// 2048 is a normal texture size limit although some browsers go larger.\nreturn totalBytes<maxSize&&height<=2048&&depthDownsampled<=2048&&width<=2048&&depthDownsampled>1;};","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/utils.js"],"names":["React","COORDINATE_SYSTEM","SETS_DATATYPE_CELL","HIERARCHICAL_SCHEMAS","PRIMARY_CARD","makeCellStatusMessage","cellInfoFactors","Object","entries","map","factor","value","join","cellLayerDefaultProps","cells","updateStatus","setCellHighlight","setComponentHover","coordinateSystem","CARTESIAN","data","pickable","autoHighlight","stroked","filled","getElevation","onHover","info","object","cellId","cellInfo","factors","DEFAULT_DARK_COLOR","DEFAULT_LIGHT_COLOR","getDefaultColor","theme","PALETTE","VIEWER_PALETTE","COLORMAP_OPTIONS","DEFAULT_GL_OPTIONS","webgl2","createDefaultUpdateStatus","componentName","message","console","warn","createDefaultUpdateCellsSelection","cellsSelection","createDefaultUpdateCellsHover","hoverInfo","createDefaultUpdateGenesHover","geneId","createDefaultUpdateTracksHover","createDefaultUpdateViewInfo","viewInfo","createDefaultClearPleaseWait","copyUint8Array","arr","newBuffer","ArrayBuffer","buffer","byteLength","newArr","Uint8Array","set","getNextNumberedNodeName","nodes","prefix","i","find","n","name","setCellSelection","cellSelection","additionalCellSets","cellSetColor","setCellSetSelection","setAdditionalCellSets","setCellSetColor","setCellColorEncoding","CELL_SELECTIONS_LEVEL_ZERO_NAME","selectionsLevelZeroNode","tree","nextAdditionalCellSets","version","latestVersion","datatype","nextName","children","colorIndex","length","push","d","nextPath","path","color","mergeCellSets","cellSets","createWarningComponent","props","title","asEsModule","component","__esModule","default","formatBytes","bytes","decimals","k","dm","sizes","Math","floor","log","parseFloat","pow","toFixed","getStatsForResolution","loader","resolution","shape","labels","height","indexOf","width","depth","depthDownsampled","max","totalBytes","canLoadResolution","maxHeapSize","window","performance","memory","jsHeapSizeLimit","maxSize"],"mappings":"wXAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,iBAAT,KAAkC,eAAlC,CAAmD;AACnD,OACEC,kBADF,CAEEC,oBAFF,KAGO,kBAHP,CAIA,OAASC,YAAT,KAA6B,cAA7B,CAEA,MAAO,SAASC,CAAAA,qBAAT,CAA+BC,eAA/B,CAAgD,CACrD,MAAOC,CAAAA,MAAM,CAACC,OAAP,CAAeF,eAAf,EAAgCG,GAAhC,CACL,gDAAEC,MAAF,UAAUC,KAAV,0BAAwBD,MAAxB,cAAmCC,KAAnC,GADK,EAELC,IAFK,CAEA,IAFA,CAAP,CAGD,CAED,MAAO,SAASC,CAAAA,qBAAT,CAA+BC,KAA/B,CAAsCC,YAAtC,CAAoDC,gBAApD,CAAsEC,iBAAtE,CAAyF,CAC9F,MAAO,CACLC,gBAAgB,CAAEjB,iBAAiB,CAACkB,SAD/B,CAELC,IAAI,CAAEN,KAFD,CAGLO,QAAQ,CAAE,IAHL,CAILC,aAAa,CAAE,IAJV,CAKLC,OAAO,CAAE,IALJ,CAMLC,MAAM,CAAE,IANH,CAOLC,YAAY,CAAE,CAPT,CAQLC,OAAO,CAAE,iBAACC,IAAD,CAAU,CACjB;AACA;AACA,GAAIV,iBAAJ,CAAuB,CACrBA,iBAAiB,GAClB,CACD,GAAIU,IAAI,CAACC,MAAT,CAAiB,iCACYD,IAAI,CAACC,MADjB,IACRC,MADQ,iBACAC,QADA,uCAEUA,QAFV,CAEPC,OAFO,CAEPA,OAFO,4BAEG,EAFH,mBAGf,GAAIhB,YAAJ,CAAkB,CAChBA,YAAY,CAACV,qBAAqB,CAAC0B,OAAD,CAAtB,CAAZ,CACD,CACD,GAAIf,gBAAJ,CAAsB,CACpBA,gBAAgB,CAACa,MAAD,CAAhB,CACD,CACF,CATD,IASO,IAAIb,gBAAJ,CAAsB,CAC3B;AACAA,gBAAgB,CAAC,EAAD,CAAhB,CACD,CACF,CA3BI,CAAP,CA6BD,CAED,MAAO,IAAMgB,CAAAA,kBAAkB,CAAG,CAAC,EAAD,CAAK,EAAL,CAAS,EAAT,CAA3B,CACP,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAA5B,CAEP,MAAO,SAASC,CAAAA,eAAT,CAAyBC,KAAzB,CAAgC,CACrC,MAAOA,CAAAA,KAAK,GAAK,MAAV,CAAmBH,kBAAnB,CAAwCC,mBAA/C,CACD,CAED;AACA,MAAO,IAAMG,CAAAA,OAAO,CAAG,CACrB,CAAC,EAAD,CAAK,GAAL,CAAU,GAAV,CADqB,CAErB,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAFqB,CAGrB,CAAC,EAAD,CAAK,GAAL,CAAU,GAAV,CAHqB,CAIrB,CAAC,EAAD,CAAK,GAAL,CAAU,EAAV,CAJqB,CAKrB,CAAC,GAAD,CAAM,GAAN,CAAW,EAAX,CALqB,CAMrB,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CANqB,CAOrB,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAPqB,CAQrB,CAAC,GAAD,CAAM,EAAN,CAAU,EAAV,CARqB,CASrB,CAAC,GAAD,CAAM,EAAN,CAAU,GAAV,CATqB,CAAhB,CAYP,MAAO,IAAMC,CAAAA,cAAc,CAAG,CAC5B,CAAC,CAAD,CAAI,CAAJ,CAAO,GAAP,CAD4B,CAE5B,CAAC,CAAD,CAAI,GAAJ,CAAS,CAAT,CAF4B,CAG5B,CAAC,GAAD,CAAM,CAAN,CAAS,GAAT,CAH4B,CAI5B,CAAC,GAAD,CAAM,GAAN,CAAW,CAAX,CAJ4B,CAK5B,CAAC,CAAD,CAAI,GAAJ,CAAS,GAAT,CAL4B,CAM5B,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CAN4B,CAO5B,CAAC,GAAD,CAAM,GAAN,CAAW,CAAX,CAP4B,CAQ5B,CAAC,GAAD,CAAM,CAAN,CAAS,CAAT,CAR4B,CAAvB,CAWP,MAAO,IAAMC,CAAAA,gBAAgB,CAAG,CAC9B,SAD8B,CAE9B,OAF8B,CAG9B,OAH8B,CAI9B,KAJ8B,CAK9B,KAL8B,CAM9B,MAN8B,CAO9B,QAP8B,CAQ9B,QAR8B,CAS9B,SAT8B,CAU9B,SAV8B,CAAzB,CAaP,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,CAAEC,MAAM,CAAE,IAAV,CAA3B,CAEP,MAAO,SAASC,CAAAA,yBAAT,CAAmCC,aAAnC,CAAkD,CACvD,MAAO,UAAAC,OAAO,QAAIC,CAAAA,OAAO,CAACC,IAAR,WAAgBH,aAAhB,2BAA+CC,OAA/C,EAAJ,EAAd,CACD,CAED,MAAO,SAASG,CAAAA,iCAAT,CAA2CJ,aAA3C,CAA0D,CAC/D,MAAO,UAAAK,cAAc,QAAIH,CAAAA,OAAO,CAACC,IAAR,WAAgBH,aAAhB,mCAAuDK,cAAvD,EAAJ,EAArB,CACD,CAED,MAAO,SAASC,CAAAA,6BAAT,CAAuCN,aAAvC,CAAsD,CAC3D,MAAO,UAAAO,SAAS,QAAIL,CAAAA,OAAO,CAACC,IAAR,WAAgBH,aAAhB,+BAAmDO,SAAS,CAACpB,MAA7D,EAAJ,EAAhB,CACD,CAED,MAAO,SAASqB,CAAAA,6BAAT,CAAuCR,aAAvC,CAAsD,CAC3D,MAAO,UAAAO,SAAS,QAAIL,CAAAA,OAAO,CAACC,IAAR,WAAgBH,aAAhB,+BAAmDO,SAAS,CAACE,MAA7D,EAAJ,EAAhB,CACD,CAED,MAAO,SAASC,CAAAA,8BAAT,CAAwCV,aAAxC,CAAuD,CAC5D,MAAO,UAAAO,SAAS,QAAIL,CAAAA,OAAO,CAACC,IAAR,WAAgBH,aAAhB,gCAAoDO,SAApD,EAAJ,EAAhB,CACD,CAED,MAAO,SAASI,CAAAA,2BAAT,CAAqCX,aAArC,CAAoD,CACzD,MAAO,UAAAY,QAAQ,QAAIV,CAAAA,OAAO,CAACC,IAAR,WAAgBH,aAAhB,6BAAiDY,QAAjD,EAAJ,EAAf,CACD,CAED,MAAO,SAASC,CAAAA,4BAAT,EAAwC,CAC7C,MAAO,WAAM,CAAE,CAAf,CACD,CAGD;;;;GAKA,MAAO,SAASC,CAAAA,cAAT,CAAwBC,GAAxB,CAA6B,CAClC,GAAMC,CAAAA,SAAS,CAAG,GAAIC,CAAAA,WAAJ,CAAgBF,GAAG,CAACG,MAAJ,CAAWC,UAA3B,CAAlB,CACA,GAAMC,CAAAA,MAAM,CAAG,GAAIC,CAAAA,UAAJ,CAAeL,SAAf,CAAf,CACAI,MAAM,CAACE,GAAP,CAAWP,GAAX,EACA,MAAOK,CAAAA,MAAP,CACD,CAED,MAAO,SAASG,CAAAA,uBAAT,CAAiCC,KAAjC,CAAwCC,MAAxC,CAAgD,CACrD,GAAIC,CAAAA,CAAC,CAAG,CAAR,CACA,GAAIF,KAAJ,CAAW,CACT;AACA,MAAOA,KAAK,CAACG,IAAN,CAAW,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,aAAcJ,MAAd,SAAuBC,CAAvB,CAAJ,EAAZ,CAAP,CAAoD,CAClD;AACAA,CAAC,GACF,CACF,CACD,gBAAUD,MAAV,SAAmBC,CAAnB,EACD,CAED;;;;;;GAOA,MAAO,SAASI,CAAAA,gBAAT,CAA0BC,aAA1B,CAAyCC,kBAAzC,CAA6DC,YAA7D,CAA2EC,mBAA3E,CAAgGC,qBAAhG,CAAuHC,eAAvH,CAAwIC,oBAAxI,CAAqL,IAAvBZ,CAAAA,MAAuB,2DAAd,YAAc,CAC1L,GAAMa,CAAAA,+BAA+B,CAAG,eAAxC,CAEA,GAAMC,CAAAA,uBAAuB,CAAGP,kBAAH,SAAGA,kBAAH,iBAAGA,kBAAkB,CAAEQ,IAApB,CAAyBb,IAAzB,CAC9B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,IAAF,GAAWS,+BAAf,EAD6B,CAAhC,CAGA,GAAMG,CAAAA,sBAAsB,CAAG,CAC7BC,OAAO,CAAEjF,oBAAoB,CAACD,kBAAD,CAApB,CAAyCmF,aADrB,CAE7BC,QAAQ,CAAEpF,kBAFmB,CAG7BgF,IAAI,oBAAOR,kBAAkB,CAAGA,kBAAkB,CAACQ,IAAtB,CAA6B,EAAtD,CAHyB,CAA/B,CAMA,GAAMK,CAAAA,QAAQ,CAAGtB,uBAAuB,CAACgB,uBAAD,SAACA,uBAAD,iBAACA,uBAAuB,CAAEO,QAA1B,CAAoCrB,MAApC,CAAxC,CACA,GAAIsB,CAAAA,UAAU,CAAG,CAAjB,CACA,GAAIR,uBAAJ,CAA6B,CAC3BQ,UAAU,CAAGR,uBAAuB,CAACO,QAAxB,CAAiCE,MAA9C,CACAT,uBAAuB,CAACO,QAAxB,CAAiCG,IAAjC,CAAsC,CACpCpB,IAAI,CAAEgB,QAD8B,CAEpCvB,GAAG,CAAES,aAAa,CAAChE,GAAd,CAAkB,SAAAmF,CAAC,QAAI,CAACA,CAAD,CAAI,IAAJ,CAAJ,EAAnB,CAF+B,CAAtC,EAID,CAND,IAMO,CACLT,sBAAsB,CAACD,IAAvB,CAA4BS,IAA5B,CAAiC,CAC/BpB,IAAI,CAAES,+BADyB,CAE/BQ,QAAQ,CAAE,CACR,CACEjB,IAAI,CAAEgB,QADR,CAEEvB,GAAG,CAAES,aAAa,CAAChE,GAAd,CAAkB,SAAAmF,CAAC,QAAI,CAACA,CAAD,CAAI,IAAJ,CAAJ,EAAnB,CAFP,CADQ,CAFqB,CAAjC,EASD,CACDf,qBAAqB,CAACM,sBAAD,CAArB,CACA,GAAMU,CAAAA,QAAQ,CAAG,CAAC,eAAD,CAAkBN,QAAlB,CAAjB,CACAT,eAAe,8BACTH,YAAY,EAAI,EADP,GAEb,CACEmB,IAAI,CAAED,QADR,CAEEE,KAAK,CAAE3D,OAAO,CAACqD,UAAU,CAAGrD,OAAO,CAACsD,MAAtB,CAFhB,CAFa,GAAf,CAOAd,mBAAmB,CAAC,CAACiB,QAAD,CAAD,CAAnB,CACAd,oBAAoB,CAAC,kBAAD,CAApB,CACD,CAED,MAAO,SAASiB,CAAAA,aAAT,CAAuBC,QAAvB,CAAiCvB,kBAAjC,CAAqD,CAC1D,MAAO,CACLU,OAAO,CAAEjF,oBAAoB,CAACD,kBAAD,CAApB,CAAyCmF,aAD7C,CAELC,QAAQ,CAAEpF,kBAFL,CAGLgF,IAAI,8BACEe,QAAQ,CAAGA,QAAQ,CAACf,IAAZ,CAAmB,EAD7B,qBAEER,kBAAkB,CAAGA,kBAAkB,CAACQ,IAAtB,CAA6B,EAFjD,EAHC,CAAP,CAQD,CAED,MAAO,SAASgB,CAAAA,sBAAT,CAAgCC,KAAhC,CAAuC,CAC5C,MAAO,WAAM,IAETC,CAAAA,KAFS,CAIPD,KAJO,CAETC,KAFS,CAGTzD,OAHS,CAIPwD,KAJO,CAGTxD,OAHS,CAKX,mBACE,2BAAK,SAAS,CAAEvC,YAAhB,eACE,8BAAKgG,KAAL,CADF,cAEE,+BAAMzD,OAAN,CAFF,CADF,CAMD,CAXD,CAYD,CAED,MAAO,SAAS0D,CAAAA,UAAT,CAAoBC,SAApB,CAA+B,CACpC,MAAO,CACLC,UAAU,CAAE,IADP,CAELC,OAAO,CAAEF,SAFJ,CAAP,CAID,CAGD,MAAO,SAASG,CAAAA,WAAT,CAAqBC,KAArB,CAA0C,IAAdC,CAAAA,QAAc,2DAAH,CAAG,CAC/C,GAAID,KAAK,GAAK,CAAd,CAAiB,MAAO,SAAP,CAEjB,GAAME,CAAAA,CAAC,CAAG,IAAV,CACA,GAAMC,CAAAA,EAAE,CAAGF,QAAQ,CAAG,CAAX,CAAe,CAAf,CAAmBA,QAA9B,CACA,GAAMG,CAAAA,KAAK,CAAG,CAAC,OAAD,CAAU,IAAV,CAAgB,IAAhB,CAAsB,IAAtB,CAAd,CAEA,GAAM1C,CAAAA,CAAC,CAAG2C,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASP,KAAT,EAAkBK,IAAI,CAACE,GAAL,CAASL,CAAT,CAA7B,CAAV,CAEA;AACA,gBAAUM,UAAU,CAAC,CAACR,KAAK,CAAGK,IAAI,CAACI,GAAL,CAASP,CAAT,CAAYxC,CAAZ,CAAT,EAAyBgD,OAAzB,CAAiCP,EAAjC,CAAD,CAApB,aAA8DC,KAAK,CAAC1C,CAAD,CAAnE,EACD,CAED,MAAO,IAAMiD,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,MAAD,CAASC,UAAT,CAAwB,wBACjCD,MAAM,CAACC,UAAD,CAD2B,CACnDC,KADmD,oBACnDA,KADmD,CAC5CC,MAD4C,oBAC5CA,MAD4C,CAE3D,GAAMC,CAAAA,MAAM,CAAGF,KAAK,CAACC,MAAM,CAACE,OAAP,CAAe,GAAf,CAAD,CAApB,CACA,GAAMC,CAAAA,KAAK,CAAGJ,KAAK,CAACC,MAAM,CAACE,OAAP,CAAe,GAAf,CAAD,CAAnB,CACA,GAAME,CAAAA,KAAK,CAAGL,KAAK,CAACC,MAAM,CAACE,OAAP,CAAe,GAAf,CAAD,CAAnB,CACA;AACA,GAAMG,CAAAA,gBAAgB,CAAGf,IAAI,CAACgB,GAAL,CAAS,CAAT,CAAYF,KAAK,EAAIN,UAArB,CAAzB,CACA;AACA,GAAMS,CAAAA,UAAU,CAAG,EAAIN,MAAJ,CAAaE,KAAb,CAAqBE,gBAAxC,CACA,MAAO,CACLJ,MAAM,CAANA,MADK,CACGE,KAAK,CAALA,KADH,CACUE,gBAAgB,CAAhBA,gBADV,CAC4BE,UAAU,CAAVA,UAD5B,CAAP,CAGD,CAZM,CAcP,MAAO,IAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACX,MAAD,CAASC,UAAT,CAAwB,8FAGnDF,qBAAqB,CACvBC,MADuB,CAEvBC,UAFuB,CAH8B,CAErDS,UAFqD,uBAErDA,UAFqD,CAEzCN,MAFyC,uBAEzCA,MAFyC,CAEjCE,KAFiC,uBAEjCA,KAFiC,CAE1BE,gBAF0B,uBAE1BA,gBAF0B,CAOvD,GAAMI,CAAAA,WAAW,CAAG,sBAAAC,MAAM,CAACC,WAAP,kEAAoBC,MAApB,GACf,uBAAAF,MAAM,CAACC,WAAP,2FAAoBC,MAApB,sEAA4BC,eAA5B,EAA8C,CADnD,CAEA,GAAMC,CAAAA,OAAO,CAAGL,WAAW,EAAI,SAAC,CAAD,CAAM,EAAN,EAAY,CAA3C,CACA;AACA,MACEF,CAAAA,UAAU,CAAGO,OAAb,EACGb,MAAM,EAAI,IADb,EAEGI,gBAAgB,EAAI,IAFvB,EAGGF,KAAK,EAAI,IAHZ,EAIGE,gBAAgB,CAAG,CALxB,CAOD,CAlBM","sourcesContent":["import React from 'react';\nimport { COORDINATE_SYSTEM } from '@deck.gl/core'; // eslint-disable-line import/no-extraneous-dependencies\nimport {\n  SETS_DATATYPE_CELL,\n  HIERARCHICAL_SCHEMAS,\n} from './sets/constants';\nimport { PRIMARY_CARD } from './classNames';\n\nexport function makeCellStatusMessage(cellInfoFactors) {\n  return Object.entries(cellInfoFactors).map(\n    ([factor, value]) => `${factor}: ${value}`,\n  ).join('; ');\n}\n\nexport function cellLayerDefaultProps(cells, updateStatus, setCellHighlight, setComponentHover) {\n  return {\n    coordinateSystem: COORDINATE_SYSTEM.CARTESIAN,\n    data: cells,\n    pickable: true,\n    autoHighlight: true,\n    stroked: true,\n    filled: true,\n    getElevation: 0,\n    onHover: (info) => {\n      // Notify the parent component that its child component is\n      // the \"hover source\".\n      if (setComponentHover) {\n        setComponentHover();\n      }\n      if (info.object) {\n        const [cellId, cellInfo] = info.object;\n        const { factors = {} } = cellInfo;\n        if (updateStatus) {\n          updateStatus(makeCellStatusMessage(factors));\n        }\n        if (setCellHighlight) {\n          setCellHighlight(cellId);\n        }\n      } else if (setCellHighlight) {\n        // Clear the currently-hovered cell info by passing null.\n        setCellHighlight('');\n      }\n    },\n  };\n}\n\nexport const DEFAULT_DARK_COLOR = [50, 50, 50];\nexport const DEFAULT_LIGHT_COLOR = [200, 200, 200];\n\nexport function getDefaultColor(theme) {\n  return theme === 'dark' ? DEFAULT_DARK_COLOR : DEFAULT_LIGHT_COLOR;\n}\n\n// From https://personal.sron.nl/~pault/#sec:qualitative\nexport const PALETTE = [\n  [68, 119, 170],\n  [136, 204, 238],\n  [68, 170, 153],\n  [17, 119, 51],\n  [153, 153, 51],\n  [221, 204, 119],\n  [204, 102, 119],\n  [136, 34, 85],\n  [170, 68, 153],\n];\n\nexport const VIEWER_PALETTE = [\n  [0, 0, 255],\n  [0, 255, 0],\n  [255, 0, 255],\n  [255, 255, 0],\n  [0, 255, 255],\n  [255, 255, 255],\n  [255, 128, 0],\n  [255, 0, 0],\n];\n\nexport const COLORMAP_OPTIONS = [\n  'viridis',\n  'greys',\n  'magma',\n  'jet',\n  'hot',\n  'bone',\n  'copper',\n  'summer',\n  'density',\n  'inferno',\n];\n\nexport const DEFAULT_GL_OPTIONS = { webgl2: true };\n\nexport function createDefaultUpdateStatus(componentName) {\n  return message => console.warn(`${componentName} updateStatus: ${message}`);\n}\n\nexport function createDefaultUpdateCellsSelection(componentName) {\n  return cellsSelection => console.warn(`${componentName} updateCellsSelection: ${cellsSelection}`);\n}\n\nexport function createDefaultUpdateCellsHover(componentName) {\n  return hoverInfo => console.warn(`${componentName} updateCellsHover: ${hoverInfo.cellId}`);\n}\n\nexport function createDefaultUpdateGenesHover(componentName) {\n  return hoverInfo => console.warn(`${componentName} updateGenesHover: ${hoverInfo.geneId}`);\n}\n\nexport function createDefaultUpdateTracksHover(componentName) {\n  return hoverInfo => console.warn(`${componentName} updateTracksHover: ${hoverInfo}`);\n}\n\nexport function createDefaultUpdateViewInfo(componentName) {\n  return viewInfo => console.warn(`${componentName} updateViewInfo: ${viewInfo}`);\n}\n\nexport function createDefaultClearPleaseWait() {\n  return () => {};\n}\n\n\n/**\n * Copy a typed array into a new array buffer.\n * @param {Uint8Array} arr The typed array to be copied.\n * @returns {Uint8Array} The copied array.\n */\nexport function copyUint8Array(arr) {\n  const newBuffer = new ArrayBuffer(arr.buffer.byteLength);\n  const newArr = new Uint8Array(newBuffer);\n  newArr.set(arr);\n  return newArr;\n}\n\nexport function getNextNumberedNodeName(nodes, prefix) {\n  let i = 1;\n  if (nodes) {\n    // eslint-disable-next-line no-loop-func\n    while (nodes.find(n => n.name === `${prefix}${i}`)) {\n      // eslint-disable-next-line no-plusplus\n      i++;\n    }\n  }\n  return `${prefix}${i}`;\n}\n\n/**\n * Create a new selected cell set based on a cell selection.\n * @param {string[]} cellSelection An array of cell IDs.\n * @param {object[]} additionalCellSets The previous array of user-defined cell sets.\n * @param {function} setCellSetSelection The setter function for cell set selections.\n * @param {function} setAdditionalCellSets The setter function for user-defined cell sets.\n */\nexport function setCellSelection(cellSelection, additionalCellSets, cellSetColor, setCellSetSelection, setAdditionalCellSets, setCellSetColor, setCellColorEncoding, prefix = 'Selection ') {\n  const CELL_SELECTIONS_LEVEL_ZERO_NAME = 'My Selections';\n\n  const selectionsLevelZeroNode = additionalCellSets?.tree.find(\n    n => n.name === CELL_SELECTIONS_LEVEL_ZERO_NAME,\n  );\n  const nextAdditionalCellSets = {\n    version: HIERARCHICAL_SCHEMAS[SETS_DATATYPE_CELL].latestVersion,\n    datatype: SETS_DATATYPE_CELL,\n    tree: [...(additionalCellSets ? additionalCellSets.tree : [])],\n  };\n\n  const nextName = getNextNumberedNodeName(selectionsLevelZeroNode?.children, prefix);\n  let colorIndex = 0;\n  if (selectionsLevelZeroNode) {\n    colorIndex = selectionsLevelZeroNode.children.length;\n    selectionsLevelZeroNode.children.push({\n      name: nextName,\n      set: cellSelection.map(d => [d, null]),\n    });\n  } else {\n    nextAdditionalCellSets.tree.push({\n      name: CELL_SELECTIONS_LEVEL_ZERO_NAME,\n      children: [\n        {\n          name: nextName,\n          set: cellSelection.map(d => [d, null]),\n        },\n      ],\n    });\n  }\n  setAdditionalCellSets(nextAdditionalCellSets);\n  const nextPath = ['My Selections', nextName];\n  setCellSetColor([\n    ...(cellSetColor || []),\n    {\n      path: nextPath,\n      color: PALETTE[colorIndex % PALETTE.length],\n    },\n  ]);\n  setCellSetSelection([nextPath]);\n  setCellColorEncoding('cellSetSelection');\n}\n\nexport function mergeCellSets(cellSets, additionalCellSets) {\n  return {\n    version: HIERARCHICAL_SCHEMAS[SETS_DATATYPE_CELL].latestVersion,\n    datatype: SETS_DATATYPE_CELL,\n    tree: [\n      ...(cellSets ? cellSets.tree : []),\n      ...(additionalCellSets ? additionalCellSets.tree : []),\n    ],\n  };\n}\n\nexport function createWarningComponent(props) {\n  return () => {\n    const {\n      title,\n      message,\n    } = props;\n    return (\n      <div className={PRIMARY_CARD}>\n        <h1>{title}</h1>\n        <div>{message}</div>\n      </div>\n    );\n  };\n}\n\nexport function asEsModule(component) {\n  return {\n    __esModule: true,\n    default: component,\n  };\n}\n\n\nexport function formatBytes(bytes, decimals = 2) {\n  if (bytes === 0) return '0 Bytes';\n\n  const k = 1024;\n  const dm = decimals < 0 ? 0 : decimals;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n\n  // eslint-disable-next-line no-restricted-properties\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(dm))} ${sizes[i]}`;\n}\n\nexport const getStatsForResolution = (loader, resolution) => {\n  const { shape, labels } = loader[resolution];\n  const height = shape[labels.indexOf('y')];\n  const width = shape[labels.indexOf('x')];\n  const depth = shape[labels.indexOf('z')];\n  // eslint-disable-next-line no-bitwise\n  const depthDownsampled = Math.max(1, depth >> resolution);\n  // Check memory allocation limits for Float32Array (used in XR3DLayer for rendering)\n  const totalBytes = 4 * height * width * depthDownsampled;\n  return {\n    height, width, depthDownsampled, totalBytes,\n  };\n};\n\nexport const canLoadResolution = (loader, resolution) => {\n  const {\n    totalBytes, height, width, depthDownsampled,\n  } = getStatsForResolution(\n    loader,\n    resolution,\n  );\n  const maxHeapSize = window.performance?.memory\n    && window.performance?.memory?.jsHeapSizeLimit / 2;\n  const maxSize = maxHeapSize || (2 ** 31) - 1;\n  // 2048 is a normal texture size limit although some browsers go larger.\n  return (\n    totalBytes < maxSize\n    && height <= 2048\n    && depthDownsampled <= 2048\n    && width <= 2048\n    && depthDownsampled > 1\n  );\n};\n"]},"metadata":{},"sourceType":"module"}