{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ElevationMode = void 0;\n\nvar _utils = require(\"../utils\");\n\nvar _modifyMode = require(\"./modify-mode\");\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _get(target, property, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get(target, property, receiver || target);\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction defaultCalculateElevationChange(_ref) {\n  var pointerDownScreenCoords = _ref.pointerDownScreenCoords,\n      screenCoords = _ref.screenCoords;\n  return 10 * (pointerDownScreenCoords[1] - screenCoords[1]);\n}\n\nvar ElevationMode = /*#__PURE__*/function (_ModifyMode) {\n  _inherits(ElevationMode, _ModifyMode);\n\n  var _super = _createSuper(ElevationMode);\n\n  function ElevationMode() {\n    _classCallCheck(this, ElevationMode);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ElevationMode, [{\n    key: \"makeElevatedEvent\",\n    value: function makeElevatedEvent(event, position, props) {\n      var _ref2 = props.modeConfig || {},\n          _ref2$minElevation = _ref2.minElevation,\n          minElevation = _ref2$minElevation === void 0 ? 0 : _ref2$minElevation,\n          _ref2$maxElevation = _ref2.maxElevation,\n          maxElevation = _ref2$maxElevation === void 0 ? 20000 : _ref2$maxElevation,\n          _ref2$calculateElevat = _ref2.calculateElevationChange,\n          calculateElevationChange = _ref2$calculateElevat === void 0 ? defaultCalculateElevationChange : _ref2$calculateElevat;\n\n      if (!event.pointerDownScreenCoords) {\n        return event;\n      } // $FlowFixMe - really, I know it has something at index 2\n\n\n      var elevation = position.length === 3 ? position[2] : 0; // calculateElevationChange is configurable because (at this time) modes are not aware of the viewport\n\n      elevation += calculateElevationChange({\n        pointerDownScreenCoords: event.pointerDownScreenCoords,\n        screenCoords: event.screenCoords\n      });\n      elevation = Math.min(elevation, maxElevation);\n      elevation = Math.max(elevation, minElevation);\n      return Object.assign({}, event, {\n        mapCoords: [position[0], position[1], elevation]\n      });\n    }\n  }, {\n    key: \"handlePointerMove\",\n    value: function handlePointerMove(event, props) {\n      var editHandle = (0, _utils.getPickedEditHandle)(event.pointerDownPicks);\n      var position = editHandle ? editHandle.geometry.coordinates : event.mapCoords; // @ts-ignore\n\n      _get(_getPrototypeOf(ElevationMode.prototype), \"handlePointerMove\", this).call(this, this.makeElevatedEvent(event, position, props), props);\n    }\n  }, {\n    key: \"handleStopDragging\",\n    value: function handleStopDragging(event, props) {\n      var editHandle = (0, _utils.getPickedEditHandle)(event.picks);\n      var position = editHandle ? editHandle.geometry.coordinates : event.mapCoords; // @ts-ignore\n\n      _get(_getPrototypeOf(ElevationMode.prototype), \"handleStopDragging\", this).call(this, this.makeElevatedEvent(event, position, props), props);\n    }\n  }, {\n    key: \"getCursor\",\n    value: function getCursor(event) {\n      var cursor = _get(_getPrototypeOf(ElevationMode.prototype), \"getCursor\", this).call(this, event);\n\n      if (cursor === 'cell') {\n        cursor = 'ns-resize';\n      }\n\n      return cursor;\n    }\n  }], [{\n    key: \"calculateElevationChangeWithViewport\",\n    value: function calculateElevationChangeWithViewport(viewport, _ref3) {\n      var pointerDownScreenCoords = _ref3.pointerDownScreenCoords,\n          screenCoords = _ref3.screenCoords; // Source: https://gis.stackexchange.com/a/127949/111804\n\n      var metersPerPixel = 156543.03392 * Math.cos(viewport.latitude * Math.PI / 180) / Math.pow(2, viewport.zoom);\n      return metersPerPixel * (pointerDownScreenCoords[1] - screenCoords[1]) / 2;\n    }\n  }]);\n\n  return ElevationMode;\n}(_modifyMode.ModifyMode);\n\nexports.ElevationMode = ElevationMode;","map":{"version":3,"sources":["../../src/lib/elevation-mode.ts"],"names":["pointerDownScreenCoords","screenCoords","ElevationMode","ModifyMode","event","position","props","minElevation","maxElevation","calculateElevationChange","elevation","Math","mapCoords","editHandle","cursor","viewport","metersPerPixel"],"mappings":"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","sourcesContent":["import { ModeProps, PointerMoveEvent, StopDraggingEvent } from '../types';\nimport { Position, FeatureCollection } from '../geojson-types';\nimport { getPickedEditHandle } from '../utils';\nimport { ModifyMode } from './modify-mode';\n\nfunction defaultCalculateElevationChange({\n  pointerDownScreenCoords,\n  screenCoords,\n}: {\n  pointerDownScreenCoords: Position;\n  screenCoords: Position;\n}) {\n  return 10 * (pointerDownScreenCoords[1] - screenCoords[1]);\n}\n\nexport class ElevationMode extends ModifyMode {\n  makeElevatedEvent(\n    event: PointerMoveEvent | StopDraggingEvent,\n    position: Position,\n    props: ModeProps<FeatureCollection>\n  ): Record<string, any> {\n    const {\n      minElevation = 0,\n      maxElevation = 20000,\n      calculateElevationChange = defaultCalculateElevationChange,\n    } = props.modeConfig || {};\n\n    if (!event.pointerDownScreenCoords) {\n      return event;\n    }\n\n    // $FlowFixMe - really, I know it has something at index 2\n    let elevation = position.length === 3 ? position[2] : 0;\n\n    // calculateElevationChange is configurable because (at this time) modes are not aware of the viewport\n    elevation += calculateElevationChange({\n      pointerDownScreenCoords: event.pointerDownScreenCoords,\n      screenCoords: event.screenCoords,\n    });\n    elevation = Math.min(elevation, maxElevation);\n    elevation = Math.max(elevation, minElevation);\n\n    return Object.assign({}, event, {\n      mapCoords: [position[0], position[1], elevation],\n    });\n  }\n\n  handlePointerMove(event: PointerMoveEvent, props: ModeProps<FeatureCollection>) {\n    const editHandle = getPickedEditHandle(event.pointerDownPicks);\n    const position = editHandle ? editHandle.geometry.coordinates : event.mapCoords;\n    // @ts-ignore\n    super.handlePointerMove(this.makeElevatedEvent(event, position, props), props);\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    const editHandle = getPickedEditHandle(event.picks);\n    const position = editHandle ? editHandle.geometry.coordinates : event.mapCoords;\n    // @ts-ignore\n    super.handleStopDragging(this.makeElevatedEvent(event, position, props), props);\n  }\n\n  getCursor(event: PointerMoveEvent): string | null | undefined {\n    let cursor = super.getCursor(event);\n    if (cursor === 'cell') {\n      cursor = 'ns-resize';\n    }\n    return cursor;\n  }\n\n  static calculateElevationChangeWithViewport(\n    viewport: any,\n    {\n      pointerDownScreenCoords,\n      screenCoords,\n    }: {\n      pointerDownScreenCoords: Position;\n      screenCoords: Position;\n    }\n  ): number {\n    // Source: https://gis.stackexchange.com/a/127949/111804\n    const metersPerPixel =\n      (156543.03392 * Math.cos((viewport.latitude * Math.PI) / 180)) / Math.pow(2, viewport.zoom);\n\n    return (metersPerPixel * (pointerDownScreenCoords[1] - screenCoords[1])) / 2;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}