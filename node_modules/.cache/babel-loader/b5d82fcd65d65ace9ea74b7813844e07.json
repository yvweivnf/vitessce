{"ast":null,"code":"/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nexport class SignalRefWrapper {\n  constructor(exprGenerator) {\n    Object.defineProperty(this, 'signal', {\n      enumerable: true,\n      get: exprGenerator\n    });\n  }\n\n  static fromName(rename, signalName) {\n    return new SignalRefWrapper(() => rename(signalName));\n  }\n\n}","map":{"version":3,"sources":["../../../src/compile/signal.ts"],"names":[],"mappings":"AAIA;;;;AAIA,OAAM,MAAO,gBAAP,CAAuB;AAC3B,EAAA,WAAA,CAAY,aAAZ,EAAuC;AACrC,IAAA,MAAM,CAAC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;AACpC,MAAA,UAAU,EAAE,IADwB;AAEpC,MAAA,GAAG,EAAE;AAF+B,KAAtC;AAID;;AAIM,SAAO,QAAP,CAAgB,MAAhB,EAAgC,UAAhC,EAAkD;AACvD,WAAO,IAAI,gBAAJ,CAAqB,MAAM,MAAM,CAAC,UAAD,CAAjC,CAAP;AACD;;AAZ0B","sourceRoot":"","sourcesContent":["/**\n * A class that behaves like a SignalRef but lazily generates the signal.\n * The provided generator function should use `Model.getSignalName` to use the correct signal name.\n */\nexport class SignalRefWrapper {\n    constructor(exprGenerator) {\n        Object.defineProperty(this, 'signal', {\n            enumerable: true,\n            get: exprGenerator\n        });\n    }\n    static fromName(rename, signalName) {\n        return new SignalRefWrapper(() => rename(signalName));\n    }\n}\n//# sourceMappingURL=signal.js.map"]},"metadata":{},"sourceType":"module"}