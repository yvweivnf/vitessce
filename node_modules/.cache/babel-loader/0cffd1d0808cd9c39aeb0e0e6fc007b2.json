{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport { contains, getFirstDefined } from '../../util';\n/**\n * Get header channel, which can be different from facet channel when orient is specified or when the facet channel is facet.\n */\n\nexport function getHeaderChannel(channel, orient) {\n  if (contains(['top', 'bottom'], orient)) {\n    return 'column';\n  } else if (contains(['left', 'right'], orient)) {\n    return 'row';\n  }\n\n  return channel === 'row' ? 'row' : 'column';\n}\nexport function getHeaderProperty(prop, header, config, channel) {\n  var headerSpecificConfig = channel === 'row' ? config.headerRow : channel === 'column' ? config.headerColumn : config.headerFacet;\n  return getFirstDefined((header || {})[prop], headerSpecificConfig[prop], config.header[prop]);\n}\nexport function getHeaderProperties(properties, header, config, channel) {\n  var props = {};\n\n  var _iterator = _createForOfIteratorHelper(properties),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var prop = _step.value;\n      var value = getHeaderProperty(prop, header || {}, config, channel);\n\n      if (value !== undefined) {\n        props[prop] = value;\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return props;\n}","map":{"version":3,"sources":["../../../../src/compile/header/common.ts"],"names":[],"mappings":";AAIA,SAAQ,QAAR,EAAkB,eAAlB,QAAwC,YAAxC;AAGA;;;;AAGA,OAAM,SAAU,gBAAV,CAA2B,OAA3B,EAAkD,MAAlD,EAAgE;AACpE,MAAI,QAAQ,CAAC,CAAC,KAAD,EAAQ,QAAR,CAAD,EAAoB,MAApB,CAAZ,EAAyC;AACvC,WAAO,QAAP;AACD,GAFD,MAEO,IAAI,QAAQ,CAAC,CAAC,MAAD,EAAS,OAAT,CAAD,EAAoB,MAApB,CAAZ,EAAyC;AAC9C,WAAO,KAAP;AACD;;AACD,SAAO,OAAO,KAAK,KAAZ,GAAoB,KAApB,GAA4B,QAAnC;AACD;AAED,OAAM,SAAU,iBAAV,CACJ,IADI,EAEJ,MAFI,EAGJ,MAHI,EAIJ,OAJI,EAIiB;AAErB,MAAM,oBAAoB,GACxB,OAAO,KAAK,KAAZ,GAAoB,MAAM,CAAC,SAA3B,GAAuC,OAAO,KAAK,QAAZ,GAAuB,MAAM,CAAC,YAA9B,GAA6C,MAAM,CAAC,WAD7F;AAGA,SAAO,eAAe,CAAC,CAAC,MAAM,IAAI,EAAX,EAAe,IAAf,CAAD,EAAuB,oBAAoB,CAAC,IAAD,CAA3C,EAAmD,MAAM,CAAC,MAAP,CAAc,IAAd,CAAnD,CAAtB;AACD;AAED,OAAM,SAAU,mBAAV,CACJ,UADI,EAEJ,MAFI,EAGJ,MAHI,EAIJ,OAJI,EAIiB;AAErB,MAAM,KAAK,GAAG,EAAd;;AAFqB,6CAGF,UAHE;AAAA;;AAAA;AAGrB,wDAA+B;AAAA,UAApB,IAAoB;AAC7B,UAAM,KAAK,GAAG,iBAAiB,CAAC,IAAD,EAAO,MAAM,IAAI,EAAjB,EAAqB,MAArB,EAA6B,OAA7B,CAA/B;;AACA,UAAI,KAAK,KAAK,SAAd,EAAyB;AACvB,QAAA,KAAK,CAAC,IAAD,CAAL,GAAc,KAAd;AACD;AACF;AARoB;AAAA;AAAA;AAAA;AAAA;;AASrB,SAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import { contains, getFirstDefined } from '../../util';\n/**\n * Get header channel, which can be different from facet channel when orient is specified or when the facet channel is facet.\n */\nexport function getHeaderChannel(channel, orient) {\n    if (contains(['top', 'bottom'], orient)) {\n        return 'column';\n    }\n    else if (contains(['left', 'right'], orient)) {\n        return 'row';\n    }\n    return channel === 'row' ? 'row' : 'column';\n}\nexport function getHeaderProperty(prop, header, config, channel) {\n    const headerSpecificConfig = channel === 'row' ? config.headerRow : channel === 'column' ? config.headerColumn : config.headerFacet;\n    return getFirstDefined((header || {})[prop], headerSpecificConfig[prop], config.header[prop]);\n}\nexport function getHeaderProperties(properties, header, config, channel) {\n    const props = {};\n    for (const prop of properties) {\n        const value = getHeaderProperty(prop, header || {}, config, channel);\n        if (value !== undefined) {\n            props[prop] = value;\n        }\n    }\n    return props;\n}\n//# sourceMappingURL=common.js.map"]},"metadata":{},"sourceType":"module"}