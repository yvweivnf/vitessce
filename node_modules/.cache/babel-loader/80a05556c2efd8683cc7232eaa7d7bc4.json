{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport { ProgramManager } from '@luma.gl/core';\nimport { gouraudLighting, phongLighting } from '@luma.gl/core';\nimport project from './project/project';\nimport project32 from './project32/project32';\nimport shadow from './shadow/shadow';\nimport picking from './picking/picking';\nvar DEFAULT_MODULES = [project];\nvar SHADER_HOOKS = ['vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)', 'vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)', 'vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)', 'fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)'];\nexport function createProgramManager(gl) {\n  var programManager = ProgramManager.getDefaultProgramManager(gl);\n\n  var _iterator = _createForOfIteratorHelper(DEFAULT_MODULES),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var shaderModule = _step.value;\n      programManager.addDefaultModule(shaderModule);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  var _iterator2 = _createForOfIteratorHelper(SHADER_HOOKS),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var shaderHook = _step2.value;\n      programManager.addShaderHook(shaderHook);\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return programManager;\n}\nexport { picking, project, project32, gouraudLighting, phongLighting, shadow };","map":{"version":3,"sources":["../../../src/shaderlib/index.js"],"names":["DEFAULT_MODULES","SHADER_HOOKS","programManager","ProgramManager"],"mappings":";AAoBA,SAAA,cAAA,QAAA,eAAA;AACA,SAAA,eAAA,EAAA,aAAA,QAAA,eAAA;AACA,OAAA,OAAA,MAAA,mBAAA;AACA,OAAA,SAAA,MAAA,uBAAA;AACA,OAAA,MAAA,MAAA,iBAAA;AACA,OAAA,OAAA,MAAA,mBAAA;AAEA,IAAMA,eAAe,GAAG,CAAxB,OAAwB,CAAxB;AAEA,IAAMC,YAAY,GAAG,CAAA,iEAAA,EAAA,4EAAA,EAAA,mEAAA,EAArB,qEAAqB,CAArB;AAOA,OAAO,SAAA,oBAAA,CAAA,EAAA,EAAkC;AACvC,MAAMC,cAAc,GAAGC,cAAc,CAAdA,wBAAAA,CAAvB,EAAuBA,CAAvB;;AADuC,6CAGvC,eAHuC;AAAA;;AAAA;AAGvC,wDAA4C;AAAA,UAA5C,YAA4C;AAC1CD,MAAAA,cAAc,CAAdA,gBAAAA,CAAAA,YAAAA;AACD;AALsC;AAAA;AAAA;AAAA;AAAA;;AAAA,8CAMvC,YANuC;AAAA;;AAAA;AAMvC,2DAAuC;AAAA,UAAvC,UAAuC;AACrCA,MAAAA,cAAc,CAAdA,aAAAA,CAAAA,UAAAA;AACD;AARsC;AAAA;AAAA;AAAA;AAAA;;AAUvC,SAAA,cAAA;AACD;AAED,SAAA,OAAA,EAAA,OAAA,EAAA,SAAA,EAAA,eAAA,EAAA,aAAA,EAAA,MAAA","sourcesContent":["// Copyright (c) 2015 - 2017 Uber Technologies, Inc.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport {ProgramManager} from '@luma.gl/core';\nimport {gouraudLighting, phongLighting} from '@luma.gl/core';\nimport project from './project/project';\nimport project32 from './project32/project32';\nimport shadow from './shadow/shadow';\nimport picking from './picking/picking';\n\nconst DEFAULT_MODULES = [project];\n\nconst SHADER_HOOKS = [\n  'vs:DECKGL_FILTER_SIZE(inout vec3 size, VertexGeometry geometry)',\n  'vs:DECKGL_FILTER_GL_POSITION(inout vec4 position, VertexGeometry geometry)',\n  'vs:DECKGL_FILTER_COLOR(inout vec4 color, VertexGeometry geometry)',\n  'fs:DECKGL_FILTER_COLOR(inout vec4 color, FragmentGeometry geometry)'\n];\n\nexport function createProgramManager(gl) {\n  const programManager = ProgramManager.getDefaultProgramManager(gl);\n\n  for (const shaderModule of DEFAULT_MODULES) {\n    programManager.addDefaultModule(shaderModule);\n  }\n  for (const shaderHook of SHADER_HOOKS) {\n    programManager.addShaderHook(shaderHook);\n  }\n\n  return programManager;\n}\n\nexport {picking, project, project32, gouraudLighting, phongLighting, shadow};\n"]},"metadata":{},"sourceType":"module"}