{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\spatial\\\\SpatialOptions.js\";\nimport React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\nconst useToggleStyles = makeStyles(() => createStyles({\n  cameraLabel: {\n    padding: '0px 0px 0px 16px'\n  },\n  box: {\n    padding: '0px'\n  },\n  button: {\n    padding: '0px 0px 0px 8px'\n  }\n}));\n\nconst ToggleFixedAxisButton = ({\n  setSpatialAxisFixed,\n  spatialAxisFixed,\n  use3d\n}) => {\n  const classes = useToggleStyles();\n  return /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.cameraLabel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Fix Camera Axis\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    onClick: () => setSpatialAxisFixed(!spatialAxisFixed),\n    disabled: !use3d,\n    checked: Boolean(spatialAxisFixed),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default function SpatialOptions(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding,\n    setSpatialAxisFixed,\n    spatialAxisFixed,\n    use3d,\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange,\n    canShowExpressionOptions,\n    canShowColorEncodingOption,\n    canShow3DOptions\n  } = props;\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n\n  const handleColormapRangeChangeDebounced = useCallback(debounce(handleColormapRangeChange, 5, {\n    trailing: true\n  }), [handleColormapRangeChange]);\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(OptionsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }\n  }, canShowColorEncodingOption ? /*#__PURE__*/React.createElement(CellColorEncodingOption, {\n    observationsLabel: observationsLabel,\n    cellColorEncoding: cellColorEncoding,\n    setCellColorEncoding: setCellColorEncoding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }) : null, canShow3DOptions ? /*#__PURE__*/React.createElement(ToggleFixedAxisButton, {\n    setSpatialAxisFixed: setSpatialAxisFixed,\n    spatialAxisFixed: spatialAxisFixed,\n    use3d: use3d,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }) : null, canShowExpressionOptions ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    htmlFor: \"gene-expression-colormap-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Gene Expression Colormap\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(OptionSelect, {\n    className: classes.select,\n    value: geneExpressionColormap,\n    onChange: handleGeneExpressionColormapChange,\n    inputProps: {\n      id: 'gene-expression-colormap-select'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 15\n    }\n  }, GLSL_COLORMAPS.map(cmap => /*#__PURE__*/React.createElement(\"option\", {\n    key: cmap,\n    value: cmap,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 19\n    }\n  }, cmap))))), /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.labelCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Gene Expression Colormap Range\"), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.inputCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Slider, {\n    classes: {\n      root: classes.slider,\n      valueLabel: classes.sliderValueLabel\n    },\n    value: geneExpressionColormapRange,\n    onChange: handleColormapRangeChangeDebounced,\n    \"aria-labelledby\": \"gene-expression-colormap-range-slider\",\n    valueLabelDisplay: \"auto\",\n    step: 0.005,\n    min: 0.0,\n    max: 1.0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  })))) : null);\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/spatial/SpatialOptions.js"],"names":["React","useCallback","debounce","Checkbox","TableCell","TableRow","Slider","makeStyles","createStyles","useStyles","OptionsContainer","CellColorEncodingOption","OptionSelect","GLSL_COLORMAPS","useToggleStyles","cameraLabel","padding","box","button","ToggleFixedAxisButton","setSpatialAxisFixed","spatialAxisFixed","use3d","classes","Boolean","SpatialOptions","props","observationsLabel","cellColorEncoding","setCellColorEncoding","geneExpressionColormap","setGeneExpressionColormap","geneExpressionColormapRange","setGeneExpressionColormapRange","canShowExpressionOptions","canShowColorEncodingOption","canShow3DOptions","handleGeneExpressionColormapChange","event","target","value","handleColormapRangeChange","handleColormapRangeChangeDebounced","trailing","labelCell","inputCell","select","id","map","cmap","root","slider","valueLabel","sliderValueLabel"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\n\nconst useToggleStyles = makeStyles(() => createStyles({\n  cameraLabel: {\n    padding: '0px 0px 0px 16px',\n  },\n  box: {\n    padding: '0px',\n  },\n  button: {\n    padding: '0px 0px 0px 8px',\n  },\n}));\n\nconst ToggleFixedAxisButton = ({\n  setSpatialAxisFixed,\n  spatialAxisFixed,\n  use3d,\n}) => {\n  const classes = useToggleStyles();\n  return (\n    <TableRow>\n      <TableCell className={classes.cameraLabel}>\n      Fix Camera Axis\n      </TableCell>\n      <TableCell className={classes.box}>\n        <Checkbox\n          onClick={() => setSpatialAxisFixed(!spatialAxisFixed)}\n          disabled={!use3d}\n          checked={Boolean(spatialAxisFixed)}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default function SpatialOptions(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding,\n    setSpatialAxisFixed,\n    spatialAxisFixed,\n    use3d,\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange,\n    canShowExpressionOptions,\n    canShowColorEncodingOption,\n    canShow3DOptions,\n  } = props;\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n  const handleColormapRangeChangeDebounced = useCallback(\n    debounce(handleColormapRangeChange, 5, { trailing: true }),\n    [handleColormapRangeChange],\n  );\n\n  const classes = useStyles();\n\n  return (\n    <OptionsContainer>\n      {canShowColorEncodingOption ? (\n        <CellColorEncodingOption\n          observationsLabel={observationsLabel}\n          cellColorEncoding={cellColorEncoding}\n          setCellColorEncoding={setCellColorEncoding}\n        />\n      ) : null}\n      {canShow3DOptions ? (\n        <ToggleFixedAxisButton\n          setSpatialAxisFixed={setSpatialAxisFixed}\n          spatialAxisFixed={spatialAxisFixed}\n          use3d={use3d}\n        />\n      ) : null}\n      {canShowExpressionOptions ? (\n        <>\n          <TableRow>\n            <TableCell className={classes.labelCell} htmlFor=\"gene-expression-colormap-select\">\n          Gene Expression Colormap\n            </TableCell>\n            <TableCell className={classes.inputCell}>\n              <OptionSelect\n                className={classes.select}\n                value={geneExpressionColormap}\n                onChange={handleGeneExpressionColormapChange}\n                inputProps={{\n                  id: 'gene-expression-colormap-select',\n                }}\n              >\n                {GLSL_COLORMAPS.map(cmap => (\n                  <option key={cmap} value={cmap}>{cmap}</option>\n                ))}\n              </OptionSelect>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell className={classes.labelCell}>\n          Gene Expression Colormap Range\n            </TableCell>\n            <TableCell className={classes.inputCell}>\n              <Slider\n                classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n                value={geneExpressionColormapRange}\n                onChange={handleColormapRangeChangeDebounced}\n                aria-labelledby=\"gene-expression-colormap-range-slider\"\n                valueLabelDisplay=\"auto\"\n                step={0.005}\n                min={0.0}\n                max={1.0}\n              />\n            </TableCell>\n          </TableRow>\n        </>\n      ) : null}\n    </OptionsContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}