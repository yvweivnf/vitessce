{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\components\\\\layer-controller\\\\shared-channel-controls.js\";\nimport React from 'react';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport { useSelectStyles } from './styles';\n/**\n * Dropdown for selecting a channel.\n * @prop {function} handleChange Callback for each new selection.\n * @prop {array} channelOptions List of available selections, like ['DAPI', 'FITC', ...].\n * @prop {boolean} disabled Whether or not the component is disabled.\n * @prop {number} selectionIndex Current numeric index of a selection.\n */\n\nexport function ChannelSelectionDropdown({\n  handleChange,\n  disabled,\n  channelOptions,\n  selectionIndex\n}) {\n  const classes = useSelectStyles();\n  return /*#__PURE__*/React.createElement(Select, {\n    classes: {\n      root: classes.selectRoot\n    },\n    native: true,\n    value: selectionIndex,\n    onChange: e => handleChange(Number(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, channelOptions.map((opt, i) => /*#__PURE__*/React.createElement(\"option\", {\n    disabled: disabled,\n    key: opt,\n    value: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, opt)));\n}\n/**\n * Checkbox for toggling on/off of a channel.\n * @prop {string} color Current color for this channel.\n * @prop {boolean} checked Whether or not this channel is \"on\".\n * @prop {boolean} disabled Whether or not the component is disabled.\n * @prop {function} toggle Callback for toggling on/off.\n */\n\nexport function ChannelVisibilityCheckbox({\n  color,\n  checked,\n  toggle,\n  disabled\n}) {\n  return /*#__PURE__*/React.createElement(Checkbox, {\n    onChange: toggle,\n    checked: checked,\n    disabled: disabled,\n    style: {\n      color,\n      '&$checked': {\n        color\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/layer-controller/shared-channel-controls.js"],"names":["React","Checkbox","Select","useSelectStyles","ChannelSelectionDropdown","handleChange","disabled","channelOptions","selectionIndex","classes","root","selectRoot","e","Number","target","value","map","opt","i","ChannelVisibilityCheckbox","color","checked","toggle"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA;;;;;;;;AAOA,OAAO,SAASC,wBAAT,CAAkC;AACvCC,EAAAA,YADuC;AAEvCC,EAAAA,QAFuC;AAGvCC,EAAAA,cAHuC;AAIvCC,EAAAA;AAJuC,CAAlC,EAKJ;AACD,QAAMC,OAAO,GAAGN,eAAe,EAA/B;AACA,sBACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAEO,MAAAA,IAAI,EAAED,OAAO,CAACE;AAAhB,KADX;AAEE,IAAA,MAAM,MAFR;AAGE,IAAA,KAAK,EAAEH,cAHT;AAIE,IAAA,QAAQ,EAAEI,CAAC,IAAIP,YAAY,CAACQ,MAAM,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAP,CAJ7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGR,cAAc,CAACS,GAAf,CAAmB,CAACC,GAAD,EAAMC,CAAN,kBAClB;AAAQ,IAAA,QAAQ,EAAEZ,QAAlB;AAA4B,IAAA,GAAG,EAAEW,GAAjC;AAAsC,IAAA,KAAK,EAAEC,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,GADH,CADD,CANH,CADF;AAcD;AAED;;;;;;;;AAOA,OAAO,SAASE,yBAAT,CAAmC;AACxCC,EAAAA,KADwC;AACjCC,EAAAA,OADiC;AACxBC,EAAAA,MADwB;AAChBhB,EAAAA;AADgB,CAAnC,EAEJ;AACD,sBACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAEgB,MADZ;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,QAAQ,EAAEf,QAHZ;AAIE,IAAA,KAAK,EAAE;AAAEc,MAAAA,KAAF;AAAS,mBAAa;AAAEA,QAAAA;AAAF;AAAtB,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAQD","sourcesContent":["import React from 'react';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Select from '@material-ui/core/Select';\nimport { useSelectStyles } from './styles';\n\n/**\n * Dropdown for selecting a channel.\n * @prop {function} handleChange Callback for each new selection.\n * @prop {array} channelOptions List of available selections, like ['DAPI', 'FITC', ...].\n * @prop {boolean} disabled Whether or not the component is disabled.\n * @prop {number} selectionIndex Current numeric index of a selection.\n */\nexport function ChannelSelectionDropdown({\n  handleChange,\n  disabled,\n  channelOptions,\n  selectionIndex,\n}) {\n  const classes = useSelectStyles();\n  return (\n    <Select\n      classes={{ root: classes.selectRoot }}\n      native\n      value={selectionIndex}\n      onChange={e => handleChange(Number(e.target.value))}\n    >\n      {channelOptions.map((opt, i) => (\n        <option disabled={disabled} key={opt} value={i}>\n          {opt}\n        </option>\n      ))}\n    </Select>\n  );\n}\n\n/**\n * Checkbox for toggling on/off of a channel.\n * @prop {string} color Current color for this channel.\n * @prop {boolean} checked Whether or not this channel is \"on\".\n * @prop {boolean} disabled Whether or not the component is disabled.\n * @prop {function} toggle Callback for toggling on/off.\n */\nexport function ChannelVisibilityCheckbox({\n  color, checked, toggle, disabled,\n}) {\n  return (\n    <Checkbox\n      onChange={toggle}\n      checked={checked}\n      disabled={disabled}\n      style={{ color, '&$checked': { color } }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}