{"ast":null,"code":"import { isString } from 'vega';\nimport { stringValue } from 'vega-util';\nimport { FACET_CHANNELS } from '../../channel';\nimport { SELECTION_ID } from '../../selection';\nimport { vals } from '../../util';\nimport { isFacetModel } from '../model';\nimport interval from './interval';\nimport point from './point';\nimport clear from './clear';\nimport inputs from './inputs';\nimport nearest from './nearest';\nimport project from './project';\nimport scales from './scales';\nimport legends from './legends';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\nexport const STORE = '_store';\nexport const TUPLE = '_tuple';\nexport const MODIFY = '_modify';\nexport const SELECTION_DOMAIN = '_selection_domain_';\nexport const VL_SELECTION_RESOLVE = 'vlSelectionResolve'; // Order matters for parsing and assembly.\n\nexport const selectionCompilers = [point, interval, project, toggle, // Bindings may disable direct manipulation.\ninputs, scales, legends, clear, translate, zoom, nearest];\n\nfunction getFacetModel(model) {\n  let parent = model.parent;\n\n  while (parent) {\n    if (isFacetModel(parent)) break;\n    parent = parent.parent;\n  }\n\n  return parent;\n}\n\nexport function unitName(model, {\n  escape\n} = {\n  escape: true\n}) {\n  let name = escape ? stringValue(model.name) : model.name;\n  const facetModel = getFacetModel(model);\n\n  if (facetModel) {\n    const {\n      facet\n    } = facetModel;\n\n    for (const channel of FACET_CHANNELS) {\n      if (facet[channel]) {\n        name += ` + '__facet_${channel}_' + (facet[${stringValue(facetModel.vgField(channel))}])`;\n      }\n    }\n  }\n\n  return name;\n}\nexport function requiresSelectionId(model) {\n  var _a;\n\n  return vals((_a = model.component.selection) !== null && _a !== void 0 ? _a : {}).reduce((identifier, selCmpt) => {\n    return identifier || selCmpt.project.items.some(proj => proj.field === SELECTION_ID);\n  }, false);\n} // Binding a point selection to query widgets or legends disables default direct manipulation interaction.\n// A user can choose to re-enable it by explicitly specifying triggering input events.\n\nexport function disableDirectManipulation(selCmpt, selDef) {\n  if (isString(selDef.select) || !selDef.select.on) delete selCmpt.events;\n  if (isString(selDef.select) || !selDef.select.clear) delete selCmpt.clear;\n  if (isString(selDef.select) || !selDef.select.toggle) delete selCmpt.toggle;\n}","map":{"version":3,"sources":["../../../../src/compile/selection/index.ts"],"names":[],"mappings":"AAAA,SAAiB,QAAjB,QAA2D,MAA3D;AACA,SAAQ,WAAR,QAA0B,WAA1B;AACA,SAAQ,cAAR,QAA6B,eAA7B;AACA,SAOE,YAPF,QAQO,iBARP;AASA,SAAc,IAAd,QAAyB,YAAzB;AAGA,SAAQ,YAAR,QAAkC,UAAlC;AAEA,OAAO,QAAP,MAAqB,YAArB;AACA,OAAO,KAAP,MAAkB,SAAlB;AAGA,OAAO,KAAP,MAAkB,SAAlB;AACA,OAAO,MAAP,MAAmB,UAAnB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,MAAP,MAAmB,UAAnB;AACA,OAAO,OAAP,MAAoB,WAApB;AACA,OAAO,MAAP,MAAmB,UAAnB;AACA,OAAO,SAAP,MAAsB,aAAtB;AACA,OAAO,IAAP,MAAiB,QAAjB;AAGA,OAAO,MAAM,KAAK,GAAG,QAAd;AACP,OAAO,MAAM,KAAK,GAAG,QAAd;AACP,OAAO,MAAM,MAAM,GAAG,SAAf;AACP,OAAO,MAAM,gBAAgB,GAAG,oBAAzB;AACP,OAAO,MAAM,oBAAoB,GAAG,oBAA7B,C,CAgCP;;AACA,OAAO,MAAM,kBAAkB,GAAwB,CACrD,KADqD,EAErD,QAFqD,EAGrD,OAHqD,EAIrD,MAJqD,EAMrD;AACA,MAPqD,EAQrD,MARqD,EASrD,OATqD,EAWrD,KAXqD,EAYrD,SAZqD,EAarD,IAbqD,EAcrD,OAdqD,CAAhD;;AAiBP,SAAS,aAAT,CAAuB,KAAvB,EAAmC;AACjC,MAAI,MAAM,GAAG,KAAK,CAAC,MAAnB;;AACA,SAAO,MAAP,EAAe;AACb,QAAI,YAAY,CAAC,MAAD,CAAhB,EAA0B;AAC1B,IAAA,MAAM,GAAG,MAAM,CAAC,MAAhB;AACD;;AAED,SAAO,MAAP;AACD;;AAED,OAAM,SAAU,QAAV,CAAmB,KAAnB,EAAiC;AAAC,EAAA;AAAD,IAAW;AAAC,EAAA,MAAM,EAAE;AAAT,CAA5C,EAA0D;AAC9D,MAAI,IAAI,GAAG,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC,IAAP,CAAd,GAA6B,KAAK,CAAC,IAApD;AACA,QAAM,UAAU,GAAG,aAAa,CAAC,KAAD,CAAhC;;AACA,MAAI,UAAJ,EAAgB;AACd,UAAM;AAAC,MAAA;AAAD,QAAU,UAAhB;;AACA,SAAK,MAAM,OAAX,IAAsB,cAAtB,EAAsC;AACpC,UAAI,KAAK,CAAC,OAAD,CAAT,EAAoB;AAClB,QAAA,IAAI,IAAI,eAAe,OAAO,eAAe,WAAW,CAAC,UAAU,CAAC,OAAX,CAAmB,OAAnB,CAAD,CAA6B,IAArF;AACD;AACF;AACF;;AACD,SAAO,IAAP;AACD;AAED,OAAM,SAAU,mBAAV,CAA8B,KAA9B,EAA0C;;;AAC9C,SAAO,IAAI,CAAC,CAAA,EAAA,GAAA,KAAK,CAAC,SAAN,CAAgB,SAAhB,MAAyB,IAAzB,IAAyB,EAAA,KAAA,KAAA,CAAzB,GAAyB,EAAzB,GAA6B,EAA9B,CAAJ,CAAsC,MAAtC,CAA6C,CAAC,UAAD,EAAa,OAAb,KAAwB;AAC1E,WAAO,UAAU,IAAI,OAAO,CAAC,OAAR,CAAgB,KAAhB,CAAsB,IAAtB,CAA2B,IAAI,IAAI,IAAI,CAAC,KAAL,KAAe,YAAlD,CAArB;AACD,GAFM,EAEJ,KAFI,CAAP;AAGD,C,CAED;AACA;;AACA,OAAM,SAAU,yBAAV,CAAoC,OAApC,EAAiE,MAAjE,EAAoG;AACxG,MAAI,QAAQ,CAAC,MAAM,CAAC,MAAR,CAAR,IAA2B,CAAC,MAAM,CAAC,MAAP,CAAc,EAA9C,EAAkD,OAAO,OAAO,CAAC,MAAf;AAClD,MAAI,QAAQ,CAAC,MAAM,CAAC,MAAR,CAAR,IAA2B,CAAC,MAAM,CAAC,MAAP,CAAc,KAA9C,EAAqD,OAAO,OAAO,CAAC,KAAf;AACrD,MAAI,QAAQ,CAAC,MAAM,CAAC,MAAR,CAAR,IAA2B,CAAC,MAAM,CAAC,MAAP,CAAc,MAA9C,EAAsD,OAAO,OAAO,CAAC,MAAf;AACvD","sourceRoot":"","sourcesContent":["import { isString } from 'vega';\nimport { stringValue } from 'vega-util';\nimport { FACET_CHANNELS } from '../../channel';\nimport { SELECTION_ID } from '../../selection';\nimport { vals } from '../../util';\nimport { isFacetModel } from '../model';\nimport interval from './interval';\nimport point from './point';\nimport clear from './clear';\nimport inputs from './inputs';\nimport nearest from './nearest';\nimport project from './project';\nimport scales from './scales';\nimport legends from './legends';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\nexport const STORE = '_store';\nexport const TUPLE = '_tuple';\nexport const MODIFY = '_modify';\nexport const SELECTION_DOMAIN = '_selection_domain_';\nexport const VL_SELECTION_RESOLVE = 'vlSelectionResolve';\n// Order matters for parsing and assembly.\nexport const selectionCompilers = [\n    point,\n    interval,\n    project,\n    toggle,\n    // Bindings may disable direct manipulation.\n    inputs,\n    scales,\n    legends,\n    clear,\n    translate,\n    zoom,\n    nearest\n];\nfunction getFacetModel(model) {\n    let parent = model.parent;\n    while (parent) {\n        if (isFacetModel(parent))\n            break;\n        parent = parent.parent;\n    }\n    return parent;\n}\nexport function unitName(model, { escape } = { escape: true }) {\n    let name = escape ? stringValue(model.name) : model.name;\n    const facetModel = getFacetModel(model);\n    if (facetModel) {\n        const { facet } = facetModel;\n        for (const channel of FACET_CHANNELS) {\n            if (facet[channel]) {\n                name += ` + '__facet_${channel}_' + (facet[${stringValue(facetModel.vgField(channel))}])`;\n            }\n        }\n    }\n    return name;\n}\nexport function requiresSelectionId(model) {\n    var _a;\n    return vals((_a = model.component.selection) !== null && _a !== void 0 ? _a : {}).reduce((identifier, selCmpt) => {\n        return identifier || selCmpt.project.items.some(proj => proj.field === SELECTION_ID);\n    }, false);\n}\n// Binding a point selection to query widgets or legends disables default direct manipulation interaction.\n// A user can choose to re-enable it by explicitly specifying triggering input events.\nexport function disableDirectManipulation(selCmpt, selDef) {\n    if (isString(selDef.select) || !selDef.select.on)\n        delete selCmpt.events;\n    if (isString(selDef.select) || !selDef.select.clear)\n        delete selCmpt.clear;\n    if (isString(selDef.select) || !selDef.select.toggle)\n        delete selCmpt.toggle;\n}\n//# sourceMappingURL=index.js.map"]},"metadata":{},"sourceType":"module"}