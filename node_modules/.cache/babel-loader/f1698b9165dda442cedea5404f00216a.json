{"ast":null,"code":"import { isArray } from 'vega-util';\nimport { some } from '../../util';\nimport { Split } from '../split';\nexport class ScaleComponent extends Split {\n  constructor(name, typeWithExplicit) {\n    super({}, // no initial explicit property\n    {\n      name\n    } // name as initial implicit property\n    );\n    this.merged = false;\n    this.setWithExplicit('type', typeWithExplicit);\n  }\n  /**\n   * Whether the scale definitely includes zero in the domain\n   */\n\n\n  domainDefinitelyIncludesZero() {\n    if (this.get('zero') !== false) {\n      return true;\n    }\n\n    return some(this.get('domains'), d => isArray(d) && d.length === 2 && d[0] <= 0 && d[1] >= 0);\n  }\n\n}","map":{"version":3,"sources":["../../../../src/compile/scale/component.ts"],"names":[],"mappings":"AACA,SAAQ,OAAR,QAAsB,WAAtB;AAIA,SAAQ,IAAR,QAAmB,YAAnB;AAEA,SAAkB,KAAlB,QAA8B,UAA9B;AAcA,OAAM,MAAO,cAAP,SAA8B,KAA9B,CAAwD;AAG5D,EAAA,WAAA,CAAY,IAAZ,EAA0B,gBAA1B,EAA+D;AAC7D,UACE,EADF,EACM;AACJ;AAAC,MAAA;AAAD,KAFF,CAES;AAFT;AAHK,SAAA,MAAA,GAAS,KAAT;AAOL,SAAK,eAAL,CAAqB,MAArB,EAA6B,gBAA7B;AACD;AAED;;;;;AAGO,EAAA,4BAA4B,GAAA;AACjC,QAAI,KAAK,GAAL,CAAS,MAAT,MAAqB,KAAzB,EAAgC;AAC9B,aAAO,IAAP;AACD;;AACD,WAAO,IAAI,CAAC,KAAK,GAAL,CAAS,SAAT,CAAD,EAAsB,CAAC,IAAI,OAAO,CAAC,CAAD,CAAP,IAAc,CAAC,CAAC,MAAF,KAAa,CAA3B,IAAgC,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAxC,IAA6C,CAAC,CAAC,CAAD,CAAD,IAAQ,CAAhF,CAAX;AACD;;AAnB2D","sourceRoot":"","sourcesContent":["import { isArray } from 'vega-util';\nimport { some } from '../../util';\nimport { Split } from '../split';\nexport class ScaleComponent extends Split {\n    constructor(name, typeWithExplicit) {\n        super({}, // no initial explicit property\n        { name } // name as initial implicit property\n        );\n        this.merged = false;\n        this.setWithExplicit('type', typeWithExplicit);\n    }\n    /**\n     * Whether the scale definitely includes zero in the domain\n     */\n    domainDefinitelyIncludesZero() {\n        if (this.get('zero') !== false) {\n            return true;\n        }\n        return some(this.get('domains'), d => isArray(d) && d.length === 2 && d[0] <= 0 && d[1] >= 0);\n    }\n}\n//# sourceMappingURL=component.js.map"]},"metadata":{},"sourceType":"module"}