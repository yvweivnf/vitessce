{"ast":null,"code":"import _getPrototypeOf from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _get from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/get\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _inherits from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _createSuper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";\nimport { clamp } from 'math.gl';\nimport Controller from './controller';\nimport { MapState } from './map-controller';\nimport { mod } from '../utils/math-utils';\n\nvar GlobeState = /*#__PURE__*/function (_MapState) {\n  _inherits(GlobeState, _MapState);\n\n  var _super = _createSuper(GlobeState);\n\n  function GlobeState() {\n    _classCallCheck(this, GlobeState);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(GlobeState, [{\n    key: \"_applyConstraints\",\n    value: function _applyConstraints(props) {\n      var maxZoom = props.maxZoom,\n          minZoom = props.minZoom,\n          zoom = props.zoom;\n      props.zoom = clamp(zoom, minZoom, maxZoom);\n      var longitude = props.longitude,\n          latitude = props.latitude;\n\n      if (longitude < -180 || longitude > 180) {\n        props.longitude = mod(longitude + 180, 360) - 180;\n      }\n\n      props.latitude = clamp(latitude, -89, 89);\n      return props;\n    }\n  }]);\n\n  return GlobeState;\n}(MapState);\n\nvar GlobeController = /*#__PURE__*/function (_Controller) {\n  _inherits(GlobeController, _Controller);\n\n  var _super2 = _createSuper(GlobeController);\n\n  function GlobeController(props) {\n    _classCallCheck(this, GlobeController);\n\n    props.dragMode = props.dragMode || 'pan';\n    return _super2.call(this, GlobeState, props);\n  }\n\n  _createClass(GlobeController, [{\n    key: \"setProps\",\n    value: function setProps(props) {\n      _get(_getPrototypeOf(GlobeController.prototype), \"setProps\", this).call(this, props);\n\n      this.dragRotate = false;\n      this.touchRotate = false;\n    }\n  }, {\n    key: \"linearTransitionProps\",\n    get: function get() {\n      return ['longitude', 'latitude', 'zoom'];\n    }\n  }]);\n\n  return GlobeController;\n}(Controller);\n\nexport { GlobeController as default };","map":{"version":3,"sources":["../../../src/controllers/globe-controller.js"],"names":["zoom","props","clamp","latitude","longitude","mod","constructor"],"mappings":";;;;;;AAAA,SAAA,KAAA,QAAA,SAAA;AACA,OAAA,UAAA,MAAA,cAAA;AAEA,SAAA,QAAA,QAAA,kBAAA;AACA,SAAA,GAAA,QAAA,qBAAA;;IAEA,U;;;;;;;;;;;;;sCAEmB,K,EAAQ;AAAA,UAEjB,OAFiB,GAEvB,KAFuB,CAEjB,OAFiB;AAAA,UAEjB,OAFiB,GAEvB,KAFuB,CAEjB,OAFiB;AAAA,UAEEA,IAFF,GAEvB,KAFuB,CAEEA,IAFF;AAGvBC,MAAAA,KAAK,CAALA,IAAAA,GAAaC,KAAK,CAAA,IAAA,EAAA,OAAA,EAAlBD,OAAkB,CAAlBA;AAHuB,UAKjB,SALiB,GAKvB,KALuB,CAKjB,SALiB;AAAA,UAKLE,QALK,GAKvB,KALuB,CAKLA,QALK;;AAMvB,UAAIC,SAAS,GAAG,CAAZA,GAAAA,IAAoBA,SAAS,GAAjC,GAAA,EAAyC;AACvCH,QAAAA,KAAK,CAALA,SAAAA,GAAkBI,GAAG,CAACD,SAAS,GAAV,GAAA,EAAHC,GAAG,CAAHA,GAAlBJ,GAAAA;AACD;;AACDA,MAAAA,KAAK,CAALA,QAAAA,GAAiBC,KAAK,CAAA,QAAA,EAAW,CAAX,EAAA,EAAtBD,EAAsB,CAAtBA;AAEA,aAAA,KAAA;AACD;;;;EAdH,Q;;IAiBe,e;;;;;AACbK,2BAAW,KAAXA,EAAmB;AAAA;;AACjBL,IAAAA,KAAK,CAALA,QAAAA,GAAiBA,KAAK,CAALA,QAAAA,IAAjBA,KAAAA;AADiB,8BAEjB,UAFiB,EAEjB,KAFiB;AAGlB;;;;6BAEO,K,EAAQ;AACd,oFAAA,KAAA;;AAGA,WAAA,UAAA,GAAA,KAAA;AACA,WAAA,WAAA,GAAA,KAAA;AACD;;;wBAE2B;AAC1B,aAAO,CAAA,WAAA,EAAA,UAAA,EAAP,MAAO,CAAP;AACD;;;;EAhBY,U;;SAAA,e","sourcesContent":["import {clamp} from 'math.gl';\nimport Controller from './controller';\n\nimport {MapState} from './map-controller';\nimport {mod} from '../utils/math-utils';\n\nclass GlobeState extends MapState {\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    const {longitude, latitude} = props;\n    if (longitude < -180 || longitude > 180) {\n      props.longitude = mod(longitude + 180, 360) - 180;\n    }\n    props.latitude = clamp(latitude, -89, 89);\n\n    return props;\n  }\n}\n\nexport default class GlobeController extends Controller {\n  constructor(props) {\n    props.dragMode = props.dragMode || 'pan';\n    super(GlobeState, props);\n  }\n\n  setProps(props) {\n    super.setProps(props);\n\n    // TODO - support pitching?\n    this.dragRotate = false;\n    this.touchRotate = false;\n  }\n\n  get linearTransitionProps() {\n    return ['longitude', 'latitude', 'zoom'];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}