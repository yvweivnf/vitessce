{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar _DEFAULT_TEXTURE_PARA;\n\nimport { Texture2D } from '@luma.gl/core';\nvar DEFAULT_TEXTURE_PARAMETERS = (_DEFAULT_TEXTURE_PARA = {}, _defineProperty(_DEFAULT_TEXTURE_PARA, 10241, 9987), _defineProperty(_DEFAULT_TEXTURE_PARA, 10240, 9729), _defineProperty(_DEFAULT_TEXTURE_PARA, 10242, 33071), _defineProperty(_DEFAULT_TEXTURE_PARA, 10243, 33071), _DEFAULT_TEXTURE_PARA);\nvar internalTextures = {};\nexport function createTexture(layer, image) {\n  var gl = layer.context && layer.context.gl;\n\n  if (!gl || !image) {\n    return null;\n  }\n\n  if (image instanceof Texture2D) {\n    return image;\n  } else if (image.constructor && image.constructor.name !== 'Object') {\n    image = {\n      data: image\n    };\n  }\n\n  var specialTextureParameters = null;\n\n  if (image.compressed) {\n    specialTextureParameters = _defineProperty({}, 10241, image.data.length > 1 ? 9985 : 9729);\n  }\n\n  var texture = new Texture2D(gl, _objectSpread({}, image, {\n    parameters: _objectSpread({}, DEFAULT_TEXTURE_PARAMETERS, {}, specialTextureParameters, {}, layer.props.textureParameters)\n  }));\n  internalTextures[texture.id] = true;\n  return texture;\n}\nexport function destroyTexture(texture) {\n  if (!texture || !(texture instanceof Texture2D)) {\n    return;\n  }\n\n  if (internalTextures[texture.id]) {\n    texture.delete();\n    delete internalTextures[texture.id];\n  }\n}","map":{"version":3,"sources":["../../../src/utils/texture.js"],"names":["DEFAULT_TEXTURE_PARAMETERS","internalTextures","gl","layer","image","data","specialTextureParameters","texture","parameters","textureParameters"],"mappings":";;;;;AAAA,SAAA,SAAA,QAAA,eAAA;AAGA,IAAMA,0BAA0B,uEAC9B,KAD8B,EAAG,IAAH,0CAE9B,KAF8B,EAAG,IAAH,0CAG9B,KAH8B,EAAG,KAAH,0CAI9B,KAJ8B,EAI9B,KAJ8B,yBAAhC;AAQA,IAAMC,gBAAgB,GAAtB,EAAA;AAEA,OAAO,SAAA,aAAA,CAAA,KAAA,EAAA,KAAA,EAAqC;AAC1C,MAAMC,EAAE,GAAGC,KAAK,CAALA,OAAAA,IAAiBA,KAAK,CAALA,OAAAA,CAA5B,EAAA;;AACA,MAAI,CAAA,EAAA,IAAO,CAAX,KAAA,EAAmB;AACjB,WAAA,IAAA;AACD;;AAMD,MAAIC,KAAK,YAAT,SAAA,EAAgC;AAC9B,WAAA,KAAA;AADF,GAAA,MAEO,IAAIA,KAAK,CAALA,WAAAA,IAAqBA,KAAK,CAALA,WAAAA,CAAAA,IAAAA,KAAzB,QAAA,EAA8D;AAEnEA,IAAAA,KAAK,GAAG;AAACC,MAAAA,IAAI,EAAED;AAAP,KAARA;AACD;;AAED,MAAIE,wBAAwB,GAA5B,IAAA;;AACA,MAAIF,KAAK,CAAT,UAAA,EAAsB;AACpBE,IAAAA,wBAAwB,uBACtB,KADsB,EACGF,KAAK,CAALA,IAAAA,CAAAA,MAAAA,GAAAA,CAAAA,GAAAA,IAAAA,GAAAA,IADH,CAAxBE;AAGD;;AAED,MAAMC,OAAO,GAAG,IAAA,SAAA,CAAA,EAAA,oBAAkB,KAAlB;AAEdC,IAAAA,UAAU,oBAAE,0BAAF,MAAE,wBAAF,MAGLL,KAAK,CAALA,KAAAA,CAAYM,iBAHP;AAFI,KAAhB;AASAR,EAAAA,gBAAgB,CAACM,OAAO,CAAxBN,EAAgB,CAAhBA,GAAAA,IAAAA;AACA,SAAA,OAAA;AACD;AAED,OAAO,SAAA,cAAA,CAAA,OAAA,EAAiC;AACtC,MAAI,CAAA,OAAA,IAAY,EAAEM,OAAO,YAAzB,SAAgB,CAAhB,EAAiD;AAC/C;AACD;;AACD,MAAIN,gBAAgB,CAACM,OAAO,CAA5B,EAAoB,CAApB,EAAkC;AAChCA,IAAAA,OAAO,CAAPA,MAAAA;AACA,WAAON,gBAAgB,CAACM,OAAO,CAA/B,EAAuB,CAAvB;AACD;AACF","sourcesContent":["import {Texture2D} from '@luma.gl/core';\nimport GL from '@luma.gl/constants';\n\nconst DEFAULT_TEXTURE_PARAMETERS = {\n  [GL.TEXTURE_MIN_FILTER]: GL.LINEAR_MIPMAP_LINEAR,\n  [GL.TEXTURE_MAG_FILTER]: GL.LINEAR,\n  [GL.TEXTURE_WRAP_S]: GL.CLAMP_TO_EDGE,\n  [GL.TEXTURE_WRAP_T]: GL.CLAMP_TO_EDGE\n};\n\n// Track the textures that are created by us. They need to be released when they are no longer used.\nconst internalTextures = {};\n\nexport function createTexture(layer, image) {\n  const gl = layer.context && layer.context.gl;\n  if (!gl || !image) {\n    return null;\n  }\n\n  // image could be one of:\n  //  - Texture2D\n  //  - Browser object: Image, ImageData, ImageData, HTMLCanvasElement, HTMLVideoElement, ImageBitmap\n  //  - Plain object: {width: <number>, height: <number>, data: <Uint8Array>}\n  if (image instanceof Texture2D) {\n    return image;\n  } else if (image.constructor && image.constructor.name !== 'Object') {\n    // Browser object\n    image = {data: image};\n  }\n\n  let specialTextureParameters = null;\n  if (image.compressed) {\n    specialTextureParameters = {\n      [GL.TEXTURE_MIN_FILTER]: image.data.length > 1 ? GL.LINEAR_MIPMAP_NEAREST : GL.LINEAR\n    };\n  }\n\n  const texture = new Texture2D(gl, {\n    ...image,\n    parameters: {\n      ...DEFAULT_TEXTURE_PARAMETERS,\n      ...specialTextureParameters,\n      ...layer.props.textureParameters\n    }\n  });\n  // Track this texture\n  internalTextures[texture.id] = true;\n  return texture;\n}\n\nexport function destroyTexture(texture) {\n  if (!texture || !(texture instanceof Texture2D)) {\n    return;\n  }\n  if (internalTextures[texture.id]) {\n    texture.delete();\n    delete internalTextures[texture.id];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}