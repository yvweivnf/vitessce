{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DeckCache = /*#__PURE__*/function () {\n  function DeckCache(getData, convert) {\n    _classCallCheck(this, DeckCache);\n\n    _defineProperty(this, \"objects\", void 0);\n\n    _defineProperty(this, \"originals\", void 0);\n\n    _defineProperty(this, \"updateTrigger\", void 0);\n\n    _defineProperty(this, \"_idToPosition\", void 0);\n\n    _defineProperty(this, \"_getData\", void 0);\n\n    _defineProperty(this, \"_convert\", void 0);\n\n    this.objects = [];\n    this.originals = [];\n    this.updateTrigger = 0;\n    this._idToPosition = new Map();\n    this._getData = getData;\n    this._convert = convert;\n  }\n\n  _createClass(DeckCache, [{\n    key: \"updateAllDeckObjects\",\n    value: function updateAllDeckObjects() {\n      var _this = this;\n\n      if (!this._getData || !this._convert) return;\n      this.originals.length = 0;\n      this.objects.length = 0;\n\n      this._idToPosition.clear();\n\n      this._getData().forEach(function (d) {\n        _this._idToPosition.set(d.id, _this.objects.length);\n\n        _this.originals.push(d);\n\n        _this.objects.push(_this._convert(d));\n      });\n\n      this.triggerUpdate();\n    }\n  }, {\n    key: \"updateDeckObjectsByIds\",\n    value: function updateDeckObjectsByIds(ids) {\n      var _this2 = this;\n\n      if (!this._getData || !this._convert) return;\n      ids.forEach(function (id) {\n        var p = _this2._idToPosition.get(id);\n\n        if (p !== undefined) {\n          _this2.objects[p] = _this2._convert(_this2.originals[p]);\n        }\n      });\n      this.triggerUpdate();\n    }\n  }, {\n    key: \"triggerUpdate\",\n    value: function triggerUpdate() {\n      this.updateTrigger++;\n    }\n  }, {\n    key: \"getDeckObjectById\",\n    value: function getDeckObjectById(id) {\n      var p = this._idToPosition.get(id);\n\n      return p !== undefined ? this.objects[p] : null;\n    }\n  }, {\n    key: \"getOriginalById\",\n    value: function getOriginalById(id) {\n      var p = this._idToPosition.get(id);\n\n      return p !== undefined ? this.originals[p] : null;\n    }\n  }]);\n\n  return DeckCache;\n}();\n\nexports[\"default\"] = DeckCache;","map":{"version":3,"sources":["../../../src/lib/deck-renderer/deck-cache.ts"],"names":["DeckCache","d","ids","p","id"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAqBA,S;AAQnB,WAAA,SAAA,CAAA,OAAA,EAAA,OAAA,EAAqE;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,SAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,WAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,eAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;AAAA,IAAA,eAAA,CAAA,IAAA,EAAA,UAAA,EAAA,KAAA,CAAA,CAAA;;AACnE,SAAA,OAAA,GAAA,EAAA;AACA,SAAA,SAAA,GAAA,EAAA;AACA,SAAA,aAAA,GAAA,CAAA;AAEA,SAAA,aAAA,GAAqB,IAArB,GAAqB,EAArB;AACA,SAAA,QAAA,GAAA,OAAA;AACA,SAAA,QAAA,GAAA,OAAA;AACD;;;;2CAEsB;AAAA,UAAA,KAAA,GAAA,IAAA;;AACrB,UAAI,CAAC,KAAD,QAAA,IAAkB,CAAC,KAAvB,QAAA,EAAsC;AAEtC,WAAA,SAAA,CAAA,MAAA,GAAA,CAAA;AACA,WAAA,OAAA,CAAA,MAAA,GAAA,CAAA;;AACA,WAAA,aAAA,CAAA,KAAA;;AAEA,WAAA,QAAA,GAAA,OAAA,CAAwB,UAAA,CAAA,EAAO;AAC7B,QAAA,KAAI,CAAJ,aAAA,CAAA,GAAA,CAAwBC,CAAD,CAAvB,EAAA,EAAsC,KAAI,CAAJ,OAAA,CAAtC,MAAA;;AACA,QAAA,KAAI,CAAJ,SAAA,CAAA,IAAA,CAAA,CAAA;;AACA,QAAA,KAAI,CAAJ,OAAA,CAAA,IAAA,CAAkB,KAAI,CAAJ,QAAA,CAAlB,CAAkB,CAAlB;AAHF,OAAA;;AAMA,WAAA,aAAA;AACD;;;2CAEsBC,G,EAAe;AAAA,UAAA,MAAA,GAAA,IAAA;;AACpC,UAAI,CAAC,KAAD,QAAA,IAAkB,CAAC,KAAvB,QAAA,EAAsC;AAEtCA,MAAAA,GAAG,CAAHA,OAAAA,CAAY,UAAA,EAAA,EAAQ;AAClB,YAAMC,CAAC,GAAG,MAAI,CAAJ,aAAA,CAAA,GAAA,CAAV,EAAU,CAAV;;AACA,YAAIA,CAAC,KAAL,SAAA,EAAqB;AACnB,UAAA,MAAI,CAAJ,OAAA,CAAA,CAAA,IAAkB,MAAI,CAAJ,QAAA,CAAc,MAAI,CAAJ,SAAA,CAAhC,CAAgC,CAAd,CAAlB;AACD;AAJHD,OAAAA;AAOA,WAAA,aAAA;AACD;;;oCAEe;AACd,WAAA,aAAA;AACD;;;sCAEiBE,E,EAAsC;AACtD,UAAMD,CAAC,GAAG,KAAA,aAAA,CAAA,GAAA,CAAV,EAAU,CAAV;;AACA,aAAOA,CAAC,KAADA,SAAAA,GAAkB,KAAA,OAAA,CAAlBA,CAAkB,CAAlBA,GAAP,IAAA;AACD;;;oCAEeC,E,EAAsC;AACpD,UAAMD,CAAC,GAAG,KAAA,aAAA,CAAA,GAAA,CAAV,EAAU,CAAV;;AACA,aAAOA,CAAC,KAADA,SAAAA,GAAkB,KAAA,SAAA,CAAlBA,CAAkB,CAAlBA,GAAP,IAAA;AACD","sourcesContent":["export default class DeckCache<TORIG, TCONV> {\n  objects: TCONV[];\n  originals: TORIG[];\n  updateTrigger: number;\n  _idToPosition: Map<string, number>;\n  _getData: () => TORIG[];\n  _convert: (arg0: TORIG) => TCONV;\n\n  constructor(getData: () => TORIG[], convert: (arg0: TORIG) => TCONV) {\n    this.objects = [];\n    this.originals = [];\n    this.updateTrigger = 0;\n\n    this._idToPosition = new Map();\n    this._getData = getData;\n    this._convert = convert;\n  }\n\n  updateAllDeckObjects() {\n    if (!this._getData || !this._convert) return;\n\n    this.originals.length = 0;\n    this.objects.length = 0;\n    this._idToPosition.clear();\n\n    this._getData().forEach((d) => {\n      this._idToPosition.set((d as any).id, this.objects.length);\n      this.originals.push(d);\n      this.objects.push(this._convert(d));\n    });\n\n    this.triggerUpdate();\n  }\n\n  updateDeckObjectsByIds(ids: string[]) {\n    if (!this._getData || !this._convert) return;\n\n    ids.forEach((id) => {\n      const p = this._idToPosition.get(id);\n      if (p !== undefined) {\n        this.objects[p] = this._convert(this.originals[p]);\n      }\n    });\n\n    this.triggerUpdate();\n  }\n\n  triggerUpdate() {\n    this.updateTrigger++;\n  }\n\n  getDeckObjectById(id: string): TCONV | null | undefined {\n    const p = this._idToPosition.get(id);\n    return p !== undefined ? this.objects[p] : null;\n  }\n\n  getOriginalById(id: string): TORIG | null | undefined {\n    const p = this._idToPosition.get(id);\n    return p !== undefined ? this.originals[p] : null;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}