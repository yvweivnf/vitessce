{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import React from'react';import RemoveCircleIcon from'@material-ui/icons/RemoveCircle';import IconButton from'@material-ui/core/IconButton';import Grid from'@material-ui/core/Grid';import{ChannelSelectionDropdown,ChannelVisibilityCheckbox}from'./shared-channel-controls';/**\n * Controller for the handling the bitmask channels.\n * @prop {boolean} visibility Whether or not this channel is \"on\"\n * @prop {string} dimName Name of the dimensions this slider controls (usually \"channel\").\n * @prop {object} channelOptions All available options for this dimension (i.e channel names).\n * @prop {function} handlePropertyChange Callback for when a property (color, slider etc.) changes.\n * @prop {function} handleChannelRemove When a channel is removed, this is called.\n * @prop {number} selectionIndex The current numeric index of the selection.\n * @prop {boolean} disableOptions Whether or not channel options are be disabled (default: false).\n */function BitmaskChannelController(_ref){var _ref$visibility=_ref.visibility,visibility=_ref$visibility===void 0?false:_ref$visibility,dimName=_ref.dimName,channelOptions=_ref.channelOptions,handlePropertyChange=_ref.handlePropertyChange,handleChannelRemove=_ref.handleChannelRemove,selectionIndex=_ref.selectionIndex,_ref$disableOptions=_ref.disableOptions,disableOptions=_ref$disableOptions===void 0?false:_ref$disableOptions;/* A valid selection is defined by an object where the keys are\n  *  the name of a dimension of the data, and the values are the\n  *  index of the image along that particular dimension.\n  *\n  *  Since we currently only support making a selection along one\n  *  addtional dimension (i.e. the dropdown just has channels or mz)\n  *  we have a helper function to create the selection.\n  *\n  *  e.g { channel: 2 } // channel dimension, third channel\n  */var createSelection=function createSelection(index){return _defineProperty({},dimName,index);};return/*#__PURE__*/React.createElement(Grid,{container:true,direction:\"row\",justify:\"space-between\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:2},/*#__PURE__*/React.createElement(ChannelVisibilityCheckbox,{color:[220,220,220],checked:visibility,toggle:function toggle(){return handlePropertyChange('visible',!visibility);}})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:9},/*#__PURE__*/React.createElement(ChannelSelectionDropdown,{handleChange:function handleChange(v){return handlePropertyChange('selection',createSelection(v));},selectionIndex:selectionIndex,disableOptions:disableOptions,channelOptions:channelOptions})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:1},/*#__PURE__*/React.createElement(IconButton,{onClick:handleChannelRemove,style:{padding:'6px 6px 6px 0px'}},/*#__PURE__*/React.createElement(RemoveCircleIcon,null))));}export default BitmaskChannelController;","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/layer-controller/BitmaskChannelController.js"],"names":["React","RemoveCircleIcon","IconButton","Grid","ChannelSelectionDropdown","ChannelVisibilityCheckbox","BitmaskChannelController","visibility","dimName","channelOptions","handlePropertyChange","handleChannelRemove","selectionIndex","disableOptions","createSelection","index","v","padding"],"mappings":"0LAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,iCAA7B,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CAEA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CAEA,OAASC,wBAAT,CAAmCC,yBAAnC,KAAoE,2BAApE,CAEA;;;;;;;;;GAUA,QAASC,CAAAA,wBAAT,MAQG,0BAPDC,UAOC,CAPDA,UAOC,0BAPY,KAOZ,iBANDC,OAMC,MANDA,OAMC,CALDC,cAKC,MALDA,cAKC,CAJDC,oBAIC,MAJDA,oBAIC,CAHDC,mBAGC,MAHDA,mBAGC,CAFDC,cAEC,MAFDA,cAEC,0BADDC,cACC,CADDA,cACC,8BADgB,KAChB,qBACD;;;;;;;;;IAUA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,4BAAQP,OAAR,CAAkBO,KAAlB,GAA7B,CACA,mBACE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,SAAS,CAAC,KAA1B,CAAgC,OAAO,CAAC,eAAxC,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACE,oBAAC,yBAAD,EACE,KAAK,CAAE,CAAC,GAAD,CAAM,GAAN,CAAW,GAAX,CADT,CAEE,OAAO,CAAER,UAFX,CAGE,MAAM,CAAE,wBAAMG,CAAAA,oBAAoB,CAAC,SAAD,CAAY,CAACH,UAAb,CAA1B,EAHV,EADF,CADF,cAQE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACE,oBAAC,wBAAD,EACE,YAAY,CAAE,sBAAAS,CAAC,QAAIN,CAAAA,oBAAoB,CAAC,WAAD,CAAcI,eAAe,CAACE,CAAD,CAA7B,CAAxB,EADjB,CAEE,cAAc,CAAEJ,cAFlB,CAGE,cAAc,CAAEC,cAHlB,CAIE,cAAc,CAAEJ,cAJlB,EADF,CARF,cAgBE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,eACE,oBAAC,UAAD,EAAY,OAAO,CAAEE,mBAArB,CAA0C,KAAK,CAAE,CAAEM,OAAO,CAAE,iBAAX,CAAjD,eACE,oBAAC,gBAAD,MADF,CADF,CAhBF,CADF,CAwBD,CAED,cAAeX,CAAAA,wBAAf","sourcesContent":["import React from 'react';\n\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Grid from '@material-ui/core/Grid';\n\nimport { ChannelSelectionDropdown, ChannelVisibilityCheckbox } from './shared-channel-controls';\n\n/**\n * Controller for the handling the bitmask channels.\n * @prop {boolean} visibility Whether or not this channel is \"on\"\n * @prop {string} dimName Name of the dimensions this slider controls (usually \"channel\").\n * @prop {object} channelOptions All available options for this dimension (i.e channel names).\n * @prop {function} handlePropertyChange Callback for when a property (color, slider etc.) changes.\n * @prop {function} handleChannelRemove When a channel is removed, this is called.\n * @prop {number} selectionIndex The current numeric index of the selection.\n * @prop {boolean} disableOptions Whether or not channel options are be disabled (default: false).\n */\nfunction BitmaskChannelController({\n  visibility = false,\n  dimName,\n  channelOptions,\n  handlePropertyChange,\n  handleChannelRemove,\n  selectionIndex,\n  disableOptions = false,\n}) {\n  /* A valid selection is defined by an object where the keys are\n  *  the name of a dimension of the data, and the values are the\n  *  index of the image along that particular dimension.\n  *\n  *  Since we currently only support making a selection along one\n  *  addtional dimension (i.e. the dropdown just has channels or mz)\n  *  we have a helper function to create the selection.\n  *\n  *  e.g { channel: 2 } // channel dimension, third channel\n  */\n  const createSelection = index => ({ [dimName]: index });\n  return (\n    <Grid container direction=\"row\" justify=\"space-between\">\n      <Grid item xs={2}>\n        <ChannelVisibilityCheckbox\n          color={[220, 220, 220]}\n          checked={visibility}\n          toggle={() => handlePropertyChange('visible', !visibility)}\n        />\n      </Grid>\n      <Grid item xs={9}>\n        <ChannelSelectionDropdown\n          handleChange={v => handlePropertyChange('selection', createSelection(v))}\n          selectionIndex={selectionIndex}\n          disableOptions={disableOptions}\n          channelOptions={channelOptions}\n        />\n      </Grid>\n      <Grid item xs={1}>\n        <IconButton onClick={handleChannelRemove} style={{ padding: '6px 6px 6px 0px' }}>\n          <RemoveCircleIcon />\n        </IconButton>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default BitmaskChannelController;\n"]},"metadata":{},"sourceType":"module"}