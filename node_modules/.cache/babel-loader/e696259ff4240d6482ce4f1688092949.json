{"ast":null,"code":"import { Observable } from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\n\nfunction merge(...observables) {\n  if (observables.length === 0) {\n    return Observable.from([]);\n  }\n\n  return new Observable(observer => {\n    let completed = 0;\n    const subscriptions = observables.map(input => {\n      return input.subscribe({\n        error(error) {\n          observer.error(error);\n          unsubscribeAll();\n        },\n\n        next(value) {\n          observer.next(value);\n        },\n\n        complete() {\n          if (++completed === observables.length) {\n            observer.complete();\n            unsubscribeAll();\n          }\n        }\n\n      });\n    });\n\n    const unsubscribeAll = () => {\n      subscriptions.forEach(subscription => unsubscribe(subscription));\n    };\n\n    return unsubscribeAll;\n  });\n}\n\nexport default merge;","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/observable-fns/dist.esm/merge.js"],"names":["Observable","unsubscribe","merge","observables","length","from","observer","completed","subscriptions","map","input","subscribe","error","unsubscribeAll","next","value","complete","forEach","subscription"],"mappings":"AAAA,SAASA,UAAT,QAA2B,cAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AACA,SAASC,KAAT,CAAe,GAAGC,WAAlB,EAA+B;AAC3B,MAAIA,WAAW,CAACC,MAAZ,KAAuB,CAA3B,EAA8B;AAC1B,WAAOJ,UAAU,CAACK,IAAX,CAAgB,EAAhB,CAAP;AACH;;AACD,SAAO,IAAIL,UAAJ,CAAeM,QAAQ,IAAI;AAC9B,QAAIC,SAAS,GAAG,CAAhB;AACA,UAAMC,aAAa,GAAGL,WAAW,CAACM,GAAZ,CAAgBC,KAAK,IAAI;AAC3C,aAAOA,KAAK,CAACC,SAAN,CAAgB;AACnBC,QAAAA,KAAK,CAACA,KAAD,EAAQ;AACTN,UAAAA,QAAQ,CAACM,KAAT,CAAeA,KAAf;AACAC,UAAAA,cAAc;AACjB,SAJkB;;AAKnBC,QAAAA,IAAI,CAACC,KAAD,EAAQ;AACRT,UAAAA,QAAQ,CAACQ,IAAT,CAAcC,KAAd;AACH,SAPkB;;AAQnBC,QAAAA,QAAQ,GAAG;AACP,cAAI,EAAET,SAAF,KAAgBJ,WAAW,CAACC,MAAhC,EAAwC;AACpCE,YAAAA,QAAQ,CAACU,QAAT;AACAH,YAAAA,cAAc;AACjB;AACJ;;AAbkB,OAAhB,CAAP;AAeH,KAhBqB,CAAtB;;AAiBA,UAAMA,cAAc,GAAG,MAAM;AACzBL,MAAAA,aAAa,CAACS,OAAd,CAAsBC,YAAY,IAAIjB,WAAW,CAACiB,YAAD,CAAjD;AACH,KAFD;;AAGA,WAAOL,cAAP;AACH,GAvBM,CAAP;AAwBH;;AACD,eAAeX,KAAf","sourcesContent":["import { Observable } from \"./observable\";\nimport unsubscribe from \"./unsubscribe\";\nfunction merge(...observables) {\n    if (observables.length === 0) {\n        return Observable.from([]);\n    }\n    return new Observable(observer => {\n        let completed = 0;\n        const subscriptions = observables.map(input => {\n            return input.subscribe({\n                error(error) {\n                    observer.error(error);\n                    unsubscribeAll();\n                },\n                next(value) {\n                    observer.next(value);\n                },\n                complete() {\n                    if (++completed === observables.length) {\n                        observer.complete();\n                        unsubscribeAll();\n                    }\n                }\n            });\n        });\n        const unsubscribeAll = () => {\n            subscriptions.forEach(subscription => unsubscribe(subscription));\n        };\n        return unsubscribeAll;\n    });\n}\nexport default merge;\n"]},"metadata":{},"sourceType":"module"}