{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _objectSpread from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{PureComponent}from'react';import DeckGL,{OrthographicView,OrbitView}from'deck.gl';import ToolMenu from'./ToolMenu';import{DEFAULT_GL_OPTIONS}from'../utils';import{getCursor,getCursorWithTool}from'./cursor';/**\n * Abstract class component intended to be inherited by\n * the Spatial and Scatterplot class components.\n * Contains a common constructor, common DeckGL callbacks,\n * and common render function.\n */var AbstractSpatialOrScatterplot=/*#__PURE__*/function(_PureComponent){_inherits(AbstractSpatialOrScatterplot,_PureComponent);var _super=_createSuper(AbstractSpatialOrScatterplot);function AbstractSpatialOrScatterplot(props){var _this;_classCallCheck(this,AbstractSpatialOrScatterplot);_this=_super.call(this,props);_this.state={gl:null,tool:null};_this.viewport=null;_this.onViewStateChange=_this.onViewStateChange.bind(_assertThisInitialized(_this));_this.onInitializeViewInfo=_this.onInitializeViewInfo.bind(_assertThisInitialized(_this));_this.onWebGLInitialized=_this.onWebGLInitialized.bind(_assertThisInitialized(_this));_this.onToolChange=_this.onToolChange.bind(_assertThisInitialized(_this));_this.onHover=_this.onHover.bind(_assertThisInitialized(_this));return _this;}/**\n   * Called by DeckGL upon a viewState change,\n   * for example zoom or pan interaction.\n   * Emit the new viewState to the `setViewState`\n   * handler prop.\n   * @param {object} params\n   * @param {object} params.viewState The next deck.gl viewState.\n   */_createClass(AbstractSpatialOrScatterplot,[{key:\"onViewStateChange\",value:function onViewStateChange(_ref){var nextViewState=_ref.viewState;var _this$props=this.props,setViewState=_this$props.setViewState,viewState=_this$props.viewState,layers=_this$props.layers,spatialAxisFixed=_this$props.spatialAxisFixed;var use3d=layers===null||layers===void 0?void 0:layers.some(function(l){return l.use3d;});setViewState(_objectSpread({},nextViewState,{// If the axis is fixed, just use the current target in state i.e don't change target.\ntarget:spatialAxisFixed&&use3d?viewState.target:nextViewState.target}));}/**\n   * Called by DeckGL upon viewport\n   * initialization.\n   * @param {object} viewState\n   * @param {object} viewState.viewport\n   */},{key:\"onInitializeViewInfo\",value:function onInitializeViewInfo(_ref2){var viewport=_ref2.viewport;this.viewport=viewport;}/**\n   * Called by DeckGL upon initialization,\n   * helps to understand when to pass layers\n   * to the DeckGL component.\n   * @param {object} gl The WebGL context object.\n   */},{key:\"onWebGLInitialized\",value:function onWebGLInitialized(gl){this.setState({gl:gl});}/**\n   * Called by the ToolMenu buttons.\n   * Emits the new tool value to the\n   * `onToolChange` prop.\n   * @param {string} tool Name of tool.\n   */},{key:\"onToolChange\",value:function onToolChange(tool){var onToolChangeProp=this.props.onToolChange;this.setState({tool:tool});if(onToolChangeProp){onToolChangeProp(tool);}}/**\n   * Create the DeckGL layers.\n   * @returns {object[]} Array of\n   * DeckGL layer objects.\n   * Intended to be overriden by descendants.\n   */ // eslint-disable-next-line class-methods-use-this\n},{key:\"getLayers\",value:function getLayers(){return[];}// eslint-disable-next-line consistent-return\n},{key:\"onHover\",value:function onHover(info){var coordinate=info.coordinate,layer=info.sourceLayer,tile=info.tile;var _this$props2=this.props,setCellHighlight=_this$props2.setCellHighlight,cellHighlight=_this$props2.cellHighlight,setComponentHover=_this$props2.setComponentHover,layers=_this$props2.layers;var hasBitmask=(layers||[]).some(function(l){return l.type==='bitmask';});if(!setCellHighlight||!tile){return null;}if(!layer||!coordinate){if(cellHighlight&&hasBitmask){setCellHighlight(null);}return null;}var content=tile.content,bbox=tile.bbox,z=tile.z;if(!content){if(cellHighlight&&hasBitmask){setCellHighlight(null);}return null;}var data=content.data,width=content.width,height=content.height;var left=bbox.left,right=bbox.right,top=bbox.top,bottom=bbox.bottom;var bounds=[left,data.height<layer.tileSize?height:bottom,data.width<layer.tileSize?width:right,top];if(!data){if(cellHighlight&&hasBitmask){setCellHighlight(null);}return null;}// Tiled layer needs a custom layerZoomScale.\nif(layer.id.includes('bitmask')){// The zoomed out layer needs to use the fixed zoom at which it is rendered.\nvar layerZoomScale=Math.max(1,Math.pow(2,Math.round(-z)));var dataCoords=[Math.floor((coordinate[0]-bounds[0])/layerZoomScale),Math.floor((coordinate[1]-bounds[3])/layerZoomScale)];var coords=dataCoords[1]*width+dataCoords[0];var hoverData=data.map(function(d){return d[coords];});var cellId=hoverData.find(function(i){return i>0;});if(cellId!==Number(cellHighlight)){if(setComponentHover){setComponentHover();}// eslint-disable-next-line no-unused-expressions\nsetCellHighlight(cellId?String(cellId):null);}}}/**\n   * Emits a function to project from the\n   * cell ID space to the scatterplot or\n   * spatial coordinate space, via the\n   * `updateViewInfo` prop.\n   */},{key:\"viewInfoDidUpdate\",value:function viewInfoDidUpdate(getCellCoords){var _this$props3=this.props,updateViewInfo=_this$props3.updateViewInfo,cells=_this$props3.cells,uuid=_this$props3.uuid;var viewport=this.viewport;if(updateViewInfo&&viewport){updateViewInfo({uuid:uuid,project:function project(cellId){var cell=cells[cellId];try{var _getCellCoords=getCellCoords(cell),_getCellCoords2=_slicedToArray(_getCellCoords,2),positionX=_getCellCoords2[0],positionY=_getCellCoords2[1];return viewport.project([positionX,positionY]);}catch(e){return[null,null];}}});}}/**\n   * Intended to be overriden by descendants.\n   */},{key:\"componentDidUpdate\",value:function componentDidUpdate(){}/**\n   * A common render function for both Spatial\n   * and Scatterplot components.\n   */},{key:\"render\",value:function render(){var _this$props4=this.props,deckRef=_this$props4.deckRef,viewState=_this$props4.viewState,uuid=_this$props4.uuid,layerProps=_this$props4.layers,hideTools=_this$props4.hideTools;var _this$state=this.state,gl=_this$state.gl,tool=_this$state.tool;var layers=this.getLayers();var use3d=(layerProps||[]).some(function(l){return l.use3d;});var showCellSelectionTools=this.cellsLayer!==null||this.cellsEntries.length&&this.cellsEntries[0][1].xy;var showPanTool=this.cellsLayer!==null||layerProps.findIndex(function(l){return l.type==='bitmask'||l.type==='raster';})>=0;// For large datasets or ray casting, the visual quality takes only a small\n// hit in exchange for much better performance by setting this to false:\n// https://deck.gl/docs/api-reference/core/deck#usedevicepixels\nvar useDevicePixels=this.cellsEntries.length<100000&&!use3d;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ToolMenu,{activeTool:tool,setActiveTool:this.onToolChange,visibleTools:{pan:showPanTool&&!hideTools,selectRectangle:showCellSelectionTools&&!hideTools,selectLasso:showCellSelectionTools&&!hideTools}}),/*#__PURE__*/React.createElement(DeckGL,{id:\"deckgl-overlay-\".concat(uuid),ref:deckRef,views:[use3d?new OrbitView({id:'orbit',controller:true,orbitAxis:'Y'}):new OrthographicView({id:'ortho'})]// id is a fix for https://github.com/uber/deck.gl/issues/3259\n,layers:gl&&viewState.target.slice(0,2).every(function(i){return typeof i==='number';})?layers:[],glOptions:DEFAULT_GL_OPTIONS,onWebGLInitialized:this.onWebGLInitialized,onViewStateChange:this.onViewStateChange,viewState:viewState,useDevicePixels:useDevicePixels,controller:tool?{dragPan:false}:true,getCursor:tool?getCursorWithTool:getCursor,onHover:this.onHover},this.onInitializeViewInfo));}}]);return AbstractSpatialOrScatterplot;}(PureComponent);export{AbstractSpatialOrScatterplot as default};","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/shared-spatial-scatterplot/AbstractSpatialOrScatterplot.js"],"names":["React","PureComponent","DeckGL","OrthographicView","OrbitView","ToolMenu","DEFAULT_GL_OPTIONS","getCursor","getCursorWithTool","AbstractSpatialOrScatterplot","props","state","gl","tool","viewport","onViewStateChange","bind","onInitializeViewInfo","onWebGLInitialized","onToolChange","onHover","nextViewState","viewState","setViewState","layers","spatialAxisFixed","use3d","some","l","target","setState","onToolChangeProp","info","coordinate","layer","sourceLayer","tile","setCellHighlight","cellHighlight","setComponentHover","hasBitmask","type","content","bbox","z","data","width","height","left","right","top","bottom","bounds","tileSize","id","includes","layerZoomScale","Math","max","round","dataCoords","floor","coords","hoverData","map","d","cellId","find","i","Number","String","getCellCoords","updateViewInfo","cells","uuid","project","cell","positionX","positionY","e","deckRef","layerProps","hideTools","getLayers","showCellSelectionTools","cellsLayer","cellsEntries","length","xy","showPanTool","findIndex","useDevicePixels","pan","selectRectangle","selectLasso","controller","orbitAxis","slice","every","dragPan"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\nimport DeckGL, { OrthographicView, OrbitView } from 'deck.gl';\nimport ToolMenu from './ToolMenu';\nimport { DEFAULT_GL_OPTIONS } from '../utils';\nimport { getCursor, getCursorWithTool } from './cursor';\n\n/**\n * Abstract class component intended to be inherited by\n * the Spatial and Scatterplot class components.\n * Contains a common constructor, common DeckGL callbacks,\n * and common render function.\n */\nexport default class AbstractSpatialOrScatterplot extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gl: null,\n      tool: null,\n    };\n\n    this.viewport = null;\n\n    this.onViewStateChange = this.onViewStateChange.bind(this);\n    this.onInitializeViewInfo = this.onInitializeViewInfo.bind(this);\n    this.onWebGLInitialized = this.onWebGLInitialized.bind(this);\n    this.onToolChange = this.onToolChange.bind(this);\n    this.onHover = this.onHover.bind(this);\n  }\n\n  /**\n   * Called by DeckGL upon a viewState change,\n   * for example zoom or pan interaction.\n   * Emit the new viewState to the `setViewState`\n   * handler prop.\n   * @param {object} params\n   * @param {object} params.viewState The next deck.gl viewState.\n   */\n  onViewStateChange({ viewState: nextViewState }) {\n    const {\n      setViewState, viewState, layers, spatialAxisFixed,\n    } = this.props;\n    const use3d = layers?.some(l => l.use3d);\n    setViewState({\n      ...nextViewState,\n      // If the axis is fixed, just use the current target in state i.e don't change target.\n      target: spatialAxisFixed && use3d ? viewState.target : nextViewState.target,\n    });\n  }\n\n  /**\n   * Called by DeckGL upon viewport\n   * initialization.\n   * @param {object} viewState\n   * @param {object} viewState.viewport\n   */\n  onInitializeViewInfo({ viewport }) {\n    this.viewport = viewport;\n  }\n\n  /**\n   * Called by DeckGL upon initialization,\n   * helps to understand when to pass layers\n   * to the DeckGL component.\n   * @param {object} gl The WebGL context object.\n   */\n  onWebGLInitialized(gl) {\n    this.setState({ gl });\n  }\n\n  /**\n   * Called by the ToolMenu buttons.\n   * Emits the new tool value to the\n   * `onToolChange` prop.\n   * @param {string} tool Name of tool.\n   */\n  onToolChange(tool) {\n    const { onToolChange: onToolChangeProp } = this.props;\n    this.setState({ tool });\n    if (onToolChangeProp) {\n      onToolChangeProp(tool);\n    }\n  }\n\n  /**\n   * Create the DeckGL layers.\n   * @returns {object[]} Array of\n   * DeckGL layer objects.\n   * Intended to be overriden by descendants.\n   */\n  // eslint-disable-next-line class-methods-use-this\n  getLayers() {\n    return [];\n  }\n\n  // eslint-disable-next-line consistent-return\n  onHover(info) {\n    const {\n      coordinate, sourceLayer: layer, tile,\n    } = info;\n    const {\n      setCellHighlight, cellHighlight, setComponentHover, layers,\n    } = this.props;\n    const hasBitmask = (layers || []).some(l => l.type === 'bitmask');\n    if (!setCellHighlight || !tile) {\n      return null;\n    }\n    if (!layer || !coordinate) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    const { content, bbox, z } = tile;\n    if (!content) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    const { data, width, height } = content;\n    const {\n      left, right, top, bottom,\n    } = bbox;\n    const bounds = [\n      left,\n      data.height < layer.tileSize ? height : bottom,\n      data.width < layer.tileSize ? width : right,\n      top,\n    ];\n    if (!data) {\n      if (cellHighlight && hasBitmask) {\n        setCellHighlight(null);\n      }\n      return null;\n    }\n    // Tiled layer needs a custom layerZoomScale.\n    if (layer.id.includes('bitmask')) {\n      // The zoomed out layer needs to use the fixed zoom at which it is rendered.\n      const layerZoomScale = Math.max(\n        1,\n        2 ** Math.round(-z),\n      );\n      const dataCoords = [\n        Math.floor((coordinate[0] - bounds[0]) / layerZoomScale),\n        Math.floor((coordinate[1] - bounds[3]) / layerZoomScale),\n      ];\n      const coords = dataCoords[1] * width + dataCoords[0];\n      const hoverData = data.map(d => d[coords]);\n      const cellId = hoverData.find(i => i > 0);\n      if (cellId !== Number(cellHighlight)) {\n        if (setComponentHover) {\n          setComponentHover();\n        }\n        // eslint-disable-next-line no-unused-expressions\n        setCellHighlight(cellId ? String(cellId) : null);\n      }\n    }\n  }\n\n  /**\n   * Emits a function to project from the\n   * cell ID space to the scatterplot or\n   * spatial coordinate space, via the\n   * `updateViewInfo` prop.\n   */\n  viewInfoDidUpdate(getCellCoords) {\n    const { updateViewInfo, cells, uuid } = this.props;\n    const { viewport } = this;\n    if (updateViewInfo && viewport) {\n      updateViewInfo({\n        uuid,\n        project: (cellId) => {\n          const cell = cells[cellId];\n          try {\n            const [positionX, positionY] = getCellCoords(cell);\n            return viewport.project([positionX, positionY]);\n          } catch (e) {\n            return [null, null];\n          }\n        },\n      });\n    }\n  }\n\n  /**\n   * Intended to be overriden by descendants.\n   */\n  componentDidUpdate() {\n\n  }\n\n  /**\n   * A common render function for both Spatial\n   * and Scatterplot components.\n   */\n  render() {\n    const {\n      deckRef, viewState, uuid, layers: layerProps, hideTools,\n    } = this.props;\n    const { gl, tool } = this.state;\n    const layers = this.getLayers();\n    const use3d = (layerProps || []).some(l => l.use3d);\n\n    const showCellSelectionTools = this.cellsLayer !== null\n      || (this.cellsEntries.length && this.cellsEntries[0][1].xy);\n    const showPanTool = this.cellsLayer !== null || layerProps.findIndex(l => l.type === 'bitmask' || l.type === 'raster') >= 0;\n    // For large datasets or ray casting, the visual quality takes only a small\n    // hit in exchange for much better performance by setting this to false:\n    // https://deck.gl/docs/api-reference/core/deck#usedevicepixels\n    const useDevicePixels = this.cellsEntries.length < 100000 && !use3d;\n\n    return (\n      <>\n        <ToolMenu\n          activeTool={tool}\n          setActiveTool={this.onToolChange}\n          visibleTools={{\n            pan: showPanTool && !hideTools,\n            selectRectangle: showCellSelectionTools && !hideTools,\n            selectLasso: showCellSelectionTools && !hideTools,\n          }}\n        />\n        <DeckGL\n          id={`deckgl-overlay-${uuid}`}\n          ref={deckRef}\n          views={[\n            use3d\n              ? new OrbitView({ id: 'orbit', controller: true, orbitAxis: 'Y' })\n              : new OrthographicView({\n                id: 'ortho',\n              }),\n          ]} // id is a fix for https://github.com/uber/deck.gl/issues/3259\n          layers={\n            gl && viewState.target.slice(0, 2).every(i => typeof i === 'number')\n              ? layers\n              : []\n          }\n          glOptions={DEFAULT_GL_OPTIONS}\n          onWebGLInitialized={this.onWebGLInitialized}\n          onViewStateChange={this.onViewStateChange}\n          viewState={viewState}\n          useDevicePixels={useDevicePixels}\n          controller={tool ? { dragPan: false } : true}\n          getCursor={tool ? getCursorWithTool : getCursor}\n          onHover={this.onHover}\n        >\n          {this.onInitializeViewInfo}\n        </DeckGL>\n      </>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}