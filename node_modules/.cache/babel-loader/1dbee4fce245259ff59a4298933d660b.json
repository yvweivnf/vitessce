{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { VERSION } from './lib/utils/version';\nimport parseBasis from './lib/parsers/parse-basis';\nexport var BasisWorkerLoader = {\n  name: 'Basis',\n  id: 'basis',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['basis', 'ktx2'],\n  mimeTypes: ['application/octet-stream', 'image/ktx2'],\n  tests: ['sB'],\n  binary: true,\n  options: {\n    basis: {\n      format: 'auto',\n      libraryPath: 'libs/',\n      containerFormat: 'auto',\n      module: 'transcoder'\n    }\n  }\n};\nexport var BasisLoader = _objectSpread({}, BasisWorkerLoader, {\n  parse: parseBasis\n});\nexport var _TypecheckBasisWorkerLoader = BasisWorkerLoader;\nexport var _TypecheckBasisLoader = BasisLoader;","map":{"version":3,"sources":["../../src/basis-loader.ts"],"names":["BasisWorkerLoader","name","id","module","version","worker","extensions","mimeTypes","tests","binary","options","basis","format","libraryPath","containerFormat","BasisLoader","parse","parseBasis","_TypecheckBasisWorkerLoader","_TypecheckBasisLoader"],"mappings":";AACA,SAAA,OAAA,QAAA,qBAAA;AACA,OAAA,UAAA,MAAA,2BAAA;AAKA,OAAO,IAAMA,iBAAiB,GAAG;AAC/BC,EAAAA,IAAI,EAD2B,OAAA;AAE/BC,EAAAA,EAAE,EAF6B,OAAA;AAG/BC,EAAAA,MAAM,EAHyB,UAAA;AAI/BC,EAAAA,OAAO,EAJwB,OAAA;AAK/BC,EAAAA,MAAM,EALyB,IAAA;AAM/BC,EAAAA,UAAU,EAAE,CAAA,OAAA,EANmB,MAMnB,CANmB;AAO/BC,EAAAA,SAAS,EAAE,CAAA,0BAAA,EAPoB,YAOpB,CAPoB;AAQ/BC,EAAAA,KAAK,EAAE,CARwB,IAQxB,CARwB;AAS/BC,EAAAA,MAAM,EATyB,IAAA;AAU/BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,KAAK,EAAE;AACLC,MAAAA,MAAM,EADD,MAAA;AAELC,MAAAA,WAAW,EAFN,OAAA;AAGLC,MAAAA,eAAe,EAHV,MAAA;AAILX,MAAAA,MAAM,EAAE;AAJH;AADA;AAVsB,CAA1B;AAuBP,OAAO,IAAMY,WAAW,qBAAG,iBAAH;AAEtBC,EAAAA,KAAK,EAAEC;AAFe,EAAjB;AAMP,OAAO,IAAMC,2BAAmC,GAAzC,iBAAA;AACP,OAAO,IAAMC,qBAAuC,GAA7C,WAAA","sourcesContent":["import type {Loader, LoaderWithParser} from '@loaders.gl/loader-utils';\nimport {VERSION} from './lib/utils/version';\nimport parseBasis from './lib/parsers/parse-basis';\n\n/**\n * Worker loader for Basis super compressed textures\n */\nexport const BasisWorkerLoader = {\n  name: 'Basis',\n  id: 'basis',\n  module: 'textures',\n  version: VERSION,\n  worker: true,\n  extensions: ['basis', 'ktx2'],\n  mimeTypes: ['application/octet-stream', 'image/ktx2'],\n  tests: ['sB'],\n  binary: true,\n  options: {\n    basis: {\n      format: 'auto', // gl context doesn't exist on a worker thread\n      libraryPath: 'libs/',\n      containerFormat: 'auto', // 'basis' || 'ktx2' || 'auto'\n      module: 'transcoder' // 'transcoder' || 'encoder'\n    }\n  }\n};\n\n/**\n * Loader for Basis super compressed textures\n */\nexport const BasisLoader = {\n  ...BasisWorkerLoader,\n  parse: parseBasis\n};\n\n// TYPE TESTS - TODO find a better way than exporting junk\nexport const _TypecheckBasisWorkerLoader: Loader = BasisWorkerLoader;\nexport const _TypecheckBasisLoader: LoaderWithParser = BasisLoader;\n"]},"metadata":{},"sourceType":"module"}