{"ast":null,"code":"import React,{useCallback}from'react';import debounce from'lodash/debounce';import Checkbox from'@material-ui/core/Checkbox';import TableCell from'@material-ui/core/TableCell';import TableRow from'@material-ui/core/TableRow';import Slider from'@material-ui/core/Slider';import{makeStyles,createStyles}from'@material-ui/core/styles';import{useStyles}from'../shared-plot-options/styles';import OptionsContainer from'../shared-plot-options/OptionsContainer';import CellColorEncodingOption from'../shared-plot-options/CellColorEncodingOption';import OptionSelect from'../shared-plot-options/OptionSelect';import{GLSL_COLORMAPS}from'../../layers/constants';var useToggleStyles=makeStyles(function(){return createStyles({cameraLabel:{padding:'0px 0px 0px 16px'},box:{padding:'0px'},button:{padding:'0px 0px 0px 8px'}});});var ToggleFixedAxisButton=function ToggleFixedAxisButton(_ref){var setSpatialAxisFixed=_ref.setSpatialAxisFixed,spatialAxisFixed=_ref.spatialAxisFixed,use3d=_ref.use3d;var classes=useToggleStyles();return/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.cameraLabel},\"Fix Camera Axis\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.box},/*#__PURE__*/React.createElement(Checkbox,{onClick:function onClick(){return setSpatialAxisFixed(!spatialAxisFixed);},disabled:!use3d,checked:Boolean(spatialAxisFixed)})));};export default function SpatialOptions(props){var observationsLabel=props.observationsLabel,cellColorEncoding=props.cellColorEncoding,setCellColorEncoding=props.setCellColorEncoding,setSpatialAxisFixed=props.setSpatialAxisFixed,spatialAxisFixed=props.spatialAxisFixed,use3d=props.use3d,geneExpressionColormap=props.geneExpressionColormap,setGeneExpressionColormap=props.setGeneExpressionColormap,geneExpressionColormapRange=props.geneExpressionColormapRange,setGeneExpressionColormapRange=props.setGeneExpressionColormapRange,canShowExpressionOptions=props.canShowExpressionOptions,canShowColorEncodingOption=props.canShowColorEncodingOption,canShow3DOptions=props.canShow3DOptions;function handleGeneExpressionColormapChange(event){setGeneExpressionColormap(event.target.value);}function handleColormapRangeChange(event,value){setGeneExpressionColormapRange(value);}var handleColormapRangeChangeDebounced=useCallback(debounce(handleColormapRangeChange,5,{trailing:true}),[handleColormapRangeChange]);var classes=useStyles();return/*#__PURE__*/React.createElement(OptionsContainer,null,canShowColorEncodingOption?/*#__PURE__*/React.createElement(CellColorEncodingOption,{observationsLabel:observationsLabel,cellColorEncoding:cellColorEncoding,setCellColorEncoding:setCellColorEncoding}):null,canShow3DOptions?/*#__PURE__*/React.createElement(ToggleFixedAxisButton,{setSpatialAxisFixed:setSpatialAxisFixed,spatialAxisFixed:spatialAxisFixed,use3d:use3d}):null,canShowExpressionOptions?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell,htmlFor:\"gene-expression-colormap-select\"},\"Gene Expression Colormap\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(OptionSelect,{className:classes.select,value:geneExpressionColormap,onChange:handleGeneExpressionColormapChange,inputProps:{id:'gene-expression-colormap-select'}},GLSL_COLORMAPS.map(function(cmap){return/*#__PURE__*/React.createElement(\"option\",{key:cmap,value:cmap},cmap);})))),/*#__PURE__*/React.createElement(TableRow,null,/*#__PURE__*/React.createElement(TableCell,{className:classes.labelCell},\"Gene Expression Colormap Range\"),/*#__PURE__*/React.createElement(TableCell,{className:classes.inputCell},/*#__PURE__*/React.createElement(Slider,{classes:{root:classes.slider,valueLabel:classes.sliderValueLabel},value:geneExpressionColormapRange,onChange:handleColormapRangeChangeDebounced,\"aria-labelledby\":\"gene-expression-colormap-range-slider\",valueLabelDisplay:\"auto\",step:0.005,min:0.0,max:1.0})))):null);}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/spatial/SpatialOptions.js"],"names":["React","useCallback","debounce","Checkbox","TableCell","TableRow","Slider","makeStyles","createStyles","useStyles","OptionsContainer","CellColorEncodingOption","OptionSelect","GLSL_COLORMAPS","useToggleStyles","cameraLabel","padding","box","button","ToggleFixedAxisButton","setSpatialAxisFixed","spatialAxisFixed","use3d","classes","Boolean","SpatialOptions","props","observationsLabel","cellColorEncoding","setCellColorEncoding","geneExpressionColormap","setGeneExpressionColormap","geneExpressionColormapRange","setGeneExpressionColormapRange","canShowExpressionOptions","canShowColorEncodingOption","canShow3DOptions","handleGeneExpressionColormapChange","event","target","value","handleColormapRangeChange","handleColormapRangeChangeDebounced","trailing","labelCell","inputCell","select","id","map","cmap","root","slider","valueLabel","sliderValueLabel"],"mappings":"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","sourcesContent":["import React, { useCallback } from 'react';\nimport debounce from 'lodash/debounce';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport Slider from '@material-ui/core/Slider';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport { useStyles } from '../shared-plot-options/styles';\nimport OptionsContainer from '../shared-plot-options/OptionsContainer';\nimport CellColorEncodingOption from '../shared-plot-options/CellColorEncodingOption';\nimport OptionSelect from '../shared-plot-options/OptionSelect';\nimport { GLSL_COLORMAPS } from '../../layers/constants';\n\nconst useToggleStyles = makeStyles(() => createStyles({\n  cameraLabel: {\n    padding: '0px 0px 0px 16px',\n  },\n  box: {\n    padding: '0px',\n  },\n  button: {\n    padding: '0px 0px 0px 8px',\n  },\n}));\n\nconst ToggleFixedAxisButton = ({\n  setSpatialAxisFixed,\n  spatialAxisFixed,\n  use3d,\n}) => {\n  const classes = useToggleStyles();\n  return (\n    <TableRow>\n      <TableCell className={classes.cameraLabel}>\n      Fix Camera Axis\n      </TableCell>\n      <TableCell className={classes.box}>\n        <Checkbox\n          onClick={() => setSpatialAxisFixed(!spatialAxisFixed)}\n          disabled={!use3d}\n          checked={Boolean(spatialAxisFixed)}\n        />\n      </TableCell>\n    </TableRow>\n  );\n};\n\nexport default function SpatialOptions(props) {\n  const {\n    observationsLabel,\n    cellColorEncoding,\n    setCellColorEncoding,\n    setSpatialAxisFixed,\n    spatialAxisFixed,\n    use3d,\n    geneExpressionColormap,\n    setGeneExpressionColormap,\n    geneExpressionColormapRange,\n    setGeneExpressionColormapRange,\n    canShowExpressionOptions,\n    canShowColorEncodingOption,\n    canShow3DOptions,\n  } = props;\n\n  function handleGeneExpressionColormapChange(event) {\n    setGeneExpressionColormap(event.target.value);\n  }\n\n  function handleColormapRangeChange(event, value) {\n    setGeneExpressionColormapRange(value);\n  }\n  const handleColormapRangeChangeDebounced = useCallback(\n    debounce(handleColormapRangeChange, 5, { trailing: true }),\n    [handleColormapRangeChange],\n  );\n\n  const classes = useStyles();\n\n  return (\n    <OptionsContainer>\n      {canShowColorEncodingOption ? (\n        <CellColorEncodingOption\n          observationsLabel={observationsLabel}\n          cellColorEncoding={cellColorEncoding}\n          setCellColorEncoding={setCellColorEncoding}\n        />\n      ) : null}\n      {canShow3DOptions ? (\n        <ToggleFixedAxisButton\n          setSpatialAxisFixed={setSpatialAxisFixed}\n          spatialAxisFixed={spatialAxisFixed}\n          use3d={use3d}\n        />\n      ) : null}\n      {canShowExpressionOptions ? (\n        <>\n          <TableRow>\n            <TableCell className={classes.labelCell} htmlFor=\"gene-expression-colormap-select\">\n          Gene Expression Colormap\n            </TableCell>\n            <TableCell className={classes.inputCell}>\n              <OptionSelect\n                className={classes.select}\n                value={geneExpressionColormap}\n                onChange={handleGeneExpressionColormapChange}\n                inputProps={{\n                  id: 'gene-expression-colormap-select',\n                }}\n              >\n                {GLSL_COLORMAPS.map(cmap => (\n                  <option key={cmap} value={cmap}>{cmap}</option>\n                ))}\n              </OptionSelect>\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell className={classes.labelCell}>\n          Gene Expression Colormap Range\n            </TableCell>\n            <TableCell className={classes.inputCell}>\n              <Slider\n                classes={{ root: classes.slider, valueLabel: classes.sliderValueLabel }}\n                value={geneExpressionColormapRange}\n                onChange={handleColormapRangeChangeDebounced}\n                aria-labelledby=\"gene-expression-colormap-range-slider\"\n                valueLabelDisplay=\"auto\"\n                step={0.005}\n                min={0.0}\n                max={1.0}\n              />\n            </TableCell>\n          </TableRow>\n        </>\n      ) : null}\n    </OptionsContainer>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}