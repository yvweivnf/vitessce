{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { isSelectionParameter } from './selection';\nexport function assembleParameterSignals(params) {\n  var signals = [];\n\n  var _iterator = _createForOfIteratorHelper(params || []),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var param = _step.value;\n      // Selection parameters are handled separately via assembleSelectionTopLevelSignals\n      // and assembleSignals methods registered on the Model.\n      if (isSelectionParameter(param)) continue;\n\n      var expr = param.expr,\n          bind = param.bind,\n          rest = __rest(param, [\"expr\", \"bind\"]);\n\n      if (bind && expr) {\n        // Vega's InitSignal -- apply expr to \"init\"\n        var signal = Object.assign(Object.assign({}, rest), {\n          bind: bind,\n          init: expr\n        });\n        signals.push(signal);\n      } else {\n        var _signal = Object.assign(Object.assign(Object.assign({}, rest), expr ? {\n          update: expr\n        } : {}), bind ? {\n          bind: bind\n        } : {});\n\n        signals.push(_signal);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  return signals;\n}","map":{"version":3,"sources":["../../src/parameter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AACA,SAAQ,oBAAR,QAA+D,aAA/D;AA4BA,OAAM,SAAU,wBAAV,CAAmC,MAAnC,EAA6F;AACjG,MAAM,OAAO,GAA+B,EAA5C;;AADiG,6CAE7E,MAAM,IAAI,EAFmE;AAAA;;AAAA;AAEjG,wDAAkC;AAAA,UAAvB,KAAuB;AAChC;AACA;AACA,UAAI,oBAAoB,CAAC,KAAD,CAAxB,EAAiC;;AAHD,UAIzB,IAJyB,GAIF,KAJE,CAIzB,IAJyB;AAAA,UAInB,IAJmB,GAIF,KAJE,CAInB,IAJmB;AAAA,UAIV,IAJU,GAIN,MAAA,CAAI,KAAJ,EAApB,CAAA,MAAA,EAAA,MAAA,CAAoB,CAJM;;AAMhC,UAAI,IAAI,IAAI,IAAZ,EAAkB;AAChB;AACA,YAAM,MAAM,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACP,IADO,CAAA,EACH;AACP,UAAA,IAAI,EAAJ,IADO;AAEP,UAAA,IAAI,EAAE;AAFC,SADG,CAAZ;AAKA,QAAA,OAAO,CAAC,IAAR,CAAa,MAAb;AACD,OARD,MAQO;AACL,YAAM,OAAM,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACP,IADO,CAAA,EAEN,IAAI,GAAG;AAAC,UAAA,MAAM,EAAE;AAAT,SAAH,GAAoB,EAFlB,CAAA,EAGN,IAAI,GAAG;AAAC,UAAA,IAAI,EAAJ;AAAD,SAAH,GAAY,EAHV,CAAZ;;AAKA,QAAA,OAAO,CAAC,IAAR,CAAa,OAAb;AACD;AACF;AAxBgG;AAAA;AAAA;AAAA;AAAA;;AAyBjG,SAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { isSelectionParameter } from './selection';\nexport function assembleParameterSignals(params) {\n    const signals = [];\n    for (const param of params || []) {\n        // Selection parameters are handled separately via assembleSelectionTopLevelSignals\n        // and assembleSignals methods registered on the Model.\n        if (isSelectionParameter(param))\n            continue;\n        const { expr, bind } = param, rest = __rest(param, [\"expr\", \"bind\"]);\n        if (bind && expr) {\n            // Vega's InitSignal -- apply expr to \"init\"\n            const signal = Object.assign(Object.assign({}, rest), { bind, init: expr });\n            signals.push(signal);\n        }\n        else {\n            const signal = Object.assign(Object.assign(Object.assign({}, rest), (expr ? { update: expr } : {})), (bind ? { bind } : {}));\n            signals.push(signal);\n        }\n    }\n    return signals;\n}\n//# sourceMappingURL=parameter.js.map"]},"metadata":{},"sourceType":"module"}