{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n/* eslint-disable camelcase */\n\nvar INITIAL_STATE = {\n  outlineEnabled: false,\n  outlineRenderShadowmap: false,\n  outlineShadowmap: null\n};\n\nfunction getUniforms() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE,\n      outlineEnabled = _ref.outlineEnabled,\n      outlineRenderShadowmap = _ref.outlineRenderShadowmap,\n      outlineShadowmap = _ref.outlineShadowmap;\n\n  var uniforms = {};\n\n  if (outlineEnabled !== undefined) {\n    // ? 1.0 : 0.0;\n    uniforms.outline_uEnabled = outlineEnabled;\n  }\n\n  if (outlineRenderShadowmap !== undefined) {\n    // ? 1.0 : 0.0;\n    uniforms.outline_uRenderOutlines = outlineRenderShadowmap;\n  }\n\n  if (outlineShadowmap !== undefined) {\n    uniforms.outline_uShadowmap = outlineShadowmap;\n  }\n\n  return uniforms;\n}\n\nvar vs = \"attribute float instanceZLevel;\\nvarying float outline_vzLevel;\\nvarying vec4 outline_vPosition;\\n\\n// Set the z level for the outline shadowmap rendering\\nvoid outline_setZLevel(float zLevel) {\\n  outline_vzLevel = zLevel;\\n}\\n\\n// Store an adjusted position for texture2DProj\\nvoid outline_setUV(vec4 position) {\\n  // mat4(\\n  //   0.5, 0.0, 0.0, 0.0,\\n  //   0.0, 0.5, 0.0, 0.0,\\n  //   0.0, 0.0, 0.5, 0.0,\\n  //   0.5, 0.5, 0.5, 1.0\\n  // ) * position;\\n  outline_vPosition = vec4(position.xyz * 0.5 + position.w * 0.5, position.w);\\n}\\n\";\nvar fs = \"uniform bool outline_uEnabled;\\nuniform bool outline_uRenderOutlines;\\nuniform sampler2D outline_uShadowmap;\\n\\nvarying float outline_vzLevel;\\n// varying vec2 outline_vUV;\\nvarying vec4 outline_vPosition;\\n\\nconst float OUTLINE_Z_LEVEL_ERROR = 0.01;\\n\\n// Return a darker color in shadowmap\\nvec4 outline_filterShadowColor(vec4 color) {\\n  return vec4(outline_vzLevel / 255., outline_vzLevel / 255., outline_vzLevel / 255., 1.);\\n}\\n\\n// Return a darker color if in shadowmap\\nvec4 outline_filterDarkenColor(vec4 color) {\\n  if (outline_uEnabled) {\\n    float maxZLevel;\\n    if (outline_vPosition.q > 0.0) {\\n      maxZLevel = texture2DProj(outline_uShadowmap, outline_vPosition).r * 255.;\\n    } else {\\n      discard;\\n    }\\n    if (maxZLevel < outline_vzLevel + OUTLINE_Z_LEVEL_ERROR) {\\n      vec4(color.rgb * 0.5, color.a);\\n    } else {\\n      discard;\\n    }\\n  }\\n  return color;\\n}\\n\\n// if enabled and rendering outlines - Render depth to shadowmap\\n// if enabled and rendering colors - Return a darker color if in shadowmap\\n// if disabled, just return color\\nvec4 outline_filterColor(vec4 color) {\\n  if (outline_uEnabled) {\\n    return outline_uRenderOutlines ?\\n      outline_filterShadowColor(color) :\\n      outline_filterDarkenColor(color);\\n  }\\n  return color;\\n}\\n\";\nvar _default = {\n  name: 'outline',\n  vs: vs,\n  fs: fs,\n  getUniforms: getUniforms\n};\nexports[\"default\"] = _default;","map":{"version":3,"sources":["../../../src/shaderlib/outline/outline.ts"],"names":["INITIAL_STATE","outlineEnabled","outlineRenderShadowmap","outlineShadowmap","uniforms","vs","fs","name","getUniforms"],"mappings":";;;;;;AAAA;;AACA,IAAMA,aAAkC,GAAG;AACzCC,EAAAA,cAAc,EAD2B,KAAA;AAEzCC,EAAAA,sBAAsB,EAFmB,KAAA;AAGzCC,EAAAA,gBAAgB,EAAE;AAHuB,CAA3C;;AAMA,SAAA,WAAA,GAAmG;AAAA,MAAA,IAAA,GAAA,SAAA,CAAA,MAAA,GAAA,CAAA,IAAA,SAAA,CAAA,CAAA,CAAA,KAAA,SAAA,GAAA,SAAA,CAAA,CAAA,CAAA,GAAfH,aAAe;AAAA,MAA5EC,cAA4E,GAAA,IAAA,CAA5EA,cAA4E;AAAA,MAA5DC,sBAA4D,GAAA,IAAA,CAA5DA,sBAA4D;AAAA,MAApCC,gBAAoC,GAAA,IAAA,CAApCA,gBAAoC;;AACjG,MAAMC,QAA6B,GAAnC,EAAA;;AACA,MAAIH,cAAc,KAAlB,SAAA,EAAkC;AAChC;AACAG,IAAAA,QAAQ,CAARA,gBAAAA,GAAAA,cAAAA;AACD;;AACD,MAAIF,sBAAsB,KAA1B,SAAA,EAA0C;AACxC;AACAE,IAAAA,QAAQ,CAARA,uBAAAA,GAAAA,sBAAAA;AACD;;AACD,MAAID,gBAAgB,KAApB,SAAA,EAAoC;AAClCC,IAAAA,QAAQ,CAARA,kBAAAA,GAAAA,gBAAAA;AACD;;AACD,SAAA,QAAA;AACD;;AAED,IAAMC,EAAE,GAAR,giBAAA;AAsBA,IAAMC,EAAE,GAAR,ywCAAA;eA+Ce;AACbC,EAAAA,IAAI,EADS,SAAA;AAEbF,EAAAA,EAAE,EAFW,EAAA;AAGbC,EAAAA,EAAE,EAHW,EAAA;AAIbE,EAAAA,WAAW,EAAXA;AAJa,C","sourcesContent":["/* eslint-disable camelcase */\nconst INITIAL_STATE: Record<string, any> = {\n  outlineEnabled: false,\n  outlineRenderShadowmap: false,\n  outlineShadowmap: null,\n};\n\nfunction getUniforms({ outlineEnabled, outlineRenderShadowmap, outlineShadowmap } = INITIAL_STATE) {\n  const uniforms: Record<string, any> = {};\n  if (outlineEnabled !== undefined) {\n    // ? 1.0 : 0.0;\n    uniforms.outline_uEnabled = outlineEnabled;\n  }\n  if (outlineRenderShadowmap !== undefined) {\n    // ? 1.0 : 0.0;\n    uniforms.outline_uRenderOutlines = outlineRenderShadowmap;\n  }\n  if (outlineShadowmap !== undefined) {\n    uniforms.outline_uShadowmap = outlineShadowmap;\n  }\n  return uniforms;\n}\n\nconst vs = `\\\nattribute float instanceZLevel;\nvarying float outline_vzLevel;\nvarying vec4 outline_vPosition;\n\n// Set the z level for the outline shadowmap rendering\nvoid outline_setZLevel(float zLevel) {\n  outline_vzLevel = zLevel;\n}\n\n// Store an adjusted position for texture2DProj\nvoid outline_setUV(vec4 position) {\n  // mat4(\n  //   0.5, 0.0, 0.0, 0.0,\n  //   0.0, 0.5, 0.0, 0.0,\n  //   0.0, 0.0, 0.5, 0.0,\n  //   0.5, 0.5, 0.5, 1.0\n  // ) * position;\n  outline_vPosition = vec4(position.xyz * 0.5 + position.w * 0.5, position.w);\n}\n`;\n\nconst fs = `\\\nuniform bool outline_uEnabled;\nuniform bool outline_uRenderOutlines;\nuniform sampler2D outline_uShadowmap;\n\nvarying float outline_vzLevel;\n// varying vec2 outline_vUV;\nvarying vec4 outline_vPosition;\n\nconst float OUTLINE_Z_LEVEL_ERROR = 0.01;\n\n// Return a darker color in shadowmap\nvec4 outline_filterShadowColor(vec4 color) {\n  return vec4(outline_vzLevel / 255., outline_vzLevel / 255., outline_vzLevel / 255., 1.);\n}\n\n// Return a darker color if in shadowmap\nvec4 outline_filterDarkenColor(vec4 color) {\n  if (outline_uEnabled) {\n    float maxZLevel;\n    if (outline_vPosition.q > 0.0) {\n      maxZLevel = texture2DProj(outline_uShadowmap, outline_vPosition).r * 255.;\n    } else {\n      discard;\n    }\n    if (maxZLevel < outline_vzLevel + OUTLINE_Z_LEVEL_ERROR) {\n      vec4(color.rgb * 0.5, color.a);\n    } else {\n      discard;\n    }\n  }\n  return color;\n}\n\n// if enabled and rendering outlines - Render depth to shadowmap\n// if enabled and rendering colors - Return a darker color if in shadowmap\n// if disabled, just return color\nvec4 outline_filterColor(vec4 color) {\n  if (outline_uEnabled) {\n    return outline_uRenderOutlines ?\n      outline_filterShadowColor(color) :\n      outline_filterDarkenColor(color);\n  }\n  return color;\n}\n`;\n\nexport default {\n  name: 'outline',\n  vs,\n  fs,\n  getUniforms,\n};\n"]},"metadata":{},"sourceType":"script"}