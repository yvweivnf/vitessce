{"ast":null,"code":"import { toSet } from 'vega-util';\nimport { keys } from './util';\n/**\n * All types of primitive marks.\n */\n\nexport var Mark = {\n  arc: 'arc',\n  area: 'area',\n  bar: 'bar',\n  image: 'image',\n  line: 'line',\n  point: 'point',\n  rect: 'rect',\n  rule: 'rule',\n  text: 'text',\n  tick: 'tick',\n  trail: 'trail',\n  circle: 'circle',\n  square: 'square',\n  geoshape: 'geoshape'\n};\nexport var ARC = Mark.arc;\nexport var AREA = Mark.area;\nexport var BAR = Mark.bar;\nexport var IMAGE = Mark.image;\nexport var LINE = Mark.line;\nexport var POINT = Mark.point;\nexport var RECT = Mark.rect;\nexport var RULE = Mark.rule;\nexport var TEXT = Mark.text;\nexport var TICK = Mark.tick;\nexport var TRAIL = Mark.trail;\nexport var CIRCLE = Mark.circle;\nexport var SQUARE = Mark.square;\nexport var GEOSHAPE = Mark.geoshape;\nexport function isMark(m) {\n  return m in Mark;\n}\nexport function isPathMark(m) {\n  return ['line', 'area', 'trail'].includes(m);\n}\nexport function isRectBasedMark(m) {\n  return ['rect', 'bar', 'image', 'arc'\n  /* arc is rect/interval in polar coordinate */\n  ].includes(m);\n}\nexport var PRIMITIVE_MARKS = keys(Mark);\nexport function isMarkDef(mark) {\n  return mark['type'];\n}\nvar PRIMITIVE_MARK_INDEX = toSet(PRIMITIVE_MARKS);\nexport function isPrimitiveMark(mark) {\n  var markType = isMarkDef(mark) ? mark.type : mark;\n  return markType in PRIMITIVE_MARK_INDEX;\n}\nexport var STROKE_CONFIG = ['stroke', 'strokeWidth', 'strokeDash', 'strokeDashOffset', 'strokeOpacity', 'strokeJoin', 'strokeMiterLimit'];\nexport var FILL_CONFIG = ['fill', 'fillOpacity'];\nexport var FILL_STROKE_CONFIG = [].concat(STROKE_CONFIG, FILL_CONFIG);\nvar VL_ONLY_MARK_CONFIG_INDEX = {\n  color: 1,\n  filled: 1,\n  invalid: 1,\n  order: 1,\n  radius2: 1,\n  theta2: 1,\n  timeUnitBandSize: 1,\n  timeUnitBandPosition: 1\n};\nexport var VL_ONLY_MARK_CONFIG_PROPERTIES = keys(VL_ONLY_MARK_CONFIG_INDEX);\nexport var VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {\n  area: ['line', 'point'],\n  bar: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],\n  rect: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],\n  line: ['point'],\n  tick: ['bandSize', 'thickness']\n};\nexport var defaultMarkConfig = {\n  color: '#4c78a8',\n  invalid: 'filter',\n  timeUnitBandSize: 1\n};\nvar MARK_CONFIG_INDEX = {\n  mark: 1,\n  arc: 1,\n  area: 1,\n  bar: 1,\n  circle: 1,\n  image: 1,\n  line: 1,\n  point: 1,\n  rect: 1,\n  rule: 1,\n  square: 1,\n  text: 1,\n  tick: 1,\n  trail: 1,\n  geoshape: 1\n};\nexport var MARK_CONFIGS = keys(MARK_CONFIG_INDEX);\nexport function isRelativeBandSize(o) {\n  return o && o['band'] != undefined;\n}\nexport var BAR_CORNER_RADIUS_INDEX = {\n  horizontal: ['cornerRadiusTopRight', 'cornerRadiusBottomRight'],\n  vertical: ['cornerRadiusTopLeft', 'cornerRadiusTopRight']\n};\nvar DEFAULT_RECT_BAND_SIZE = 5;\nexport var defaultBarConfig = {\n  binSpacing: 1,\n  continuousBandSize: DEFAULT_RECT_BAND_SIZE,\n  timeUnitBandPosition: 0.5\n};\nexport var defaultRectConfig = {\n  binSpacing: 0,\n  continuousBandSize: DEFAULT_RECT_BAND_SIZE,\n  timeUnitBandPosition: 0.5\n};\nexport var defaultTickConfig = {\n  thickness: 1\n};\nexport function getMarkType(m) {\n  return isMarkDef(m) ? m.type : m;\n}","map":{"version":3,"sources":["../../src/mark.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { toSet } from 'vega-util';\nimport { keys } from './util';\n/**\n * All types of primitive marks.\n */\nexport const Mark = {\n    arc: 'arc',\n    area: 'area',\n    bar: 'bar',\n    image: 'image',\n    line: 'line',\n    point: 'point',\n    rect: 'rect',\n    rule: 'rule',\n    text: 'text',\n    tick: 'tick',\n    trail: 'trail',\n    circle: 'circle',\n    square: 'square',\n    geoshape: 'geoshape'\n};\nexport const ARC = Mark.arc;\nexport const AREA = Mark.area;\nexport const BAR = Mark.bar;\nexport const IMAGE = Mark.image;\nexport const LINE = Mark.line;\nexport const POINT = Mark.point;\nexport const RECT = Mark.rect;\nexport const RULE = Mark.rule;\nexport const TEXT = Mark.text;\nexport const TICK = Mark.tick;\nexport const TRAIL = Mark.trail;\nexport const CIRCLE = Mark.circle;\nexport const SQUARE = Mark.square;\nexport const GEOSHAPE = Mark.geoshape;\nexport function isMark(m) {\n    return m in Mark;\n}\nexport function isPathMark(m) {\n    return ['line', 'area', 'trail'].includes(m);\n}\nexport function isRectBasedMark(m) {\n    return ['rect', 'bar', 'image', 'arc' /* arc is rect/interval in polar coordinate */].includes(m);\n}\nexport const PRIMITIVE_MARKS = keys(Mark);\nexport function isMarkDef(mark) {\n    return mark['type'];\n}\nconst PRIMITIVE_MARK_INDEX = toSet(PRIMITIVE_MARKS);\nexport function isPrimitiveMark(mark) {\n    const markType = isMarkDef(mark) ? mark.type : mark;\n    return markType in PRIMITIVE_MARK_INDEX;\n}\nexport const STROKE_CONFIG = [\n    'stroke',\n    'strokeWidth',\n    'strokeDash',\n    'strokeDashOffset',\n    'strokeOpacity',\n    'strokeJoin',\n    'strokeMiterLimit'\n];\nexport const FILL_CONFIG = ['fill', 'fillOpacity'];\nexport const FILL_STROKE_CONFIG = [...STROKE_CONFIG, ...FILL_CONFIG];\nconst VL_ONLY_MARK_CONFIG_INDEX = {\n    color: 1,\n    filled: 1,\n    invalid: 1,\n    order: 1,\n    radius2: 1,\n    theta2: 1,\n    timeUnitBandSize: 1,\n    timeUnitBandPosition: 1\n};\nexport const VL_ONLY_MARK_CONFIG_PROPERTIES = keys(VL_ONLY_MARK_CONFIG_INDEX);\nexport const VL_ONLY_MARK_SPECIFIC_CONFIG_PROPERTY_INDEX = {\n    area: ['line', 'point'],\n    bar: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],\n    rect: ['binSpacing', 'continuousBandSize', 'discreteBandSize'],\n    line: ['point'],\n    tick: ['bandSize', 'thickness']\n};\nexport const defaultMarkConfig = {\n    color: '#4c78a8',\n    invalid: 'filter',\n    timeUnitBandSize: 1\n};\nconst MARK_CONFIG_INDEX = {\n    mark: 1,\n    arc: 1,\n    area: 1,\n    bar: 1,\n    circle: 1,\n    image: 1,\n    line: 1,\n    point: 1,\n    rect: 1,\n    rule: 1,\n    square: 1,\n    text: 1,\n    tick: 1,\n    trail: 1,\n    geoshape: 1\n};\nexport const MARK_CONFIGS = keys(MARK_CONFIG_INDEX);\nexport function isRelativeBandSize(o) {\n    return o && o['band'] != undefined;\n}\nexport const BAR_CORNER_RADIUS_INDEX = {\n    horizontal: ['cornerRadiusTopRight', 'cornerRadiusBottomRight'],\n    vertical: ['cornerRadiusTopLeft', 'cornerRadiusTopRight']\n};\nconst DEFAULT_RECT_BAND_SIZE = 5;\nexport const defaultBarConfig = {\n    binSpacing: 1,\n    continuousBandSize: DEFAULT_RECT_BAND_SIZE,\n    timeUnitBandPosition: 0.5\n};\nexport const defaultRectConfig = {\n    binSpacing: 0,\n    continuousBandSize: DEFAULT_RECT_BAND_SIZE,\n    timeUnitBandPosition: 0.5\n};\nexport const defaultTickConfig = {\n    thickness: 1\n};\nexport function getMarkType(m) {\n    return isMarkDef(m) ? m.type : m;\n}\n//# sourceMappingURL=mark.js.map"]},"metadata":{},"sourceType":"module"}