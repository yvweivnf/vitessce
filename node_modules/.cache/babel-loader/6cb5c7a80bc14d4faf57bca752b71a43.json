{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect}from'react';import{pluralize}from'../../utils';import{useReady,useUrls}from'../hooks';import{useExpressionAttrs}from'../data-hooks';import{useCoordination,useLoaders}from'../../app/state/hooks';import{COMPONENT_COORDINATION_TYPES}from'../../app/state/coordination';import TitleInfo from'../TitleInfo';import Genes from'./Genes';var GENES_DATA_TYPES=['expression-matrix'];/**\n * A subscriber component for a gene listing component.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {string} props.variablesLabelOverride The singular form\n * of the name of the variable.\n * @param {string} props.variablesPluralLabelOverride The plural\n * form of the name of the variable.\n * @param {boolean} props.enableMultiSelect If true, allow\n * shift-clicking to select multiple genes.\n */export default function GenesSubscriber(props){var coordinationScopes=props.coordinationScopes,removeGridComponent=props.removeGridComponent,_props$variablesLabel=props.variablesLabelOverride,variablesLabel=_props$variablesLabel===void 0?'gene':_props$variablesLabel,_props$variablesPlura=props.variablesPluralLabelOverride,variablesPluralLabel=_props$variablesPlura===void 0?\"\".concat(variablesLabel,\"s\"):_props$variablesPlura,theme=props.theme,_props$title=props.title,title=_props$title===void 0?'Expression Levels':_props$title,_props$enableMultiSel=props.enableMultiSelect,enableMultiSelect=_props$enableMultiSel===void 0?false:_props$enableMultiSel;var loaders=useLoaders();// Get \"props\" from the coordination space.\nvar _useCoordination=useCoordination(COMPONENT_COORDINATION_TYPES.genes,coordinationScopes),_useCoordination2=_slicedToArray(_useCoordination,2),_useCoordination2$=_useCoordination2[0],dataset=_useCoordination2$.dataset,geneSelection=_useCoordination2$.featureSelection,geneFilter=_useCoordination2$.featureFilter,cellColorEncoding=_useCoordination2$.obsColorEncoding,_useCoordination2$2=_useCoordination2[1],setGeneSelection=_useCoordination2$2.setFeatureSelection,setGeneFilter=_useCoordination2$2.setFeatureFilter,setGeneHighlight=_useCoordination2$2.setFeatureHighlight,setCellColorEncoding=_useCoordination2$2.setObsColorEncoding;var _useUrls=useUrls(),_useUrls2=_slicedToArray(_useUrls,3),urls=_useUrls2[0],addUrl=_useUrls2[1],resetUrls=_useUrls2[2];var _useReady=useReady(GENES_DATA_TYPES),_useReady2=_slicedToArray(_useReady,4),isReady=_useReady2[0],setItemIsReady=_useReady2[1],setItemIsNotReady=_useReady2[2],// eslint-disable-line no-unused-vars\nresetReadyItems=_useReady2[3];// Reset file URLs and loader progress when the dataset has changed.\nuseEffect(function(){resetUrls();resetReadyItems();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[loaders,dataset]);// Get data from loaders using the data hooks.\nvar _useExpressionAttrs=useExpressionAttrs(loaders,dataset,setItemIsReady,addUrl,true),_useExpressionAttrs2=_slicedToArray(_useExpressionAttrs,1),attrs=_useExpressionAttrs2[0];var geneList=attrs?attrs.cols:[];var numGenes=geneList.length;function setGeneSelectionAndColorEncoding(newSelection){setGeneSelection(newSelection);setCellColorEncoding('geneSelection');}return/*#__PURE__*/React.createElement(TitleInfo,{title:title,info:\"\".concat(numGenes,\" \").concat(pluralize(variablesLabel,variablesPluralLabel,numGenes)),theme:theme// Virtual scroll is used but this allows for the same styling as a scroll component\n// even though this no longer uses the TitleInfo component's\n// scroll css (SelectableTable is virtual scroll).\n,isScroll:true,removeGridComponent:removeGridComponent,isReady:isReady,urls:urls},/*#__PURE__*/React.createElement(Genes,{hasColorEncoding:cellColorEncoding==='geneSelection',geneList:geneList,geneSelection:geneSelection,geneFilter:geneFilter,setGeneSelection:setGeneSelectionAndColorEncoding,setGeneFilter:setGeneFilter,setGeneHighlight:setGeneHighlight,enableMultiSelect:enableMultiSelect}));}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/genes/GenesSubscriber.js"],"names":["React","useEffect","pluralize","useReady","useUrls","useExpressionAttrs","useCoordination","useLoaders","COMPONENT_COORDINATION_TYPES","TitleInfo","Genes","GENES_DATA_TYPES","GenesSubscriber","props","coordinationScopes","removeGridComponent","variablesLabelOverride","variablesLabel","variablesPluralLabelOverride","variablesPluralLabel","theme","title","enableMultiSelect","loaders","genes","dataset","geneSelection","featureSelection","geneFilter","featureFilter","cellColorEncoding","obsColorEncoding","setGeneSelection","setFeatureSelection","setGeneFilter","setFeatureFilter","setGeneHighlight","setFeatureHighlight","setCellColorEncoding","setObsColorEncoding","urls","addUrl","resetUrls","isReady","setItemIsReady","setItemIsNotReady","resetReadyItems","attrs","geneList","cols","numGenes","length","setGeneSelectionAndColorEncoding","newSelection"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { pluralize } from '../../utils';\nimport { useReady, useUrls } from '../hooks';\nimport { useExpressionAttrs } from '../data-hooks';\nimport { useCoordination, useLoaders } from '../../app/state/hooks';\nimport { COMPONENT_COORDINATION_TYPES } from '../../app/state/coordination';\n\nimport TitleInfo from '../TitleInfo';\nimport Genes from './Genes';\n\nconst GENES_DATA_TYPES = ['expression-matrix'];\n\n/**\n * A subscriber component for a gene listing component.\n * @param {object} props\n * @param {string} props.theme The current theme name.\n * @param {object} props.coordinationScopes The mapping from coordination types to coordination\n * scopes.\n * @param {function} props.removeGridComponent The callback function to pass to TitleInfo,\n * to call when the component has been removed from the grid.\n * @param {string} props.title The component title.\n * @param {string} props.variablesLabelOverride The singular form\n * of the name of the variable.\n * @param {string} props.variablesPluralLabelOverride The plural\n * form of the name of the variable.\n * @param {boolean} props.enableMultiSelect If true, allow\n * shift-clicking to select multiple genes.\n */\nexport default function GenesSubscriber(props) {\n  const {\n    coordinationScopes,\n    removeGridComponent,\n    variablesLabelOverride: variablesLabel = 'gene',\n    variablesPluralLabelOverride: variablesPluralLabel = `${variablesLabel}s`,\n    theme,\n    title = 'Expression Levels',\n    enableMultiSelect = false,\n  } = props;\n\n  const loaders = useLoaders();\n\n  // Get \"props\" from the coordination space.\n  const [{\n    dataset,\n    featureSelection: geneSelection,\n    featureFilter: geneFilter,\n    obsColorEncoding: cellColorEncoding,\n  }, {\n    setFeatureSelection: setGeneSelection,\n    setFeatureFilter: setGeneFilter,\n    setFeatureHighlight: setGeneHighlight,\n    setObsColorEncoding: setCellColorEncoding,\n  }] = useCoordination(COMPONENT_COORDINATION_TYPES.genes, coordinationScopes);\n\n  const [urls, addUrl, resetUrls] = useUrls();\n  const [\n    isReady,\n    setItemIsReady,\n    setItemIsNotReady, // eslint-disable-line no-unused-vars\n    resetReadyItems,\n  ] = useReady(\n    GENES_DATA_TYPES,\n  );\n\n  // Reset file URLs and loader progress when the dataset has changed.\n  useEffect(() => {\n    resetUrls();\n    resetReadyItems();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [loaders, dataset]);\n\n  // Get data from loaders using the data hooks.\n  const [attrs] = useExpressionAttrs(\n    loaders, dataset, setItemIsReady, addUrl, true,\n  );\n  const geneList = attrs ? attrs.cols : [];\n  const numGenes = geneList.length;\n\n  function setGeneSelectionAndColorEncoding(newSelection) {\n    setGeneSelection(newSelection);\n    setCellColorEncoding('geneSelection');\n  }\n\n  return (\n    <TitleInfo\n      title={title}\n      info={`${numGenes} ${pluralize(variablesLabel, variablesPluralLabel, numGenes)}`}\n      theme={theme}\n      // Virtual scroll is used but this allows for the same styling as a scroll component\n      // even though this no longer uses the TitleInfo component's\n      // scroll css (SelectableTable is virtual scroll).\n      isScroll\n      removeGridComponent={removeGridComponent}\n      isReady={isReady}\n      urls={urls}\n    >\n      <Genes\n        hasColorEncoding={cellColorEncoding === 'geneSelection'}\n        geneList={geneList}\n        geneSelection={geneSelection}\n        geneFilter={geneFilter}\n        setGeneSelection={setGeneSelectionAndColorEncoding}\n        setGeneFilter={setGeneFilter}\n        setGeneHighlight={setGeneHighlight}\n        enableMultiSelect={enableMultiSelect}\n      />\n    </TitleInfo>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}