{"ast":null,"code":"import _objectWithoutProperties from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectWithoutProperties\";import _defineProperty from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _toConsumableArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import React,{useState}from'react';import clsx from'clsx';import{TreeNode as RcTreeNode}from'rc-tree';import{getDataAndAria}from'rc-tree/es/util';import classNames from'classnames';import range from'lodash/range';import isEqual from'lodash/isEqual';import PopoverMenu from'./PopoverMenu';import HelpTooltip from'./HelpTooltip';import{callbackOnKeyPress,colorArrayToString,getLevelTooltipText}from'./utils';import{ReactComponent as MenuSVG}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/menu.svg\";import{getDefaultColor}from'../utils';/**\n * Construct a `menuConfig` array for the PopoverMenu component.\n * @param {object} props The props for the TreeNode component.\n * @returns {object[]} An array of menu items to pass to PopoverMenu.\n */function makeNodeViewMenuConfig(props){var path=props.path,level=props.level,height=props.height,onCheckNode=props.onCheckNode,onNodeRemove=props.onNodeRemove,onNodeSetIsEditing=props.onNodeSetIsEditing,onExportLevelZeroNodeJSON=props.onExportLevelZeroNodeJSON,onExportLevelZeroNodeTabular=props.onExportLevelZeroNodeTabular,onExportSetJSON=props.onExportSetJSON,checkable=props.checkable,editable=props.editable,exportable=props.exportable,checked=props.checked;return[].concat(_toConsumableArray(editable?[{title:'Rename',handler:function handler(){onNodeSetIsEditing(path,true);},handlerKey:'r'},{title:'Delete',confirm:true,handler:function handler(){onNodeRemove(path);},handlerKey:'d'}]:[]),_toConsumableArray(level===0&&exportable?[{title:'Export hierarchy',subtitle:'(to JSON file)',handler:function handler(){onExportLevelZeroNodeJSON(path);},handlerKey:'j'}].concat(_toConsumableArray(height<=1?[{title:'Export hierarchy',subtitle:'(to CSV file)',handler:function handler(){onExportLevelZeroNodeTabular(path);},handlerKey:'t'}]:[])):[]),_toConsumableArray(level>0?[].concat(_toConsumableArray(checkable?[{title:checked?'Uncheck':'Check',handler:function handler(){onCheckNode(path,!checked);},handlerKey:'s'}]:[]),_toConsumableArray(exportable?[{title:'Export set',subtitle:'(to JSON file)',handler:function handler(){onExportSetJSON(path);},handlerKey:'e'}]:[])):[]));}/**\n * The \"static\" node component to render when the user is not renaming.\n * @param {object} props The props for the TreeNode component.\n */function NamedSetNodeStatic(props){var title=props.title,path=props.path,nodeKey=props.nodeKey,level=props.level,height=props.height,color=props.color,checkbox=props.checkbox,isChecking=props.isChecking,isLeaf=props.isLeaf,onNodeSetColor=props.onNodeSetColor,onNodeView=props.onNodeView,expanded=props.expanded,onCheckLevel=props.onCheckLevel,checkedLevelPath=props.checkedLevelPath,checkedLevelIndex=props.checkedLevelIndex,disableTooltip=props.disableTooltip,size=props.size,datatype=props.datatype,editable=props.editable,theme=props.theme;var shouldCheckNextLevel=level===0&&!expanded;var nextLevelToCheck=checkedLevelIndex&&isEqual(path,checkedLevelPath)&&checkedLevelIndex<height?checkedLevelIndex+1:1;var numberFormatter=new Intl.NumberFormat('en-US');var niceSize=numberFormatter.format(size);var tooltipText;if(shouldCheckNextLevel){tooltipText=getLevelTooltipText(nextLevelToCheck);}else if(isLeaf||!expanded){tooltipText=\"Color individual set (\".concat(niceSize,\" \").concat(datatype).concat(size===1?'':'s',\")\");}else{tooltipText='Color by expanded descendants';}// If this is a level zero node and is _not_ expanded, then upon click,\n// the behavior should be to color by the first or next cluster level.\n// If this is a level zero node and _is_ expanded, or if any other node,\n// click should trigger onNodeView.\nvar onClick=level===0&&!expanded?function(){return onCheckLevel(nodeKey,nextLevelToCheck);}:function(){return onNodeView(path);};var tooltipProps=disableTooltip?{visible:false}:{};var popoverMenuConfig=makeNodeViewMenuConfig(props);return/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(HelpTooltip,Object.assign({title:tooltipText},tooltipProps),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",onClick:onClick,onKeyPress:function onKeyPress(e){return callbackOnKeyPress(e,'v',function(){return onNodeView(path);});},className:\"title-button\"},title)),popoverMenuConfig.length>0?/*#__PURE__*/React.createElement(PopoverMenu,{menuConfig:makeNodeViewMenuConfig(props),color:level>0&&editable?color||getDefaultColor(theme):null,setColor:function setColor(c){return onNodeSetColor(path,c);}},/*#__PURE__*/React.createElement(MenuSVG,{className:\"node-menu-icon\"})):null,level>0&&isChecking?checkbox:null,level>0&&/*#__PURE__*/React.createElement(\"span\",{className:\"node-size-label\"},niceSize));}/**\n * The \"editing\" node component to render when the user is renaming,\n * containing a text input field and a save button.\n * @param {object} props The props for the TreeNode component.\n */function NamedSetNodeEditing(props){var title=props.title,path=props.path,onNodeSetName=props.onNodeSetName,onNodeCheckNewName=props.onNodeCheckNewName;var _useState=useState(title),_useState2=_slicedToArray(_useState,2),currentTitle=_useState2[0],setCurrentTitle=_useState2[1];// Do not allow the user to save a potential name if it conflicts with\n// another name in the hierarchy.\nvar hasConflicts=onNodeCheckNewName(path,currentTitle);function trySetName(){if(!hasConflicts){onNodeSetName(path,currentTitle,true);}}return/*#__PURE__*/React.createElement(\"span\",{className:\"title-button-with-input\"},/*#__PURE__*/React.createElement(\"input\",{// eslint-disable-next-line jsx-a11y/no-autofocus\nautoFocus:true,className:\"title-input\",type:\"text\",value:currentTitle,onChange:function onChange(e){setCurrentTitle(e.target.value);},onKeyPress:function onKeyPress(e){return callbackOnKeyPress(e,'Enter',trySetName);},onFocus:function onFocus(e){return e.target.select();}}),!hasConflicts&&/*#__PURE__*/React.createElement(\"button\",{type:\"button\",className:\"title-save-button\",onClick:trySetName},\"Save\"));}/**\n * A \"delegation\" component, to decide whether to render\n * an \"editing\" vs. \"static\" node component.\n * @param {object} props The props for the TreeNode component.\n */function NamedSetNode(props){var isEditing=props.isEditing,isCurrentSet=props.isCurrentSet;return isEditing||isCurrentSet?/*#__PURE__*/React.createElement(NamedSetNodeEditing,props):/*#__PURE__*/React.createElement(NamedSetNodeStatic,props);}/**\n * Buttons for viewing each hierarchy level,\n * rendered below collapsed level zero nodes.\n * @param {object} props The props for the (level zero) TreeNode component.\n */function LevelsButtons(props){var nodeKey=props.nodeKey,path=props.path,height=props.height,onCheckLevel=props.onCheckLevel,checkedLevelPath=props.checkedLevelPath,checkedLevelIndex=props.checkedLevelIndex,hasColorEncoding=props.hasColorEncoding;function onCheck(event){if(event.target.checked){var newLevel=parseInt(event.target.value,10);onCheckLevel(nodeKey,newLevel);}}return/*#__PURE__*/React.createElement(\"div\",{className:\"level-buttons-container\"},range(1,height+1).map(function(i){var isChecked=isEqual(path,checkedLevelPath)&&i===checkedLevelIndex;return/*#__PURE__*/React.createElement(\"div\",{className:\"level-buttons\",key:i},/*#__PURE__*/React.createElement(HelpTooltip,{title:getLevelTooltipText(i)},/*#__PURE__*/React.createElement(\"input\",{className:clsx('level-radio-button',{checked:isChecked&&!hasColorEncoding}),type:\"checkbox\",value:i,checked:isChecked&&hasColorEncoding,onChange:onCheck})));}));}/**\n * Render the \"switcher\" icon.\n * Arrow for collapsed/expanded non-leaf nodes,\n * or square for leaf nodes.\n * @param {object} props The props for the TreeNode component.\n */function SwitcherIcon(props){var isLeaf=props.isLeaf,isOpen=props.isOpen,color=props.color;var hexColor=color?colorArrayToString(color):undefined;if(isLeaf){return/*#__PURE__*/React.createElement(\"i\",{className:\"anticon anticon-circle rc-tree-switcher-icon\"},/*#__PURE__*/React.createElement(\"svg\",{viewBox:\"0 0 1024 1024\",focusable:\"false\",\"data-icon\":\"caret-down\",width:\"1em\",height:\"1em\",\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"rect\",{fill:hexColor,x:600/2,y:600/2,width:1024-600,height:1024-600})));}return/*#__PURE__*/React.createElement(\"i\",{className:\"anticon anticon-caret-down rc-tree-switcher-icon\"},/*#__PURE__*/React.createElement(\"svg\",{viewBox:\"0 0 1024 1024\",focusable:\"false\",\"data-icon\":\"caret-down\",width:\"1em\",height:\"1em\",\"aria-hidden\":\"true\"},/*#__PURE__*/React.createElement(\"path\",{fill:isOpen?'#444':hexColor,d:\"M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z\"})));}/**\n * A custom TreeNode component.\n * @extends {RcTreeNode} TreeNode from the rc-tree library.\n */var TreeNode=/*#__PURE__*/function(_RcTreeNode){_inherits(TreeNode,_RcTreeNode);var _super=_createSuper(TreeNode);function TreeNode(){var _this;_classCallCheck(this,TreeNode);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderSelector=function(){var _this$props=_this.props,title=_this$props.title,isCurrentSet=_this$props.isCurrentSet,isSelected=_this$props.isSelected,isEditing=_this$props.isEditing,onDragStartProp=_this$props.onDragStart;var _this$context$rcTree=_this.context.rcTree,prefixClass=_this$context$rcTree.prefixCls,draggable=_this$context$rcTree.draggable;var onDragStart=function onDragStart(e){onDragStartProp();_this.onDragStart(e);};var wrapClass=\"\".concat(prefixClass,\"-node-content-wrapper\");var isDraggable=!isCurrentSet&&!isEditing&&draggable;return/*#__PURE__*/React.createElement(\"span\",{ref:_this.setSelectHandle,title:title,className:classNames(wrapClass,\"\".concat(wrapClass,\"-\").concat(_this.getNodeState()||'normal'),isSelected&&\"\".concat(prefixClass,\"-node-selected\"),isDraggable&&'draggable'),draggable:isDraggable,\"aria-grabbed\":isDraggable,onDragStart:isDraggable?onDragStart:undefined},/*#__PURE__*/React.createElement(NamedSetNode,Object.assign({},_this.props,{prefixClass:prefixClass,checkbox:_this.renderCheckbox()})),_this.renderLevels());};_this.renderLevels=function(){var _this$props2=_this.props,level=_this$props2.level,expanded=_this$props2.expanded;if(level!==0||expanded){return null;}return/*#__PURE__*/React.createElement(LevelsButtons,_this.props);};_this.renderSwitcher=function(){var _this$props3=_this.props,expanded=_this$props3.expanded,isLeaf=_this$props3.isLeaf,color=_this$props3.color;var _this$context$rcTree2=_this.context.rcTree,prefixClass=_this$context$rcTree2.prefixCls,onNodeExpand=_this$context$rcTree2.onNodeExpand;var onNodeExpandWrapper=function onNodeExpandWrapper(e){// Do not call onNodeExpand if the node is a leaf node.\nif(!isLeaf){onNodeExpand(e,_assertThisInitialized(_this));}};var switcherClass=classNames(\"\".concat(prefixClass,\"-switcher\"),_defineProperty({},\"\".concat(prefixClass,\"-switcher_\").concat(expanded?'open':'close'),!isLeaf));return/*#__PURE__*/React.createElement(\"span\",{className:switcherClass,onClick:onNodeExpandWrapper,onKeyPress:function onKeyPress(e){return callbackOnKeyPress(e,'d',onNodeExpandWrapper);},role:\"button\",tabIndex:\"0\"},/*#__PURE__*/React.createElement(SwitcherIcon,{isLeaf:isLeaf,isOpen:expanded,color:color}));};return _this;}_createClass(TreeNode,[{key:\"render\",/**\n   * Override main render function,\n   * to enable overriding the sub-render functions\n   * for switcher, selector, etc.\n   */value:function render(){var _this2=this,_classNames2;var _this$props4=this.props,style=_this$props4.style,loading=_this$props4.loading,level=_this$props4.level,dragOver=_this$props4.dragOver,dragOverGapTop=_this$props4.dragOverGapTop,dragOverGapBottom=_this$props4.dragOverGapBottom,isLeaf=_this$props4.isLeaf,expanded=_this$props4.expanded,selected=_this$props4.selected,checked=_this$props4.checked,halfChecked=_this$props4.halfChecked,onDragEndProp=_this$props4.onDragEnd,expandable=_this$props4.expandable,otherProps=_objectWithoutProperties(_this$props4,[\"style\",\"loading\",\"level\",\"dragOver\",\"dragOverGapTop\",\"dragOverGapBottom\",\"isLeaf\",\"expanded\",\"selected\",\"checked\",\"halfChecked\",\"onDragEnd\",\"expandable\"]);var _this$context$rcTree3=this.context.rcTree,prefixClass=_this$context$rcTree3.prefixCls,filterTreeNode=_this$context$rcTree3.filterTreeNode,draggable=_this$context$rcTree3.draggable;var disabled=this.isDisabled();var dataAndAriaAttributeProps=getDataAndAria(otherProps);var onDragEnd=function onDragEnd(e){onDragEndProp();_this2.onDragEnd(e);};return/*#__PURE__*/React.createElement(\"li\",Object.assign({className:classNames('rc-tree-treenode',\"level-\".concat(level,\"-treenode\"),(_classNames2={},_defineProperty(_classNames2,\"\".concat(prefixClass,\"-treenode-disabled\"),disabled),_defineProperty(_classNames2,\"\".concat(prefixClass,\"-treenode-switcher-\").concat(expanded?'open':'close'),!isLeaf),_defineProperty(_classNames2,\"\".concat(prefixClass,\"-treenode-checkbox-checked\"),checked),_defineProperty(_classNames2,\"\".concat(prefixClass,\"-treenode-checkbox-indeterminate\"),halfChecked),_defineProperty(_classNames2,\"\".concat(prefixClass,\"-treenode-selected\"),selected),_defineProperty(_classNames2,\"\".concat(prefixClass,\"-treenode-loading\"),loading),_defineProperty(_classNames2,'drag-over',!disabled&&dragOver),_defineProperty(_classNames2,'drag-over-gap-top',!disabled&&dragOverGapTop),_defineProperty(_classNames2,'drag-over-gap-bottom',!disabled&&dragOverGapBottom),_defineProperty(_classNames2,'filter-node',filterTreeNode&&filterTreeNode(this)),_classNames2)),style:style,role:\"treeitem\",onDragEnter:draggable?this.onDragEnter:undefined,onDragOver:draggable?this.onDragOver:undefined,onDragLeave:draggable?this.onDragLeave:undefined,onDrop:draggable?this.onDrop.bind(this):undefined,onDragEnd:draggable?onDragEnd:undefined},dataAndAriaAttributeProps),expandable?this.renderSwitcher():null,this.renderSelector(),this.renderChildren());}}]);return TreeNode;}(RcTreeNode);export{TreeNode as default};","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/components/sets/TreeNode.js"],"names":["React","useState","clsx","TreeNode","RcTreeNode","getDataAndAria","classNames","range","isEqual","PopoverMenu","HelpTooltip","callbackOnKeyPress","colorArrayToString","getLevelTooltipText","getDefaultColor","makeNodeViewMenuConfig","props","path","level","height","onCheckNode","onNodeRemove","onNodeSetIsEditing","onExportLevelZeroNodeJSON","onExportLevelZeroNodeTabular","onExportSetJSON","checkable","editable","exportable","checked","title","handler","handlerKey","confirm","subtitle","NamedSetNodeStatic","nodeKey","color","checkbox","isChecking","isLeaf","onNodeSetColor","onNodeView","expanded","onCheckLevel","checkedLevelPath","checkedLevelIndex","disableTooltip","size","datatype","theme","shouldCheckNextLevel","nextLevelToCheck","numberFormatter","Intl","NumberFormat","niceSize","format","tooltipText","onClick","tooltipProps","visible","popoverMenuConfig","e","length","c","NamedSetNodeEditing","onNodeSetName","onNodeCheckNewName","currentTitle","setCurrentTitle","hasConflicts","trySetName","target","value","select","NamedSetNode","isEditing","isCurrentSet","LevelsButtons","hasColorEncoding","onCheck","event","newLevel","parseInt","map","i","isChecked","SwitcherIcon","isOpen","hexColor","undefined","renderSelector","isSelected","onDragStartProp","onDragStart","context","rcTree","prefixClass","prefixCls","draggable","wrapClass","isDraggable","setSelectHandle","getNodeState","renderCheckbox","renderLevels","renderSwitcher","onNodeExpand","onNodeExpandWrapper","switcherClass","style","loading","dragOver","dragOverGapTop","dragOverGapBottom","selected","halfChecked","onDragEndProp","onDragEnd","expandable","otherProps","filterTreeNode","disabled","isDisabled","dataAndAriaAttributeProps","onDragEnter","onDragOver","onDragLeave","onDrop","bind","renderChildren"],"mappings":"spDAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,MAAjB,CACA,OAASC,QAAQ,GAAIC,CAAAA,UAArB,KAAuC,SAAvC,CACA,OAASC,cAAT,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,cAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,gBAApB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,eAAxB,CACA,OAASC,kBAAT,CAA6BC,kBAA7B,CAAiDC,mBAAjD,KAA4E,SAA5E,C,iGAEA,OAASC,eAAT,KAAgC,UAAhC,CAGA;;;;GAKA,QAASC,CAAAA,sBAAT,CAAgCC,KAAhC,CAAuC,IAEnCC,CAAAA,IAFmC,CAejCD,KAfiC,CAEnCC,IAFmC,CAGnCC,KAHmC,CAejCF,KAfiC,CAGnCE,KAHmC,CAInCC,MAJmC,CAejCH,KAfiC,CAInCG,MAJmC,CAKnCC,WALmC,CAejCJ,KAfiC,CAKnCI,WALmC,CAMnCC,YANmC,CAejCL,KAfiC,CAMnCK,YANmC,CAOnCC,kBAPmC,CAejCN,KAfiC,CAOnCM,kBAPmC,CAQnCC,yBARmC,CAejCP,KAfiC,CAQnCO,yBARmC,CASnCC,4BATmC,CAejCR,KAfiC,CASnCQ,4BATmC,CAUnCC,eAVmC,CAejCT,KAfiC,CAUnCS,eAVmC,CAWnCC,SAXmC,CAejCV,KAfiC,CAWnCU,SAXmC,CAYnCC,QAZmC,CAejCX,KAfiC,CAYnCW,QAZmC,CAanCC,UAbmC,CAejCZ,KAfiC,CAanCY,UAbmC,CAcnCC,OAdmC,CAejCb,KAfiC,CAcnCa,OAdmC,CAiBrC,mCACMF,QAAQ,CAAG,CACb,CACEG,KAAK,CAAE,QADT,CAEEC,OAAO,CAAE,kBAAM,CAAET,kBAAkB,CAACL,IAAD,CAAO,IAAP,CAAlB,CAAiC,CAFpD,CAGEe,UAAU,CAAE,GAHd,CADa,CAMb,CACEF,KAAK,CAAE,QADT,CAEEG,OAAO,CAAE,IAFX,CAGEF,OAAO,CAAE,kBAAM,CAAEV,YAAY,CAACJ,IAAD,CAAZ,CAAqB,CAHxC,CAIEe,UAAU,CAAE,GAJd,CANa,CAAH,CAYR,EAbN,qBAcMd,KAAK,GAAK,CAAV,EAAeU,UAAf,EACF,CACEE,KAAK,CAAE,kBADT,CAEEI,QAAQ,CAAE,gBAFZ,CAGEH,OAAO,CAAE,kBAAM,CAAER,yBAAyB,CAACN,IAAD,CAAzB,CAAkC,CAHrD,CAIEe,UAAU,CAAE,GAJd,CADE,4BAOEb,MAAM,EAAI,CAAV,CAAc,CAChB,CACEW,KAAK,CAAE,kBADT,CAEEI,QAAQ,CAAE,eAFZ,CAGEH,OAAO,CAAE,kBAAM,CAAEP,4BAA4B,CAACP,IAAD,CAA5B,CAAqC,CAHxD,CAIEe,UAAU,CAAE,GAJd,CADgB,CAAd,CAOA,EAdF,GAeA,EA7BN,qBA8BMd,KAAK,CAAG,CAAR,8BACEQ,SAAS,CAAG,CACd,CACEI,KAAK,CAAGD,OAAO,CAAG,SAAH,CAAe,OADhC,CAEEE,OAAO,CAAE,kBAAM,CAAEX,WAAW,CAACH,IAAD,CAAO,CAACY,OAAR,CAAX,CAA8B,CAFjD,CAGEG,UAAU,CAAE,GAHd,CADc,CAAH,CAMT,EAPF,qBAQEJ,UAAU,CAAG,CACf,CACEE,KAAK,CAAE,YADT,CAEEI,QAAQ,CAAE,gBAFZ,CAGEH,OAAO,CAAE,kBAAM,CAAEN,eAAe,CAACR,IAAD,CAAf,CAAwB,CAH3C,CAIEe,UAAU,CAAE,GAJd,CADe,CAAH,CAOV,EAfF,GAgBA,EA9CN,GAgDD,CAED;;;GAIA,QAASG,CAAAA,kBAAT,CAA4BnB,KAA5B,CAAmC,IAE/Bc,CAAAA,KAF+B,CAsB7Bd,KAtB6B,CAE/Bc,KAF+B,CAG/Bb,IAH+B,CAsB7BD,KAtB6B,CAG/BC,IAH+B,CAI/BmB,OAJ+B,CAsB7BpB,KAtB6B,CAI/BoB,OAJ+B,CAK/BlB,KAL+B,CAsB7BF,KAtB6B,CAK/BE,KAL+B,CAM/BC,MAN+B,CAsB7BH,KAtB6B,CAM/BG,MAN+B,CAO/BkB,KAP+B,CAsB7BrB,KAtB6B,CAO/BqB,KAP+B,CAQ/BC,QAR+B,CAsB7BtB,KAtB6B,CAQ/BsB,QAR+B,CAS/BC,UAT+B,CAsB7BvB,KAtB6B,CAS/BuB,UAT+B,CAU/BC,MAV+B,CAsB7BxB,KAtB6B,CAU/BwB,MAV+B,CAW/BC,cAX+B,CAsB7BzB,KAtB6B,CAW/ByB,cAX+B,CAY/BC,UAZ+B,CAsB7B1B,KAtB6B,CAY/B0B,UAZ+B,CAa/BC,QAb+B,CAsB7B3B,KAtB6B,CAa/B2B,QAb+B,CAc/BC,YAd+B,CAsB7B5B,KAtB6B,CAc/B4B,YAd+B,CAe/BC,gBAf+B,CAsB7B7B,KAtB6B,CAe/B6B,gBAf+B,CAgB/BC,iBAhB+B,CAsB7B9B,KAtB6B,CAgB/B8B,iBAhB+B,CAiB/BC,cAjB+B,CAsB7B/B,KAtB6B,CAiB/B+B,cAjB+B,CAkB/BC,IAlB+B,CAsB7BhC,KAtB6B,CAkB/BgC,IAlB+B,CAmB/BC,QAnB+B,CAsB7BjC,KAtB6B,CAmB/BiC,QAnB+B,CAoB/BtB,QApB+B,CAsB7BX,KAtB6B,CAoB/BW,QApB+B,CAqB/BuB,KArB+B,CAsB7BlC,KAtB6B,CAqB/BkC,KArB+B,CAuBjC,GAAMC,CAAAA,oBAAoB,CAAIjC,KAAK,GAAK,CAAV,EAAe,CAACyB,QAA9C,CACA,GAAMS,CAAAA,gBAAgB,CACnBN,iBAAiB,EAAItC,OAAO,CAACS,IAAD,CAAO4B,gBAAP,CAA5B,EAAwDC,iBAAiB,CAAG3B,MAA7E,CACI2B,iBAAiB,CAAG,CADxB,CAEI,CAHN,CAKA,GAAMO,CAAAA,eAAe,CAAG,GAAIC,CAAAA,IAAI,CAACC,YAAT,CAAsB,OAAtB,CAAxB,CACA,GAAMC,CAAAA,QAAQ,CAAGH,eAAe,CAACI,MAAhB,CAAuBT,IAAvB,CAAjB,CACA,GAAIU,CAAAA,WAAJ,CACA,GAAIP,oBAAJ,CAA0B,CACxBO,WAAW,CAAG7C,mBAAmB,CAACuC,gBAAD,CAAjC,CACD,CAFD,IAEO,IAAIZ,MAAM,EAAI,CAACG,QAAf,CAAyB,CAC9Be,WAAW,iCAA4BF,QAA5B,aAAwCP,QAAxC,SAAoDD,IAAI,GAAK,CAAT,CAAa,EAAb,CAAkB,GAAtE,KAAX,CACD,CAFM,IAEA,CACLU,WAAW,CAAG,+BAAd,CACD,CACD;AACA;AACA;AACA;AACA,GAAMC,CAAAA,OAAO,CAAIzC,KAAK,GAAK,CAAV,EAAe,CAACyB,QAAhB,CACb,iBAAMC,CAAAA,YAAY,CAACR,OAAD,CAAUgB,gBAAV,CAAlB,EADa,CAEb,iBAAMV,CAAAA,UAAU,CAACzB,IAAD,CAAhB,EAFJ,CAIA,GAAM2C,CAAAA,YAAY,CAAIb,cAAc,CAAG,CAAEc,OAAO,CAAE,KAAX,CAAH,CAAwB,EAA5D,CACA,GAAMC,CAAAA,iBAAiB,CAAG/C,sBAAsB,CAACC,KAAD,CAAhD,CACA,mBACE,6CACE,oBAAC,WAAD,gBAAa,KAAK,CAAE0C,WAApB,EAAqCE,YAArC,eACE,8BACE,IAAI,CAAC,QADP,CAEE,OAAO,CAAED,OAFX,CAGE,UAAU,CAAE,oBAAAI,CAAC,QAAIpD,CAAAA,kBAAkB,CAACoD,CAAD,CAAI,GAAJ,CAAS,iBAAMrB,CAAAA,UAAU,CAACzB,IAAD,CAAhB,EAAT,CAAtB,EAHf,CAIE,SAAS,CAAC,cAJZ,EAMGa,KANH,CADF,CADF,CAWGgC,iBAAiB,CAACE,MAAlB,CAA2B,CAA3B,cACC,oBAAC,WAAD,EACE,UAAU,CAAEjD,sBAAsB,CAACC,KAAD,CADpC,CAEE,KAAK,CAAEE,KAAK,CAAG,CAAR,EAAaS,QAAb,CAAyBU,KAAK,EAAIvB,eAAe,CAACoC,KAAD,CAAjD,CAA4D,IAFrE,CAGE,QAAQ,CAAE,kBAAAe,CAAC,QAAIxB,CAAAA,cAAc,CAACxB,IAAD,CAAOgD,CAAP,CAAlB,EAHb,eAKE,oBAAC,OAAD,EAAS,SAAS,CAAC,gBAAnB,EALF,CADD,CAQG,IAnBN,CAoBG/C,KAAK,CAAG,CAAR,EAAaqB,UAAb,CAA0BD,QAA1B,CAAqC,IApBxC,CAqBGpB,KAAK,CAAG,CAAR,eAAc,4BAAM,SAAS,CAAC,iBAAhB,EAAmCsC,QAAnC,CArBjB,CADF,CAyBD,CAED;;;;GAKA,QAASU,CAAAA,mBAAT,CAA6BlD,KAA7B,CAAoC,IAEhCc,CAAAA,KAFgC,CAM9Bd,KAN8B,CAEhCc,KAFgC,CAGhCb,IAHgC,CAM9BD,KAN8B,CAGhCC,IAHgC,CAIhCkD,aAJgC,CAM9BnD,KAN8B,CAIhCmD,aAJgC,CAKhCC,kBALgC,CAM9BpD,KAN8B,CAKhCoD,kBALgC,eAOMnE,QAAQ,CAAC6B,KAAD,CAPd,wCAO3BuC,YAP2B,eAObC,eAPa,eASlC;AACA;AACA,GAAMC,CAAAA,YAAY,CAAGH,kBAAkB,CAACnD,IAAD,CAAOoD,YAAP,CAAvC,CACA,QAASG,CAAAA,UAAT,EAAsB,CACpB,GAAI,CAACD,YAAL,CAAmB,CACjBJ,aAAa,CAAClD,IAAD,CAAOoD,YAAP,CAAqB,IAArB,CAAb,CACD,CACF,CACD,mBACE,4BAAM,SAAS,CAAC,yBAAhB,eACE,6BACE;AACA,SAAS,KAFX,CAGE,SAAS,CAAC,aAHZ,CAIE,IAAI,CAAC,MAJP,CAKE,KAAK,CAAEA,YALT,CAME,QAAQ,CAAE,kBAACN,CAAD,CAAO,CAAEO,eAAe,CAACP,CAAC,CAACU,MAAF,CAASC,KAAV,CAAf,CAAkC,CANvD,CAOE,UAAU,CAAE,oBAAAX,CAAC,QAAIpD,CAAAA,kBAAkB,CACjCoD,CADiC,CAEjC,OAFiC,CAGjCS,UAHiC,CAAtB,EAPf,CAYE,OAAO,CAAE,iBAAAT,CAAC,QAAIA,CAAAA,CAAC,CAACU,MAAF,CAASE,MAAT,EAAJ,EAZZ,EADF,CAeG,CAACJ,YAAD,eACC,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,mBAFZ,CAGE,OAAO,CAAEC,UAHX,SAhBJ,CADF,CA2BD,CAED;;;;GAKA,QAASI,CAAAA,YAAT,CAAsB5D,KAAtB,CAA6B,IAEzB6D,CAAAA,SAFyB,CAIvB7D,KAJuB,CAEzB6D,SAFyB,CAGzBC,YAHyB,CAIvB9D,KAJuB,CAGzB8D,YAHyB,CAK3B,MACGD,CAAAA,SAAS,EAAIC,YAAd,cACK,oBAAC,mBAAD,CAAyB9D,KAAzB,CADL,cAEK,oBAAC,kBAAD,CAAwBA,KAAxB,CAHP,CAKD,CAED;;;;GAKA,QAAS+D,CAAAA,aAAT,CAAuB/D,KAAvB,CAA8B,IAE1BoB,CAAAA,OAF0B,CASxBpB,KATwB,CAE1BoB,OAF0B,CAG1BnB,IAH0B,CASxBD,KATwB,CAG1BC,IAH0B,CAI1BE,MAJ0B,CASxBH,KATwB,CAI1BG,MAJ0B,CAK1ByB,YAL0B,CASxB5B,KATwB,CAK1B4B,YAL0B,CAM1BC,gBAN0B,CASxB7B,KATwB,CAM1B6B,gBAN0B,CAO1BC,iBAP0B,CASxB9B,KATwB,CAO1B8B,iBAP0B,CAQ1BkC,gBAR0B,CASxBhE,KATwB,CAQ1BgE,gBAR0B,CAU5B,QAASC,CAAAA,OAAT,CAAiBC,KAAjB,CAAwB,CACtB,GAAIA,KAAK,CAACT,MAAN,CAAa5C,OAAjB,CAA0B,CACxB,GAAMsD,CAAAA,QAAQ,CAAGC,QAAQ,CAACF,KAAK,CAACT,MAAN,CAAaC,KAAd,CAAqB,EAArB,CAAzB,CACA9B,YAAY,CAACR,OAAD,CAAU+C,QAAV,CAAZ,CACD,CACF,CACD,mBACE,2BAAK,SAAS,CAAC,yBAAf,EACG5E,KAAK,CAAC,CAAD,CAAIY,MAAM,CAAG,CAAb,CAAL,CAAqBkE,GAArB,CAAyB,SAACC,CAAD,CAAO,CAC/B,GAAMC,CAAAA,SAAS,CAAG/E,OAAO,CAACS,IAAD,CAAO4B,gBAAP,CAAP,EAAmCyC,CAAC,GAAKxC,iBAA3D,CACA,mBACE,2BAAK,SAAS,CAAC,eAAf,CAA+B,GAAG,CAAEwC,CAApC,eACE,oBAAC,WAAD,EAAa,KAAK,CAAEzE,mBAAmB,CAACyE,CAAD,CAAvC,eACE,6BACE,SAAS,CAAEpF,IAAI,CAAC,oBAAD,CAAuB,CAAE2B,OAAO,CAAE0D,SAAS,EAAI,CAACP,gBAAzB,CAAvB,CADjB,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAEM,CAHT,CAIE,OAAO,CAAEC,SAAS,EAAIP,gBAJxB,CAKE,QAAQ,CAAEC,OALZ,EADF,CADF,CADF,CAaD,CAfA,CADH,CADF,CAoBD,CAED;;;;;GAMA,QAASO,CAAAA,YAAT,CAAsBxE,KAAtB,CAA6B,IAEzBwB,CAAAA,MAFyB,CAGvBxB,KAHuB,CAEzBwB,MAFyB,CAEjBiD,MAFiB,CAGvBzE,KAHuB,CAEjByE,MAFiB,CAETpD,KAFS,CAGvBrB,KAHuB,CAETqB,KAFS,CAI3B,GAAMqD,CAAAA,QAAQ,CAAIrD,KAAK,CAAGzB,kBAAkB,CAACyB,KAAD,CAArB,CAA+BsD,SAAtD,CACA,GAAInD,MAAJ,CAAY,CACV,mBACE,yBACE,SAAS,CAAC,8CADZ,eAGE,2BACE,OAAO,CAAC,eADV,CAEE,SAAS,CAAC,OAFZ,CAGE,YAAU,YAHZ,CAIE,KAAK,CAAC,KAJR,CAKE,MAAM,CAAC,KALT,CAME,cAAY,MANd,eAQE,4BAAM,IAAI,CAAEkD,QAAZ,CAAsB,CAAC,CAAE,IAAM,CAA/B,CAAkC,CAAC,CAAE,IAAM,CAA3C,CAA8C,KAAK,CAAE,KAAO,GAA5D,CAAiE,MAAM,CAAE,KAAO,GAAhF,EARF,CAHF,CADF,CAgBD,CACD,mBACE,yBACE,SAAS,CAAC,kDADZ,eAGE,2BACE,OAAO,CAAC,eADV,CAEE,SAAS,CAAC,OAFZ,CAGE,YAAU,YAHZ,CAIE,KAAK,CAAC,KAJR,CAKE,MAAM,CAAC,KALT,CAME,cAAY,MANd,eAQE,4BACE,IAAI,CAAGD,MAAM,CAAG,MAAH,CAAYC,QAD3B,CAEE,CAAC,CAAC,oHAFJ,EARF,CAHF,CADF,CAmBD,CAED;;;MAIqBvF,CAAAA,Q,qUAInByF,c,CAAiB,UAAM,iBAOjB,MAAK5E,KAPY,CAEnBc,KAFmB,aAEnBA,KAFmB,CAGnBgD,YAHmB,aAGnBA,YAHmB,CAInBe,UAJmB,aAInBA,UAJmB,CAKnBhB,SALmB,aAKnBA,SALmB,CAMNiB,eANM,aAMnBC,WANmB,0BAajB,MAAKC,OAbY,CASnBC,MATmB,CAUNC,WAVM,sBAUjBC,SAViB,CAWjBC,SAXiB,sBAWjBA,SAXiB,CAerB,GAAML,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAChC,CAAD,CAAO,CACzB+B,eAAe,GACf,MAAKC,WAAL,CAAiBhC,CAAjB,EACD,CAHD,CAKA,GAAMsC,CAAAA,SAAS,WAAMH,WAAN,yBAAf,CACA,GAAMI,CAAAA,WAAW,CAAI,CAACxB,YAAD,EAAiB,CAACD,SAAlB,EAA+BuB,SAApD,CACA,mBACE,4BACE,GAAG,CAAE,MAAKG,eADZ,CAEE,KAAK,CAAEzE,KAFT,CAGE,SAAS,CAAExB,UAAU,CACnB+F,SADmB,WAEhBA,SAFgB,aAEH,MAAKG,YAAL,IAAuB,QAFpB,EAGnBX,UAAU,YAAOK,WAAP,kBAHS,CAInBI,WAAW,EAAI,WAJI,CAHvB,CASE,SAAS,CAAEA,WATb,CAUE,eAAcA,WAVhB,CAWE,WAAW,CAAEA,WAAW,CAAGP,WAAH,CAAiBJ,SAX3C,eAaE,oBAAC,YAAD,kBACM,MAAK3E,KADX,EAEE,WAAW,CAAEkF,WAFf,CAGE,QAAQ,CAAE,MAAKO,cAAL,EAHZ,GAbF,CAkBG,MAAKC,YAAL,EAlBH,CADF,CAsBD,C,OAMDA,Y,CAAe,UAAM,kBACS,MAAK1F,KADd,CACXE,KADW,cACXA,KADW,CACJyB,QADI,cACJA,QADI,CAEnB,GAAIzB,KAAK,GAAK,CAAV,EAAeyB,QAAnB,CAA6B,CAC3B,MAAO,KAAP,CACD,CACD,mBACE,oBAAC,aAAD,CACM,MAAK3B,KADX,CADF,CAKD,C,OAKD2F,c,CAAiB,UAAM,kBACe,MAAK3F,KADpB,CACb2B,QADa,cACbA,QADa,CACHH,MADG,cACHA,MADG,CACKH,KADL,cACKA,KADL,2BAOjB,MAAK2D,OAPY,CAGnBC,MAHmB,CAINC,WAJM,uBAIjBC,SAJiB,CAKjBS,YALiB,uBAKjBA,YALiB,CASrB,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAAC9C,CAAD,CAAO,CACjC;AACA,GAAI,CAACvB,MAAL,CAAa,CACXoE,YAAY,CAAC7C,CAAD,+BAAZ,CACD,CACF,CALD,CAOA,GAAM+C,CAAAA,aAAa,CAAGxG,UAAU,WAC3B4F,WAD2B,2CAExBA,WAFwB,sBAECvD,QAAQ,CAAG,MAAH,CAAY,OAFrB,EAEkC,CAACH,MAFnC,EAAhC,CAIA,mBACE,4BACE,SAAS,CAAEsE,aADb,CAEE,OAAO,CAAED,mBAFX,CAGE,UAAU,CAAE,oBAAA9C,CAAC,QAAIpD,CAAAA,kBAAkB,CAACoD,CAAD,CAAI,GAAJ,CAAS8C,mBAAT,CAAtB,EAHf,CAIE,IAAI,CAAC,QAJP,CAKE,QAAQ,CAAC,GALX,eAOE,oBAAC,YAAD,EACE,MAAM,CAAErE,MADV,CAEE,MAAM,CAAEG,QAFV,CAGE,KAAK,CAAEN,KAHT,EAPF,CADF,CAeD,C,oDAED;;;;4BAKS,+CASH,KAAKrB,KATF,CAEL+F,KAFK,cAELA,KAFK,CAEEC,OAFF,cAEEA,OAFF,CAEW9F,KAFX,cAEWA,KAFX,CAGL+F,QAHK,cAGLA,QAHK,CAGKC,cAHL,cAGKA,cAHL,CAGqBC,iBAHrB,cAGqBA,iBAHrB,CAIL3E,MAJK,cAILA,MAJK,CAKLG,QALK,cAKLA,QALK,CAKKyE,QALL,cAKKA,QALL,CAKevF,OALf,cAKeA,OALf,CAKwBwF,WALxB,cAKwBA,WALxB,CAMMC,aANN,cAMLC,SANK,CAOLC,UAPK,cAOLA,UAPK,CAQFC,UARE,8NAgBH,KAAKzB,OAhBF,CAWLC,MAXK,CAYQC,WAZR,uBAYHC,SAZG,CAaHuB,cAbG,uBAaHA,cAbG,CAcHtB,SAdG,uBAcHA,SAdG,CAiBP,GAAMuB,CAAAA,QAAQ,CAAG,KAAKC,UAAL,EAAjB,CACA,GAAMC,CAAAA,yBAAyB,CAAGxH,cAAc,CAACoH,UAAD,CAAhD,CAEA,GAAMF,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACxD,CAAD,CAAO,CACvBuD,aAAa,GACb,MAAI,CAACC,SAAL,CAAexD,CAAf,EACD,CAHD,CAKA,mBACE,wCACE,SAAS,CAAEzD,UAAU,CAAC,kBAAD,iBAA8BY,KAA9B,sEACfgF,WADe,uBACmByB,QADnB,yCAEfzB,WAFe,+BAEkBvD,QAAQ,CAAG,MAAH,CAAY,OAFtC,EAEkD,CAACH,MAFnD,yCAGf0D,WAHe,+BAG2BrE,OAH3B,yCAIfqE,WAJe,qCAIiCmB,WAJjC,yCAKfnB,WALe,uBAKmBkB,QALnB,yCAMflB,WANe,sBAMkBc,OANlB,+BAQnB,WARmB,CAQN,CAACW,QAAD,EAAaV,QARP,+BASnB,mBATmB,CASE,CAACU,QAAD,EAAaT,cATf,+BAUnB,sBAVmB,CAUK,CAACS,QAAD,EAAaR,iBAVlB,+BAWnB,aAXmB,CAWJO,cAAc,EAAIA,cAAc,CAAC,IAAD,CAX5B,gBADvB,CAcE,KAAK,CAAEX,KAdT,CAeE,IAAI,CAAC,UAfP,CAgBE,WAAW,CAAEX,SAAS,CAAG,KAAK0B,WAAR,CAAsBnC,SAhB9C,CAiBE,UAAU,CAAES,SAAS,CAAG,KAAK2B,UAAR,CAAqBpC,SAjB5C,CAkBE,WAAW,CAAES,SAAS,CAAG,KAAK4B,WAAR,CAAsBrC,SAlB9C,CAmBE,MAAM,CAAES,SAAS,CAAG,KAAK6B,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAH,CAA4BvC,SAnB/C,CAoBE,SAAS,CAAES,SAAS,CAAGmB,SAAH,CAAe5B,SApBrC,EAqBMkC,yBArBN,EAuBGL,UAAU,CAAG,KAAKb,cAAL,EAAH,CAA2B,IAvBxC,CAwBG,KAAKf,cAAL,EAxBH,CAyBG,KAAKuC,cAAL,EAzBH,CADF,CA6BD,C,sBArKmC/H,U,SAAjBD,Q","sourcesContent":["import React, { useState } from 'react';\nimport clsx from 'clsx';\nimport { TreeNode as RcTreeNode } from 'rc-tree';\nimport { getDataAndAria } from 'rc-tree/es/util';\nimport classNames from 'classnames';\nimport range from 'lodash/range';\nimport isEqual from 'lodash/isEqual';\nimport PopoverMenu from './PopoverMenu';\nimport HelpTooltip from './HelpTooltip';\nimport { callbackOnKeyPress, colorArrayToString, getLevelTooltipText } from './utils';\nimport { ReactComponent as MenuSVG } from '../../assets/menu.svg';\nimport { getDefaultColor } from '../utils';\n\n\n/**\n * Construct a `menuConfig` array for the PopoverMenu component.\n * @param {object} props The props for the TreeNode component.\n * @returns {object[]} An array of menu items to pass to PopoverMenu.\n */\nfunction makeNodeViewMenuConfig(props) {\n  const {\n    path,\n    level,\n    height,\n    onCheckNode,\n    onNodeRemove,\n    onNodeSetIsEditing,\n    onExportLevelZeroNodeJSON,\n    onExportLevelZeroNodeTabular,\n    onExportSetJSON,\n    checkable,\n    editable,\n    exportable,\n    checked,\n  } = props;\n\n  return [\n    ...(editable ? [\n      {\n        title: 'Rename',\n        handler: () => { onNodeSetIsEditing(path, true); },\n        handlerKey: 'r',\n      },\n      {\n        title: 'Delete',\n        confirm: true,\n        handler: () => { onNodeRemove(path); },\n        handlerKey: 'd',\n      },\n    ] : []),\n    ...(level === 0 && exportable ? [\n      {\n        title: 'Export hierarchy',\n        subtitle: '(to JSON file)',\n        handler: () => { onExportLevelZeroNodeJSON(path); },\n        handlerKey: 'j',\n      },\n      ...(height <= 1 ? [\n        {\n          title: 'Export hierarchy',\n          subtitle: '(to CSV file)',\n          handler: () => { onExportLevelZeroNodeTabular(path); },\n          handlerKey: 't',\n        },\n      ] : []),\n    ] : []),\n    ...(level > 0 ? [\n      ...(checkable ? [\n        {\n          title: (checked ? 'Uncheck' : 'Check'),\n          handler: () => { onCheckNode(path, !checked); },\n          handlerKey: 's',\n        },\n      ] : []),\n      ...(exportable ? [\n        {\n          title: 'Export set',\n          subtitle: '(to JSON file)',\n          handler: () => { onExportSetJSON(path); },\n          handlerKey: 'e',\n        },\n      ] : []),\n    ] : []),\n  ];\n}\n\n/**\n * The \"static\" node component to render when the user is not renaming.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNodeStatic(props) {\n  const {\n    title,\n    path,\n    nodeKey,\n    level,\n    height,\n    color,\n    checkbox,\n    isChecking,\n    isLeaf,\n    onNodeSetColor,\n    onNodeView,\n    expanded,\n    onCheckLevel,\n    checkedLevelPath,\n    checkedLevelIndex,\n    disableTooltip,\n    size,\n    datatype,\n    editable,\n    theme,\n  } = props;\n  const shouldCheckNextLevel = (level === 0 && !expanded);\n  const nextLevelToCheck = (\n    (checkedLevelIndex && isEqual(path, checkedLevelPath) && checkedLevelIndex < height)\n      ? checkedLevelIndex + 1\n      : 1\n  );\n  const numberFormatter = new Intl.NumberFormat('en-US');\n  const niceSize = numberFormatter.format(size);\n  let tooltipText;\n  if (shouldCheckNextLevel) {\n    tooltipText = getLevelTooltipText(nextLevelToCheck);\n  } else if (isLeaf || !expanded) {\n    tooltipText = `Color individual set (${niceSize} ${datatype}${(size === 1 ? '' : 's')})`;\n  } else {\n    tooltipText = 'Color by expanded descendants';\n  }\n  // If this is a level zero node and is _not_ expanded, then upon click,\n  // the behavior should be to color by the first or next cluster level.\n  // If this is a level zero node and _is_ expanded, or if any other node,\n  // click should trigger onNodeView.\n  const onClick = (level === 0 && !expanded\n    ? () => onCheckLevel(nodeKey, nextLevelToCheck)\n    : () => onNodeView(path)\n  );\n  const tooltipProps = (disableTooltip ? { visible: false } : {});\n  const popoverMenuConfig = makeNodeViewMenuConfig(props);\n  return (\n    <span>\n      <HelpTooltip title={tooltipText} {...tooltipProps}>\n        <button\n          type=\"button\"\n          onClick={onClick}\n          onKeyPress={e => callbackOnKeyPress(e, 'v', () => onNodeView(path))}\n          className=\"title-button\"\n        >\n          {title}\n        </button>\n      </HelpTooltip>\n      {popoverMenuConfig.length > 0 ? (\n        <PopoverMenu\n          menuConfig={makeNodeViewMenuConfig(props)}\n          color={level > 0 && editable ? (color || getDefaultColor(theme)) : null}\n          setColor={c => onNodeSetColor(path, c)}\n        >\n          <MenuSVG className=\"node-menu-icon\" />\n        </PopoverMenu>\n      ) : null}\n      {level > 0 && isChecking ? checkbox : null}\n      {level > 0 && (<span className=\"node-size-label\">{niceSize}</span>)}\n    </span>\n  );\n}\n\n/**\n * The \"editing\" node component to render when the user is renaming,\n * containing a text input field and a save button.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNodeEditing(props) {\n  const {\n    title,\n    path,\n    onNodeSetName,\n    onNodeCheckNewName,\n  } = props;\n  const [currentTitle, setCurrentTitle] = useState(title);\n\n  // Do not allow the user to save a potential name if it conflicts with\n  // another name in the hierarchy.\n  const hasConflicts = onNodeCheckNewName(path, currentTitle);\n  function trySetName() {\n    if (!hasConflicts) {\n      onNodeSetName(path, currentTitle, true);\n    }\n  }\n  return (\n    <span className=\"title-button-with-input\">\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus\n        className=\"title-input\"\n        type=\"text\"\n        value={currentTitle}\n        onChange={(e) => { setCurrentTitle(e.target.value); }}\n        onKeyPress={e => callbackOnKeyPress(\n          e,\n          'Enter',\n          trySetName,\n        )}\n        onFocus={e => e.target.select()}\n      />\n      {!hasConflicts && (\n        <button\n          type=\"button\"\n          className=\"title-save-button\"\n          onClick={trySetName}\n        >\n          Save\n        </button>\n      )}\n    </span>\n  );\n}\n\n/**\n * A \"delegation\" component, to decide whether to render\n * an \"editing\" vs. \"static\" node component.\n * @param {object} props The props for the TreeNode component.\n */\nfunction NamedSetNode(props) {\n  const {\n    isEditing,\n    isCurrentSet,\n  } = props;\n  return (\n    (isEditing || isCurrentSet)\n      ? (<NamedSetNodeEditing {...props} />)\n      : (<NamedSetNodeStatic {...props} />)\n  );\n}\n\n/**\n * Buttons for viewing each hierarchy level,\n * rendered below collapsed level zero nodes.\n * @param {object} props The props for the (level zero) TreeNode component.\n */\nfunction LevelsButtons(props) {\n  const {\n    nodeKey,\n    path,\n    height,\n    onCheckLevel,\n    checkedLevelPath,\n    checkedLevelIndex,\n    hasColorEncoding,\n  } = props;\n  function onCheck(event) {\n    if (event.target.checked) {\n      const newLevel = parseInt(event.target.value, 10);\n      onCheckLevel(nodeKey, newLevel);\n    }\n  }\n  return (\n    <div className=\"level-buttons-container\">\n      {range(1, height + 1).map((i) => {\n        const isChecked = isEqual(path, checkedLevelPath) && i === checkedLevelIndex;\n        return (\n          <div className=\"level-buttons\" key={i}>\n            <HelpTooltip title={getLevelTooltipText(i)}>\n              <input\n                className={clsx('level-radio-button', { checked: isChecked && !hasColorEncoding })}\n                type=\"checkbox\"\n                value={i}\n                checked={isChecked && hasColorEncoding}\n                onChange={onCheck}\n              />\n            </HelpTooltip>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\n/**\n * Render the \"switcher\" icon.\n * Arrow for collapsed/expanded non-leaf nodes,\n * or square for leaf nodes.\n * @param {object} props The props for the TreeNode component.\n */\nfunction SwitcherIcon(props) {\n  const {\n    isLeaf, isOpen, color,\n  } = props;\n  const hexColor = (color ? colorArrayToString(color) : undefined);\n  if (isLeaf) {\n    return (\n      <i\n        className=\"anticon anticon-circle rc-tree-switcher-icon\"\n      >\n        <svg\n          viewBox=\"0 0 1024 1024\"\n          focusable=\"false\"\n          data-icon=\"caret-down\"\n          width=\"1em\"\n          height=\"1em\"\n          aria-hidden=\"true\"\n        >\n          <rect fill={hexColor} x={600 / 2} y={600 / 2} width={1024 - 600} height={1024 - 600} />\n        </svg>\n      </i>\n    );\n  }\n  return (\n    <i\n      className=\"anticon anticon-caret-down rc-tree-switcher-icon\"\n    >\n      <svg\n        viewBox=\"0 0 1024 1024\"\n        focusable=\"false\"\n        data-icon=\"caret-down\"\n        width=\"1em\"\n        height=\"1em\"\n        aria-hidden=\"true\"\n      >\n        <path\n          fill={(isOpen ? '#444' : hexColor)}\n          d=\"M840.4 300H183.6c-19.7 0-30.7 20.8-18.5 35l328.4 380.8c9.4 10.9 27.5 10.9 37 0L858.9 335c12.2-14.2 1.2-35-18.5-35z\"\n        />\n      </svg>\n    </i>\n  );\n}\n\n/**\n * A custom TreeNode component.\n * @extends {RcTreeNode} TreeNode from the rc-tree library.\n */\nexport default class TreeNode extends RcTreeNode {\n  /**\n   * Override the main node text elements.\n   */\n  renderSelector = () => {\n    const {\n      title,\n      isCurrentSet,\n      isSelected,\n      isEditing,\n      onDragStart: onDragStartProp,\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        draggable,\n      },\n    } = this.context;\n\n    const onDragStart = (e) => {\n      onDragStartProp();\n      this.onDragStart(e);\n    };\n\n    const wrapClass = `${prefixClass}-node-content-wrapper`;\n    const isDraggable = (!isCurrentSet && !isEditing && draggable);\n    return (\n      <span\n        ref={this.setSelectHandle}\n        title={title}\n        className={classNames(\n          wrapClass,\n          `${wrapClass}-${this.getNodeState() || 'normal'}`,\n          isSelected && `${prefixClass}-node-selected`,\n          isDraggable && 'draggable',\n        )}\n        draggable={isDraggable}\n        aria-grabbed={isDraggable}\n        onDragStart={isDraggable ? onDragStart : undefined}\n      >\n        <NamedSetNode\n          {...this.props}\n          prefixClass={prefixClass}\n          checkbox={this.renderCheckbox()}\n        />\n        {this.renderLevels()}\n      </span>\n    );\n  };\n\n  /**\n   * Render the LevelsButtons component if this node\n   * is a collapsed level zero node.\n   */\n  renderLevels = () => {\n    const { level, expanded } = this.props;\n    if (level !== 0 || expanded) {\n      return null;\n    }\n    return (\n      <LevelsButtons\n        {...this.props}\n      />\n    );\n  }\n\n  /**\n   * Override the switcher element.\n   */\n  renderSwitcher = () => {\n    const { expanded, isLeaf, color } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        onNodeExpand,\n      },\n    } = this.context;\n\n    const onNodeExpandWrapper = (e) => {\n      // Do not call onNodeExpand if the node is a leaf node.\n      if (!isLeaf) {\n        onNodeExpand(e, this);\n      }\n    };\n\n    const switcherClass = classNames(\n      `${prefixClass}-switcher`,\n      { [`${prefixClass}-switcher_${(expanded ? 'open' : 'close')}`]: !isLeaf },\n    );\n    return (\n      <span\n        className={switcherClass}\n        onClick={onNodeExpandWrapper}\n        onKeyPress={e => callbackOnKeyPress(e, 'd', onNodeExpandWrapper)}\n        role=\"button\"\n        tabIndex=\"0\"\n      >\n        <SwitcherIcon\n          isLeaf={isLeaf}\n          isOpen={expanded}\n          color={color}\n        />\n      </span>\n    );\n  };\n\n  /**\n   * Override main render function,\n   * to enable overriding the sub-render functions\n   * for switcher, selector, etc.\n   */\n  render() {\n    const {\n      style, loading, level,\n      dragOver, dragOverGapTop, dragOverGapBottom,\n      isLeaf,\n      expanded, selected, checked, halfChecked,\n      onDragEnd: onDragEndProp,\n      expandable,\n      ...otherProps\n    } = this.props;\n    const {\n      rcTree: {\n        prefixCls: prefixClass,\n        filterTreeNode,\n        draggable,\n      },\n    } = this.context;\n    const disabled = this.isDisabled();\n    const dataAndAriaAttributeProps = getDataAndAria(otherProps);\n\n    const onDragEnd = (e) => {\n      onDragEndProp();\n      this.onDragEnd(e);\n    };\n\n    return (\n      <li\n        className={classNames('rc-tree-treenode', `level-${level}-treenode`, {\n          [`${prefixClass}-treenode-disabled`]: disabled,\n          [`${prefixClass}-treenode-switcher-${expanded ? 'open' : 'close'}`]: !isLeaf,\n          [`${prefixClass}-treenode-checkbox-checked`]: checked,\n          [`${prefixClass}-treenode-checkbox-indeterminate`]: halfChecked,\n          [`${prefixClass}-treenode-selected`]: selected,\n          [`${prefixClass}-treenode-loading`]: loading,\n\n          'drag-over': !disabled && dragOver,\n          'drag-over-gap-top': !disabled && dragOverGapTop,\n          'drag-over-gap-bottom': !disabled && dragOverGapBottom,\n          'filter-node': filterTreeNode && filterTreeNode(this),\n        })}\n        style={style}\n        role=\"treeitem\"\n        onDragEnter={draggable ? this.onDragEnter : undefined}\n        onDragOver={draggable ? this.onDragOver : undefined}\n        onDragLeave={draggable ? this.onDragLeave : undefined}\n        onDrop={draggable ? this.onDrop.bind(this) : undefined}\n        onDragEnd={draggable ? onDragEnd : undefined}\n        {...dataAndAriaAttributeProps}\n      >\n        {expandable ? this.renderSwitcher() : null}\n        {this.renderSelector()}\n        {this.renderChildren()}\n      </li>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}