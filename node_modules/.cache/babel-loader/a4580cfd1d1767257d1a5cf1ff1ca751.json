{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _defineProperty from\"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";var _fileTypeToSchema;import Ajv from'ajv';import{FileType}from'../app/constants';import AbstractTwoStepLoader from'./AbstractTwoStepLoader';import{LoaderValidationError,AbstractLoaderError}from'./errors/index';import LoaderResult from'./LoaderResult';import cellsSchema from'../schemas/cells.schema.json';import moleculesSchema from'../schemas/molecules.schema.json';import neighborhoodsSchema from'../schemas/neighborhoods.schema.json';import rasterSchema from'../schemas/raster.schema.json';import cellSetsSchema from'../schemas/cell-sets.schema.json';var fileTypeToSchema=(_fileTypeToSchema={},_defineProperty(_fileTypeToSchema,FileType.CELLS_JSON,cellsSchema),_defineProperty(_fileTypeToSchema,FileType.MOLECULES_JSON,moleculesSchema),_defineProperty(_fileTypeToSchema,FileType.NEIGHBORHOODS_JSON,neighborhoodsSchema),_defineProperty(_fileTypeToSchema,FileType.RASTER_JSON,rasterSchema),_defineProperty(_fileTypeToSchema,FileType.CELL_SETS_JSON,cellSetsSchema),_fileTypeToSchema);var JsonLoader=/*#__PURE__*/function(_AbstractTwoStepLoade){_inherits(JsonLoader,_AbstractTwoStepLoade);var _super=_createSuper(JsonLoader);function JsonLoader(dataSource,params){var _this;_classCallCheck(this,JsonLoader);_this=_super.call(this,dataSource,params);var fileType=params.fileType;_this.schema=fileTypeToSchema[fileType];return _this;}_createClass(JsonLoader,[{key:\"load\",value:function load(){var _this2=this;var url=this.url,type=this.type,fileType=this.fileType;if(this.data){return this.data;}this.data=this.dataSource.data.then(function(data){if(data instanceof AbstractLoaderError){return Promise.reject(data);}var _this2$validate=_this2.validate(data),_this2$validate2=_slicedToArray(_this2$validate,2),valid=_this2$validate2[0],reason=_this2$validate2[1];if(valid){return Promise.resolve(new LoaderResult(data,url));}return Promise.reject(new LoaderValidationError(type,fileType,url,reason));});return this.data;}},{key:\"validate\",value:function validate(data){var schema=this.schema,fileType=this.fileType;if(!schema){throw Error(\"No schema for \".concat(fileType));}var validate=new Ajv().compile(schema);var valid=validate(data);var failureReason;if(!valid){failureReason=validate.errors;}return[valid,failureReason];}}]);return JsonLoader;}(AbstractTwoStepLoader);export{JsonLoader as default};","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/loaders/JsonLoader.js"],"names":["Ajv","FileType","AbstractTwoStepLoader","LoaderValidationError","AbstractLoaderError","LoaderResult","cellsSchema","moleculesSchema","neighborhoodsSchema","rasterSchema","cellSetsSchema","fileTypeToSchema","CELLS_JSON","MOLECULES_JSON","NEIGHBORHOODS_JSON","RASTER_JSON","CELL_SETS_JSON","JsonLoader","dataSource","params","fileType","schema","url","type","data","then","Promise","reject","validate","valid","reason","resolve","Error","compile","failureReason","errors"],"mappings":"wlCAAA,MAAOA,CAAAA,GAAP,KAAgB,KAAhB,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,qBAAP,KAAkC,yBAAlC,CACA,OAASC,qBAAT,CAAgCC,mBAAhC,KAA2D,gBAA3D,CACA,MAAOC,CAAAA,YAAP,KAAyB,gBAAzB,CAEA,MAAOC,CAAAA,WAAP,KAAwB,8BAAxB,CACA,MAAOC,CAAAA,eAAP,KAA4B,kCAA5B,CACA,MAAOC,CAAAA,mBAAP,KAAgC,sCAAhC,CACA,MAAOC,CAAAA,YAAP,KAAyB,+BAAzB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CAEA,GAAMC,CAAAA,gBAAgB,yDACnBV,QAAQ,CAACW,UADU,CACGN,WADH,oCAEnBL,QAAQ,CAACY,cAFU,CAEON,eAFP,oCAGnBN,QAAQ,CAACa,kBAHU,CAGWN,mBAHX,oCAInBP,QAAQ,CAACc,WAJU,CAIIN,YAJJ,oCAKnBR,QAAQ,CAACe,cALU,CAKON,cALP,oBAAtB,C,GAQqBO,CAAAA,U,8HACnB,oBAAYC,UAAZ,CAAwBC,MAAxB,CAAgC,4CAC9B,uBAAMD,UAAN,CAAkBC,MAAlB,EAD8B,GAGtBC,CAAAA,QAHsB,CAGTD,MAHS,CAGtBC,QAHsB,CAI9B,MAAKC,MAAL,CAAcV,gBAAgB,CAACS,QAAD,CAA9B,CAJ8B,aAK/B,C,0DAEM,oBAEHE,CAAAA,GAFG,CAGD,IAHC,CAEHA,GAFG,CAEEC,IAFF,CAGD,IAHC,CAEEA,IAFF,CAEQH,QAFR,CAGD,IAHC,CAEQA,QAFR,CAIL,GAAI,KAAKI,IAAT,CAAe,CACb,MAAO,MAAKA,IAAZ,CACD,CACD,KAAKA,IAAL,CAAY,KAAKN,UAAL,CAAgBM,IAAhB,CACTC,IADS,CACJ,SAACD,IAAD,CAAU,CACd,GAAIA,IAAI,WAAYpB,CAAAA,mBAApB,CAAyC,CACvC,MAAOsB,CAAAA,OAAO,CAACC,MAAR,CAAeH,IAAf,CAAP,CACD,CAHa,oBAIU,MAAI,CAACI,QAAL,CAAcJ,IAAd,CAJV,oDAIPK,KAJO,qBAIAC,MAJA,qBAKd,GAAID,KAAJ,CAAW,CACT,MAAOH,CAAAA,OAAO,CAACK,OAAR,CAAgB,GAAI1B,CAAAA,YAAJ,CAAiBmB,IAAjB,CAAuBF,GAAvB,CAAhB,CAAP,CACD,CACD,MAAOI,CAAAA,OAAO,CAACC,MAAR,CAAe,GAAIxB,CAAAA,qBAAJ,CAA0BoB,IAA1B,CAAgCH,QAAhC,CAA0CE,GAA1C,CAA+CQ,MAA/C,CAAf,CAAP,CACD,CAVS,CAAZ,CAWA,MAAO,MAAKN,IAAZ,CACD,C,0CAEQA,I,CAAM,IACLH,CAAAA,MADK,CACgB,IADhB,CACLA,MADK,CACGD,QADH,CACgB,IADhB,CACGA,QADH,CAEb,GAAI,CAACC,MAAL,CAAa,CACX,KAAMW,CAAAA,KAAK,yBAAkBZ,QAAlB,EAAX,CACD,CACD,GAAMQ,CAAAA,QAAQ,CAAG,GAAI5B,CAAAA,GAAJ,GAAUiC,OAAV,CAAkBZ,MAAlB,CAAjB,CACA,GAAMQ,CAAAA,KAAK,CAAGD,QAAQ,CAACJ,IAAD,CAAtB,CACA,GAAIU,CAAAA,aAAJ,CACA,GAAI,CAACL,KAAL,CAAY,CACVK,aAAa,CAAGN,QAAQ,CAACO,MAAzB,CACD,CACD,MAAO,CAACN,KAAD,CAAQK,aAAR,CAAP,CACD,C,wBAzCqChC,qB,SAAnBe,U","sourcesContent":["import Ajv from 'ajv';\nimport { FileType } from '../app/constants';\nimport AbstractTwoStepLoader from './AbstractTwoStepLoader';\nimport { LoaderValidationError, AbstractLoaderError } from './errors/index';\nimport LoaderResult from './LoaderResult';\n\nimport cellsSchema from '../schemas/cells.schema.json';\nimport moleculesSchema from '../schemas/molecules.schema.json';\nimport neighborhoodsSchema from '../schemas/neighborhoods.schema.json';\nimport rasterSchema from '../schemas/raster.schema.json';\nimport cellSetsSchema from '../schemas/cell-sets.schema.json';\n\nconst fileTypeToSchema = {\n  [FileType.CELLS_JSON]: cellsSchema,\n  [FileType.MOLECULES_JSON]: moleculesSchema,\n  [FileType.NEIGHBORHOODS_JSON]: neighborhoodsSchema,\n  [FileType.RASTER_JSON]: rasterSchema,\n  [FileType.CELL_SETS_JSON]: cellSetsSchema,\n};\n\nexport default class JsonLoader extends AbstractTwoStepLoader {\n  constructor(dataSource, params) {\n    super(dataSource, params);\n\n    const { fileType } = params;\n    this.schema = fileTypeToSchema[fileType];\n  }\n\n  load() {\n    const {\n      url, type, fileType,\n    } = this;\n    if (this.data) {\n      return this.data;\n    }\n    this.data = this.dataSource.data\n      .then((data) => {\n        if (data instanceof AbstractLoaderError) {\n          return Promise.reject(data);\n        }\n        const [valid, reason] = this.validate(data);\n        if (valid) {\n          return Promise.resolve(new LoaderResult(data, url));\n        }\n        return Promise.reject(new LoaderValidationError(type, fileType, url, reason));\n      });\n    return this.data;\n  }\n\n  validate(data) {\n    const { schema, fileType } = this;\n    if (!schema) {\n      throw Error(`No schema for ${fileType}`);\n    }\n    const validate = new Ajv().compile(schema);\n    const valid = validate(data);\n    let failureReason;\n    if (!valid) {\n      failureReason = validate.errors;\n    }\n    return [valid, failureReason];\n  }\n}\n"]},"metadata":{},"sourceType":"module"}