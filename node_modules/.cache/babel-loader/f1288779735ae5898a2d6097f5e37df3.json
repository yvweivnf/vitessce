{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DrawPolygonByDraggingMode = void 0;\n\nvar _lodash = _interopRequireDefault(require(\"lodash.throttle\"));\n\nvar _utils = require(\"../utils\");\n\nvar _drawPolygonMode = require(\"./draw-polygon-mode\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _createSuper(Derived) {\n  return function () {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (_isNativeReflectConstruct()) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nvar DrawPolygonByDraggingMode = /*#__PURE__*/function (_DrawPolygonMode) {\n  _inherits(DrawPolygonByDraggingMode, _DrawPolygonMode);\n\n  var _super = _createSuper(DrawPolygonByDraggingMode);\n\n  function DrawPolygonByDraggingMode() {\n    var _this;\n\n    _classCallCheck(this, DrawPolygonByDraggingMode);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleDraggingThrottled\", null);\n\n    return _this;\n  }\n\n  _createClass(DrawPolygonByDraggingMode, [{\n    key: \"handleClick\",\n    value: function handleClick(event, props) {// No-op\n    }\n  }, {\n    key: \"handleStartDragging\",\n    value: function handleStartDragging(event, props) {\n      event.cancelPan();\n\n      if (props.modeConfig && props.modeConfig.throttleMs) {\n        this.handleDraggingThrottled = (0, _lodash[\"default\"])(this.handleDraggingAux, props.modeConfig.throttleMs);\n      } else {\n        this.handleDraggingThrottled = this.handleDraggingAux;\n      }\n    }\n  }, {\n    key: \"handleStopDragging\",\n    value: function handleStopDragging(event, props) {\n      this.addClickSequence(event);\n      var clickSequence = this.getClickSequence(); // @ts-ignore\n\n      if (this.handleDraggingThrottled && this.handleDraggingThrottled.cancel) {\n        // @ts-ignore\n        this.handleDraggingThrottled.cancel();\n      }\n\n      if (clickSequence.length > 2) {\n        // Complete the polygon.\n        var polygonToAdd = {\n          type: 'Polygon',\n          coordinates: [[].concat(_toConsumableArray(clickSequence), [clickSequence[0]])]\n        };\n        this.resetClickSequence();\n        var editAction = this.getAddFeatureOrBooleanPolygonAction(polygonToAdd, props);\n\n        if (editAction) {\n          props.onEdit(editAction);\n        }\n      }\n    }\n  }, {\n    key: \"handleDraggingAux\",\n    value: function handleDraggingAux(event, props) {\n      var picks = event.picks;\n      var clickedEditHandle = (0, _utils.getPickedEditHandle)(picks);\n\n      if (!clickedEditHandle) {\n        // Don't add another point right next to an existing one.\n        this.addClickSequence(event);\n      }\n    }\n  }, {\n    key: \"handleDragging\",\n    value: function handleDragging(event, props) {\n      if (this.handleDraggingThrottled) {\n        this.handleDraggingThrottled(event, props);\n      }\n    }\n  }]);\n\n  return DrawPolygonByDraggingMode;\n}(_drawPolygonMode.DrawPolygonMode);\n\nexports.DrawPolygonByDraggingMode = DrawPolygonByDraggingMode;","map":{"version":3,"sources":["../../src/lib/draw-polygon-by-dragging-mode.ts"],"names":["DrawPolygonByDraggingMode","DrawPolygonMode","event","props","clickSequence","polygonToAdd","type","coordinates","editAction","picks","clickedEditHandle"],"mappings":";;;;;;;AAAA,IAAA,OAAA,GAAA,sBAAA,CAAA,OAAA,CAAA,iBAAA,CAAA,CAAA;;AASA,IAAA,MAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,IAAA,gBAAA,GAAA,OAAA,CAAA,qBAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAIaA,yB;;;;;;;;;;;;;;;;8EACmD,I;;;;;;;gCAElDE,K,EAAmBC,K,EAAqC,CAClE;AACD;;;wCAEmBD,K,EAA2BC,K,EAAqC;AAClFD,MAAAA,KAAK,CAALA,SAAAA;;AACA,UAAIC,KAAK,CAALA,UAAAA,IAAoBA,KAAK,CAALA,UAAAA,CAAxB,UAAA,EAAqD;AACnD,aAAA,uBAAA,GAA+B,CAAA,GAAA,OAAA,CAAA,SAAA,CAAA,EAAS,KAAT,iBAAA,EAAiCA,KAAK,CAALA,UAAAA,CAAhE,UAA+B,CAA/B;AADF,OAAA,MAEO;AACL,aAAA,uBAAA,GAA+B,KAA/B,iBAAA;AACD;AACF;;;uCAEkBD,K,EAA0BC,K,EAAqC;AAChF,WAAA,gBAAA,CAAA,KAAA;AACA,UAAMC,aAAa,GAAG,KAF0D,gBAE1D,EAAtB,CAFgF,CAGhF;;AACA,UAAI,KAAA,uBAAA,IAAgC,KAAA,uBAAA,CAApC,MAAA,EAAyE;AACvE;AACA,aAAA,uBAAA,CAAA,MAAA;AACD;;AAED,UAAIA,aAAa,CAAbA,MAAAA,GAAJ,CAAA,EAA8B;AAC5B;AACA,YAAMC,YAAqB,GAAG;AAC5BC,UAAAA,IAAI,EADwB,SAAA;AAE5BC,UAAAA,WAAW,EAAE,CAAA,GAAA,MAAA,CAAA,kBAAA,CAAA,aAAA,CAAA,EAAA,CAAoBH,aAAa,CAAjC,CAAiC,CAAjC,CAAA,CAAA;AAFe,SAA9B;AAKA,aAAA,kBAAA;AAEA,YAAMI,UAAU,GAAG,KAAA,mCAAA,CAAA,YAAA,EAAnB,KAAmB,CAAnB;;AACA,YAAA,UAAA,EAAgB;AACdL,UAAAA,KAAK,CAALA,MAAAA,CAAAA,UAAAA;AACD;AACF;AACF;;;sCAEiBD,K,EAAsBC,K,EAAqC;AAAA,UACnEM,KADmE,GACzDP,KADyD,CAAA,KAAA;AAE3E,UAAMQ,iBAAiB,GAAG,CAAA,GAAA,MAAA,CAAA,mBAAA,EAA1B,KAA0B,CAA1B;;AAEA,UAAI,CAAJ,iBAAA,EAAwB;AACtB;AACA,aAAA,gBAAA,CAAA,KAAA;AACD;AACF;;;mCAEcR,K,EAAsBC,K,EAAqC;AACxE,UAAI,KAAJ,uBAAA,EAAkC;AAChC,aAAA,uBAAA,CAAA,KAAA,EAAA,KAAA;AACD;AACF;;;;EAvD4CF,gBAAAA,CAAAA,e","sourcesContent":["import throttle from 'lodash.throttle';\nimport {\n  ClickEvent,\n  StartDraggingEvent,\n  StopDraggingEvent,\n  DraggingEvent,\n  ModeProps,\n} from '../types';\nimport { Polygon, FeatureCollection } from '../geojson-types';\nimport { getPickedEditHandle } from '../utils';\nimport { DrawPolygonMode } from './draw-polygon-mode';\n\ntype DraggingHandler = (event: DraggingEvent, props: ModeProps<FeatureCollection>) => void;\n\nexport class DrawPolygonByDraggingMode extends DrawPolygonMode {\n  handleDraggingThrottled: DraggingHandler | null | undefined = null;\n\n  handleClick(event: ClickEvent, props: ModeProps<FeatureCollection>) {\n    // No-op\n  }\n\n  handleStartDragging(event: StartDraggingEvent, props: ModeProps<FeatureCollection>) {\n    event.cancelPan();\n    if (props.modeConfig && props.modeConfig.throttleMs) {\n      this.handleDraggingThrottled = throttle(this.handleDraggingAux, props.modeConfig.throttleMs);\n    } else {\n      this.handleDraggingThrottled = this.handleDraggingAux;\n    }\n  }\n\n  handleStopDragging(event: StopDraggingEvent, props: ModeProps<FeatureCollection>) {\n    this.addClickSequence(event);\n    const clickSequence = this.getClickSequence();\n    // @ts-ignore\n    if (this.handleDraggingThrottled && this.handleDraggingThrottled.cancel) {\n      // @ts-ignore\n      this.handleDraggingThrottled.cancel();\n    }\n\n    if (clickSequence.length > 2) {\n      // Complete the polygon.\n      const polygonToAdd: Polygon = {\n        type: 'Polygon',\n        coordinates: [[...clickSequence, clickSequence[0]]],\n      };\n\n      this.resetClickSequence();\n\n      const editAction = this.getAddFeatureOrBooleanPolygonAction(polygonToAdd, props);\n      if (editAction) {\n        props.onEdit(editAction);\n      }\n    }\n  }\n\n  handleDraggingAux(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    const { picks } = event;\n    const clickedEditHandle = getPickedEditHandle(picks);\n\n    if (!clickedEditHandle) {\n      // Don't add another point right next to an existing one.\n      this.addClickSequence(event);\n    }\n  }\n\n  handleDragging(event: DraggingEvent, props: ModeProps<FeatureCollection>) {\n    if (this.handleDraggingThrottled) {\n      this.handleDraggingThrottled(event, props);\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}