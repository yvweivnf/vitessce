{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport _classCallCheck from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nexport var AsyncSerialScheduler = /*#__PURE__*/function () {\n  function AsyncSerialScheduler(observer) {\n    _classCallCheck(this, AsyncSerialScheduler);\n\n    this._baseObserver = observer;\n    this._pendingPromises = new Set();\n  }\n\n  _createClass(AsyncSerialScheduler, [{\n    key: \"complete\",\n    value: function complete() {\n      var _this = this;\n\n      Promise.all(this._pendingPromises).then(function () {\n        return _this._baseObserver.complete();\n      }).catch(function (error) {\n        return _this._baseObserver.error(error);\n      });\n    }\n  }, {\n    key: \"error\",\n    value: function error(_error) {\n      this._baseObserver.error(_error);\n    }\n  }, {\n    key: \"schedule\",\n    value: function schedule(task) {\n      var _this2 = this;\n\n      var prevPromisesCompletion = Promise.all(this._pendingPromises);\n      var values = [];\n\n      var next = function next(value) {\n        return values.push(value);\n      };\n\n      var promise = Promise.resolve().then(function () {\n        return __awaiter(_this2, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n          var _iterator, _step, value;\n\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  _context.next = 2;\n                  return prevPromisesCompletion;\n\n                case 2:\n                  _context.next = 4;\n                  return task(next);\n\n                case 4:\n                  this._pendingPromises.delete(promise);\n\n                  _iterator = _createForOfIteratorHelper(values);\n\n                  try {\n                    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                      value = _step.value;\n\n                      this._baseObserver.next(value);\n                    }\n                  } catch (err) {\n                    _iterator.e(err);\n                  } finally {\n                    _iterator.f();\n                  }\n\n                case 7:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n      }).catch(function (error) {\n        _this2._pendingPromises.delete(promise);\n\n        _this2._baseObserver.error(error);\n      });\n\n      this._pendingPromises.add(promise);\n    }\n  }]);\n\n  return AsyncSerialScheduler;\n}();","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/observable-fns/dist.esm/_scheduler.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","AsyncSerialScheduler","observer","_baseObserver","_pendingPromises","Set","all","complete","catch","error","task","prevPromisesCompletion","values","push","promise","delete","add"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport class AsyncSerialScheduler {\n    constructor(observer) {\n        this._baseObserver = observer;\n        this._pendingPromises = new Set();\n    }\n    complete() {\n        Promise.all(this._pendingPromises)\n            .then(() => this._baseObserver.complete())\n            .catch(error => this._baseObserver.error(error));\n    }\n    error(error) {\n        this._baseObserver.error(error);\n    }\n    schedule(task) {\n        const prevPromisesCompletion = Promise.all(this._pendingPromises);\n        const values = [];\n        const next = (value) => values.push(value);\n        const promise = Promise.resolve()\n            .then(() => __awaiter(this, void 0, void 0, function* () {\n            yield prevPromisesCompletion;\n            yield task(next);\n            this._pendingPromises.delete(promise);\n            for (const value of values) {\n                this._baseObserver.next(value);\n            }\n        }))\n            .catch(error => {\n            this._pendingPromises.delete(promise);\n            this._baseObserver.error(error);\n        });\n        this._pendingPromises.add(promise);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}