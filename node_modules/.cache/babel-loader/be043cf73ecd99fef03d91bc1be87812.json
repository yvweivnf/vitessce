{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.shortNumber = factory();\n})(this, function (num) {\n  'use strict';\n\n  return function (num) {\n    if (typeof num !== 'number') {\n      throw new TypeError('Expected a number');\n    }\n\n    if (num > 1e19) {\n      throw new RangeError('Input expected to be < 1e19');\n    }\n\n    if (num < -1e19) {\n      throw new RangeError('Input expected to be > 1e19');\n    }\n\n    if (Math.abs(num) < 1000) {\n      return num;\n    }\n\n    var shortNumber;\n    var exponent;\n    var size;\n    var sign = num < 0 ? '-' : '';\n    var suffixes = {\n      'K': 6,\n      'M': 9,\n      'B': 12,\n      'T': 16\n    };\n    num = Math.abs(num);\n    size = Math.floor(num).toString().length;\n    exponent = size % 3 === 0 ? size - 3 : size - size % 3;\n    shortNumber = Math.round(10 * (num / Math.pow(10, exponent))) / 10;\n\n    for (var suffix in suffixes) {\n      if (exponent < suffixes[suffix]) {\n        shortNumber += suffix;\n        break;\n      }\n    }\n\n    return sign + shortNumber;\n  };\n});","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/node_modules/short-number/index.js"],"names":["global","factory","exports","module","define","amd","shortNumber","num","TypeError","RangeError","Math","abs","exponent","size","sign","suffixes","floor","toString","length","round","pow","suffix"],"mappings":"AAAC,WAAUA,MAAV,EAAkBC,OAAlB,EAA2B;AACxB,SAAOC,OAAP,KAAmB,QAAnB,IAA+B,OAAOC,MAAP,KAAkB,WAAjD,GAA+DA,MAAM,CAACD,OAAP,GAAiBD,OAAO,EAAvF,GACA,OAAOG,MAAP,KAAkB,UAAlB,IAAgCA,MAAM,CAACC,GAAvC,GAA6CD,MAAM,CAACH,OAAD,CAAnD,GACAD,MAAM,CAACM,WAAP,GAAqBL,OAAO,EAF5B;AAGH,CAJA,EAIC,IAJD,EAIO,UAAUM,GAAV,EAAe;AACnB;;AAEA,SAAO,UAAUA,GAAV,EAAe;AAClB,QAAG,OAAOA,GAAP,KAAe,QAAlB,EAA4B;AACxB,YAAM,IAAIC,SAAJ,CAAc,mBAAd,CAAN;AACH;;AAED,QAAGD,GAAG,GAAG,IAAT,EAAe;AACX,YAAM,IAAIE,UAAJ,CAAe,6BAAf,CAAN;AACH;;AAED,QAAGF,GAAG,GAAG,CAAC,IAAV,EAAgB;AACZ,YAAM,IAAIE,UAAJ,CAAe,6BAAf,CAAN;AACH;;AAED,QAAGC,IAAI,CAACC,GAAL,CAASJ,GAAT,IAAgB,IAAnB,EAAyB;AACrB,aAAOA,GAAP;AACH;;AAED,QAAID,WAAJ;AACA,QAAIM,QAAJ;AACA,QAAIC,IAAJ;AACA,QAAIC,IAAI,GAAGP,GAAG,GAAG,CAAN,GAAU,GAAV,GAAgB,EAA3B;AACA,QAAIQ,QAAQ,GAAG;AACX,WAAK,CADM;AAEX,WAAK,CAFM;AAGX,WAAK,EAHM;AAIX,WAAK;AAJM,KAAf;AAOAR,IAAAA,GAAG,GAAGG,IAAI,CAACC,GAAL,CAASJ,GAAT,CAAN;AACAM,IAAAA,IAAI,GAAGH,IAAI,CAACM,KAAL,CAAWT,GAAX,EAAgBU,QAAhB,GAA2BC,MAAlC;AAEAN,IAAAA,QAAQ,GAAGC,IAAI,GAAG,CAAP,KAAa,CAAb,GAAiBA,IAAI,GAAG,CAAxB,GAA4BA,IAAI,GAAIA,IAAI,GAAG,CAAtD;AACAP,IAAAA,WAAW,GAAGI,IAAI,CAACS,KAAL,CAAW,MAAMZ,GAAG,GAAGG,IAAI,CAACU,GAAL,CAAS,EAAT,EAAaR,QAAb,CAAZ,CAAX,IAAkD,EAAhE;;AAEA,SAAI,IAAIS,MAAR,IAAkBN,QAAlB,EAA4B;AACxB,UAAGH,QAAQ,GAAGG,QAAQ,CAACM,MAAD,CAAtB,EAAgC;AAC5Bf,QAAAA,WAAW,IAAIe,MAAf;AACA;AACH;AACJ;;AAED,WAAOP,IAAI,GAAGR,WAAd;AACH,GA1CD;AA2CH,CAlDA,CAAD","sourcesContent":["(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\r\n    typeof define === 'function' && define.amd ? define(factory) :\r\n    global.shortNumber = factory();\r\n}(this, function (num) {\r\n    'use strict';\r\n\r\n    return function (num) {\r\n        if(typeof num !== 'number') {\r\n            throw new TypeError('Expected a number');\r\n        }\r\n\r\n        if(num > 1e19) {\r\n            throw new RangeError('Input expected to be < 1e19');\r\n        }\r\n\r\n        if(num < -1e19) {\r\n            throw new RangeError('Input expected to be > 1e19');\r\n        }\r\n\r\n        if(Math.abs(num) < 1000) {\r\n            return num;\r\n        }\r\n\r\n        var shortNumber;\r\n        var exponent;\r\n        var size;\r\n        var sign = num < 0 ? '-' : '';\r\n        var suffixes = {\r\n            'K': 6,\r\n            'M': 9,\r\n            'B': 12,\r\n            'T': 16\r\n        };\r\n\r\n        num = Math.abs(num);\r\n        size = Math.floor(num).toString().length;\r\n\r\n        exponent = size % 3 === 0 ? size - 3 : size - (size % 3);\r\n        shortNumber = Math.round(10 * (num / Math.pow(10, exponent))) / 10;\r\n\r\n        for(var suffix in suffixes) {\r\n            if(exponent < suffixes[suffix]) {\r\n                shortNumber += suffix;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return sign + shortNumber;\r\n    };\r\n}));\r\n"]},"metadata":{},"sourceType":"script"}