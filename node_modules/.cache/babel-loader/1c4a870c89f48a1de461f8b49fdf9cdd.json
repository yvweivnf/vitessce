{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar VERSION = typeof \"3.1.8\" !== 'undefined' ? \"3.1.8\" : 'latest';\nexport var JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync: parseTextSync,\n  parse: function () {\n    var _parse = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(arrayBuffer) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", parseTextSync(new TextDecoder().decode(arrayBuffer)));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function parse(_x) {\n      return _parse.apply(this, arguments);\n    }\n\n    return parse;\n  }(),\n  options: {}\n};\n\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport var _typecheckJSONLoader = JSONLoader;","map":{"version":3,"sources":["../../src/json-loader.ts"],"names":["VERSION","JSONLoader","name","id","module","version","extensions","mimeTypes","category","text","parseTextSync","parse","options","JSON","_typecheckJSONLoader"],"mappings":";;AAIA,IAAMA,OAAO,GAAG,OAAA,OAAA,KAAA,WAAA,GAAA,OAAA,GAAhB,QAAA;AAMA,OAAO,IAAMC,UAAU,GAAG;AACxBC,EAAAA,IAAI,EADoB,MAAA;AAExBC,EAAAA,EAAE,EAFsB,MAAA;AAGxBC,EAAAA,MAAM,EAHkB,MAAA;AAIxBC,EAAAA,OAAO,EAJiB,OAAA;AAKxBC,EAAAA,UAAU,EAAE,CAAA,MAAA,EALY,SAKZ,CALY;AAMxBC,EAAAA,SAAS,EAAE,CANa,kBAMb,CANa;AAOxBC,EAAAA,QAAQ,EAPgB,MAAA;AAQxBC,EAAAA,IAAI,EARoB,IAAA;AASxBC,EAAAA,aATwB,EASxBA,aATwB;AAUxBC,EAAAA,KAAK;AAAA,0EAAE,iBAAA,WAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAAuBD,aAAa,CAAC,IAAA,WAAA,GAAA,MAAA,CAVpB,WAUoB,CAAD,CAApC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAVmB;AAWxBE,EAAAA,OAAO,EAAE;AAXe,CAAnB;;AAeP,SAAA,aAAA,CAAA,IAAA,EAA6B;AAC3B,SAAOC,IAAI,CAAJA,KAAAA,CAAP,IAAOA,CAAP;AACD;;AAED,OAAO,IAAMC,oBAAsC,GAA5C,UAAA","sourcesContent":["import type {LoaderWithParser} from './types';\n\n// __VERSION__ is injected by babel-plugin-version-inline\n// @ts-ignore TS2304: Cannot find name '__VERSION__'.\nconst VERSION = typeof __VERSION__ !== 'undefined' ? __VERSION__ : 'latest';\n\n/**\n * A JSON Micro loader (minimal bundle size)\n * Alternative to `@loaders.gl/json`\n */\nexport const JSONLoader = {\n  name: 'JSON',\n  id: 'json',\n  module: 'json',\n  version: VERSION,\n  extensions: ['json', 'geojson'],\n  mimeTypes: ['application/json'],\n  category: 'json',\n  text: true,\n  parseTextSync,\n  parse: async (arrayBuffer) => parseTextSync(new TextDecoder().decode(arrayBuffer)),\n  options: {}\n};\n\n// TODO - deprecated\nfunction parseTextSync(text) {\n  return JSON.parse(text);\n}\n\nexport const _typecheckJSONLoader: LoaderWithParser = JSONLoader;\n"]},"metadata":{},"sourceType":"module"}