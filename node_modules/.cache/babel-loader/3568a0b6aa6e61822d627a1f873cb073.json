{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\src\\\\app\\\\app.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { getConfig, listConfigs } from './api';\nimport Welcome from './Welcome';\nimport Warning from './Warning';\nimport Vitessce from './Vitessce';\nimport '../css/index.scss';\nimport '../../node_modules/react-grid-layout/css/styles.css';\nimport '../../node_modules/react-resizable/css/styles.css';\n\nfunction AwaitResponse(props) {\n  const {\n    response,\n    theme\n  } = props;\n  const [isLoading, setIsLoading] = useState(true);\n  const responseRef = useRef();\n  useEffect(() => {\n    response.then(c => {\n      responseRef.current = c;\n      setIsLoading(false);\n    });\n  }, [response]);\n  return !isLoading ? React.createElement(responseRef.current) : /*#__PURE__*/React.createElement(Warning, {\n    title: \"Loading...\",\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 67\n    }\n  });\n}\n\nfunction preformattedDetails(response) {\n  return `\n    ok: ${response.ok}\n    status: ${response.status}\n    statusText: ${response.statusText}\n    redirected: ${response.redirected}\n    type: ${response.type}\n    url: ${response.url}`; // TODO: headers\n}\n\nfunction checkResponse(response, theme, debug) {\n  if (!response.ok) {\n    return Promise.resolve(() => /*#__PURE__*/React.createElement(Warning, {\n      title: \"Fetch response not OK\",\n      preformatted: preformattedDetails(response),\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return response.text().then(text => {\n    try {\n      const config = JSON.parse(text);\n      return Promise.resolve(() => /*#__PURE__*/React.createElement(Vitessce, {\n        config: config,\n        theme: theme // eslint-disable-next-line no-console\n        ,\n        onConfigChange: debug ? console.log : undefined,\n        validateOnConfigChange: debug,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }\n      }));\n    } catch (e) {\n      return Promise.resolve(() => /*#__PURE__*/React.createElement(Warning, {\n        title: \"Error parsing JSON\",\n        preformatted: preformattedDetails(response),\n        unformatted: `${e.message}: ${text}`,\n        theme: theme,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 9\n        }\n      }));\n    }\n  });\n}\n/**\n * Use the theme provided if it is valid, otherwise fall back to the 'dark' theme.\n * @param {string} theme A potentially invalid theme name.\n * @returns {string} A valid theme name.\n */\n\n\nfunction validateTheme(theme) {\n  return ['light', 'dark'].includes(theme) ? theme : 'dark';\n}\n/**\n * Convenience function for creating the minimal Vitessce demo and demo listing\n * components based on the current URL parameters.\n * @param {object} params\n * @param {number|null} params.rowHeight The row height to pass to the Vitessce grid.\n * Optional. By default, null.\n * @returns A component, either <Welcome/> or <Vitessce/> depending on the URL params.\n */\n\n\nexport function createApp(params) {\n  const {\n    rowHeight = null\n  } = params || {};\n  const urlParams = new URLSearchParams(window.location.search);\n  const datasetId = urlParams.get('dataset');\n  const debug = urlParams.get('debug') === 'true';\n  const datasetUrl = urlParams.get('url');\n  const showAll = urlParams.get('show') === 'all';\n  const theme = validateTheme(urlParams.get('theme'));\n\n  if (datasetId) {\n    const config = getConfig(datasetId);\n    return /*#__PURE__*/React.createElement(Vitessce, {\n      config: config,\n      rowHeight: rowHeight,\n      theme: theme // eslint-disable-next-line no-console\n      ,\n      onConfigChange: debug ? console.log : undefined,\n      validateOnConfigChange: debug,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    });\n  }\n\n  if (datasetUrl) {\n    const responsePromise = fetch(datasetUrl).then(response => checkResponse(response, theme, debug)).catch(error => Promise.resolve(() => /*#__PURE__*/React.createElement(Warning, {\n      title: \"Error fetching\",\n      unformatted: error.message,\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }\n    })));\n    return /*#__PURE__*/React.createElement(AwaitResponse, {\n      response: responsePromise,\n      theme: theme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    });\n  }\n\n  const configs = listConfigs(showAll);\n  return /*#__PURE__*/React.createElement(Welcome, {\n    configs: configs,\n    theme: theme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  });\n}","map":{"version":3,"sources":["C:/Users/wkuo/Documents/vitessce-forked-v1.2.2/vitessce/src/app/app.js"],"names":["React","useEffect","useRef","useState","getConfig","listConfigs","Welcome","Warning","Vitessce","AwaitResponse","props","response","theme","isLoading","setIsLoading","responseRef","then","c","current","createElement","preformattedDetails","ok","status","statusText","redirected","type","url","checkResponse","debug","Promise","resolve","text","config","JSON","parse","console","log","undefined","e","message","validateTheme","includes","createApp","params","rowHeight","urlParams","URLSearchParams","window","location","search","datasetId","get","datasetUrl","showAll","responsePromise","fetch","catch","error","configs"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { getConfig, listConfigs } from './api';\nimport Welcome from './Welcome';\nimport Warning from './Warning';\nimport Vitessce from './Vitessce';\n\nimport '../css/index.scss';\nimport '../../node_modules/react-grid-layout/css/styles.css';\nimport '../../node_modules/react-resizable/css/styles.css';\n\nfunction AwaitResponse(props) {\n  const {\n    response,\n    theme,\n  } = props;\n  const [isLoading, setIsLoading] = useState(true);\n  const responseRef = useRef();\n  useEffect(() => {\n    response.then((c) => {\n      responseRef.current = c;\n      setIsLoading(false);\n    });\n  }, [response]);\n  return (!isLoading ? React.createElement(responseRef.current) : <Warning title=\"Loading...\" theme={theme} />);\n}\n\nfunction preformattedDetails(response) {\n  return `\n    ok: ${response.ok}\n    status: ${response.status}\n    statusText: ${response.statusText}\n    redirected: ${response.redirected}\n    type: ${response.type}\n    url: ${response.url}`; // TODO: headers\n}\n\n\nfunction checkResponse(response, theme, debug) {\n  if (!response.ok) {\n    return Promise.resolve(\n      () => (\n        <Warning\n          title=\"Fetch response not OK\"\n          preformatted={preformattedDetails(response)}\n          theme={theme}\n        />\n      ),\n    );\n  }\n  return response.text().then((text) => {\n    try {\n      const config = JSON.parse(text);\n      return Promise.resolve(() => (\n        <Vitessce\n          config={config}\n          theme={theme}\n          // eslint-disable-next-line no-console\n          onConfigChange={debug ? console.log : undefined}\n          validateOnConfigChange={debug}\n        />\n      ));\n    } catch (e) {\n      return Promise.resolve(() => (\n        <Warning\n          title=\"Error parsing JSON\"\n          preformatted={preformattedDetails(response)}\n          unformatted={`${e.message}: ${text}`}\n          theme={theme}\n        />\n      ));\n    }\n  });\n}\n\n/**\n * Use the theme provided if it is valid, otherwise fall back to the 'dark' theme.\n * @param {string} theme A potentially invalid theme name.\n * @returns {string} A valid theme name.\n */\nfunction validateTheme(theme) {\n  return (['light', 'dark'].includes(theme) ? theme : 'dark');\n}\n\n/**\n * Convenience function for creating the minimal Vitessce demo and demo listing\n * components based on the current URL parameters.\n * @param {object} params\n * @param {number|null} params.rowHeight The row height to pass to the Vitessce grid.\n * Optional. By default, null.\n * @returns A component, either <Welcome/> or <Vitessce/> depending on the URL params.\n */\nexport function createApp(params) {\n  const { rowHeight = null } = params || {};\n  const urlParams = new URLSearchParams(window.location.search);\n  const datasetId = urlParams.get('dataset');\n  const debug = urlParams.get('debug') === 'true';\n  const datasetUrl = urlParams.get('url');\n  const showAll = urlParams.get('show') === 'all';\n  const theme = validateTheme(urlParams.get('theme'));\n\n  if (datasetId) {\n    const config = getConfig(datasetId);\n    return (\n      <Vitessce\n        config={config}\n        rowHeight={rowHeight}\n        theme={theme}\n        // eslint-disable-next-line no-console\n        onConfigChange={(debug ? console.log : undefined)}\n        validateOnConfigChange={debug}\n      />\n    );\n  }\n  if (datasetUrl) {\n    const responsePromise = fetch(datasetUrl)\n      .then(response => checkResponse(response, theme, debug))\n      .catch(error => Promise.resolve(() => (\n        <Warning\n          title=\"Error fetching\"\n          unformatted={error.message}\n          theme={theme}\n        />\n      )));\n    return (\n      <AwaitResponse response={responsePromise} theme={theme} />\n    );\n  }\n  const configs = listConfigs(showAll);\n  return (<Welcome configs={configs} theme={theme} />);\n}\n"]},"metadata":{},"sourceType":"module"}