{"ast":null,"code":"import _createForOfIteratorHelper from \"C:\\\\Users\\\\wkuo\\\\Documents\\\\vitessce-forked-v1.2.2\\\\vitessce\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createForOfIteratorHelper\";\nimport GLTFScenegraph from '../api/gltf-scenegraph';\nvar KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\nexport var name = KHR_TEXTURE_BASISU;\nexport function preprocess(gltfData, options) {\n  var scene = new GLTFScenegraph(gltfData);\n  var json = scene.json;\n\n  var _iterator = _createForOfIteratorHelper(json.textures || []),\n      _step;\n\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var texture = _step.value;\n      var extension = scene.getObjectExtension(texture, KHR_TEXTURE_BASISU);\n\n      if (extension) {\n        texture.source = extension.source;\n      }\n\n      scene.removeObjectExtension(texture, KHR_TEXTURE_BASISU);\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n\n  scene.removeExtension(KHR_TEXTURE_BASISU);\n}","map":{"version":3,"sources":["../../../../src/lib/extensions/KHR_texture_basisu.ts"],"names":["KHR_TEXTURE_BASISU","name","scene","json","extension","texture"],"mappings":";AAOA,OAAA,cAAA,MAAA,wBAAA;AAEA,IAAMA,kBAAkB,GAAxB,oBAAA;AAGA,OAAO,IAAMC,IAAI,GAAV,kBAAA;AAMP,OAAO,SAAA,UAAA,CAAA,QAAA,EAAA,OAAA,EAA8E;AACnF,MAAMC,KAAK,GAAG,IAAA,cAAA,CAAd,QAAc,CAAd;AADmF,MAE5EC,IAF4E,GAEnF,KAFmF,CAE5EA,IAF4E;;AAAA,6CAI7DA,IAAI,CAAJA,QAAAA,IAAtB,EAJmF;AAAA;;AAAA;AAInF,wDAA2C;AAAA,UAA3C,OAA2C;AACzC,UAAMC,SAAS,GAAGF,KAAK,CAALA,kBAAAA,CAAAA,OAAAA,EAAlB,kBAAkBA,CAAlB;;AAIA,UAAA,SAAA,EAAe;AACbG,QAAAA,OAAO,CAAPA,MAAAA,GAAiBD,SAAS,CAA1BC,MAAAA;AACD;;AACDH,MAAAA,KAAK,CAALA,qBAAAA,CAAAA,OAAAA,EAAAA,kBAAAA;AACD;AAbkF;AAAA;AAAA;AAAA;AAAA;;AAgBnFA,EAAAA,KAAK,CAALA,eAAAA,CAAAA,kBAAAA;AACD","sourcesContent":["// GLTF EXTENSION: KHR_texture_basisu\n// https://github.com/KhronosGroup/glTF/tree/main/extensions/2.0/Khronos/KHR_texture_basisu\n/* eslint-disable camelcase */\n\nimport type {GLTF, GLTF_KHR_texture_basisu} from '../types/gltf-types';\nimport type {GLTFLoaderOptions} from '../../gltf-loader';\n\nimport GLTFScenegraph from '../api/gltf-scenegraph';\n\nconst KHR_TEXTURE_BASISU = 'KHR_texture_basisu';\n\n/** Extension name */\nexport const name = KHR_TEXTURE_BASISU;\n\n/**\n * Replaces a texture source reference with the extension texture\n * Done in preprocess() to prevent load of default image\n */\nexport function preprocess(gltfData: {json: GLTF}, options: GLTFLoaderOptions): void {\n  const scene = new GLTFScenegraph(gltfData);\n  const {json} = scene;\n\n  for (const texture of json.textures || []) {\n    const extension = scene.getObjectExtension<GLTF_KHR_texture_basisu>(\n      texture,\n      KHR_TEXTURE_BASISU\n    );\n    if (extension) {\n      texture.source = extension.source;\n    }\n    scene.removeObjectExtension(texture, KHR_TEXTURE_BASISU);\n  }\n\n  // Remove the top-level extension\n  scene.removeExtension(KHR_TEXTURE_BASISU);\n}\n"]},"metadata":{},"sourceType":"module"}