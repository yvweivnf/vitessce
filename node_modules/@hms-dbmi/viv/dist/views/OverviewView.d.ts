export const OVERVIEW_VIEW_ID: "overview";
/**
 * This class generates a OverviewLayer and a view for use in the VivViewer as an overview to a Detailview (they must be used in conjection).
 * From the base class VivView, only the initialViewState argument is used.  This class uses private methods to position its x and y from the
 * additional arguments:
 * @param {Object} args
 * @param {Object} args.id for thie VivView
 * @param {Object} args.loader PixelSource[], where each PixelSource is decreasing in shape. If length == 1, not multiscale.
 * @param {number} args.detailHeight Height of the detail view.
 * @param {number} args.detailWidth Width of the detail view.
 * @param {number} [args.scale] Scale of this viewport relative to the detail. Default is .2.
 * @param {number} [args.margin] Margin to be offset from the the corner of the other viewport. Default is 25.
 * @param {string} [args.position] Location of the viewport - one of "bottom-right", "top-right", "top-left", "bottom-left."  Default is 'bottom-right'.
 * @param {number} [args.minimumWidth] Absolute lower bound for how small the viewport should scale. Default is 150.
 * @param {number} [args.maximumWidth] Absolute upper bound for how large the viewport should scale. Default is 350.
 * @param {number} [args.minimumHeight] Absolute lower bound for how small the viewport should scale. Default is 150.
 * @param {number} [args.maximumHeight] Absolute upper bound for how large the viewport should scale. Default is 350.
 * @param {Boolean} [args.clickCenter] Click to center the default view. Default is true.
 * */
export default class OverviewView extends VivView {
    constructor({ id, loader, detailHeight, detailWidth, scale, margin, position, minimumWidth, maximumWidth, minimumHeight, maximumHeight, clickCenter }: {
        id: any;
        loader: any;
        detailHeight: any;
        detailWidth: any;
        scale?: number | undefined;
        margin?: number | undefined;
        position?: string | undefined;
        minimumWidth?: number | undefined;
        maximumWidth?: number | undefined;
        minimumHeight?: number | undefined;
        maximumHeight?: number | undefined;
        clickCenter?: boolean | undefined;
    });
    margin: number;
    loader: any;
    position: string;
    detailHeight: any;
    detailWidth: any;
    clickCenter: boolean;
    /**
     * Set the image-pixel scale and height and width based on detail view.
     */
    _setHeightWidthScale({ detailWidth, detailHeight, scale, minimumWidth, maximumWidth, minimumHeight, maximumHeight }: {
        detailWidth: any;
        detailHeight: any;
        scale: any;
        minimumWidth: any;
        maximumWidth: any;
        minimumHeight: any;
        maximumHeight: any;
    }): void;
    _imageWidth: number | undefined;
    _imageHeight: number | undefined;
    scale: number | undefined;
    /**
     * Set the x and y (top left corner) of this overview relative to the detail.
     */
    _setXY(): void;
}
import VivView from "./VivView";
