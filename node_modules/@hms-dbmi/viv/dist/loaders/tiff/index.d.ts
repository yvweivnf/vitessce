import { load } from './ome-tiff';
interface TiffOptions {
    headers?: object;
    offsets?: number[];
    pool?: boolean;
    images?: 'first' | 'all';
}
declare type UnwrapPromise<T> = T extends Promise<infer Inner> ? Inner : T;
declare type MultiImage = UnwrapPromise<ReturnType<typeof load>>;
/** @ignore */
export declare function loadOmeTiff(source: string | File, opts: TiffOptions & {
    images: 'all';
}): Promise<MultiImage>;
/** @ignore */
export declare function loadOmeTiff(source: string | File, opts: TiffOptions & {
    images: 'first';
}): Promise<MultiImage[0]>;
/** @ignore */
export declare function loadOmeTiff(source: string | File, opts: TiffOptions): Promise<MultiImage[0]>;
/** @ignore */
export declare function loadOmeTiff(source: string | File): Promise<MultiImage[0]>;
export {};
