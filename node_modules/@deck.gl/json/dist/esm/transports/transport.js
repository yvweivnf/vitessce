const state = {
  onIninitialize: _ => _,
  onFinalize: _ => _,
  onMessage: null
};
export default class Transport {
  static setCallbacks(_ref) {
    let {
      onInitialize,
      onFinalize,
      onMessage
    } = _ref;

    if (onInitialize) {
      state.onInitialize = onInitialize;
    }

    if (onFinalize) {
      state.onFinalize = onFinalize;
    }

    if (onMessage) {
      state.onMessage = onMessage;
    }
  }

  constructor() {
    let name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Transport';
    this.name = name;
    this._messageQueue = [];
    this.userData = {};
  }

  getRootDOMElement() {
    return typeof document !== 'undefined' ? document.body : null;
  }

  sendJSONMessage() {
    console.error('Back-channel not implemented for this transport');
  }

  sendBinaryMessage() {
    console.error('Back-channel not implemented for this transport');
  }

  _initialize() {
    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    const message = {
      transport: this,
      ...options
    };
    state.onInitialize(message);
  }

  _finalize() {
    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    const message = {
      transport: this,
      ...options
    };
    state.onFinalize(message);
    this._destroyed = true;
  }

  _messageReceived() {
    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    message = {
      transport: this,
      ...message
    };
    console.debug('Delivering transport message', message);
    state.onMessage(message);
  }

  static _stringifyJSONSafe(v) {
    const cache = new Set();
    return JSON.stringify(v, (key, value) => {
      if (typeof value === 'object' && value !== null) {
        if (cache.has(value)) {
          try {
            return JSON.parse(JSON.stringify(value));
          } catch (err) {
            return undefined;
          }
        }

        cache.add(value);
      }

      return value;
    });
  }

}
//# sourceMappingURL=transport.js.map